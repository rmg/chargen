// add description of epic destnies
// add languages
// weights of orbs
// small do not use twohanders
// damage for huntersquarry
// sometime add ability increase history
// add farshot and farthrow to printout
// add runspeeck that incorporates fastrun
// add hellfire blood as an afterthought along with raging storm and wintertouched
// longbow owner brings arrows
// starting with angel of the eleven winds, eternal seekers can take any so just return early



var test_mode=false;
var race_human=false;
var race_dragonborn=false; 
var race_dwarf=false; 
var race_eladrin=false; 
var race_elf=false; 
var race_halfelf=false; 
var race_halfling=false; 
var race_tiefling=false; 
var race_bugbear=false; 
var race_doppelganger=false; 
var race_drow=false; 
var race_genasi=false;
var race_bladeling=false;
var race_deva=false;
var race_halforc=false;
var race_goliath=false;

var race_githyanki=false; 
var race_githzerai=false; 
var race_gnoll=false; 
var race_gnome=false; 
var race_goblin=false; 
var race_hobgoblin=false; 
var race_kobold=false; 
var race_minotaur=false; 
var race_orc=false; 
var race_shadarkai=false; 
var race_shifterlongtooth=false; 
var race_shifterrazorclaw=false; 
var race_warforged=false; 
var race_other=false; 

var extra_language_entitlement=0; 
var draconic_nativespeaker=false; 
var elven_nativespeaker=false; 
var dwarven_nativespeaker=false; 
var giant_nativespeaker=false; 
var deepspeech_nativespeaker=false; 
var abyssal_nativespeaker=false; 
var other01_nativespeaker=false; 
var other02_nativespeaker=false; 
var other03_nativespeaker=false; 
var goblin_nativespeaker=false; 
var primordial_nativespeaker=false; 
var chondathan_nativespeaker=false; 
var damaran_nativespeaker=false; 
var netherese_nativespeaker=false; 
var shou_nativespeaker=false; 
var thayan_nativespeaker=false; 
var tuigan_nativespeaker=false; 
var untheric_nativespeaker=false; 
var supernal_nativespeaker=false; 
var class_cleric=false; 
var class_fighter=false; 
var class_paladin=false; 
var class_ranger=false; 
var class_rogue=false; 
var class_warlock=false; 
var class_warlord=false; 
var class_wizard=false; 
var class_swordmage=false;
var class_avenger=false;
var class_barbarian=false;
var class_bard=false;
var class_druid=false;
var class_invoker=false;
var class_shaman=false;
var class_sorcerer=false;
var class_warden=false;
var class_other=false;
var multi_cleric_initiateofthefaith=false; 
var multi_fighter_studentofthesword=false; 
var multi_paladin_soldierofthefaith=false; 
var multi_ranger_warriorofthewild=false; 
var multi_rogue_sneakofshadows=false; 
var multi_warlock_pactinitiate=false; 
var multi_warlord_studentofbattle=false; 
var multi_wizard_arcaneinitiate=false;
var multi_swordmage_bladeinitiate=false;
var multi_fighter_battleawareness=false;
var multi_warlord_inspiringleader=false;
var multi_rogue_ruthlessefficiency=false;
var multi_rogue_slydodge=false;
var multi_warlord_tacticalleader=false;
var multi_ranger_twobladewarrior=false;
var multi_invoker_acolyteofdivinesecrets=false;
var multi_sorcerer_arcaneprodigy=false;
var multi_bard_bardicdilettante=false;
var multi_barbarian_berserkersfury=false;
var multi_warden_defenderofthewild=false;
var multi_avenger_discipleofdivinewrath=false;
var multi_druid_initiateoftheoldfaith=false;
var multi_shaman_spirittalker=false;
var multi_bard_bardicritualist=false;
var multi_swordmage_heartoftheblade=false;
var multi_wizard_learnedspellcaster=false;
var multi_sorcerer_soulofsorcery=false;
var multi_warlock_studentofmalediction=false; 
var multi_spellscarred=false;

var paragon_angelicavenger=false; 
var paragon_divineoracle=false; 
var paragon_radiantservant=false; 
var paragon_warpriest=false; 
var paragon_ironvanguard=false; 
var paragon_kensei=false; 
var paragon_pitfighter=false; 
var paragon_swordmaster=false; 
var paragon_astralweapon=false; 
var paragon_championoforder=false; 
var paragon_hospitaler=false; 
var paragon_justiciar=false; 
var paragon_battlefieldarcher=false; 
var paragon_beaststalker=false; 
var paragon_pathfinder=false; 
var paragon_stormwarden=false; 
var paragon_catburglar=false; 
var paragon_daggermaster=false; 
var paragon_masterinfiltrator=false; 
var paragon_shadowassassin=false; 
var paragon_doomsayer=false; 
var paragon_feytouched=false; 
var paragon_lifestealer=false; 
var paragon_battlecaptain=false; 
var paragon_combatveteran=false; 
var paragon_knightcommander=false; 
var paragon_swordmarshal=false; 
var paragon_battlemage=false; 
var paragon_bloodmage=false; 
var paragon_spellstormmage=false; 
var paragon_wizardofthespiraltower=false; 
var paragon_other=false; 
var paragon_multiclass=false;
var paragon_anarchofshyr=false;
var paragon_coronalguard=false;
var paragon_darkwalker=false;
var paragon_doomguide=false;
var paragon_drowwanderer=false;
var paragon_eartheartdefender=false;
var paragon_elementaltempest=false;
var paragon_evermeetwarlock=false;
var paragon_ghostofeventide=false;
var paragon_heartwarder=false;
var paragon_highforestscout=false;
var paragon_impilturandemonslayer=false;
var paragon_morninglord=false;
var paragon_purpledragonknight=false;
var paragon_silverstar=false;
var paragon_simbarchofaglarond=false;
var paragon_spellguardwizard=false;
var paragon_spellscarredsavant=false;
var paragon_steelskyliberator=false;
var paragon_swordcoastcorsair=false;
var paragon_umbriri=false;
var paragon_wanderingswordmage=false;
var paragon_warwizardofcormyr=false;
var paragon_whirlwindgenasi=false;
var paragon_wildfiregenasi=false;
var paragon_feralspirit=false;
var paragon_packrunner=false;
var paragon_wildcatstalker=false;
var paragon_bladeofcendriane=false;
var paragon_doomguardmarauder=false;
var paragon_gatecrasher=false;
var paragon_knightofcelestia=false;
var paragon_maleckethjanissary=false;
var paragon_planeshifter=false;
var paragon_shadowcaptain=false;
var paragon_soulguide=false;

var paragon_adroitexplorer=false;
var paragon_ancestralincarnate=false;
var paragon_bloodfurysavage=false;
var paragon_feybeguiler=false;
var paragon_firstbornofmoradin=false;
var paragon_halflingscoundrel=false;
var paragon_moonstalker=false;
var paragon_scionofarkhosia=false;
var paragon_shiereknight=false;
var paragon_stoneblessed=false;
var paragon_turathihighborn=false;
var paragon_twilightguardian=false;
var paragon_hammerofjudgment=false;
var paragon_oathsworn=false;
var paragon_unveiledvisage=false;
var paragon_zealousassassin=false;
var paragon_bearwarrior=false;
var paragon_fearbringerthane=false;
var paragon_frenziedberserker=false;
var paragon_wildrunner=false;
var paragon_studentoftheseven=false;
var paragon_summerrhymer=false;
var paragon_voiceofthunder=false;
var paragon_warchanter=false;
var paragon_bloodmoonstalker=false;
var paragon_guardianofthelivinggate=false;
var paragon_keeperofthehiddenflame=false;
var paragon_skyhunter=false;
var paragon_angelicaspect=false;
var paragon_blightspeaker=false;
var paragon_flameofhope=false;
var paragon_hammerofvengeance=false;
var paragon_discipleoftheworldserpent=false;
var paragon_ghostpanther=false;
var paragon_greatbearshaman=false;
var paragon_spirittempest=false;
var paragon_arcanewellspring=false;
var paragon_demonskinadept=false;
var paragon_dragonsoulheir=false;
var paragon_wildmage=false;
var paragon_bloodwrathguardian=false;
var paragon_hornedchampion=false;
var paragon_stormsentinel=false;
var paragon_verdantlord=false;




// kurwa

var epic_archmage=false; 
var epic_deadlytrickster=false; 
var epic_demigod=false; 
var epic_eternalseeker=false; 
var epic_chosen=false; 
var epic_other=false; 
var epic_adamantinesoldier=false; 
var epic_beastlord=false; 
var epic_darkwanderer=false; 
var epic_eternaldefender=false; 
var epic_godhunter=false; 
var epic_legendarygeneral=false; 
var epic_martialarchetype=false; 
var epic_perfectassassin=false; 
var epic_undyingwarrior=false; 
var epic_warmaster=false;
var epic_fatesinger=false;
var epic_gloriousspirit=false;
var epic_harbingerofdoom=false;
var epic_lorekeeper=false;
var epic_primalavatar=false;
var epic_reveredone=false;


var raise_str_01=false; 
var raise_dex_01=false; 
var raise_con_01=false; 
var raise_int_01=false; 
var raise_wis_01=false; 
var raise_chr_01=false; 
var raise_str_04=false; 
var raise_dex_04=false; 
var raise_con_04=false; 
var raise_int_04=false; 
var raise_wis_04=false; 
var raise_chr_04=false; 
var raise_str_08=false; 
var raise_dex_08=false; 
var raise_con_08=false; 
var raise_int_08=false; 
var raise_wis_08=false; 
var raise_chr_08=false; 
var raise_str_14=false; 
var raise_dex_14=false; 
var raise_con_14=false; 
var raise_int_14=false; 
var raise_wis_14=false; 
var raise_chr_14=false; 
var raise_str_18=false; 
var raise_dex_18=false; 
var raise_con_18=false; 
var raise_int_18=false; 
var raise_wis_18=false; 
var raise_chr_18=false; 
var raise_str_24=false; 
var raise_dex_24=false; 
var raise_con_24=false; 
var raise_int_24=false; 
var raise_wis_24=false; 
var raise_chr_24=false; 
var raise_str_28=false; 
var raise_dex_28=false; 
var raise_con_28=false; 
var raise_int_28=false; 
var raise_wis_28=false; 
var raise_chr_28=false; 
var raise_str_21=false; 
var raise_dex_21=false; 
var raise_con_21=false; 
var raise_int_21=false; 
var raise_wis_21=false; 
var raise_chr_21=false; 
var raise_str_otherepic=false; 
var raise_dex_otherepic=false; 
var raise_con_otherepic=false; 
var raise_int_otherepic=false; 
var raise_wis_otherepic=false; 
var raise_chr_otherepic=false; 
var raise_str_other_race_stat=false; 
var raise_dex_other_race_stat=false; 
var raise_con_other_race_stat=false; 
var raise_chr_other_race_stat=false; 
var raise_int_other_race_stat=false; 
var raise_wis_other_race_stat=false; 
var past_raise_str_other_race_stat=false; 
var past_raise_dex_other_race_stat=false; 
var past_raise_con_other_race_stat=false; 
var past_raise_chr_other_race_stat=false; 
var past_raise_int_other_race_stat=false; 
var past_raise_wis_other_race_stat=false; 

var dragonbreath_acid=false; 
var dragonbreath_cold=false; 
var dragonbreath_fire=false; 
var dragonbreath_lightning=false; 
var dragonbreath_poison=false; 

var genasi_earthsoul=false; 
var genasi_firesoul=false; 
var genasi_stormsoul=false; 
var genasi_watersoul=false; 
var genasi_windsoul=false; 

var dragonbreath_strength=false; 
var dragonbreath_dexterity=false; 
var dragonbreath_constitution=false; 

var dilettante_lanceoffaith=false; 
var dilettante_priestsshield=false; 
var dilettante_righteousbrand=false; 
var dilettante_sacredflame=false; 
var dilettante_cleave=false; 
var dilettante_reapingstrike=false; 
var dilettante_surestrike=false; 
var dilettante_tideofiron=false; 
//var dilettante_divinechallenge=false; 
//var dilettante_layonhands=false; 
var dilettante_bolsteringstrike=false; 
var dilettante_enfeeblingstrike=false; 
var dilettante_holystrike=false; 
var dilettante_valiantstrike=false; 
var dilettante_carefulattack=false; 
var dilettante_hitandrun=false; 
var dilettante_nimblestrike=false; 
var dilettante_twinstrike=false; 
var dilettante_deftstrike=false; 
var dilettante_piercingstrike=false; 
var dilettante_ripostestrike=false; 
var dilettante_slyflourish=false; 
var dilettante_direradiance=false; 
var dilettante_eldritchblast=false; 
var dilettante_eyebite=false; 
var dilettante_hellishrebuke=false; 
var dilettante_commandersstrike=false; 
var dilettante_furioussmash=false; 
var dilettante_vipersstrike=false; 
var dilettante_wolfpacktactics=false; 
//var dilettante_ghostsound=false; 
//var dilettante_light=false; 
//var dilettante_magehand=false; 
//var dilettante_prestidigitation=false; 
var dilettante_cloudofdaggers=false; 
var dilettante_magicmissile=false; 
var dilettante_rayoffrost=false; 
var dilettante_scorchingburst=false; 
var dilettante_thunderwave=false; 
var dilettante_other=false; 


var eladrin_acrobatics=false; 
var eladrin_arcana=false; 
var eladrin_athletics=false; 
var eladrin_bluff=false; 
var eladrin_diplomacy=false; 
var eladrin_dungeoneering=false; 
var eladrin_endurance=false; 
var eladrin_heal=false; 
var eladrin_history=false; 
var eladrin_insight=false; 
var eladrin_intimidate=false; 
var eladrin_nature=false; 
var eladrin_perception=false; 
var eladrin_religion=false; 
var eladrin_stealth=false; 
var eladrin_streetwise=false; 
var eladrin_thievery=false; 


var otherrace_acrobatics=false; 
var otherrace_arcana=false; 
var otherrace_athletics=false; 
var otherrace_bluff=false; 
var otherrace_diplomacy=false; 
var otherrace_dungeoneering=false; 
var otherrace_endurance=false; 
var otherrace_heal=false; 
var otherrace_history=false; 
var otherrace_insight=false; 
var otherrace_intimidate=false; 
var otherrace_nature=false; 
var otherrace_perception=false; 
var otherrace_religion=false; 
var otherrace_stealth=false; 
var otherrace_streetwise=false; 
var otherrace_thievery=false; 

var past_otherrace_acrobatics=false; 
var past_otherrace_arcana=false; 
var past_otherrace_athletics=false; 
var past_otherrace_bluff=false; 
var past_otherrace_diplomacy=false; 
var past_otherrace_dungeoneering=false; 
var past_otherrace_endurance=false; 
var past_otherrace_heal=false; 
var past_otherrace_history=false; 
var past_otherrace_insight=false; 
var past_otherrace_intimidate=false; 
var past_otherrace_nature=false; 
var past_otherrace_perception=false; 
var past_otherrace_religion=false; 
var past_otherrace_stealth=false; 
var past_otherrace_streetwise=false; 
var past_otherrace_thievery=false; 


//var cleric_start_animalmessenger=false; 
//var cleric_start_comprehendlanguage=false; 
//var cleric_start_magicmouth=false; 
//var cleric_start_makewhole=false; 
//var cleric_start_secretpage=false; 
//var cleric_start_silence=false; 
//var cleric_start_tensersfloatingdisk=false; 

var fighter_onehand=false; 
var fighter_twohand=false;
var studentofthesword_onehand=false;
var studentofthesword_twohand=false;
var fighter_battlerager=false;
var fighter_tempesttechnique=false;
var ranger_archer=false; 
var ranger_twoblade=false; 
var ranger_beastmaster=false; 
var rogue_artfuldodger=false; 
var rogue_brutalscoundrel=false; 
var rogue_ruthlessruffian=false; 
var warlock_fey=false; 
var warlock_infernal=false; 
var warlock_star=false; 
var warlock_dark=false; 
var warlock_vestige=false; 
var warlock_other=false; 
var warlord_inspiring=false; 
var warlord_tactical=false; 
var warlord_bravura=false; 
var warlord_resourceful=false; 
var orbofimposition=false; 
var staffofdefense=false; 
var wandofaccuracy=false;
var orbofdeception=false;
var tomeofbinding=false;
var tomeofreadiness=false;
var swordmage_assault=false; 
var swordmage_shielding=false; 
var swordmage_ensnarement=false; 
var barbarian_rageblood=false; 
var barbarian_thaneborn=false; 
var avenger_pursuit=false; 
var avenger_retribution=false; 
var bard_cunning=false; 
var bard_valor=false; 
var bard_prescience=false; 
var druid_guardian=false; 
var druid_predator=false; 
var invoker_preservation=false; 
var invoker_wrath=false; 
var shaman_protector=false; 
var shaman_stalker=false; 
var sorcerer_dragonsoul=false; 
var sorcerer_wildmagic=false; 
var sorcerer_stormmagic=false; 
var sorcerer_cosmicmagic=false; 
var warden_earthstrength=false; 
var warden_wildblood=false; 

var trained_acrobatics=false; 
var trained_arcana=false; 
var trained_athletics=false; 
var trained_bluff=false; 
var trained_diplomacy=false; 
var trained_dungeoneering=false; 
var trained_endurance=false; 
var trained_heal=false; 
var trained_history=false; 
var trained_insight=false; 
var trained_intimidate=false; 
var trained_nature=false; 
var trained_perception=false; 
var trained_religion=false; 
var trained_stealth=false; 
var trained_streetwise=false; 
var trained_thievery=false; 

var multi_trained_acrobatics=false; 
var multi_trained_arcana=false; 
var multi_trained_athletics=false; 
var multi_trained_bluff=false; 
var multi_trained_diplomacy=false; 
var multi_trained_dungeoneering=false; 
var multi_trained_endurance=false; 
var multi_trained_heal=false; 
var multi_trained_history=false; 
var multi_trained_insight=false; 
var multi_trained_intimidate=false; 
var multi_trained_nature=false; 
var multi_trained_perception=false; 
var multi_trained_religion=false; 
var multi_trained_stealth=false; 
var multi_trained_streetwise=false; 
var multi_trained_thievery=false; 


  var feat_actionsurge=false; 
  var feat_agilehunter=false; 
  var feat_alertness=false; 
  var feat_armorofbahamut=false; 
  var feat_armorproficiencychainmail=false; 
  var feat_armorproficiencyleather=false; 
  var feat_armorproficiencyhide=false; 
  var feat_armorproficiencyplate=false; 
  var feat_armorproficiencyscale=false; 
  var feat_astralfire=false; 
  var feat_avandrasrescue=false; 
  var feat_backstabber=false; 
  var feat_bladeopportunist=false; 
  var feat_burningblizzard=false; 
  var feat_combatreflexes=false; 
  var feat_corellonsgrace=false; 
  var feat_darkfury=false; 
  var feat_defensivemobility=false; 
  var feat_distractingshield=false; 
  var feat_dodgegiants=false; 
  var feat_dragonbornfrenzy=false; 
  var feat_dragonbornsenses=false; 
  var feat_durable=false; 
  var feat_dwarvenweapontraining=false; 
  var feat_eladrinsoldier=false; 
  var feat_elvenprecision=false; 
  var feat_enlargeddragonbreath=false; 
  var feat_escapeartist=false; 
  var feat_expandedspellbook=false; 
  var feat_farshot=false; 
  var feat_farthrow=false; 
  var feat_fastrunner=false; 
  var feat_ferociousrebuke=false; 
  var feat_groupinsight=false; 
  var feat_halflingagility=false; 
  var feat_harmonyoferathis=false; 
  var feat_healinghands=false; 
  var feat_hellfireblood=false; 
  var feat_humanperseverance=false; 
  var feat_improveddarkonesblessing=false; 
  var feat_improvedfateofthevoid=false; 
  var feat_improvedinitiative=false; 
  var feat_improvedmistystep=false; 
  var feat_inspiredrecovery=false; 
  var feat_iounspoise=false; 
  var feat_jackofalltrades=false; 
  var feat_kordsfavor=false; 
  var feat_lethalhunter=false; 
  var feat_lightstep=false; 
  var feat_linguist=0; 
  var feat_longjumper=false; 
  var feat_longinthecrowd=false; 
  var feat_melorastide=false; 
  var feat_moradinsresolve=false; 
  var feat_mountedcombat=false; 
  var feat_nimbleblade=false; 
  var feat_pelorsradiance=false; 
  var feat_potentchallenge=false; 
  var feat_powerattack=false; 
  var feat_powerfulcharge=false; 
  var feat_precisehunter=false; 
  var feat_presstheadvantage=false; 
  var feat_quickdraw=false; 
  var feat_ragingstorm=false; 
  var feat_ravenqueensblessing=false; 
  var feat_ritualcaster=false; 
  var feat_sehaninesreversal=false; 
   var feat_angharradhsfavor=false;
   var feat_avoweddragonfoe=false;
   var feat_berronarssalve=false;
   var feat_blessingofsilvanus=false;
   var feat_brokenshackles=false;
   var feat_chaunteasblessing=false;
   var feat_clutchofdarkness=false;
   var feat_elementalassault=false;
   var feat_escalatingassault=false;
   var feat_extramanifestationearthsoul=false;
   var feat_extramanifestationfiresoul=false;
   var feat_extramanifestationstormsoul=false;
   var feat_extramanifestationwatersoul=false;
   var feat_extramanifestationwindsoul=false;
   var feat_eyesofselune=false;
   var feat_fleetnessofmielikki=false;
   var feat_ghostwiseheritage=false;
   var feat_glittergoldsgambit=false;
   var feat_golddwarfpride=false;
   var feat_gondscraft=false;
   var feat_ilmatersmartyrdom=false;
   var feat_improvedswordbond=false;
   var feat_intelligentblademaster=false;
   var feat_kelemvorsjudgment=false;
   var feat_manifestresistance=false;
   var feat_improvedrazorswarm=false;
   var feat_moonelfresilience=false;
   var feat_oghmasrecall=false;
   var feat_powerofamaunator=false;
   var feat_retributiveshield=false;
   var feat_righteousrageoftempus=false;
   var feat_ruthlesshunter=false;
   var feat_scionofthegods=false;
   var feat_sheelaperyroylsgift=false;
   var feat_shieldofshadows=false;
   var feat_shieldthefallen=false;
   var feat_stubbornsurvivor=false;
   var feat_studentofswordmagic=false;
   var feat_sunelfgrace=false;
   var feat_sunestouch=false;
   var feat_tormsjustice=false;
   var feat_tymorascoin=false;
   var feat_versatileresistance=false;
   var feat_waukeenssilvertongue=false;
   var feat_alchemist=false;
   var feat_alchemistswap=false;
   var feat_wildelfluck=false;
   var feat_woodelfagility=false;
   var feat_demonwebspiral=false;
   var feat_distantswordbond=false;
   var feat_doubleaegis=false;
   var feat_improveddarkspiralaura=false;
   var feat_masteroffireanddarkness=false;
   var feat_mercilesskiller=false;
   var feat_moongleamoath=false;
   var feat_shockingflame=false;
   var feat_stoneguard=false;
   var feat_stormrider=false;
   var feat_venemousheritage=false;
   var feat_warwizardry=false;
   var feat_agileopportunist=false;
   var feat_paragondefenses=false;
   var feat_quickrecovery=false;
   var feat_reservemaneuver=false;
   var feat_doublemanifestation=false;
   var feat_totalaegis=false;

    var feat_aggressiveassault=false;
    var feat_anklecutter=false;
    var feat_beastguidance=false;
    var feat_beastprotector=false;
    var feat_beasttrainingathletics=false;
    var feat_beasttrainingendurance=false;
    var feat_beasttrainingperception=false;
    var feat_beasttrainingstealth=false;
    var feat_bloodiedinvigoration=false;
    var feat_bolsteringinspiration=false;
    var feat_bracingbreath=false;
    var feat_bravuraspirit=false;
    var feat_breathresistantbeast=false;
    var feat_brutalaccuracy=false;
    var feat_brutalteamwork=false;
    var feat_brutalwound=false;
    var feat_camouflage=false;
    var feat_commandthedarkness=false;
    var feat_coordinatedopportunity=false;
    var feat_cunningambusher=false;
    var feat_darkfiretargeting=false;
    var feat_deepgash=false;
    var feat_defensiveresilience=false;
    var feat_devotedchallenge=false;
    var feat_dirtyfighting=false;
    var feat_draggingflail=false;
    var feat_drowbeastmastery=false;
    var feat_dwarfstoneblood=false;
    var feat_dwarftrapsmith=false;
    var feat_elvenbeastmastery=false;
    var feat_experttracker=false;
    var feat_feyblades=false;
    var feat_feycommand=false;
    var feat_feyborncompanion=false;
    var feat_fiendishcompanion=false;
    var feat_groupassault=false;
    var feat_groupquarry=false;
    var feat_grouprattling=false;
    var feat_halflingstalwart=false;
    var feat_humanbeastmastery=false;
    var feat_hunterofwindandwave=false;
    var feat_huntersaim=false;
    var feat_improvedbravura=false;
    var feat_improvedinspiration=false;
    var feat_improvedinspiringword=false;
    var feat_improvedresources=false;
    var feat_improvedtactics=false;
    var feat_improvedvigor=false;
    var feat_inspireddefense=false;
    var feat_inspiredtactics=false;
    var feat_intothefraymp=false;
    var feat_keeperofstorm=false;
    var feat_leadingfire=false;
    var feat_lendmight=false;
    var feat_lingeringwrath=false;
    var feat_longswordfinesse=false;
    var feat_luckyskirmisher=false;
    var feat_martialalacrity=false;
    var feat_martialfreedom=false;
    var feat_masterofrumblingearth=false;
    var feat_nimblecompanion=false;
    var feat_offensiveresilience=false;
    var feat_opportunisticaccuracy=false;
    var feat_polearmmomentum=false;
    var feat_predatoryaction=false;
    var feat_primestrike=false;
    var feat_rashsneakattack=false;
    var feat_rattlingwrath=false;
    var feat_reapingblade=false;
    var feat_recklessscramble=false;
    var feat_ruthlessinjury=false;
    var feat_savinginspiration=false;
    var feat_secureencampment=false;
    var feat_shielddefense=false;
    var feat_sidewaysdefense=false;
    var feat_slayingaction=false;
    var feat_sneakyaccuracy=false;
    var feat_speedyresponse=false;
    var feat_streetthug=false;
    var feat_surprisingcharge=false;
    var feat_tacticalinspiration=false;
    var feat_takemeasure=false;
    var feat_thunderhammer=false;
    var feat_thundertuskcompanion=false;
    var feat_trapsense=false;
    var feat_tunnelstalker=false;
    var feat_twofistedshooter=false;
    var feat_unbalancingwrath=false;
    var feat_vengefulbeast=false;
    var feat_victorsconfidence=false;
    var feat_wielderofpiercingflame=false;


    var feat_advantageofcunning=false;
    var feat_angerunleashed=false;
    var feat_arcanespellfury=false;
    var feat_auspiciouslineage=false;
    var feat_bardicknowledge=false;
    var feat_blurringclaws=false;
    var feat_combatmedic=false;
    var feat_coordinatedexplosion=false;
    var feat_crushingearthstrength=false;
    var feat_deadlyrage=false;
    var feat_disciplinedwildsoul=false;
    var feat_distantadvantage=false;
    var feat_echoesofthunder=false;
    var feat_enragedboarform=false;
    var feat_expertritualist=false;
    var feat_ferocioustigerform=false;
    var feat_feytrickster=false;
    var feat_goliathgreatweaponprowess=false;
    var feat_gorebrutecharge=false;
    var feat_groupstealth=false;
    var feat_guaranteedretribution=false;
    var feat_implementexpertiseholysymbol=false;
    var feat_implementexpertiseorb=false;
    var feat_implementexpertiserod=false;
    var feat_implementexpertisestaff=false;
    var feat_implementexpertisewand=false;
    var feat_implementexpertisedagger=false;
    var feat_implementexpertisemusic=false;
    var feat_implementexpertisetome=false;
    var feat_implementexpertisetotem=false;
    var feat_improvedarmoroffaith=false;
    var feat_improvedbullrush=false;
    var feat_improveddragonsoul=false;
    var feat_improvedgrab=false;
    var feat_improvedmajesticword=false;
    var feat_improvedragebloodvigor=false;
    var feat_improvedroaroftriumph=false;
    var feat_insightfulpreservation=false;
    var feat_invigoratingpursuit=false;
    var feat_invokerdefense=false;
    var feat_markingsoftheblessed=false;
    var feat_markingsofthevictor=false;
    var feat_meleetraining=false;
    var feat_oncomingstorm=false;
    var feat_potentrebirth=false;
    var feat_primalfury=false;
    var feat_primalinstinct=false;
    var feat_protectorspiritadept=false;
    var feat_radiantpower=false;
    var feat_resonatingcovenant=false;
    var feat_restfulhealing=false;
    var feat_revitalizingfontoflife=false;
    var feat_risingfury=false;
    var feat_savageassault=false;
    var feat_scouringwrath=false;
    var feat_shadowskulk=false;
    var feat_sharedhealingspirit=false;
    var feat_sorcerousbladechanneling=false;
    var feat_speedloader=false;
    var feat_spritspeaker=false;
    var feat_stalkerspiritadept=false;
    var feat_strengthofvalor=false;
    var feat_suddenroots=false;
    var feat_surgingflame=false;
    var feat_thirstforbattle=false;
    var feat_timelyrespite=false;
    var feat_twoweaponthreat=false;
    var feat_twoweaponopening=false;
    var feat_versatilemaster=false;
    var feat_weaponexpertiseaxe=false;
    var feat_weaponexpertisebow=false;
    var feat_weaponexpertisecrossbow=false;
    var feat_weaponexpertiseflail=false;
    var feat_weaponexpertisehammer=false;
    var feat_weaponexpertiseheavyblade=false;
    var feat_weaponexpertiselightblade=false;
    var feat_weaponexpertisemace=false;
    var feat_weaponexpertisepick=false;
    var feat_weaponexpertisepolearm=false;
    var feat_weaponexpertisesling=false;
    var feat_weaponexpertisespear=false;
    var feat_weaponexpertisestaff=false;
    var feat_weaponexpertiseunarmed=false;
    var feat_wildbloodcunning=false;
    var feat_wildsenses=false;
    var feat_arcaneimplementproficiencydagger=false;
    var feat_arcaneimplementproficiencymusic=false;
    var feat_arcaneimplementproficiencyorb=false;
    var feat_arcaneimplementproficiencyrod=false;
    var feat_arcaneimplementproficiencystaff=false;
    var feat_arcaneimplementproficiencytome=false;
    var feat_arcaneimplementproficiencywand=false;
    var feat_dualimplementspellcaster=false;


    var feat_agiletempest=false;
    var feat_avandrasgift=false;
    var feat_avengingspirit=false;
    var feat_bleedingbackstab=false;
    var feat_bleedingprecision=false;
    var feat_bloodyinspiration=false;
    var feat_bloodytenacity=false;
    var feat_chainmailagility=false;
    var feat_combatopening=false;
    var feat_culltheweak=false;
    var feat_darkhunter=false;
    var feat_darkjumper=false;
    var feat_dauntingchallenge=false;
    var feat_defensivesurge=false;
    var feat_distractingcompanion=false;
    var feat_draconicarrogance=false;
    var feat_dragonbreathwarrior=false;
    var feat_elementalcompanions=false;
    var feat_elementalguardian=false;
    var feat_enduringwallop=false;
    var feat_evasivefootwork=false;
    var feat_feycharge=false;
    var feat_feygambit=false;
    var feat_feytactics=false;
    var feat_fiendishdefender=false;
    var feat_grit=false;
    var feat_groupflanking=false;
    var feat_halflingbeastmastery=false;
    var feat_huntersadvantage=false;
    var feat_huntersresurgence=false;
    var feat_impetuouscharger=false;
    var feat_infernalsneakattack=false;
    var feat_markedscourge=false;
    var feat_mightybattlerage=false;
    var feat_opportunisticarcher=false;
    var feat_opportunisticsneakattack=false;
    var feat_phalanxwarrior=false;
    var feat_preternaturalsenses=false;
    var feat_primequarry=false;
    var feat_primeslayer=false;
    var feat_protectivebeast=false;
    var feat_recklessattacker=false;
    var feat_reliableresources=false;
    var feat_rogueweaponmastery=false;
    var feat_roundaboutcharge=false;
    var feat_steadfasttacatics=false;
    var feat_stonefootreprisal=false;
    var feat_sturdybeast=false;
    var feat_vitalinspiration=false;
    var feat_warlordsformation=false;
    var feat_wrathfulhunter=false;
    var feat_actiongrant=false;
    var feat_aggressiveleadership=false;
    var feat_artfulprovocation=false;
    var feat_boldspirit=false;
    var feat_brutaladvantage=false;
    var feat_calltoglory=false;
    var feat_channeledbattlerage=false;
    var feat_correctingaim=false;
    var feat_darkfirewarrior=false;
    var feat_dragonwarrior=false;
    var feat_elementalwarrior=false;
    var feat_epicrecovery=false;
    var feat_feywildwarrior=false;
    var feat_fortuneswarrior=false;
    var feat_hawkeyewarrior=false;
    var feat_improvedprimeshot=false;
    var feat_infernalwarrior=false;
    var feat_invigoratingexploit=false;
    var feat_knockbackswing=false;
    var feat_lastingadvantage=false;
    var feat_martialmastery=false;
    var feat_martialresolve=false;
    var feat_mobilewarrior=false;
    var feat_onewithshadow=false;
    var feat_peerlesshunter=false;
    var feat_practicedreliability=false;
    var feat_primehunter=false;
    var feat_protectiveleadership=false;
    var feat_quickbeastcommand=false;
    var feat_rattlingexploit=false;
    var feat_reachingwhirlwind=false;
    var feat_rendingtempest=false;
    var feat_ruthlessterror=false;
    var feat_staggeringshot=false;
    var feat_stoneheartwarrior=false;
    var feat_supremeinspiration=false;
    var feat_surpriseaction=false;
    var feat_tacticalcunning=false;
    var feat_tacticalinsight=false;
    var feat_timelyrevival=false;
    var feat_unstoppablecharge=false;
    var feat_whirlwindsneakattack=false;
    var feat_bowmastery=false;
    var feat_epicfortitude=false;
    var feat_epicreflexes=false;
    var feat_epicwill=false;
    var feat_indomitablewill=false;
    var feat_opportunereflexes=false;
    var feat_robustdefenses=false;
    var feat_unyieldingfortitude=false;
    var feat_battleacumen=false;
    var feat_battleinstructor=false;
    var feat_courageousshooter=false;
    var feat_firstin=false;
    var feat_arcanefamiliar=false;
    var feat_alertfamiliar=false;
    var feat_aggressivefamiliar=false;
    var feat_bondedfamiliar=false;
    var feat_shieldingfamiliar=false;
    var feat_spellseerfamiliar=false;
    var feat_quickfamiliar=false;
    var feat_sharedspeed=false;
  var feat_other01=false; 
  var feat_other02=false; 
  var feat_other03=false; 
  var feat_other04=false; 
  var feat_other05=false; 
  var feat_other06=false; 
  var feat_other07=false; 
  var feat_shieldproficiencyheavy=false; 
  var feat_shieldproficiencylight=false; 
  var feat_shieldpush=false; 
  var feat_skillfocusacrobatics=false; 
  var feat_skillfocusarcana=false; 
  var feat_skillfocusathletics=false; 
  var feat_skillfocusbluff=false; 
  var feat_skillfocusdiplomacy=false; 
  var feat_skillfocusdungeoneering=false; 
  var feat_skillfocusendurance=false; 
  var feat_skillfocusheal=false; 
  var feat_skillfocushistory=false; 
  var feat_skillfocusinsight=false; 
  var feat_skillfocusintimidate=false; 
  var feat_skillfocusnature=false; 
  var feat_skillfocusperception=false; 
  var feat_skillfocusreligion=false; 
  var feat_skillfocusstealth=false; 
  var feat_skillfocusstreetwise=false; 
  var feat_skillfocusthievery=false; 
  var feat_skilltrainingacrobatics=false; 
  var feat_skilltrainingarcana=false; 
  var feat_skilltrainingathletics=false; 
  var feat_skilltrainingbluff=false; 
  var feat_skilltrainingdiplomacy=false; 
  var feat_skilltrainingdungeoneering=false; 
  var feat_skilltrainingendurance=false; 
  var feat_skilltrainingheal=false; 
  var feat_skilltraininghistory=false; 
  var feat_skilltraininginsight=false; 
  var feat_skilltrainingintimidate=false; 
  var feat_skilltrainingnature=false; 
  var feat_skilltrainingperception=false; 
  var feat_skilltrainingreligion=false; 
  var feat_skilltrainingstealth=false; 
  var feat_skilltrainingstreetwise=false; 
  var feat_skilltrainingthievery=false; 
  var feat_sureclimber=false; 
  var feat_surpriseknockdown=false; 
  var feat_tacticalassault=false; 
  var feat_toughness=false; 
  var feat_twoweapondefense=false; 
  var feat_twoweaponfighting=false; 
  var feat_weaponfocusaxe=false; 
  var feat_weaponfocusbow=false; 
  var feat_weaponfocuscrossbow=false; 
  var feat_weaponfocusflail=false; 
  var feat_weaponfocushammer=false; 
  var feat_weaponfocusheavyblade=false; 
  var feat_weaponfocuslightblade=false; 
  var feat_weaponfocusmace=false; 
  var feat_weaponfocuspick=false; 
  var feat_weaponfocuspolearm=false; 
  var feat_weaponfocussling=false; 
  var feat_weaponfocusspear=false; 
  var feat_weaponfocusstaff=false; 
  var feat_weaponfocusunarmed=false; 
  var feat_weaponproficiencyclub=false; 
  var feat_weaponproficiencydagger=false; 
  var feat_weaponproficiencyjavelin=false; 
  var feat_weaponproficiencymace=false; 
  var feat_weaponproficiencysickle=false; 
  var feat_weaponproficiencyothersimplemeleeweapons=false; 
  var feat_weaponproficiencyothermilitarymeleeweapons=false; 
  var feat_weaponproficiencyothersuperiormeleeweapons=false; 
  var feat_weaponproficiencyothersimplerangedweapons=false; 
  var feat_weaponproficiencyothersuperiorrangedweapons=false; 
  var feat_weaponproficiencyspear=false; 
  var feat_weaponproficiencygreatclub=false; 
  var feat_weaponproficiencymorningstar=false; 
  var feat_weaponproficiencyquarterstaff=false; 
  var feat_weaponproficiencyscythe=false; 
  var feat_weaponproficiencybattleaxe=false; 
  var feat_weaponproficiencyflail=false; 
  var feat_weaponproficiencyhandaxe=false; 
  var feat_weaponproficiencylongsword=false; 
  var feat_weaponproficiencyscimitar=false; 
  var feat_weaponproficiencyshortsword=false; 
  var feat_weaponproficiencythrowinghammer=false; 
  var feat_weaponproficiencywarhammer=false; 
  var feat_weaponproficiencywarpick=false; 
  var feat_weaponproficiencyfalchion=false; 
  var feat_weaponproficiencyglaive=false; 
  var feat_weaponproficiencygreataxe=false; 
  var feat_weaponproficiencygreatsword=false; 
  var feat_weaponproficiencyhalberd=false; 
  var feat_weaponproficiencyheavyflail=false; 
  var feat_weaponproficiencylongspear=false; 
  var feat_weaponproficiencymaul=false; 
  var feat_weaponproficiencybastardsword=false; 
  var feat_weaponproficiencykatar=false; 
  var feat_weaponproficiencyrapier=false; 
  var feat_weaponproficiencyspikedchain=false; 
  var feat_weaponproficiencyhandcrossbow=false; 
  var feat_weaponproficiencysling=false; 
  var feat_weaponproficiencycrossbow=false; 
  var feat_weaponproficiencylongbow=false; 
  var feat_weaponproficiencyshortbow=false; 
  var feat_weaponproficiencyshuriken=false; 
  var feat_wintertouched=false; 
  var feat_actionrecovery=false; 
  var feat_agileathlete=false; 
  var feat_arcanereach=false; 
  var feat_armorspecializationchainmail=false; 
  var feat_armorspecializationhide=false; 
  var feat_armorspecializationplate=false; 
  var feat_armorspecializationscale=false; 
  var feat_backtothewall=false; 
  var feat_bloodthirst=false; 
  var feat_combatanticipation=false; 
  var feat_combatcommander=false; 
  var feat_dangersense=false; 
  var feat_deadlyaxe=false; 
  var feat_defensiveadvantage=false; 
  var feat_devastatingcritical=false; 
  var feat_distantshot=false; 
  var feat_dwarvendurability=false; 
  var feat_empowereddragonbreath=false; 
  var feat_evasion=false; 
  var feat_feywildprotection=false; 
  var feat_fieryrebuke=false; 
  var feat_fleetfooted=false; 
  var feat_greatfortitude=false; 
  var feat_hammerrhythm=false; 
  var feat_heavybladeopportunity=false; 
  var feat_improvedsecondwind=false; 
  var feat_inescapableforce=false; 
  var feat_ironwill=false; 
  var feat_lastingfrost=false; 
  var feat_lightbladeprecision=false; 
  var feat_lightningarc=false; 
  var feat_lightningreflexes=false; 
  var feat_mettle=false; 
  var feat_pointblankshot=false; 
  var feat_polearmgamble=false; 
  var feat_psychiclock=false; 
  var feat_resoundingthunder=false; 
  var feat_runningshot=false; 
  var feat_scimitardance=false; 
  var feat_secondimplementorb=false; 
  var feat_secondimplementstaff=false; 
  var feat_secondimplementwand=false; 
  var feat_secretstride=false; 
  var feat_seizethemoment=false; 
  var feat_shieldspecialization=false; 
  var feat_slyhunter=false; 
  var feat_solidsound=false; 
  var feat_spearpush=false; 
  var feat_spellfocus=false; 
  var feat_steadyshooter=false; 
  var feat_sweepingflail=false; 
  var feat_twofoldcurse=false; 
  var feat_uncannydodge=false; 
  var feat_underfoot=false; 
  var feat_arcanemastery=false; 
  var feat_axemastery=false; 
  var feat_blindfight=false; 
  var feat_bludgeonmastery=false; 
  var feat_epicresurgence=false; 
  var feat_flailmastery=false; 
  var feat_flankingmaneuver=false; 
  var feat_fontofradiance=false; 
  var feat_heavyblademastery=false; 
  var feat_irresistableflame=false; 
  var feat_lightblademastery=false; 
  var feat_pickmastery=false; 
  var feat_spearmastery=false; 
  var feat_spellaccuracy=false; 
  var feat_triumphantattack=false; 
  var feat_twoweaponflurry=false; 
  var feat_unfetteredstride=false; 
  var feat_multiclasspowerswapencounter=false; 
  var feat_multiclasspowerswaputility=false; 
  var feat_multiclasspowerswapdaily=false; 

  var total_feat_entitlement=0; 
  var above_heroic_feat_maximum=0; 
  var above_paragon_feat_maximum=0; 
  var paragon_feat_count=0; 
  var epic_feat_count=0; 

  var beast_attack_base=0;
  var strength_attack_string_1=""; 
  var strength_attack_string_2=""; 
  var strength_attack_base=0; 
  var dexterity_attack_string_1=""; 
  var dexterity_attack_string_2=""; 
  var dexterity_attack_base=0; 
  var constitution_attack_string_1=""; 
  var constitution_attack_string_2=""; 
  var constitution_attack_base=0; 
  var intelligence_attack_string_1=""; 
  var intelligence_attack_string_2=""; 
  var intelligence_attack_base=0; 
  var wisdom_attack_string_1=""; 
  var wisdom_attack_string_2=""; 
  var wisdom_attack_base=0; 
  var charisma_attack_string_1=""; 
  var charisma_attack_string_2=""; 
  var charisma_attack_base=0; 

  var mental_attack_string_1=""; 
  var mental_attack_string_2=""; 
  var mental_attack_base=0; 
  var physical_attack_string_1=""; 
  var physical_attack_string_2=""; 
  var physical_attack_base=0; 

  var best_physical_attack="";
  var best_mental_attack="";


 var acrobatics_string_1="";
 var acrobatics_string_2=""; 
 var arcana_string_1=""; 
 var arcana_string_2=""; 
 var athletics_string_1=""; 
 var athletics_string_2=""; 
 var bluff_string_1=""; 
 var bluff_string_2=""; 
 var diplomacy_string_1=""; 
 var diplomacy_string_2=""; 
 var dungeoneering_string_1=""; 
 var dungeoneering_string_2=""; 
 var endurance_string_1=""; 
 var endurance_string_2=""; 
 var heal_string_1=""; 
 var heal_string_2=""; 
 var history_string_1=""; 
 var history_string_2=""; 
 var insight_string_1=""; 
 var insight_string_2=""; 
 var intimidate_string_1=""; 
 var intimidate_string_2=""; 
 var nature_string_1=""; 
 var nature_string_2=""; 
 var perception_string_1=""; 
 var perception_string_2=""; 
 var religion_string_1=""; 
 var religion_string_2=""; 
 var stealth_string_1=""; 
 var stealth_string_2=""; 
 var streetwise_string_1=""; 
 var streetwise_string_2=""; 
 var thievery_string_1=""; 
 var thievery_string_2=""; 


 var already_knows_club=false; 
 var already_knows_dagger=false; 
 var already_knows_javelin=false; 
 var already_knows_mace=false; 
 var already_knows_sickle=false; 
 var already_knows_spear=false;
 var already_knows_othersimplemeleeweapons=false;
 var already_knows_othermilitarymeleeweapons=false;
 var already_knows_othersuperiormeleeweapons=false;
 var already_knows_othersimplerangedweapons=false;
 var already_knows_othersuperiorrangedweapons=false;
 var already_knows_greatclub=false; 
 var already_knows_morningstar=false; 
 var already_knows_quarterstaff=false; 
 var already_knows_scythe=false; 
 var already_knows_battleaxe=false; 
 var already_knows_flail=false; 
 var already_knows_handaxe=false; 
 var already_knows_longsword=false; 
 var already_knows_scimitar=false; 
 var already_knows_shortsword=false; 
 var already_knows_throwinghammer=false; 
 var already_knows_warhammer=false; 
 var already_knows_warpick=false; 
 var already_knows_falchion=false; 
 var already_knows_glaive=false; 
 var already_knows_greataxe=false; 
 var already_knows_greatsword=false; 
 var already_knows_halberd=false; 
 var already_knows_heavyflail=false; 
 var already_knows_longspear=false; 
 var already_knows_maul=false; 
 var already_knows_bastardsword=false; 
 var already_knows_katar=false; 
 var already_knows_rapier=false; 
 var already_knows_spikedchain=false; 
 var already_knows_handcrossbow=false; 
 var already_knows_sling=false; 
 var already_knows_crossbow=false;
 var already_knows_longbow=false; 
 var already_knows_shortbow=false; 
 var already_knows_shuriken=false; 

 var already_knows_leather=false; 
 var already_knows_hide=false; 
 var already_knows_chainmail=false; 
 var already_knows_scale=false; 
 var already_knows_plate=false; 
 var already_knows_lightshield=false; 
 var already_knows_heavyshield=false; 


 var my_character_is_done=false; 
 var top_ability_score; 

 var heft=0; 
 var wt=0; 



 var FeatsAreLocked=false; 

var fortitude_string_1=""
var will_string_1=""
var reflex_string_1=""
var initiative_string_1=""
var fortitude_string_2=""
var will_string_2=""
var reflex_string_2=""
var initiative_string_2=""
var fortitude_save=0; 
var reflex_save=0; 
var will_save=0; 
var initiative_modifier=0; 




var small=false; 
var total_hit_points=0; 
var bloodied_hit_points=0; 
var surge_hit_points=0; 
var surges_per_day=0; 
var total_armor_class=0; 
var speed_string=""; 
var size_string=""; 
var vision_string=""; 
var shield_string=""; 
var armor_class_string=""; 
var stringy=""; 
var stringy2=""; 
var class_string=""
var genderandrace_string=""; 



 var alignment=0; 
 var gender=0; 
 var total_levels=0; 
 var stat1=0
 var stat2=0
 var stat3=0
 var stat4=0
 var stat5=0
 var stat6=0
 var SWD="<html><head><title>My Other Window</title></head><body><font face=\"Arial\">"
 var x=0;
 var y=0;
 var q=0; 
 var z=0; 
 var d1=0; 
 var d2=0; 
 var d3=0; 
 var d4=0; 
 var d5=0; 
 var strength=0; 
 var intelligence=0; 
 var wisdom=0; 
 var constitution=0; 
 var charisma=0; 
 var dexterity=0; 
 var b_strength=0; 
 var b_intelligence=0; 
 var b_wisdom=0; 
 var b_constitution=0; 
 var b_charisma=0; 
 var b_dexterity=0;
 var beast_bear=false;
 var beast_boar=false;
 var beast_cat=false;
 var beast_lizard=false;
 var beast_raptor=false;
 var beast_serpent=false;
 var beast_spider=false;
 var beast_wolf=false;
 var statwentto=0; 
 var secondstatwentto=0; 
 var thirdstatwentto=0; 
 var fourthstatwentto=0; 
 var fifthstatwentto=0; 
 var sixthstatwentto=0; 
 var CharacterTypeHasBeenEstablished=false; 
 var AbilitiesHaveBeenEstablished=false; 
 var ClassesHaveBeenEstablished=false; 
 var AbilitiesAreProperlyAssigned=false; 
 var DiceHaveBeenRolled=false; 
 var SkillsAreAssigned=false; 
 var AbilityIncreasesAreLocked=false; 
 var FighterFeatsEtcFrozen=false; 
 var explain_sup_w=false; 
 var explain_sup_i=false; 
 var explain_sup_bf=false; 
 var explain_sup_v=false;

 var otherrace_normalvision=false; 
 var otherrace_lowlight=false; 
 var otherrace_darkvision=false; 
 var otherrace_small=false; 
 var otherrace_medium=false; 
 var otherclass_bonus_to_defense=0; 
 var otherclass_hitpoints=0; 
 var otherclass_surges=0; 

 var past_otherrace_normalvision=false; 
 var past_otherrace_lowlight=false; 
 var past_otherrace_darkvision=false; 
 var past_otherrace_small=false; 
 var past_otherrace_medium=false; 
 var past_otherclass_bonus_to_defense=0; 
 var past_otherclass_hitpoints=0; 
 var past_otherclass_surges=0; 

 var frb_none=true; 
 var frb_aglarond=false; 
 var frb_akanul=false;
 var frb_amn=false;
 var frb_baldursgate=false;
 var frb_calimshan=false;
 var frb_chessenta=false;
 var frb_cormyr=false; 
 var frb_dalelands=false; 
 var frb_dragoncoast=false;
 var frb_durpar=false;
 var frb_eastrift=false;
 var frb_elfharrow=false;
 var frb_grayvale=false;
 var frb_greatdale=false;
 var frb_highimaskar=false;
 var frb_impiltur=false; 
 var frb_luruar=false;
 var frb_luskan=false;
 var frb_moonshaeisles=false;
 var frb_mythdrannor=false;
 var frb_narfell=false;
 var frb_nelantherisles=false;
 var frb_netheril=false;
 var frb_thay=false;
 var frb_tymanther=false;
 var frb_vilhonwilds=false;
 var frb_waterdeep=false; 
 var frb_wheloon=false; 

var fam_bat=false;
var fam_bookimp=false;
var fam_bounddemon=false;
var fam_cat=false;
var fam_crafterhomunculus=false;
var fam_dragonling=false;
var fam_falcon=false;
var fam_owl=false;
var fam_rat=false;
var fam_raven=false;
var fam_serpent=false;
var fam_spider=false;
var fam_arcaneeye=false;
var fam_badger=false;
var fam_canineconstruct=false;
var fam_disembodiedhand=false;
var fam_firelizard=false;
var fam_lightninglizard=false;
var fam_ooze=false;
var fam_parrot=false;
var fam_rootling=false;
var fam_scouthomunculus=false;
var fam_skull=false;
var fam_toad=false;
var fam_weasel=false;
var fam_airmephit=false;
var fam_arcanewisp=false;
var fam_beholderkin=false;
var fam_blackspawndarkling=false;
var fam_bluespawnnimblespark=false;
var fam_earthmephit=false;
var fam_firemephit=false;
var fam_grayspawnshortfang=false;
var fam_greenspawnbanespike=false;
var fam_icemephit=false;
var fam_rakshasaclaw=false;
var fam_redspawnspitfire=false;
var fam_stonefowl=false;
var fam_whitespawnsnowstepper=false;
var fam_blazingskull=false;
var fam_chaosshard=false;
var fam_gibberingpet=false;
var fam_shadowincarnate=false;



function arcaneclass(){
 if (class_wizard){return true;}
 if (class_bard){return true;}
 if (class_warlock){return true;}
 if (class_swordmage){return true;}
 if (class_sorcerer){return true;}
 return false;
 }

function daggeruser(){
 if (class_sorcerer){return true;}
 if (multi_sorcerer_arcaneprodigy){return true;}
 return false;
 }

function musicuser(){
 if (class_bard){return true;}
 if (multi_bard_bardicdilettante){return true;}
 return false;
 }

function orbuser(){
 if (class_wizard){return true;}
 if (multi_wizard_arcaneinitiate){return true;}
 return false;
 }

function roduser(){
 if (class_warlock){return true;}
 if (multi_warlock_pactinitiate){return true;}
 if (class_invoker){return true;}
 if (multi_invoker_acolyteofdivinesecrets){return true;}
 return false;
 }

function staffuser(){
 if (class_wizard){return true;}
 if (multi_wizard_arcaneinitiate){return true;}
 if (class_druid){return true;}
 if (multi_druid_initiateoftheoldfaith){return true;}
 if (class_invoker){return true;}
 if (multi_invoker_acolyteofdivinesecrets){return true;}
 if (class_sorcerer){return true;}
 if (multi_sorcerer_arcaneprodigy){return true;}
 return false;
 }

function tomeuser(){
 if (class_wizard){return true;}
 if (multi_wizard_arcaneinitiate){return true;}
 return false;
 }

function wanduser(){
 if (class_wizard){return true;}
 if (multi_wizard_arcaneinitiate){return true;}
 if (class_warlock){return true;}
 if (multi_warlock_pactinitiate){return true;}
 if (class_bard){return true;}
 if (multi_bard_bardicdilettante){return true;}
 return false;
 }

function holysymboluser(){
 if (class_cleric){return true;}
 if (multi_cleric_initiateofthefaith){return true;}
 if (class_paladin){return true;}
 if (multi_paladin_soldierofthefaith){return true;}
 if (class_avenger){return true;}
 if (multi_avenger_discipleofdivinewrath){return true;}
 return false;
 }

function totemuser(){
 if (class_druid){return true;}
 if (multi_druid_initiateoftheoldfaith){return true;}
 if (class_shaman){return true;}
 if (multi_shaman_spirittalker){return true;}
 return false;
 }

function invigorating(){
 if ((!trained_endurance) & (!feat_skillfocusendurance) & (!eladrin_endurance) & (!multi_trained_endurance))
  {
   alert("Invigorating power.  You are not trained in endurance, so you will not benefit.  Please choose another.  Thanks.");
   document.form1.crushingsurge_box.checked=false;
  }
 }

function rattling(){
 if ((!trained_intimidate) & (!feat_skillfocusintimidate) & (!eladrin_intimidate) & (!multi_trained_intimidate))
  {
   alert("Rattling power.  You are not trained in intimidate, so you will not benefit.  Please choose another.");
   document.form1.dishearteningstrike_box.checked=false;
  }
 }

function c_fi_aw_invigorating(){
 c_fi_aw();
 invigorating();
 }

function c_ro_aw_rattling(){
 c_ro_aw();
 rattling();
 }

function strengthalert(i){
      if (strength+freegain()<i)
       {
        alert("Please remember to use your opportunities to bring your strength to at least "+i+".");
       }
 }

function constitutionalert(i){
      if (constitution+freegain()<i)
       {
        alert("Please remember to use your opportunities to bring your constitution to at least "+i+".");
       }
 }

function dexterityalert(i){
      if (dexterity+freegain()<i)
       {
        alert("Please remember to use your opportunities to bring your dexterity to at least "+i+".");
       }
 }

function intelligencealert(i){
      if (intelligence+freegain()<i)
       {
        alert("Please remember to use your opportunities to bring your intelligence to at least "+i+".");
       }
 }

function wisdomalert(i){
      if (wisdom+freegain()<i)
       {
        alert("Please remember to use your opportunities to bring your wisdom to at least "+i+".");
       }
 }

function charismaalert(i){
      if (charisma+freegain()<i)
       {
        alert("Please remember to use your opportunities to bring your charisma to at least "+i+".");
       }
 }

function strengthwaytoolow(i){
      if (strength+freegain()+maybegain()<i)
       {
        alert("You will have difficulty gaining the required strength of "+i+".  Please make another choice.");
        document.form1.choose_multi[0].checked=true; return true;
       }
       return false;
 }

function constitutionwaytoolow(i){
      if (constitution+freegain()+maybegain()<i)
       {
        alert("You will have difficulty gaining the required constitution of "+i+".  Please make another choice.");
        document.form1.choose_multi[0].checked=true; return true;
       }
       return false;
 }

function dexteritywaytoolow(i){
      if (dexterity+freegain()+maybegain()<i)
       {
        alert("You will have difficulty gaining the required dexterity of "+i+".  Please make another choice.");
        document.form1.choose_multi[0].checked=true; return true;
       }
       return false;
 }

function intelligencewaytoolow(i){
      if (intelligence+freegain()+maybegain()<i)
       {
        alert("You will have difficulty gaining the required intelligence of "+i+".  Please make another choice.");
        document.form1.choose_multi[0].checked=true; return true;
       }
       return false;
 }

function wisdomwaytoolow(i){
      if (wisdom+freegain()+maybegain()<i)
       {
        alert("You will have difficulty gaining the required wisdom of "+i+".  Please make another choice.");
        document.form1.choose_multi[0].checked=true; return true;
       }
       return false;
 }

function charismawaytoolow(i){
      if (charisma+freegain()+maybegain()<i)
       {
        alert("You will have difficulty gaining the required charisma of "+i+".  Please make another choice.");
        document.form1.choose_multi[0].checked=true; return true;
       }
       return false;
 }

function arcane_initiate_choice(){
 if (!multi_wizard_arcaneinitiate){return 0;}
 return document.form1.arcane_initiate_list.selectedIndex+1;
 }

function raise_otherepic(){
 if ((!epic_other) | (ClassesHaveBeenEstablished==false))
  {
   document.form1.epic21[0].checked=true;
   document.form1.epic21[0].checked=false;
   }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 




 }


function ff(){
 x=0;
 if (feat_bondedfamiliar){x++;}
 if (feat_shieldingfamiliar){x++;}
 if (feat_spellseerfamiliar){x++;}
 if (feat_alertfamiliar){x++;}
 if (feat_aggressivefamiliar){x++;}
 if (feat_quickfamiliar){x++;}
 if (feat_sharedspeed){x++;}
 if (x==0){return;}
 SWD+="<br>The rule for multiple familiar feats give the familiar +"+x+" on all defenses.<br>\r";
 }

function wearing_heavy_armor(){
 if (document.form1.armor_radio[3].checked){return true;}
 if (document.form1.armor_radio[4].checked){return true;}
 if (document.form1.armor_radio[5].checked){return true;}
 return false;
 }

function arcane_caster(){
 if (class_bard){return true;}
 if (class_sorcerer){return true;}
 if (class_wizard){return true;}
 if (class_warlock){return true;}
 if (class_swordmage){return true;}
 return false;
 }

function get_fam(i){
 if (FighterFeatsEtcFrozen)
   {RememberWhichAbilitiesYouRaisedEtcEtc(); return;}
 if (!ClassesHaveBeenEstablished){ClearFamiliarChoice();return;}
 if ((i>0)&(!bardclass())&(!warlockclass())&(!wizardclass())&(!swordmageclass())&(!sorcererclass()))
  {alert("Sorry, you can't have a familiar");ClearFamiliarChoice();return;}
 if ((i>1)&(total_levels<11)){alert("Choose a lower level familiar.");document.form1.fam[0].checked=true;}
 if ((i>2)&(total_levels<21)){alert("Choose a lower level familiar.");document.form1.fam[0].checked=true;}

 }

function NegateFamiliars(){
    fam_bat=false;
    fam_bookimp=false;
    fam_bounddemon=false;
    fam_cat=false;
    fam_crafterhomunculus=false;
    fam_dragonling=false;
    fam_falcon=false;
    fam_owl=false;
    fam_rat=false;
    fam_raven=false;
    fam_serpent=false;
    fam_spider=false;

    fam_arcaneeye=false;
    fam_badger=false;
    fam_canineconstruct=false;
    fam_disembodiedhand=false;
    fam_firelizard=false;
    fam_lightninglizard=false;
    fam_ooze=false;
    fam_parrot=false;
    fam_rootling=false;
    fam_scouthomunculus=false;
    fam_skull=false;
    fam_toad=false;
    fam_weasel=false;
    fam_airmephit=false;
    fam_arcanewisp=false;
    fam_beholderkin=false;
    fam_blackspawndarkling=false;
    fam_bluespawnnimblespark=false;
    fam_earthmephit=false;
    fam_firemephit=false;
    fam_grayspawnshortfang=false;
    fam_greenspawnbanespike=false;
    fam_icemephit=false;
    fam_rakshasaclaw=false;
    fam_redspawnspitfire=false;
    fam_stonefowl=false;
    fam_whitespawnsnowstepper=false;
    fam_blazingskull=false;
    fam_chaosshard=false;
    fam_gibberingpet=false;
    fam_shadowincarnate=false;
 }

function has_arcane_familiar(){
   if (fam_bat){return true;}
   if (fam_bookimp){return true;}
   if (fam_bounddemon){return true;}
   if (fam_cat){return true;}
   if (fam_crafterhomunculus){return true;}
   if (fam_dragonling){return true;}
   if (fam_falcon){return true;}
   if (fam_owl){return true;}
   if (fam_rat){return true;}
   if (fam_raven){return true;}
   if (fam_serpent){return true;}
   if (fam_spider){return true;}
   if (fam_arcaneeye){return true;}
   if (fam_badger){return true;}
   if (fam_canineconstruct){return true;}
   if (fam_disembodiedhand){return true;}
   if (fam_firelizard){return true;}
   if (fam_lightninglizard){return true;}
   if (fam_ooze){return true;}
   if (fam_parrot){return true;}
   if (fam_rootling){return true;}
   if (fam_scouthomunculus){return true;}
   if (fam_skull){return true;}
   if (fam_toad){return true;}
   if (fam_weasel){return true;}
   if (fam_airmephit){return true;}
   if (fam_arcanewisp){return true;}
   if (fam_beholderkin){return true;}
   if (fam_blackspawndarkling){return true;}
   if (fam_bluespawnnimblespark){return true;}
   if (fam_earthmephit){return true;}
   if (fam_firemephit){return true;}
   if (fam_grayspawnshortfang){return true;}
   if (fam_greenspawnbanespike){return true;}
   if (fam_icemephit){return true;}
   if (fam_rakshasaclaw){return true;}
   if (fam_redspawnspitfire){return true;}
   if (fam_stonefowl){return true;}
   if (fam_whitespawnsnowstepper){return true;}
   if (fam_blazingskull){return true;}
   if (fam_chaosshard){return true;}
   if (fam_gibberingpet){return true;}
   if (fam_shadowincarnate){return true;}
   return false;
 }



function divinitychanneler(){
 if (class_paladin){return true;}
 if (class_cleric){return true;}
 if (class_avenger){return true;}
 if (class_invoker){return true;}
 return false;
 }

function HalfElfDilettantes(){
if (dilettante_lanceoffaith){SWD+=stringy+"Lance of Faith [Half-Elf]<br>\r"; }
if (dilettante_priestsshield){SWD+=stringy+"Priest's Shield [Half-Elf]<br>\r"; }
if (dilettante_righteousbrand){SWD+=stringy+"Righteous Brand [Half-Elf]<br>\r"; }
if (dilettante_sacredflame){SWD+=stringy+"Sacred Flame [Half-Elf]<br>\r"; }
if (dilettante_cleave){SWD+=stringy+"Cleave [Half-Elf]<br>\r"; }
if (dilettante_reapingstrike){SWD+=stringy+"Reaping Strike [Half-Elf]<br>\r"; }
if (dilettante_surestrike){SWD+=stringy+"Sure Strike [Half-Elf]<br>\r"; }
if (dilettante_tideofiron){SWD+=stringy+"Tide of Iron [Half-Elf]<br>\r"; }
//if (dilettante_divinechallenge){SWD+=stringy+"Divine Challenge [Half-Elf]<br>\r"; }
//if (dilettante_layonhands){x=modifier_number(wisdom); if (x<1){x=1; }SWD+=stringy+"Lay On Hands [Half-Elf]["+x+"/day]<br>\r"; }
if (dilettante_bolsteringstrike){SWD+=stringy+"Bolstering Strike [Half-Elf]<br>\r"; }
if (dilettante_enfeeblingstrike){SWD+=stringy+"Enfeebling Strike [Half-Elf]<br>\r"; }
if (dilettante_holystrike){SWD+=stringy+"Holy Strike [Half-Elf]<br>\r"; }
if (dilettante_valiantstrike){SWD+=stringy+"Valiant Strike [Half-Elf]<br>\r"; }
if (dilettante_carefulattack){SWD+=stringy+"Careful Attack [Half-Elf]<br>\r"; }
if (dilettante_hitandrun){SWD+=stringy+"Hit and Run [Half-Elf]<br>\r"; }
if (dilettante_nimblestrike){SWD+=stringy+"Nimble Strike [Half-Elf]<br>\r"; }
if (dilettante_twinstrike){SWD+=stringy+"Twin Strike [Half-Elf]<br>\r"; }
if (dilettante_deftstrike){SWD+=stringy+"Deft Strike [Half-Elf]<br>\r"; }
if (dilettante_piercingstrike){SWD+=stringy+"Piercing Strike [Half-Elf]<br>\r"; }
if (dilettante_ripostestrike){SWD+=stringy+"Riposte Strike [Half-Elf]<br>\r"; }
if (dilettante_slyflourish){SWD+=stringy+"Sly Flourish [Half-Elf]<br>\r"; }
if (dilettante_direradiance){SWD+=stringy+"Dire Radiance [Half-Elf]<br>\r"; }
if (dilettante_eldritchblast){SWD+=stringy+"Eldritch Blast [Half-Elf]<br>\r"; }
if (dilettante_eyebite){SWD+=stringy+"Eyebite [Half-Elf]<br>\r"; }
if (dilettante_hellishrebuke){SWD+=stringy+"Hellish Rebuke [Half-Elf]<br>\r"; }
if (dilettante_commandersstrike){SWD+=stringy+"Commander's Strike [Half-Elf]<br>\r"; }
if (dilettante_furioussmash){SWD+=stringy+"Furious Smash [Half-Elf]<br>\r"; }
if (dilettante_vipersstrike){SWD+=stringy+"Viper's Strike [Half-Elf]<br>\r"; }
if (dilettante_wolfpacktactics){SWD+=stringy+"Wolf Pack Tactics [Half-Elf]<br>\r"; }
//if (dilettante_ghostsound){SWD+=stringy+"Ghost Sound [Half-Elf]<br>\r"; }
//if (dilettante_light){SWD+=stringy+"Light [Half-Elf]<br>\r"; }
//if (dilettante_magehand){SWD+=stringy+"Mage Hand [Half-Elf]<br>\r"; }
//if (dilettante_prestidigitation){SWD+=stringy+"Prestidigitation [Half-Elf]<br>\r"; }
if (dilettante_cloudofdaggers){SWD+=stringy+"Cloud of Daggers [Half-Elf]<br>\r"; }
if (dilettante_magicmissile){SWD+=stringy+"Magic Missile [Half-Elf]<br>\r"; }
if (dilettante_rayoffrost){SWD+=stringy+"Ray of Frost [Half-Elf]<br>\r"; }
if (dilettante_scorchingburst){SWD+=stringy+"Scorching Burst [Half-Elf]<br>\r"; }
if (dilettante_thunderwave){SWD+=stringy+"Thunderwave [Half-Elf]<br>\r"; }
if (dilettante_other){SWD+=stringy+""+document.form1.otherdilettante.value+" [Half-Elf]<br>\r"; }
 }

function  ph2class(){
 SWD+="<font size=-1>New class under development.  Please report errors to scalpel_blade@yahoo.com  Thanks!</font size>"
 }


function BaseArmorClass(){
  total_armor_class=10+half_total_level();
  armor_class_string="= 10 "; 
  if (total_levels>1){armor_class_string+=" + "+half_total_level()+" [half level]"; }
  }



function primalguardian(){
 if (druid_guardian){return "dexwis.gif";}
 return "wis.gif";
 }

function primalpredator(){
 if (bard_cunning){return "conwis.gif";}
 return "wis.gif";
 }

function virtueofcunning(){
 if (bard_cunning){return "intchr.gif";}
 return "chr.gif";
 }

function virtueofvalor(){
 if (bard_valor){return "conchr.gif";}
 return "chr.gif";
 }

function virtueofprescience(){
 if (bard_valor){return "wischr.gif";}
 return "chr.gif";
 }

function covenantofpreservation(){
 if (invoker_preservation){return "intwis.gif";}
 return "wis.gif";
 }

function covenantofwrath(){
 if (invoker_wrath){return "conwis.gif";}
 return "wis.gif";
 }

function protectorspirit(){
 if (shaman_protector){return "conwis.gif";}
 return "wis.gif";
 }

function stalkerspirit(){
 if (shaman_stalker){return "intwis.gif";}
 return "wis.gif";
 }

function earthstrength(){
 if (rogue_artfuldodger){return "strcon.gif";}
 return "str.gif";
 }

function dragonsoul(){
 if (sorcerer_dragonsoul){return "strchr.gif";}
 return "chr.gif";
 }

function wildmagic(){
 if (sorcerer_wildmagic){return "dexchr.gif";}
 return "chr.gif";
 }

function stormmagic(){
 if (sorcerer_strommagic){return "dexchr.gif";}
 return "chr.gif";
 }

function cosmicmagic(){
 if (sorcerer_cosmicmagic){return "strchr.gif";}
 return "chr.gif";
 }

function stormmagic(){
 if (sorcerer_stormmagic){return "dexchr.gif";}
 return "chr.gif";
 }

function cosmicmagic(){
 if (sorcerer_cosmicmagic){return "strchr.gif";}
 return "chr.gif";
 }

function wildblood(){
 if (rogue_artfuldodger){return "strwis.gif";}
 return "str.gif";
 }

function infernalpact(){
 if (warlock_infernal){return "conint.gif";}
 return "con.gif";
 }

function vestigepact(){
 if (warlock_vestige){return "conint.gif";}
 return "con.gif";
 }

function artfuldodger(){
 if (rogue_artfuldodger){return "dexchr.gif";}
 return "dex.gif";
 }

function brutalscoundrel(){
 if (rogue_brutalscoundrel){return "strchr.gif";}
 return "dex.gif";
 }

function censureofpursuit(){
 if (avenger_pursuit){return "dexwis.gif";}
 return "wis.gif";
 }

function censureofretribution(){
 if (avenger_retribution){return "intwis.gif";}
 return "wis.gif";
 }

function rageblood(){
 if (barbarian_rageblood){return "strcon.gif";}
 return "str.gif";
 }

function thaneborn(){
 if (barbarian_thaneborn){return "strchr.gif";}
 return "str.gif";
 }



function GatecrasherArcaneTraining(){
 if ((!PreFeatsArcana())&(paragon_gatecrasher))
  {document.form1.skilltrainingarcana_box.checked=true;}
 }

function weaponfocus(){
 if (total_levels>20){return 3;}
 if (total_levels>10){return 2;}
 return 1;
 }

function TurnOffBeastStars(){
document.form1.circlingstrike_star.src="no_asterisk.gif";
document.form1.predatorstrike_star.src="no_asterisk.gif";
document.form1.enclosetheprey_star.src="no_asterisk.gif";
document.form1.synchronizedstrike_star.src="no_asterisk.gif";
document.form1.drivingthequarry_star.src="no_asterisk.gif";
document.form1.partneredsavaging_star.src="no_asterisk.gif";
document.form1.heartenthebeast_star.src="no_asterisk.gif";
document.form1.packalertness_star.src="no_asterisk.gif";
document.form1.beastlatch_star.src="no_asterisk.gif";
document.form1.pairedpredators_star.src="no_asterisk.gif";
document.form1.bloodiedfrenzy_star.src="no_asterisk.gif";
document.form1.laceratingmaul_star.src="no_asterisk.gif";
document.form1.defensiveposture_star.src="no_asterisk.gif";
document.form1.invigoratethebeast_star.src="no_asterisk.gif";
document.form1.beastrush_star.src="no_asterisk.gif";
document.form1.harriedquarry_star.src="no_asterisk.gif";
document.form1.menacingcry_star.src="no_asterisk.gif";
document.form1.companionemplacement_star.src="no_asterisk.gif";
document.form1.quickrecovery_star.src="no_asterisk.gif";
document.form1.herdtheprey_star.src="no_asterisk.gif";
document.form1.knockdownpounce_star.src="no_asterisk.gif";
document.form1.bloodfrenzy_star.src="no_asterisk.gif";
document.form1.scentoffear_star.src="no_asterisk.gif";
document.form1.sharedhealing_star.src="no_asterisk.gif";
document.form1.bladeandfang_star.src="no_asterisk.gif";
document.form1.houndingbeast_star.src="no_asterisk.gif";
document.form1.ferociousroar_star.src="no_asterisk.gif";
document.form1.selflesssacrifice_star.src="no_asterisk.gif";
document.form1.wilddash_star.src="no_asterisk.gif";
document.form1.chasedown_star.src="no_asterisk.gif";
document.form1.overwhelmingfury_star.src="no_asterisk.gif";
document.form1.primalrampage_star.src="no_asterisk.gif";
document.form1.pursuitofthewildhunt_star.src="no_asterisk.gif";
document.form1.beastlyvise_star.src="no_asterisk.gif";
document.form1.catchanddrop_star.src="no_asterisk.gif";
document.form1.huntmastersmauling_star.src="no_asterisk.gif";
 }

function UncheckBeastBoxes(){
document.form1.circlingstrike_box.checked=false;
document.form1.predatorstrike_box.checked=false;
document.form1.enclosetheprey_box.checked=false;
document.form1.synchronizedstrike_box.checked=false;
document.form1.drivingthequarry_box.checked=false;
document.form1.partneredsavaging_box.checked=false;
document.form1.heartenthebeast_box.checked=false;
document.form1.packalertness_box.checked=false;
document.form1.beastlatch_box.checked=false;
document.form1.pairedpredators_box.checked=false;
document.form1.bloodiedfrenzy_box.checked=false;
document.form1.laceratingmaul_box.checked=false;
document.form1.defensiveposture_box.checked=false;
document.form1.invigoratethebeast_box.checked=false;
document.form1.beastrush_box.checked=false;
document.form1.harriedquarry_box.checked=false;
document.form1.menacingcry_box.checked=false;
document.form1.companionemplacement_box.checked=false;
document.form1.quickrecoverypower_box.checked=false;
document.form1.herdtheprey_box.checked=false;
document.form1.knockdownpounce_box.checked=false;
document.form1.bloodfrenzyranger_box.checked=false;
document.form1.scentoffear_box.checked=false;
document.form1.sharedhealing_box.checked=false;
document.form1.bladeandfang_box.checked=false;
document.form1.houndingbeast_box.checked=false;
document.form1.ferociousroar_box.checked=false;
document.form1.selflesssacrifice_box.checked=false;
document.form1.wilddash_box.checked=false;
document.form1.chasedown_box.checked=false;
document.form1.overwhelmingfury_box.checked=false;
document.form1.primalrampage_box.checked=false;
document.form1.pursuitofthewildhunt_box.checked=false;
document.form1.beastlyvise_box.checked=false;
document.form1.catchanddrop_box.checked=false;
document.form1.huntmastersmauling_box.checked=false;
 }

function AnyMartialClass(){
 if (fighterclass()){return true;}
 if (rangerclass()){return true;}
 if (rogueclass()){return true;}
 if (warlordclass()){return true;}
 }

function multi_any(){
 if (multi_cleric()){return true;}
 if (multi_fighter()){return true;}
 if (multi_paladin()){return true;}
 if (multi_ranger()){return true;}
 if (multi_rogue()){return true;}
 if (multi_warlord()){return true;}
 if (multi_warlock()){return true;}
 if (multi_wizard()){return true;}
 if (multi_swordmage()){return true;}
 if (multi_avenger()){return true;}
 if (multi_barbarian()){return true;}
 if (multi_bard()){return true;}
 if (multi_druid()){return true;}
 if (multi_invoker()){return true;}
 if (multi_shaman()){return true;}
 if (multi_sorcerer()){return true;}
 if (multi_warden()){return true;}
 return false;
 }

function multi_cleric(){
 if (multi_cleric_initiateofthefaith){return true;}
 return false;
 }

function multi_fighter(){
 if (multi_fighter_studentofthesword){return true;}
 if (multi_fighter_battleawareness){return true;}
 return false;
 }

function multi_paladin(){
 if (multi_paladin_soldierofthefaith){return true;}
 return false;
 }

function multi_ranger(){
 if (multi_ranger_warriorofthewild){return true;}
 if (multi_ranger_twobladewarrior){return true;}
 return false;
 }

function multi_rogue(){
 if (multi_rogue_sneakofshadows){return true;}
 if (multi_rogue_ruthlessefficiency){return true;}
 if (multi_rogue_slydodge){return true;}
 return false;
 }

function multi_warlock_with_pact(){
 if (multi_warlock_pactinitiate){return true;}
 return false;
 }

function multi_warlock(){
 if (multi_warlock_pactinitiate){return true;}
 if (multi_warlock_studentofmalediction){return true;}
 return false;
 }

function multi_warlord(){
 if (multi_warlord_studentofbattle){return true;}
 if (multi_warlord_inspiringleader){return true;}
 if (multi_warlord_tacticalleader){return true;}
 return false;
 }

function multi_wizard(){
 if (multi_wizard_arcaneinitiate){return true;}
 if (multi_wizard_learnedspellcaster){return true;}
 return false;
 }




function multi_avenger(){
 if (multi_avenger_discipleofdivinewrath){return true;}
 return false;
 }

function multi_barbarian(){
 if (multi_barbarian_berserkersfury){return true;}
 return false;
 }

function multi_bard(){
 if (multi_bard_bardicdilettante){return true;}
 if (multi_bard_bardicritualist){return true;}
 return false;
 }

function multi_druid(){
 if (multi_druid_initiateoftheoldfaith){return true;}
 return false;
 }

function multi_invoker(){
 if (multi_invoker_acolyteofdivinesecrets){return true;}
 return false;
 }

function multi_shaman(){
 if (multi_shaman_spirittalker){return true;}
 return false;
 }

function multi_sorcerer(){
 if (multi_sorcerer_arcaneprodigy){return true;}
 if (multi_sorcerer_soulofsorcery){return true;}
 return false;
 }

function multi_warden(){
 if (multi_warden_defenderofthewild){return true;}
 return false;
 }

function multi_swordmage(){
 if (multi_swordmage_bladeinitiate){return true;}
 if (multi_swordmage_heartoftheblade){return true;}
 return false;
 }


function clericclass(){
 if (class_cleric){return true;}
 if (multi_cleric()){return true;}
 return false;
 }

function fighterclass(){
 if (class_fighter){return true;}
 if (multi_fighter()){return true;}
 return false;
 }

function paladinclass(){
 if (class_paladin){return true;}
 if (multi_paladin()){return true;}
 return false;
 }

function rangerclass(){
 if (class_ranger){return true;}
 if (multi_ranger()){return true;}
 return false;
 }

function rogueclass(){
 if (class_rogue){return true;}
 if (multi_rogue()){return true;}
 return false;
 }

function warlockclass(){
 if (class_warlock){return true;}
 if (multi_warlock()){return true;}
 return false;
 }

function warlockclass_with_pact(){
 if (class_warlock){return true;}
 if (multi_warlock_with_pact()){return true;}
 return false;
 }

function warlordclass(){
 if (class_warlord){return true;}
 if (multi_warlord()){return true;}
 return false;
 }

function wizardclass(){
 if (class_wizard){return true;}
 if (multi_wizard()){return true;}
 return false;
 }

function swordmageclass(){
 if (class_swordmage){return true;}
 if (multi_swordmage()){return true;}
 return false;
 }

function avengerclass(){
 if (class_avenger){return true;}
 if (multi_avenger()){return true;}
 return false;
 }

function barbarianclass(){
 if (class_barbarian){return true;}
 if (multi_barbarian()){return true;}
 return false;
 }

function bardclass(){
 if (class_bard){return true;}
 if (multi_bard()){return true;}
 return false;
 }

function druidclass(){
 if (class_druid){return true;}
 if (multi_druid()){return true;}
 return false;
 }

function invokerclass(){
 if (class_invoker){return true;}
 if (multi_invoker()){return true;}
 return false;
 }

function shamanclass(){
 if (class_shaman){return true;}
 if (multi_shaman()){return true;}
 return false;
 }

function sorcererclass(){
 if (class_sorcerer){return true;}
 if (multi_sorcerer()){return true;}
 return false;
 }

function wardenclass(){
 if (class_warden){return true;}
 if (multi_warden()){return true;}
 return false;
 }

function doingfeats() {
 if (FeatsAreLocked){return false;}
 if (!SkillsAreAssigned){return false;}
 return true;
  }

function hashbm(){
 if (feat_humanbeastmastery){return 1;}
 return 0;
 }

function sturdybear(){
 if (!feat_sturdybeast){return 0;}
 if (modifier_number(wisdom)<0){return 5;}
 return (5+modifier_number(wisdom));
 }

function am_i_beastmaster(){
 if ((ClassesHaveBeenEstablished==false))
  {
    b_ClearAbilityBoxes04(); 
    b_ClearAbilityBoxes08(); 
    b_ClearAbilityBoxes14(); 
    b_ClearAbilityBoxes18(); 
    b_ClearAbilityBoxes24(); 
    b_ClearAbilityBoxes28(); 
    ClearBeastChoice();
    return;
  }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); return;}

 if (document.form1.rangerstyle[2].checked==false)
 {
  ClearBeastChoice();
 }
 if ((document.form1.rangerstyle[2].checked==false)|(total_levels<4))
 {
  document.form1.b_str_04_box.checked=false;
  document.form1.b_con_04_box.checked=false;
  document.form1.b_dex_04_box.checked=false;
  document.form1.b_int_04_box.checked=false;
  document.form1.b_wis_04_box.checked=false;
  document.form1.b_chr_04_box.checked=false;
 }
 if ((document.form1.rangerstyle[2].checked==false)|(total_levels<8))
 {
  document.form1.b_str_08_box.checked=false;
  document.form1.b_con_08_box.checked=false;
  document.form1.b_dex_08_box.checked=false;
  document.form1.b_int_08_box.checked=false;
  document.form1.b_wis_08_box.checked=false;
  document.form1.b_chr_08_box.checked=false;
 }
 if ((document.form1.rangerstyle[2].checked==false)|(total_levels<14))
 {
  document.form1.b_str_14_box.checked=false;
  document.form1.b_con_14_box.checked=false;
  document.form1.b_dex_14_box.checked=false;
  document.form1.b_int_14_box.checked=false;
  document.form1.b_wis_14_box.checked=false;
  document.form1.b_chr_14_box.checked=false;
 }
 if ((document.form1.rangerstyle[2].checked==false)|(total_levels<18))
 {
  document.form1.b_str_18_box.checked=false;
  document.form1.b_con_18_box.checked=false;
  document.form1.b_dex_18_box.checked=false;
  document.form1.b_int_18_box.checked=false;
  document.form1.b_wis_18_box.checked=false;
  document.form1.b_chr_18_box.checked=false;
 }
 if ((document.form1.rangerstyle[2].checked==false)|(total_levels<24))
 {
  document.form1.b_str_24_box.checked=false;
  document.form1.b_con_24_box.checked=false;
  document.form1.b_dex_24_box.checked=false;
  document.form1.b_int_24_box.checked=false;
  document.form1.b_wis_24_box.checked=false;
  document.form1.b_chr_24_box.checked=false;
 }
 if ((document.form1.rangerstyle[2].checked==false)|(total_levels<28))
 {
  document.form1.b_str_28_box.checked=false;
  document.form1.b_con_28_box.checked=false;
  document.form1.b_dex_28_box.checked=false;
  document.form1.b_int_28_box.checked=false;
  document.form1.b_wis_28_box.checked=false;
  document.form1.b_chr_28_box.checked=false;
 }
 ArrowShow();
 }

function MultiSkillChoiceAvailable(){
   if (multi_fighter_studentofthesword){return true;} 
   if (multi_paladin_soldierofthefaith){return true;} 
   if (multi_ranger_warriorofthewild){return true;} 
   if (multi_warlock_pactinitiate){return true;} 
   if (multi_warlord_studentofbattle){return true;} 
   if (multi_fighter_battleawareness){return true;}
   if (multi_warlord_inspiringleader){return true;}
   if (multi_rogue_slydodge){return true;}
   if (multi_warlord_tacticalleader){return true;}
   if (multi_ranger_twobladewarrior){return true;}
   if (multi_bard_bardicdilettante){return true;}
   if (multi_barbarian_berserkersfury){return true;}
   if (multi_warden_defenderofthewild){return true;}
   if (multi_swordmage_heartoftheblade){return true;}
   if (multi_wizard_learnedspellcaster){return true;}
 return false;
 }


function TurnOffParagonStars(){
  document.form1.angelicavenger_star.src="no_asterisk.gif";
  document.form1.divineoracle_star.src="no_asterisk.gif";
  document.form1.radiantservant_star.src="no_asterisk.gif";
  document.form1.warpriest_star.src="no_asterisk.gif";
  document.form1.ironvanguard_star.src="no_asterisk.gif";
  document.form1.kensei_star.src="no_asterisk.gif";
  document.form1.pitfighter_star.src="no_asterisk.gif";
  document.form1.swordmaster_star.src="no_asterisk.gif";
  document.form1.astralweapon_star.src="no_asterisk.gif";
  document.form1.championoforder_star.src="no_asterisk.gif";
  document.form1.hospitaler_star.src="no_asterisk.gif";
  document.form1.justiciar_star.src="no_asterisk.gif";
  document.form1.battlefieldarcher_star.src="no_asterisk.gif";
  document.form1.beaststalker_star.src="no_asterisk.gif";
  document.form1.pathfinder_star.src="no_asterisk.gif";
  document.form1.stormwarden_star.src="no_asterisk.gif";
  document.form1.catburglar_star.src="no_asterisk.gif";
  document.form1.daggermaster_star.src="no_asterisk.gif";
  document.form1.masterinfiltrator_star.src="no_asterisk.gif";
  document.form1.shadowassassin_star.src="no_asterisk.gif";
  document.form1.doomsayer_star.src="no_asterisk.gif";
  document.form1.feytouched_star.src="no_asterisk.gif";
  document.form1.lifestealer_star.src="no_asterisk.gif";
  document.form1.battlecaptain_star.src="no_asterisk.gif";
  document.form1.combatveteran_star.src="no_asterisk.gif";
  document.form1.knightcommander_star.src="no_asterisk.gif";
  document.form1.swordmarshal_star.src="no_asterisk.gif";
  document.form1.battlemage_star.src="no_asterisk.gif";
  document.form1.bloodmage_star.src="no_asterisk.gif";
  document.form1.spellstormmage_star.src="no_asterisk.gif";
  document.form1.wizardofthespiraltower_star.src="no_asterisk.gif";
  document.form1.other_star.src="no_asterisk.gif";
  document.form1.multiclass_star.src="no_asterisk.gif";
  document.form1.anarchofshyr_star.src="no_asterisk.gif";
  document.form1.coronalguard_star.src="no_asterisk.gif";
  document.form1.darkwalker_star.src="no_asterisk.gif";
  document.form1.doomguide_star.src="no_asterisk.gif";
  document.form1.drowwanderer_star.src="no_asterisk.gif";
  document.form1.eartheartdefender_star.src="no_asterisk.gif";
  document.form1.elementaltempest_star.src="no_asterisk.gif";
  document.form1.evermeetwarlock_star.src="no_asterisk.gif";
  document.form1.ghostofeventide_star.src="no_asterisk.gif";
  document.form1.heartwarder_star.src="no_asterisk.gif";
  document.form1.highforestscout_star.src="no_asterisk.gif";
  document.form1.impilturandemonslayer_star.src="no_asterisk.gif";
  document.form1.morninglord_star.src="no_asterisk.gif";
  document.form1.purpledragonknight_star.src="no_asterisk.gif";
  document.form1.silverstar_star.src="no_asterisk.gif";
  document.form1.simbarchofaglarond_star.src="no_asterisk.gif";
  document.form1.spellguardwizard_star.src="no_asterisk.gif";
  document.form1.spellscarredsavant_star.src="no_asterisk.gif";
  document.form1.steelskyliberator_star.src="no_asterisk.gif";
  document.form1.swordcoastcorsair_star.src="no_asterisk.gif";
  document.form1.umbriri_star.src="no_asterisk.gif";
  document.form1.wanderingswordmage_star.src="no_asterisk.gif";
  document.form1.warwizardofcormyr_star.src="no_asterisk.gif";
  document.form1.whirlwindgenasi_star.src="no_asterisk.gif";
  document.form1.wildfiregenasi_star.src="no_asterisk.gif";
  document.form1.feralspirit_star.src="no_asterisk.gif";
  document.form1.packrunner_star.src="no_asterisk.gif";
  document.form1.wildcatstalker_star.src="no_asterisk.gif";
  document.form1.bladeofcendriane_star.src="no_asterisk.gif";
  document.form1.doomguardmarauder_star.src="no_asterisk.gif";
  document.form1.gatecrasher_star.src="no_asterisk.gif";
  document.form1.knightofcelestia_star.src="no_asterisk.gif";
  document.form1.maleckethjanissary_star.src="no_asterisk.gif";
  document.form1.planeshifter_star.src="no_asterisk.gif";
  document.form1.shadowcaptain_star.src="no_asterisk.gif";
  document.form1.soulguide_star.src="no_asterisk.gif";


  document.form1.adroitexplorer_star.src="no_asterisk.gif";
  document.form1.ancestralincarnate_star.src="no_asterisk.gif";
  document.form1.bloodfurysavage_star.src="no_asterisk.gif";
  document.form1.feybeguiler_star.src="no_asterisk.gif";
  document.form1.firstbornofmoradin_star.src="no_asterisk.gif";
  document.form1.halflingscoundrel_star.src="no_asterisk.gif";
  document.form1.moonstalker_star.src="no_asterisk.gif";
  document.form1.scionofarkhosia_star.src="no_asterisk.gif";
  document.form1.shiereknight_star.src="no_asterisk.gif";
  document.form1.stoneblessed_star.src="no_asterisk.gif";
  document.form1.turathihighborn_star.src="no_asterisk.gif";
  document.form1.twilightguardian_star.src="no_asterisk.gif";
  document.form1.hammerofjudgment_star.src="no_asterisk.gif";
  document.form1.oathsworn_star.src="no_asterisk.gif";
  document.form1.unveiledvisage_star.src="no_asterisk.gif";
  document.form1.zealousassassin_star.src="no_asterisk.gif";
  document.form1.bearwarrior_star.src="no_asterisk.gif";
  document.form1.fearbringerthane_star.src="no_asterisk.gif";
  document.form1.frenziedberserker_star.src="no_asterisk.gif";
  document.form1.wildrunner_star.src="no_asterisk.gif";
  document.form1.studentoftheseven_star.src="no_asterisk.gif";
  document.form1.summerrhymer_star.src="no_asterisk.gif";
  document.form1.voiceofthunder_star.src="no_asterisk.gif";
  document.form1.warchanter_star.src="no_asterisk.gif";
  document.form1.bloodmoonstalker_star.src="no_asterisk.gif";
  document.form1.guardianofthelivinggate_star.src="no_asterisk.gif";
  document.form1.keeperofthehiddenflame_star.src="no_asterisk.gif";
  document.form1.skyhunter_star.src="no_asterisk.gif";
  document.form1.angelicaspect_star.src="no_asterisk.gif";
  document.form1.blightspeaker_star.src="no_asterisk.gif";
  document.form1.flameofhope_star.src="no_asterisk.gif";
  document.form1.hammerofvengeance_star.src="no_asterisk.gif";
  document.form1.discipleoftheworldserpent_star.src="no_asterisk.gif";
  document.form1.ghostpanther_star.src="no_asterisk.gif";
  document.form1.greatbearshaman_star.src="no_asterisk.gif";
  document.form1.spirittempest_star.src="no_asterisk.gif";
  document.form1.arcanewellspring_star.src="no_asterisk.gif";
  document.form1.demonskinadept_star.src="no_asterisk.gif";
  document.form1.dragonsoulheir_star.src="no_asterisk.gif";
  document.form1.wildmage_star.src="no_asterisk.gif";
  document.form1.bloodwrathguardian_star.src="no_asterisk.gif";
  document.form1.hornedchampion_star.src="no_asterisk.gif";
  document.form1.stormsentinel_star.src="no_asterisk.gif";
  document.form1.verdantlord_star.src="no_asterisk.gif";



  //kurwa
 }

function TurnOnParagonStars(){
  TurnOffParagonStars();
  if (total_levels<11){return;}
  if ((clericclass())){document.form1.angelicavenger_star.src="asterisk.gif";}
  if ((clericclass())){document.form1.divineoracle_star.src="asterisk.gif";}
  if ((clericclass())){document.form1.radiantservant_star.src="asterisk.gif";}
  if ((clericclass())){document.form1.warpriest_star.src="asterisk.gif";}
  if ((fighterclass())){document.form1.ironvanguard_star.src="asterisk.gif";}
  if ((fighterclass())){document.form1.kensei_star.src="asterisk.gif";}
  if ((fighterclass())){document.form1.pitfighter_star.src="asterisk.gif";}
  if ((fighterclass())){document.form1.swordmaster_star.src="asterisk.gif";}
  if ((paladinclass())){document.form1.astralweapon_star.src="asterisk.gif";}
  if ((paladinclass())){document.form1.championoforder_star.src="asterisk.gif";}
  if ((paladinclass())){document.form1.hospitaler_star.src="asterisk.gif";}
  if ((paladinclass())){document.form1.justiciar_star.src="asterisk.gif";}
  if ((rangerclass())){document.form1.battlefieldarcher_star.src="asterisk.gif";}
  if ((rangerclass())){document.form1.beaststalker_star.src="asterisk.gif";}
  if ((rangerclass())){document.form1.pathfinder_star.src="asterisk.gif";}
  if ((rangerclass())){document.form1.stormwarden_star.src="asterisk.gif";}
  if ((rogueclass())){document.form1.catburglar_star.src="asterisk.gif";}
  if ((rogueclass())){document.form1.daggermaster_star.src="asterisk.gif";}
  if ((rogueclass())){document.form1.masterinfiltrator_star.src="asterisk.gif";}
  if ((rogueclass())){document.form1.shadowassassin_star.src="asterisk.gif";}
  if ((warlockclass_with_pact())){document.form1.doomsayer_star.src="asterisk.gif";}
  if ((warlockclass_with_pact())){document.form1.feytouched_star.src="asterisk.gif";}
  if ((warlockclass_with_pact())){document.form1.lifestealer_star.src="asterisk.gif";}
  if ((warlordclass())){document.form1.battlecaptain_star.src="asterisk.gif";}
  if ((warlordclass())){document.form1.combatveteran_star.src="asterisk.gif";}
  if ((warlordclass())){document.form1.knightcommander_star.src="asterisk.gif";}
  if ((warlordclass())){document.form1.swordmarshal_star.src="asterisk.gif";}
  if ((wizardclass())){document.form1.battlemage_star.src="asterisk.gif";}
  if ((wizardclass())){document.form1.bloodmage_star.src="asterisk.gif";}
  if ((wizardclass())){document.form1.spellstormmage_star.src="asterisk.gif";}
  if ((wizardclass())){document.form1.wizardofthespiraltower_star.src="asterisk.gif";}
  if ((multi_cleric())|(multi_fighter())|(multi_paladin())|(multi_ranger())|(multi_rogue())|(multi_warlock())|(multi_warlord())|(multi_wizard())|(multi_swordmage())|(multi_barbarian())|(multi_avenger())|(multi_bard())|(multi_druid())|(multi_invoker())|(multi_shaman())|(multi_sorcerer())|(multi_barbarian())){document.form1.multiclass_star.src="asterisk.gif";}
  document.form1.other_star.src="asterisk.gif";
  if ((swordmageclass())){document.form1.anarchofshyr_star.src="asterisk.gif";}
  if ((swordmageclass())){document.form1.coronalguard_star.src="asterisk.gif";}
  if ((warlockclass_with_pact())){document.form1.darkwalker_star.src="asterisk.gif";}
  if ((clericclass())|(paladinclass())){document.form1.doomguide_star.src="asterisk.gif";}
  if (race_drow){document.form1.drowwanderer_star.src="asterisk.gif";}
  if ((race_dwarf)&((fighterclass())|(paladinclass()))){document.form1.eartheartdefender_star.src="asterisk.gif";}
  if (race_genasi){document.form1.elementaltempest_star.src="asterisk.gif";}
  if ((warlockclass())){document.form1.evermeetwarlock_star.src="asterisk.gif";}
  if ((rogueclass())){document.form1.ghostofeventide_star.src="asterisk.gif";};
  if ((clericclass())|(paladinclass())){document.form1.heartwarder_star.src="asterisk.gif";};
  if (class_ranger){document.form1.highforestscout_star.src="asterisk.gif";};
  if (class_ranger){document.form1.impilturandemonslayer_star.src="asterisk.gif";};
  if ((clericclass())|(paladinclass())){document.form1.morninglord_star.src="asterisk.gif";};
  if ((fighterclass())|(paladinclass())|(warlordclass())){document.form1.purpledragonknight_star.src="asterisk.gif";};
  if ((swordmageclass())|(warlockclass())|(clericclass())|(wizardclass())|(paladinclass())){document.form1.silverstar_star.src="asterisk.gif";};
  if ((wizardclass())){document.form1.simbarchofaglarond_star.src="asterisk.gif";};
  if ((wizardclass())){document.form1.spellguardwizard_star.src="asterisk.gif";};
  if (multi_spellscarred){document.form1.spellscarredsavant_star.src="asterisk.gif";};
  if ((race_human)|(race_orc)|(race_genasi)|(race_dragonborn)){document.form1.steelskyliberator_star.src="asterisk.gif";};
  if ((fighterclass())|(rogueclass())|(warlordclass())|(rangerclass())){document.form1.swordcoastcorsair_star.src="asterisk.gif";};
  if ((swordmageclass())){document.form1.umbriri_star.src="asterisk.gif";};
  if ((swordmageclass())){document.form1.wanderingswordmage_star.src="asterisk.gif";};
  if ((wizardclass())){document.form1.warwizardofcormyr_star.src="asterisk.gif";};
  if (race_genasi){document.form1.whirlwindgenasi_star.src="asterisk.gif";};
  if (race_genasi){document.form1.wildfiregenasi_star.src="asterisk.gif";};
  if (class_ranger){document.form1.feralspirit_star.src="asterisk.gif";};
  if (class_ranger){document.form1.packrunner_star.src="asterisk.gif";};
  if (class_ranger){document.form1.wildcatstalker_star.src="asterisk.gif";};

  if ((rangerclass())&(race_eladrin)){document.form1.bladeofcendriane_star.src="asterisk.gif";};
  if (fighterclass()){document.form1.doomguardmarauder_star.src="asterisk.gif";};
  if (rogueclass()){document.form1.gatecrasher_star.src="asterisk.gif";};
  if ((paladinclass())&(alignment<4)){document.form1.knightofcelestia_star.src="asterisk.gif";};
  if (swordmageclass()){document.form1.maleckethjanissary_star.src="asterisk.gif";};
  if ((warlockclass())|(wizardclass())){document.form1.planeshifter_star.src="asterisk.gif";};
  if (warlordclass()){document.form1.shadowcaptain_star.src="asterisk.gif";};
  if (clericclass()){document.form1.soulguide_star.src="asterisk.gif";};

  if (race_human){document.form1.adroitexplorer_star.src="asterisk.gif";}
  if (race_deva){document.form1.ancestralincarnate_star.src="asterisk.gif";}
  if (race_halforc){document.form1.bloodfurysavage_star.src="asterisk.gif";}
  if (race_gnome){document.form1.feybeguiler_star.src="asterisk.gif";}
  if (race_dwarf){document.form1.firstbornofmoradin_star.src="asterisk.gif";}
  if (race_halfling){document.form1.halflingscoundrel_star.src="asterisk.gif";}
  if ((race_shifterlongtooth)|(race_shifterrazorclaw)){document.form1.moonstalker_star.src="asterisk.gif";}
  if (race_dragonborn){document.form1.scionofarkhosia_star.src="asterisk.gif";}
  if (race_eladrin){document.form1.shiereknight_star.src="asterisk.gif";}
  if (race_goliath){document.form1.stoneblessed_star.src="asterisk.gif";}
  if (race_tiefling){document.form1.turathihighborn_star.src="asterisk.gif";}
  if (race_elf){document.form1.twilightguardian_star.src="asterisk.gif";}
  if (avengerclass()){document.form1.hammerofjudgment_star.src="asterisk.gif";}
  if (avengerclass()){document.form1.oathsworn_star.src="asterisk.gif";}
  if (avengerclass()){document.form1.unveiledvisage_star.src="asterisk.gif";}
  if ((avengerclass())&(!multi_rogue_ruthlessefficiency)){document.form1.zealousassassin_star.src="asterisk.gif";}
  if (barbarianclass()){document.form1.bearwarrior_star.src="asterisk.gif";}
  if (barbarianclass()){document.form1.fearbringerthane_star.src="asterisk.gif";}
  if (barbarianclass()){document.form1.frenziedberserker_star.src="asterisk.gif";}
  if (barbarianclass()){document.form1.wildrunner_star.src="asterisk.gif";}
  if ((bardclass())&(multi_any())){document.form1.studentoftheseven_star.src="asterisk.gif";}
  if (bardclass()){document.form1.summerrhymer_star.src="asterisk.gif";}
  if (bardclass()){document.form1.voiceofthunder_star.src="asterisk.gif";}
  if (bardclass()){document.form1.warchanter_star.src="asterisk.gif";}
  if (druidclass()){document.form1.bloodmoonstalker_star.src="asterisk.gif";}
  if (druidclass()){document.form1.guardianofthelivinggate_star.src="asterisk.gif";}
  if (druidclass()){document.form1.keeperofthehiddenflame_star.src="asterisk.gif";}
  if (druidclass()){document.form1.skyhunter_star.src="asterisk.gif";}
  if (invokerclass()){document.form1.angelicaspect_star.src="asterisk.gif";}
  if (invokerclass()){document.form1.blightspeaker_star.src="asterisk.gif";}
  if (invokerclass()){document.form1.flameofhope_star.src="asterisk.gif";}
  if (invokerclass()){document.form1.hammerofvengeance_star.src="asterisk.gif";}
  if (shamanclass()){document.form1.discipleoftheworldserpent_star.src="asterisk.gif";}
  if (shamanclass()){document.form1.ghostpanther_star.src="asterisk.gif";}
  if (shamanclass()){document.form1.greatbearshaman_star.src="asterisk.gif";}
  if (shamanclass()){document.form1.spirittempest_star.src="asterisk.gif";}
  if (sorcererclass()){document.form1.arcanewellspring_star.src="asterisk.gif";}
  if (sorcererclass()){document.form1.demonskinadept_star.src="asterisk.gif";}
  if (sorcererclass()){document.form1.dragonsoulheir_star.src="asterisk.gif";}
  if (sorcererclass()){document.form1.wildmage_star.src="asterisk.gif";}
  if (wardenclass()){document.form1.bloodwrathguardian_star.src="asterisk.gif";}
  if (wardenclass()){document.form1.hornedchampion_star.src="asterisk.gif";}
  if (wardenclass()){document.form1.stormsentinel_star.src="asterisk.gif";}
  if (wardenclass()){document.form1.verdantlord_star.src="asterisk.gif";}


  //kurwa
 }

function WrongParagon(){
 ClearParagonButtons();
 NegateParagons();
 ArrowShow();
 }

function assignparagon(i){
  if (ClassesHaveBeenEstablished==true){ShowHowWeChoseClasses(); ArrowShow(); return;}
  if (CharacterTypeHasBeenEstablished==false){ClearClassButtons(); ClearMultiButtons(); ClearParagonButtons(); ClearEpicDestinyButtons(); ArrowShow(); return; }
  if (total_levels<11){WrongParagon();return;}
  NegateParagons();
  NegateEpicDestinies();
  if (i==1){if ((!clericclass())){WrongParagon();return;} paragon_angelicavenger=true;}
  if (i==2){if ((!clericclass())){WrongParagon();return;} paragon_divineoracle=true;}
  if (i==3){if ((!clericclass())){WrongParagon();return;} paragon_radiantservant=true;}
  if (i==4){if ((!clericclass())){WrongParagon();return;} paragon_warpriest=true;}
  if (i==5){if (!fighterclass()){WrongParagon();return;} paragon_ironvanguard=true;}
  if (i==6){if (!fighterclass()){WrongParagon();return;} paragon_kensei=true;}
  if (i==7){if (!fighterclass()){WrongParagon();return;} paragon_pitfighter=true;}
  if (i==8){if (!fighterclass()){WrongParagon();return;} paragon_swordmaster=true;}
  if (i==9){if (!paladinclass()){WrongParagon();return;} paragon_astralweapon=true;}
  if (i==10){if (!paladinclass()){WrongParagon();return;} paragon_championoforder=true;}
  if (i==11){if (!paladinclass()){WrongParagon();return;} paragon_hospitaler=true;}
  if (i==12){if (!paladinclass()){WrongParagon();return;} paragon_justiciar=true;}
  if (i==13){if (!rangerclass()){WrongParagon();return;} paragon_battlefieldarcher=true;}
  if (i==14){if (!rangerclass()){WrongParagon();return;} paragon_beaststalker=true;}
  if (i==15){if (!rangerclass()){WrongParagon();return;} paragon_pathfinder=true;}
  if (i==16){if (!rangerclass()){WrongParagon();return;} paragon_stormwarden=true;}
  if (i==17){if (!rogueclass()){WrongParagon();return;} paragon_catburglar=true;}
  if (i==18){if (!rogueclass()){WrongParagon();return;} paragon_daggermaster=true;}
  if (i==19){if (!rogueclass()){WrongParagon();return;} paragon_masterinfiltrator=true;}
  if (i==20){if (!rogueclass()){WrongParagon();return;} paragon_shadowassassin=true;}
  if (i==21){if (!warlockclass_with_pact()){WrongParagon();return;} paragon_doomsayer=true;}
  if (i==22){if (!warlockclass_with_pact()){WrongParagon();return;} paragon_feytouched=true;}
  if (i==23){if (!warlockclass_with_pact()){WrongParagon();return;} paragon_lifestealer=true;}
  if (i==24){if (!class_warlord){WrongParagon();return;} paragon_battlecaptain=true;}
  if (i==25){if (!class_warlord){WrongParagon();return;} paragon_combatveteran=true;}
  if (i==26){if (!class_warlord){WrongParagon();return;} paragon_knightcommander=true;}
  if (i==27){if (!class_warlord){WrongParagon();return;} paragon_swordmarshal=true;}
  if (i==28){if ((!wizardclass())){WrongParagon();return;} paragon_battlemage=true;}
  if (i==29){if ((!wizardclass())){WrongParagon();return;} paragon_bloodmage=true;}
  if (i==30){if ((!wizardclass())){WrongParagon();return;} paragon_spellstormmage=true;}
  if (i==31){if ((!wizardclass())){WrongParagon();return;} paragon_wizardofthespiraltower=true;}
  if (i==32){if ((document.form1.choose_multi[0].checked)|(document.form1.choose_multi[10].checked)){WrongParagon();return;} paragon_multiclass=true;}
  if (i==33){paragon_other=true;}
  if (i==34){if (!swordmageclass()){WrongParagon();return;} paragon_anarchofshyr=true;}
  if (i==35){if (!swordmageclass()){WrongParagon();return;} paragon_coronalguard=true;}
  if (i==36){if (!warlockclass_with_pact()){WrongParagon();return;} paragon_darkwalker=true;}
  if (i==37){if ((!clericclass())&(!paladinclass())){WrongParagon();return;} paragon_doomguide=true;}
  if (i==38){if (!race_drow){WrongParagon();return;} paragon_drowwanderer=true;}
  if (i==39){if ((!race_dwarf)|((!fighterclass())&(!paladinclass()))){WrongParagon();return;} paragon_eartheartdefender=true;}
  if (i==40){if (!race_genasi){WrongParagon();return;} paragon_elementaltempest=true;}
  if (i==41){if (!class_warlock()){WrongParagon();return;} paragon_evermeetwarlock=true;}
   if (i==42){if (!rogueclass()){WrongParagon();return;} paragon_ghostofeventide=true;}
   if (i==43){if ((!clericclass())&(!paladinclass())){WrongParagon();return;} paragon_heartwarder=true;}
   if (i==44){if (!rangerclass()){WrongParagon();return;} paragon_highforestscout=true;}
   if (i==45){if (!rangerclass()){WrongParagon();return;} paragon_impilturandemonslayer=true;}
   if (i==46){if ((!clericclass())&(!paladinclass())){WrongParagon();return;} paragon_morninglord=true;}
   if (i==47){if ((!fighterclass())&(!paladinclass())&(!warlordclass())){WrongParagon();return;} paragon_purpledragonknight=true;}
   if (i==48){if ((!swordmageclass())&(!wizardclass())&(!warlockclass())&(!clericclass())&(!paladinclass())){WrongParagon();return;} paragon_silverstar=true;}
   if (i==49){if ((!wizardclass())){WrongParagon();return;} paragon_simbarchofaglarond=true;}
   if (i==50){if ((!wizardclass())){WrongParagon();return;} paragon_spellguardwizard=true;}
   if (i==51){if ((!multi_spellscarred)){WrongParagon();return;} paragon_spellscarredsavant=true;}
   if (i==52){if ((!race_dragonborn)&(!race_human)&(!race_orc)&(!race_genasi)){WrongParagon();return;} paragon_steelskyliberator=true;}
   if (i==53){if ((!fighterclass())&(!rangerclass())&(!warlordclass())&(!rogueclass())){WrongParagon();return;} paragon_swordcoastcorsair=true;}
   if (i==54){if (!swordmageclass()){WrongParagon();return;} paragon_umbriri=true;}
   if (i==55){if (!swordmageclass()){WrongParagon();return;} paragon_wanderingswordmage=true;}
   if (i==56){if ((!wizardclass())){WrongParagon();return;} paragon_warwizardofcormyr=true;}
   if (i==57){if ((!race_genasi)){WrongParagon();return;} paragon_whirlwindgenasi=true;}
   if (i==58){if ((!race_genasi)){WrongParagon();return;} paragon_wildfiregenasi=true;}
   if (i==59){if ((!class_ranger)){WrongParagon();return;} paragon_feralspirit=true;}
   if (i==60){if ((!class_ranger)){WrongParagon();return;} paragon_packrunner=true;}
   if (i==61){if ((!class_ranger)){WrongParagon();return;} paragon_wildcatstalker=true;}

   if (i==62){if ((!rangerclass())|(!race_eladrin)){WrongParagon();return;} paragon_bladeofcendriane=true;}
   if (i==63){if (!fighterclass()){WrongParagon();return;} paragon_doomguardmarauder=true;}
   if (i==64){if (!rogueclass()){WrongParagon();return;} paragon_gatecrasher=true;}
   if (i==65){if ((!paladinclass())|(alignment>3)){WrongParagon();return;} paragon_knightofcelestia=true;}
   if (i==66){if (!swordmageclass()){WrongParagon();return;} paragon_maleckethjanissary=true;}
   if (i==67){if ((!warlockclass())&(!wizardclass())){WrongParagon();return;} paragon_planeshifter=true;}
   if (i==68){if (!warlordclass()){WrongParagon();return;} paragon_shadowcaptain=true;}
   if (i==69){if (!clericclass()){WrongParagon();return;} paragon_soulguide=true;}

  if (i==70){if (!race_human){WrongParagon();return;} paragon_adroitexplorer=true;}
  if (i==71){if (!race_deva){WrongParagon();return;} paragon_ancestralincarnate=true;}
  if (i==72){if (!race_halforc){WrongParagon();return;} paragon_bloodfurysavage=true;}
  if (i==73){if (!race_gnome){WrongParagon();return;} paragon_feybeguiler=true;}
  if (i==74){if (!race_dwarf){WrongParagon();return;} paragon_firstbornofmoradin=true;}
  if (i==75){if (!race_halfling){WrongParagon();return;} paragon_halflingscoundrel=true;}
  if (i==76){if ((!race_shifterlongtooth)&(race_shifterrazorclaw)){WrongParagon();return;} paragon_moonstalker=true;}
  if (i==77){if (!race_dragonborn){WrongParagon();return;} paragon_scionofarkhosia=true;}
  if (i==78){if (!race_eladrin){WrongParagon();return;} paragon_shiereknight=true;}
  if (i==79){if (!race_goliath){WrongParagon();return;} paragon_stoneblessed=true;}
  if (i==80){if (!race_tiefling){WrongParagon();return;} paragon_turathihighborn=true;}
  if (i==81){if (!race_elf){WrongParagon();return;} paragon_twilightguardian=true;}
  if (i==82){if (!avengerclass()){WrongParagon();return;} paragon_hammerofjudgment=true;}
  if (i==83){if (!avengerclass()){WrongParagon();return;} paragon_oathsworn=true;}
  if (i==84){if (!avengerclass()){WrongParagon();return;} paragon_unveiledvisage=true;}
  if (i==85){if (!avengerclass()){WrongParagon();return;} paragon_zealousassassin=true;}
  if (i==86){if (!barbarianclass()){WrongParagon();return;} paragon_bearwarrior=true;}
  if (i==87){if (!barbarianclass()){WrongParagon();return;} paragon_fearbringerthane=true;}
  if (i==88){if (!barbarianclass()){WrongParagon();return;} paragon_frenziedberserker=true;}
  if (i==89){if (!barbarianclass()){WrongParagon();return;} paragon_wildrunner=true;}
  if (i==90){if ((!bardclass())|(!multi_any())){WrongParagon();return;} paragon_studentoftheseven=true;}
  if (i==91){if (!bardclass()){WrongParagon();return;} paragon_summerrhymer=true;}
  if (i==92){if (!bardclass()){WrongParagon();return;} paragon_voiceofthunder=true;}
  if (i==93){if (!bardclass()){WrongParagon();return;} paragon_warchanter=true;}
  if (i==94){if (!druidclass()){WrongParagon();return;} paragon_bloodmoonstalker=true;}
  if (i==95){if (!druidclass()){WrongParagon();return;} paragon_guardianofthelivinggate=true;}
  if (i==96){if (!druidclass()){WrongParagon();return;} paragon_keeperofthehiddenflame=true;}
  if (i==97){if (!druidclass()){WrongParagon();return;} paragon_skyhunter=true;}
  if (i==98){if (!invokerclass()){WrongParagon();return;} paragon_angelicaspect=true;}
  if (i==99){if (!invokerclass()){WrongParagon();return;} paragon_blightspeaker=true;}
  if (i==100){if (!invokerclass()){WrongParagon();return;} paragon_flameofhope=true;}
  if (i==101){if (!invokerclass()){WrongParagon();return;} paragon_hammerofvengeance=true;}
  if (i==102){if (!shamanclass()){WrongParagon();return;} paragon_discipleoftheworldserpent=true;}
  if (i==103){if (!shamanclass()){WrongParagon();return;} paragon_ghostpanther=true;}
  if (i==104){if (!shamanclass()){WrongParagon();return;} paragon_greatbearshaman=true;}
  if (i==105){if (!shamanclass()){WrongParagon();return;} paragon_spirittempest=true;}
  if (i==106){if (!sorcererclass()){WrongParagon();return;} paragon_arcanewellspring=true;}
  if (i==107){if (!sorcererclass()){WrongParagon();return;} paragon_demonskinadept=true;}
  if (i==108){if (!sorcererclass()){WrongParagon();return;} paragon_dragonsoulheir=true;}
  if (i==109){if (!sorcererclass()){WrongParagon();return;} paragon_wildmage=true;}
  if (i==110){if (!wardenclass()){WrongParagon();return;} paragon_bloodwrathguardian=true;}
  if (i==111){if (!wardenclass()){WrongParagon();return;} paragon_hornedchampion=true;}
  if (i==112){if (!wardenclass()){WrongParagon();return;} paragon_stormsentinel=true;}
  if (i==113){if (!wardenclass()){WrongParagon();return;} paragon_verdantlord=true;}
           


  // kurwa
  ArrowShow();
}




function MakeArcaneInitiateList(){
// alert("Making Arcane Initiate List");
 if (multi_wizard_arcaneinitiate==false)
  {
   document.form1.arcane_initiate_list.length=0;
   document.form1.arcane_initiate_list.options[0]=new Option("No");
   return;
  }
 if (multi_wizard_arcaneinitiate==true)
  {
   document.form1.arcane_initiate_list.length=8;
   document.form1.arcane_initiate_list.options[0]=new Option("Cloud of Daggers");
   document.form1.arcane_initiate_list.options[1]=new Option("Magic Missile");
   document.form1.arcane_initiate_list.options[2]=new Option("Ray of Frost");
   document.form1.arcane_initiate_list.options[3]=new Option("Scorching Blast");
   document.form1.arcane_initiate_list.options[4]=new Option("Thunderwave");
   document.form1.arcane_initiate_list.options[5]=new Option("Illusory Ambush [AP]");
   document.form1.arcane_initiate_list.options[6]=new Option("Phantom Bolt [AP]");
   document.form1.arcane_initiate_list.options[7]=new Option("Storm Pillar [AP]");
   return;
  }
 }

function MakeSoulOfSorceryList(){
// alert("Making Soul of Sorcery List");
 if (multi_sorcerer_soulofsorcery==false)
  {
   document.form1.soul_of_sorcery_list.length=0;
   document.form1.soul_of_sorcery_list.options[0]=new Option("No");
   return;
  }
 if (multi_sorcerer_soulofsorcery==true)
  {
   document.form1.soul_of_sorcery_list.length=10;
   document.form1.soul_of_sorcery_list.options[0]=new Option("Resist acid");
   document.form1.soul_of_sorcery_list.options[1]=new Option("Resist cold");
   document.form1.soul_of_sorcery_list.options[2]=new Option("Resist fire");
   document.form1.soul_of_sorcery_list.options[3]=new Option("Resist force");
   document.form1.soul_of_sorcery_list.options[4]=new Option("Resist lightning");
   document.form1.soul_of_sorcery_list.options[5]=new Option("Resist necrotic");
   document.form1.soul_of_sorcery_list.options[6]=new Option("Resist poison");
   document.form1.soul_of_sorcery_list.options[7]=new Option("Resist psychic");
   document.form1.soul_of_sorcery_list.options[8]=new Option("Resist radiant");
   document.form1.soul_of_sorcery_list.options[9]=new Option("Resist thunder");
   return;
  }
 }

function Versatile(){
 if (small){return "must use two-handed"; }
 return "versatile"; 
 }

function NotFromForgottenRealms(){
  document.form1.fr_background_list.selectedIndex=0; 
   frb_none=true; 
  frb_aglarond=false; 
  frb_akanul=false;
  frb_amn=false;
  frb_baldursgate=false;
  frb_calimshan=false;
  frb_chessenta=false;
  frb_cormyr=false; 
  frb_dalelands=false; 
  frb_dragoncoast=false;
  frb_durpar=false;
  frb_eastrift=false;
  frb_elfharrow=false;
  frb_grayvale=false;
  frb_greatdale=false;
  frb_highimaskar=false;
  frb_impiltur=false; 
  frb_luruar=false;
  frb_luskan=false;
  frb_moonshaeisles=false;
  frb_mythdrannor=false;
  frb_narfell=false;
  frb_nelantherisles=false;
  frb_netheril=false;
  frb_thay=false;
  frb_tymanther=false;
  frb_vilhonwilds=false;
  frb_waterdeep=false; 
  frb_wheloon=false; 
 }


function BestFighterWeapons(){
 if (!class_fighter){return; }
 if ((constitution>=dexterity)&(constitution>=wisdom))
  {document.form1.sixth_comment_box.value+="  With your high constitution, think about loading up on axes, maces, picks, and/or staves."}
 if ((dexterity>=constitution)&(dexterity>=wisdom))
  {document.form1.sixth_comment_box.value+="  With your high dexterity, think about loading up on flails, blades, and/or spears."}
 if ((wisdom>=constitution)&(wisdom>=dexterity))
  {document.form1.sixth_comment_box.value+="  With your high wisdom, think about loading up on polearms."}

 }

function StandardAdventuringKit(){
 document.form1.backpack.checked=true; 
 document.form1.bedroll.checked=true; 
 document.form1.flintandsteel.checked=true; 
 document.form1.beltpouch.selectedIndex=1; 
 
 document.form1.sunrods.selectedIndex=2; 
 document.form1.rations.selectedIndex=10; 
 document.form1.ropehempen.selectedIndex=1; 
 document.form1.waterskin.selectedIndex=1; 
 if (class_swordmage){ document.form1.sixth_comment_box.value+="  Swordmages almost always carry a blade they can use one-handed, without a shield."}
 document.form1.sixth_comment_box.value+="  You have been given a standard adventuring kit."
 }


function SpecialtyNeeds(){
 if (((class_wizard)|(feat_studentofswordmagic))&(document.form1.spellbook.selectedIndex==0))
  {document.form1.spellbook.selectedIndex=1}
 if (class_swordmage)
  {
   if (!small){document.form1.longsword_box.checked=true; }
   if (small){document.form1.shortsword_box.checked=true; }
  }
 if ((( (class_cleric) | (class_bard) | (class_druid) | (class_invoker) | (feat_ritualcaster))&(!class_wizard))&(!feat_alchemistswap))
  {
   if (document.form1.ritualbook.selectedIndex==0){document.form1.ritualbook.selectedIndex=1}
   document.form1.spellcomponentpouch.checked=true; 
  }
 if ((orbofimposition) | (orbofdeception) | (feat_secondimplementorb))
  {document.form1.orb_box.checked=true; }
 if ((wandofaccuracy) | (feat_secondimplementwand))
  {document.form1.wand_box.checked=true; }
 if ((class_rogue) | (trained_thievery) | (multi_trained_thievery) | (eladrin_thievery) | (feat_skillfocusthievery) | (feat_skilltrainingthievery)) 
   {
    document.form1.thievestools.checked=true; 
    document.form1.sixth_comment_box.value+="  You'll want your thieving tools for locks and traps."; 
   }
 if ((trained_athletics) | (multi_trained_athletics) | (eladrin_athletics) | (feat_skillfocusathletics) | (feat_skilltrainingathletics)) 
   {
     if (document.form1.pitons.selectedIndex==0)
        {document.form1.pitons.selectedIndex=1}; 
     document.form1.hammer.checked=true; 
     document.form1.grapplinghook.checked=true; 
    document.form1.sixth_comment_box.value+="  As an athlete, you have a climber's kit."; 
   }
 }



function OtherClassChecks(){
 if (!class_other){return; }
// alert("Entering OtherClassChecks()"); 
 document.form1.other01atwill_1_box.checked=true; 
 document.form1.other01atwill_2_box.checked=true; 
 if (race_human){document.form1.other01atwill_3_box.checked=true; }
 if (total_levels<13){document.form1.other01encounter_box.checked=true; }
 if (total_levels<15){document.form1.other01daily_box.checked=true; }
 if ((total_levels>=3)&(total_levels<17)){document.form1.other03encounter_box.checked=true; }
 if ((total_levels>=5)&(total_levels<19)){document.form1.other05daily_box.checked=true; }
 if ((total_levels>=7)&(total_levels<23)){document.form1.other07encounter_box.checked=true; }
 if ((total_levels>=9)&(total_levels<25)){document.form1.other09daily_box.checked=true; }
 if ((total_levels>=13)&(total_levels<27)){document.form1.other13encounter_box.checked=true; }
 if (total_levels>=15){document.form1.other15daily_box.checked=true; }
 if (total_levels>=17){document.form1.other17encounter_box.checked=true; }
 if (total_levels>=19){document.form1.other19daily_box.checked=true; }
 if (total_levels>=23){document.form1.other23encounter_box.checked=true; }
 if (total_levels>=25){document.form1.other25daily_box.checked=true; }
 if (total_levels>=27){document.form1.other27encounter_box.checked=true; }
 if (total_levels>=29){document.form1.other29daily_box.checked=true; }
// alert("Exiting OtherClassChecks()"); 
 }

function RecallPastOtherRace(){
 if (!race_other){return; }
 document.form1.str_other_race_stat_box.checked=past_raise_str_other_race_stat; 
 document.form1.dex_other_race_stat_box.checked=past_raise_dex_other_race_stat; 
 document.form1.con_other_race_stat_box.checked=past_raise_con_other_race_stat; 
 document.form1.int_other_race_stat_box.checked=past_raise_int_other_race_stat; 
 document.form1.wis_other_race_stat_box.checked=past_raise_wis_other_race_stat; 
 document.form1.chr_other_race_stat_box.checked=past_raise_chr_other_race_stat; 


 document.form1.acrobatics_other_race_box.checked=past_otherrace_acrobatics; 
 document.form1.arcana_other_race_box.checked=past_otherrace_arcana; 
 document.form1.athletics_other_race_box.checked=past_otherrace_athletics; 
 document.form1.bluff_other_race_box.checked=past_otherrace_bluff; 
 document.form1.diplomacy_other_race_box.checked=past_otherrace_diplomacy; 
 document.form1.dungeoneering_other_race_box.checked=past_otherrace_dungeoneering; 
 document.form1.endurance_other_race_box.checked=past_otherrace_endurance; 
 document.form1.heal_other_race_box.checked=past_otherrace_heal; 
 document.form1.history_other_race_box.checked=past_otherrace_history; 
 document.form1.insight_other_race_box.checked=past_otherrace_insight; 
 document.form1.intimidate_other_race_box.checked=past_otherrace_intimidate; 
 document.form1.nature_other_race_box.checked=past_otherrace_nature; 
 document.form1.perception_other_race_box.checked=past_otherrace_perception; 
 document.form1.religion_other_race_box.checked=past_otherrace_religion; 
 document.form1.stealth_other_race_box.checked=past_otherrace_stealth; 
 document.form1.streetwise_other_race_box.checked=past_otherrace_streetwise; 
 document.form1.thievery_other_race_box.checked=past_otherrace_thievery; 



 if (past_otherrace_normalvision){document.form1.otherracesight[0].checked=true; }
 if (past_otherrace_lowlight){document.form1.otherracesight[1].checked=true; }
 if (past_otherrace_darkvision){document.form1.otherracesight[2].checked=true; }
//alert("RECALLING past_otherrace_small="+past_otherrace_small+" past_otherrace_medium="+past_otherrace_medium); 
 if (past_otherrace_small){document.form1.otherracesize[0].checked=true; }
 if (past_otherrace_medium){document.form1.otherracesize[1].checked=true; }

 }

function RecallPastOtherClass(){
 if (!class_other){return; }
 if (past_otherclass_hitpoints==10){document.form1.otherclasshitpoints[0].checked=true; }
 if (past_otherclass_hitpoints==12){document.form1.otherclasshitpoints[1].checked=true; }
 if (past_otherclass_hitpoints==15){document.form1.otherclasshitpoints[2].checked=true; }
 if (past_otherclass_surges>0)
  {
   document.form1.otherclasssurges[past_otherclass_surges-6].checked=true; 
   document.form1.otherclassdefense[past_otherclass_bonus_to_defense].checked=true; 
  }
 }


function RecordPastOtherRace(){  
 if (!race_other){return; }
   past_raise_str_other_race_stat=raise_str_other_race_stat; 
   past_raise_dex_other_race_stat=raise_dex_other_race_stat; 
   past_raise_con_other_race_stat=raise_con_other_race_stat; 
   past_raise_chr_other_race_stat=raise_chr_other_race_stat; 
   past_raise_int_other_race_stat=raise_int_other_race_stat; 
   past_raise_wis_other_race_stat=raise_wis_other_race_stat; 

   past_otherrace_acrobatics=otherrace_acrobatics; 
   past_otherrace_arcana=otherrace_arcana; 
   past_otherrace_athletics=otherrace_athletics; 
   past_otherrace_bluff=otherrace_bluff; 
   past_otherrace_diplomacy=otherrace_diplomacy; 
   past_otherrace_dungeoneering=otherrace_dungeoneering; 
   past_otherrace_endurance=otherrace_endurance; 
   past_otherrace_heal=otherrace_heal; 
   past_otherrace_history=otherrace_history; 
   past_otherrace_insight=otherrace_insight; 
   past_otherrace_intimidate=otherrace_intimidate; 
   past_otherrace_nature=otherrace_nature; 
   past_otherrace_perception=otherrace_perception; 
   past_otherrace_religion=otherrace_religion; 
   past_otherrace_stealth=otherrace_stealth; 
   past_otherrace_streetwise=otherrace_streetwise; 
   past_otherrace_thievery=otherrace_thievery; 

   past_otherrace_normalvision=otherrace_normalvision; 
   past_otherrace_lowlight=otherrace_lowlight; 
   past_otherrace_darkvision=otherrace_darkvision; 
   past_otherrace_small=otherrace_small; 
   past_otherrace_medium=otherrace_medium; 
//alert("RECORDING past_otherrace_small="+past_otherrace_small+" past_otherrace_medium="+past_otherrace_medium); 


 }

function RecordPastOtherClass(){
 if (!class_other){return; }
   past_otherclass_bonus_to_defense=otherclass_bonus_to_defense; 
   past_otherclass_hitpoints=otherclass_hitpoints; 
   past_otherclass_surges=otherclass_surges; 
 }


function sup_v(){
 if (small){return "";}
 explain_sup_v=true; 
 return "<font size=\"-1\"><sup>v</sup></font size>"; 
 }

function sup_w(){
 explain_sup_w=true; 
 return "<font size=\"-1\"><sup>w</sup></font size>"; 
 }

function sup_i(){
 explain_sup_i=true; 
 return "<font size=\"-1\"><sup>i</sup></font size>"; 
 }

function sup_bf(){
 explain_sup_bf=true; 
 return "<font size=\"-1\"><sup> bf </sup></font size>"; 
 }

function PreFeatsAcrobatics(){
 if ((trained_acrobatics) | (multi_trained_acrobatics)| (eladrin_acrobatics)){return true;}
 return false;
 }

function PreFeatsArcana(){
 if ((trained_arcana) | (multi_trained_arcana)| (eladrin_arcana)){return true;}
 return false;
 }

function PreFeatsAthletics(){
 if ((trained_athletics) | (multi_trained_athletics)| (eladrin_athletics)){return true;}
 return false;
 }

function PreFeatsBluff(){
 if ((trained_bluff) | (multi_trained_bluff)| (eladrin_bluff)){return true;}
 return false;
 }

function PreFeatsDiplomacy(){
 if ((trained_diplomacy) | (multi_trained_diplomacy)| (eladrin_diplomacy)){return true;}
 return false;
 }

function PreFeatsDungeoneering(){
 if ((trained_dungeoneering) | (multi_trained_dungeoneering)| (eladrin_dungeoneering)){return true;}
 return false;
 }

function PreFeatsEndurance(){
 if ((trained_endurance) | (multi_trained_endurance)| (eladrin_endurance)){return true;}
 return false;
 }

function PreFeatsHeal(){
 if ((trained_heal) | (multi_trained_heal)| (eladrin_heal)){return true;}
 return false;
 }

function PreFeatsHistory(){
 if ((trained_history) | (multi_trained_history)| (eladrin_history)){return true;}
 return false;
 }

function PreFeatsInsight(){
 if ((trained_insight) | (multi_trained_insight)| (eladrin_insight)){return true;}
 return false;
 }

function PreFeatsIntimidate(){
 if ((trained_intimidate) | (multi_trained_intimidate)| (eladrin_intimidate)){return true;}
 return false;
 }

function PreFeatsNature(){
 if ((trained_nature) | (multi_trained_nature)| (eladrin_nature)){return true;}
 return false;
 }

function PreFeatsPerception(){
 if ((trained_perception) | (multi_trained_perception)| (eladrin_perception)){return true;}
 return false;
 }

function PreFeatsReligion(){
 if ((trained_religion) | (multi_trained_religion)| (eladrin_religion)){return true;}
 return false;
 }

function PreFeatsStealth(){
 if ((trained_stealth) | (multi_trained_stealth)| (eladrin_stealth)){return true;}
 return false;
 }

function PreFeatsStreetwise(){
 if ((trained_streetwise) | (multi_trained_streetwise)| (eladrin_streetwise)){return true;}
 return false;
 }

function PreFeatsThievery(){
 if ((trained_thievery) | (multi_trained_thievery)| (eladrin_thievery)){return true;}
 return false;
 }

function TrainedInAcrobatics(){
  if (PreFeatsAcrobatics()){return true;}
  if (feat_skilltrainingacrobatics){return true; }
  if (document.form1.skilltrainingacrobatics_box.checked){return true;}
  return false;
}


function TrainedInArcana(){
  if (PreFeatsArcana()){return true;}
  if (feat_skilltrainingarcana){return true; }
  if (document.form1.skilltrainingarcana_box.checked){return true;}
  return false; 
}

function TrainedInAthletics(){
  if (PreFeatsAthletics()){return true;}
  if (feat_skilltrainingathletics){return true; }
  if (document.form1.skilltrainingathletics_box.checked){return true;}
  return false; 
}


function TrainedInBluff(){
  if (PreFeatsBluff()){return true;}
  if (feat_skilltrainingbluff){return true; }
  if (document.form1.skilltrainingbluff_box.checked){return true;}
  return false; 
}


function TrainedInEndurance(){
  if (PreFeatsEndurance()){return true;}
  if (feat_skilltrainingendurance){return true; }
  if (document.form1.skilltrainingendurance_box.checked){return true;}
  return false; 
}


function TrainedInHeal(){
  if (PreFeatsHeal()){return true;}
  if (feat_skilltrainingheal){return true; }
  if (document.form1.skilltrainingheal_box.checked){return true;}
  return false; 
}

function TrainedInIntimidate(){
  if (PreFeatsIntimidate()){return true;}
  if (feat_skilltrainingintimidate){return true; }
  if (document.form1.skilltrainingintimidate_box.checked){return true;}
  return false; 
}


function TrainedInNature(){
  if (PreFeatsNature()){return true;}
  if (feat_skilltrainingnature){return true; }
  if (document.form1.skilltrainingnature_box.checked){return true;}
  return false; 
}

function TrainedInPerception(){
  if (PreFeatsPerception()){return true;}
  if (feat_skilltrainingperception){return true; }
  if (document.form1.skilltrainingperception_box.checked){return true;}
  return false;
}





function TrainedInReligion(){
  if (PreFeatsReligion()){return true;}
  if (feat_skilltrainingreligion){return true; }
  if (document.form1.skilltrainingreligion_box.checked){return true;}
  return false; 
}

function TrainedInStealth(){
  if (PreFeatsStealth()){return true;}
  if (feat_skilltrainingstealth){return true; }
  if (document.form1.skilltrainingstealth_box.checked){return true;}
  return false; 
}

function TrainedInThievery(){
  if (PreFeatsThievery()){return true;}
  if (feat_skilltrainingthievery){return true; }
  if (document.form1.skilltrainingthievery_box.checked){return true;}
  return false; 
}

function ReviewAcrobaticsFeats(){
    consider_escapeartist(); 
    consider_underfoot(); 
    consider_flankingmaneuver(); 
    consider_unfetteredstride(); 
    consider_skillfocusacrobatics(); 
 }

function ReviewArcanaFeats(){
    consider_skillfocusarcana(); 
    consider_ritualcaster(); 
 }

function ReviewAthleticsFeats(){
    consider_longjumper(); 
    consider_sureclimber; 
    consider_skillfocusathletics(); 
 }

function ReviewBluffFeats(){
    consider_skillfocusbluff(); 
 }

function ReviewDiplomacyFeats(){
    consider_skillfocusdiplomacy(); 
 }

function ReviewDungeoneeringFeats(){
    consider_skillfocusdungeoneering(); 
 }

function ReviewEnduranceFeats(){
    consider_skillfocusendurance(); 
 }

function ReviewHealFeats(){
    consider_skillfocusheal(); 
 }

function ReviewHistoryFeats(){
    consider_skillfocushistory(); 
 }

function ReviewInsightFeats(){
    consider_skillfocusinsight(); 
 }

function ReviewIntimidateFeats(){
    consider_skillfocusintimidate();
    consider_grouprattling();
 }

function ReviewNatureFeats(){
    consider_skillfocusnature();
    consider_experttracker();
 }

function ReviewPerceptionFeats(){
    consider_blindfight(); 
    consider_skillfocusperception(); 
 }

function ReviewReligionFeats(){
    consider_skillfocusreligion(); 
    consider_ritualcaster(); 
 }

function ReviewStealthFeats(){
    consider_secretstride(); 
    consider_skillfocusstealth();
    consider_camouflage();
 }

function ReviewStreetwiseFeats(){
    consider_skillfocusstreetwise(); 
 }

function ReviewThieveryFeats(){
  consider_skillfocusthievery(); 
 }


function ClericAtWill(){if ((multi_cleric())&(paragon_multiclass)){return true; } return class_cleric; }
function ClericDaily(){if (class_cleric){return true; } if ((multi_cleric())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function ClericEncounter(){if (class_cleric){return true; } if ((multi_cleric())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function ClericUtility(){if (class_cleric){return true; } if ((multi_cleric())&(feat_multiclasspowerswaputility)){return true; }return false; }
function FighterAtWill(){if ((multi_fighter())&(paragon_multiclass)){return true; } return class_fighter; }
function FighterDaily(){if (class_fighter){return true; } if ((multi_fighter())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function FighterEncounter(){if (class_fighter){return true; } if ((multi_fighter())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function FighterUtility(){if (class_fighter){return true; } if ((multi_fighter())&(feat_multiclasspowerswaputility)){return true; }return false; }
function PaladinAtWill(){if ((multi_paladin())&(paragon_multiclass)){return true; } return class_paladin; }
function PaladinDaily(){if (class_paladin){return true; } if ((multi_paladin())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function PaladinEncounter(){if (class_paladin){return true; } if ((multi_paladin())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function PaladinUtility(){if (class_paladin){return true; } if ((multi_paladin())&(feat_multiclasspowerswaputility)){return true; }return false; }
function RangerAtWill(){if ((multi_ranger())&(paragon_multiclass)){return true; } return class_ranger; }
function RangerDaily(){if (class_ranger){return true; } if ((multi_ranger())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function RangerEncounter(){if (class_ranger){return true; } if ((multi_ranger())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function RangerUtility(){if (class_ranger){return true; } if ((multi_ranger())&(feat_multiclasspowerswaputility)){return true; }return false; }
function RogueAtWill(){if ((multi_rogue())&(paragon_multiclass)){return true; } return class_rogue; }
function RogueDaily(){if (class_rogue){return true; } if ((multi_rogue())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function RogueEncounter(){if (class_rogue){return true; } if ((multi_rogue())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function RogueUtility(){if (class_rogue){return true; } if ((multi_rogue())&(feat_multiclasspowerswaputility)){return true; }return false; }
function WarlockAtWill(){if ((multi_warlock())&(paragon_multiclass)){return true; } return class_warlock; }
function WarlockDaily(){if (class_warlock){return true; } if ((multi_warlock())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function WarlockEncounter(){if (class_warlock){return true; } if ((multi_warlock())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function WarlockUtility(){if (class_warlock){return true; } if ((multi_warlock())&(feat_multiclasspowerswaputility)){return true; }return false; }
function WarlordAtWill(){if ((multi_warlord())&(paragon_multiclass)){return true; } return class_warlord; }
function WarlordDaily(){if (class_warlord){return true; } if ((multi_warlord())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function WarlordEncounter(){if (class_warlord){return true; } if ((multi_warlord())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function WarlordUtility(){if (class_warlord){return true; } if ((multi_warlord())&(feat_multiclasspowerswaputility)){return true; }return false; }
function WizardAtWill(){if ((multi_wizard())&(paragon_multiclass)){return true; } return class_wizard; }
function WizardDaily(){if (class_wizard){return true; } if ((multi_wizard())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function WizardEncounter(){if (class_wizard){return true; } if ((multi_wizard())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function WizardUtility(){if (class_wizard){return true; } if ((multi_wizard())&(feat_multiclasspowerswaputility)){return true; }return false; }
function SwordmageAtWill(){if ((multi_swordmage())&(paragon_multiclass)){return true; } return class_swordmage; }
function SwordmageDaily(){if (class_swordmage){return true; } if ((multi_swordmage())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function SwordmageEncounter(){if (class_swordmage){return true; } if ((multi_swordmage())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function SwordmageUtility(){if (class_swordmage){return true; } if ((multi_swordmage())&(feat_multiclasspowerswaputility)){return true; }return false; }
function AvengerAtWill(){if ((multi_avenger())&(paragon_multiclass)){return true; } return class_avenger; }
function AvengerDaily(){if (class_avenger){return true; } if ((multi_avenger())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function AvengerEncounter(){if (class_avenger){return true; } if ((multi_avenger())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function AvengerUtility(){if (class_avenger){return true; } if ((multi_avenger())&(feat_multiclasspowerswaputility)){return true; }return false; }
function BarbarianAtWill(){if ((multi_barbarian())&(paragon_multiclass)){return true; } return class_barbarian; }
function BarbarianDaily(){if (class_barbarian){return true; } if ((multi_barbarian())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function BarbarianEncounter(){if (class_barbarian){return true; } if ((multi_barbarian())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function BarbarianUtility(){if (class_barbarian){return true; } if ((multi_barbarian())&(feat_multiclasspowerswaputility)){return true; }return false; }
function BardAtWill(){if ((multi_bard())&(paragon_multiclass)){return true; } return class_bard; }
function BardDaily(){if (class_bard){return true; } if ((multi_bard())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function BardEncounter(){if (class_bard){return true; } if ((multi_bard())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function BardUtility(){if (class_bard){return true; } if ((multi_bard())&(feat_multiclasspowerswaputility)){return true; }return false; }
function DruidAtWill(){if ((multi_druid())&(paragon_multiclass)){return true; } return class_druid; }
function DruidDaily(){if (class_druid){return true; } if ((multi_druid())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function DruidEncounter(){if (class_druid){return true; } if ((multi_druid())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function DruidUtility(){if (class_druid){return true; } if ((multi_druid())&(feat_multiclasspowerswaputility)){return true; }return false; }
function InvokerAtWill(){if ((multi_invoker())&(paragon_multiclass)){return true; } return class_invoker; }
function InvokerDaily(){if (class_invoker){return true; } if ((multi_invoker())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function InvokerEncounter(){if (class_invoker){return true; } if ((multi_invoker())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function InvokerUtility(){if (class_invoker){return true; } if ((multi_invoker())&(feat_multiclasspowerswaputility)){return true; }return false; }
function SorcererAtWill(){if ((multi_sorcerer())&(paragon_multiclass)){return true; } return class_sorcerer; }
function SorcererDaily(){if (class_sorcerer){return true; } if ((multi_sorcerer())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function SorcererEncounter(){if (class_sorcerer){return true; } if ((multi_sorcerer())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function SorcererUtility(){if (class_sorcerer){return true; } if ((multi_sorcerer())&(feat_multiclasspowerswaputility)){return true; }return false; }
function WardenAtWill(){if ((multi_warden())&(paragon_multiclass)){return true; } return class_warden; }
function WardenDaily(){if (class_warden){return true; } if ((multi_warden())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function WardenEncounter(){if (class_warden){return true; } if ((multi_warden())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function WardenUtility(){if (class_warden){return true; } if ((multi_warden())&(feat_multiclasspowerswaputility)){return true; }return false; }
function ShamanAtWill(){if ((multi_shaman())&(paragon_multiclass)){return true; } return class_shaman; }
function ShamanDaily(){if (class_shaman){return true; } if ((multi_shaman())&(feat_multiclasspowerswapdaily)){return true; }return false; }
function ShamanEncounter(){if (class_shaman){return true; } if ((multi_shaman())&(feat_multiclasspowerswapencounter)){return true; }return false; }
function ShamanUtility(){if (class_shaman){return true; } if ((multi_shaman())&(feat_multiclasspowerswaputility)){return true; }return false; }
function SpellscarredDaily(){ if ((multi_spellscarred)&(feat_multiclasspowerswapdaily)){return true; }  if ((paragon_spellscarredsavant)&(total_levels>=20)){return true;}   return false; }
function SpellscarredEncounter(){ if ((multi_spellscarred)&(feat_multiclasspowerswapencounter)){return true; } if (paragon_spellscarredsavant){return true;} return false; }
function SpellscarredUtility(){ if ((multi_spellscarred)&(feat_multiclasspowerswaputility)){return true; }return false; }


function TurnOffPowerStars(){
document.form1.lanceoffaith_star.src="no_asterisk.gif"; 
document.form1.priestsshield_star.src="no_asterisk.gif"; 
document.form1.righteousbrand_star.src="no_asterisk.gif"; 
document.form1.sacredflame_star.src="no_asterisk.gif"; 
document.form1.cleave_star.src="no_asterisk.gif"; 
document.form1.reapingstrike_star.src="no_asterisk.gif"; 
document.form1.surestrike_star.src="no_asterisk.gif"; 
document.form1.tideofiron_star.src="no_asterisk.gif"; 
document.form1.brashstrike_star.src="no_asterisk.gif"; 
document.form1.crushingsurge_star.src="no_asterisk.gif"; 
document.form1.dualstrike_star.src="no_asterisk.gif"; 
document.form1.footworklure_star.src="no_asterisk.gif"; 
document.form1.bolsteringstrike_star.src="no_asterisk.gif"; 
document.form1.enfeeblingstrike_star.src="no_asterisk.gif"; 
document.form1.holystrike_star.src="no_asterisk.gif"; 
document.form1.valiantstrike_star.src="no_asterisk.gif"; 
document.form1.carefulattack_star.src="no_asterisk.gif"; 
document.form1.hitandrun_star.src="no_asterisk.gif"; 
document.form1.nimblestrike_star.src="no_asterisk.gif"; 
document.form1.twinstrike_star.src="no_asterisk.gif"; 
document.form1.deftstrike_star.src="no_asterisk.gif"; 
document.form1.piercingstrike_star.src="no_asterisk.gif"; 
document.form1.ripostestrike_star.src="no_asterisk.gif"; 
document.form1.slyflourish_star.src="no_asterisk.gif"; 
document.form1.dishearteningstrike_star.src="no_asterisk.gif"; 
document.form1.direradiance_star.src="no_asterisk.gif"; 
document.form1.eldritchblast_star.src="no_asterisk.gif"; 
document.form1.eyebite_star.src="no_asterisk.gif"; 
document.form1.eyesofthevestige_star.src="no_asterisk.gif"; 
document.form1.hellishrebuke_star.src="no_asterisk.gif"; 
document.form1.spitefulglamor_star.src="no_asterisk.gif"; 
document.form1.commandersstrike_star.src="no_asterisk.gif"; 
document.form1.furioussmash_star.src="no_asterisk.gif"; 
document.form1.vipersstrike_star.src="no_asterisk.gif"; 
document.form1.wolfpacktactics_star.src="no_asterisk.gif"; 
document.form1.brashassault_star.src="no_asterisk.gif"; 
document.form1.openingshove_star.src="no_asterisk.gif"; 
document.form1.cloudofdaggers_star.src="no_asterisk.gif"; 
document.form1.magicmissile_star.src="no_asterisk.gif"; 
document.form1.rayoffrost_star.src="no_asterisk.gif"; 
document.form1.scorchingburst_star.src="no_asterisk.gif"; 
document.form1.thunderwave_star.src="no_asterisk.gif";
document.form1.illusoryambush_star.src="no_asterisk.gif";
document.form1.phantombolt_star.src="no_asterisk.gif";
document.form1.stormpillar_star.src="no_asterisk.gif";

document.form1.bondofpursuit_star.src="no_asterisk.gif";
document.form1.bondofretribution_star.src="no_asterisk.gif";
document.form1.overwhelmingstrike_star.src="no_asterisk.gif";
document.form1.radiantvengeance_star.src="no_asterisk.gif";
document.form1.devastatingstrike_star.src="no_asterisk.gif";
document.form1.howlingstrike_star.src="no_asterisk.gif";
document.form1.pressingstrike_star.src="no_asterisk.gif";
document.form1.recuperatingstrike_star.src="no_asterisk.gif";
document.form1.guidingstrike_star.src="no_asterisk.gif";
document.form1.misdirectedmark_star.src="no_asterisk.gif";
document.form1.viciousmockery_star.src="no_asterisk.gif";
document.form1.warsongstrike_star.src="no_asterisk.gif";
document.form1.jinxshot_star.src="no_asterisk.gif";
document.form1.callofthebeast_star.src="no_asterisk.gif";
document.form1.chillwind_star.src="no_asterisk.gif";
document.form1.flameseed_star.src="no_asterisk.gif";
document.form1.graspingclaws_star.src="no_asterisk.gif";
document.form1.pounce_star.src="no_asterisk.gif";
document.form1.savagerend_star.src="no_asterisk.gif";
document.form1.stormspike_star.src="no_asterisk.gif";
document.form1.thornwhip_star.src="no_asterisk.gif";
document.form1.avenginglight_star.src="no_asterisk.gif";
document.form1.divinebolts_star.src="no_asterisk.gif";
document.form1.graspingshards_star.src="no_asterisk.gif";
document.form1.sunstrike_star.src="no_asterisk.gif";
document.form1.vanguardslightning_star.src="no_asterisk.gif";
document.form1.defendingstrike_star.src="no_asterisk.gif";
document.form1.hauntingspirits_star.src="no_asterisk.gif";
document.form1.protectingstrike_star.src="no_asterisk.gif";
document.form1.stalkersstrike_star.src="no_asterisk.gif";
document.form1.watchersstrike_star.src="no_asterisk.gif";
document.form1.wrathofwinter_star.src="no_asterisk.gif";
document.form1.acidorb_star.src="no_asterisk.gif";
document.form1.burningspray_star.src="no_asterisk.gif";
document.form1.chaosbolt_star.src="no_asterisk.gif";
document.form1.dragonfrost_star.src="no_asterisk.gif";
document.form1.stormwalk_star.src="no_asterisk.gif";
document.form1.blazingstarfall_star.src="no_asterisk.gif";
document.form1.lightningstrike_star.src="no_asterisk.gif";
document.form1.earthshieldstrike_star.src="no_asterisk.gif";
document.form1.strengthofstone_star.src="no_asterisk.gif";
document.form1.thornstrike_star.src="no_asterisk.gif";
document.form1.weightofearth_star.src="no_asterisk.gif";



document.form1.boomingblade_star.src="no_asterisk.gif"; 
document.form1.greenflameblade_star.src="no_asterisk.gif"; 
document.form1.lightninglure_star.src="no_asterisk.gif"; 
document.form1.swordburst_star.src="no_asterisk.gif"; 
document.form1.luringstrike_star.src="no_asterisk.gif"; 
document.form1.causefear_star.src="no_asterisk.gif"; 
document.form1.divineglow_star.src="no_asterisk.gif"; 
document.form1.healingstrike_star.src="no_asterisk.gif"; 
document.form1.wrathfulthunder_star.src="no_asterisk.gif"; 
document.form1.coveringattack_star.src="no_asterisk.gif"; 
document.form1.passingattack_star.src="no_asterisk.gif"; 
document.form1.spinningsweep_star.src="no_asterisk.gif"; 
document.form1.steelserpentstrike_star.src="no_asterisk.gif"; 
document.form1.fearsomesmite_star.src="no_asterisk.gif"; 
document.form1.piercingsmite_star.src="no_asterisk.gif"; 
document.form1.radiantsmite_star.src="no_asterisk.gif"; 
document.form1.shieldingsmite_star.src="no_asterisk.gif"; 
document.form1.direwolverinestrike_star.src="no_asterisk.gif"; 
document.form1.evasivestrike_star.src="no_asterisk.gif"; 
document.form1.foxscunning_star.src="no_asterisk.gif"; 
document.form1.twofangedstrike_star.src="no_asterisk.gif"; 
document.form1.dazingstrike_star.src="no_asterisk.gif"; 
document.form1.kingscastle_star.src="no_asterisk.gif"; 
document.form1.positioningstrike_star.src="no_asterisk.gif"; 
document.form1.torturousstrike_star.src="no_asterisk.gif"; 
document.form1.diabolicgrasp_star.src="no_asterisk.gif"; 
document.form1.dreadfulword_star.src="no_asterisk.gif"; 
document.form1.vampiricembrace_star.src="no_asterisk.gif"; 
document.form1.witchfire_star.src="no_asterisk.gif"; 
document.form1.guardingattack_star.src="no_asterisk.gif"; 
document.form1.hammerandanvil_star.src="no_asterisk.gif"; 
document.form1.leafonthewind_star.src="no_asterisk.gif"; 
document.form1.warlordsfavor_star.src="no_asterisk.gif"; 
document.form1.burninghands_star.src="no_asterisk.gif"; 
document.form1.chillstrike_star.src="no_asterisk.gif"; 
document.form1.forceorb_star.src="no_asterisk.gif"; 
document.form1.icyterrain_star.src="no_asterisk.gif"; 
document.form1.rayofenfeeblement_star.src="no_asterisk.gif";

document.form1.angelicalacrity_star.src="no_asterisk.gif";
document.form1.avengingecho_star.src="no_asterisk.gif";
document.form1.sharedmadness_star.src="no_asterisk.gif";
document.form1.whirlwindcharge_star.src="no_asterisk.gif";
document.form1.avalanchestrike_star.src="no_asterisk.gif";
document.form1.bloodletting_star.src="no_asterisk.gif";
document.form1.greatcleave_star.src="no_asterisk.gif";
document.form1.vaultthefallen_star.src="no_asterisk.gif";
document.form1.blunder_star.src="no_asterisk.gif";
document.form1.fastfriends_star.src="no_asterisk.gif";
document.form1.inspiringrefrain_star.src="no_asterisk.gif";
document.form1.shoutoftriumph_star.src="no_asterisk.gif";
document.form1.culltheherd_star.src="no_asterisk.gif";
document.form1.dartingbite_star.src="no_asterisk.gif";
document.form1.frostflash_star.src="no_asterisk.gif";
document.form1.twistingvines_star.src="no_asterisk.gif";
document.form1.astralterror_star.src="no_asterisk.gif";
document.form1.bladesofastralfire_star.src="no_asterisk.gif";
document.form1.spearoftheinquisitor_star.src="no_asterisk.gif";
document.form1.thunderofjudgment_star.src="no_asterisk.gif";
document.form1.calltotheancestralwarrior_star.src="no_asterisk.gif";
document.form1.calltotheancientdefender_star.src="no_asterisk.gif";
document.form1.thunderbearswarding_star.src="no_asterisk.gif";
document.form1.twinpanthers_star.src="no_asterisk.gif";
document.form1.bedevilingburst_star.src="no_asterisk.gif";
document.form1.explosivepyre_star.src="no_asterisk.gif";
document.form1.frostbind_star.src="no_asterisk.gif";
document.form1.tempestbreath_star.src="no_asterisk.gif";
document.form1.thunderslam_star.src="no_asterisk.gif";
document.form1.earthspikes_star.src="no_asterisk.gif";
document.form1.hungryearth_star.src="no_asterisk.gif";
document.form1.thunderramassault_star.src="no_asterisk.gif";
document.form1.wildbloodfrenzy_star.src="no_asterisk.gif";


document.form1.chillingblow_star.src="no_asterisk.gif"; 
document.form1.flamecyclone_star.src="no_asterisk.gif"; 
document.form1.avengingflame_star.src="no_asterisk.gif"; 
document.form1.beaconofhope_star.src="no_asterisk.gif"; 
document.form1.cascadeoflight_star.src="no_asterisk.gif"; 
document.form1.guardianoffaith_star.src="no_asterisk.gif"; 
document.form1.brutestrike_star.src="no_asterisk.gif"; 
document.form1.comebackstrike_star.src="no_asterisk.gif"; 
document.form1.villainsmenace_star.src="no_asterisk.gif"; 
document.form1.onpainofdeath_star.src="no_asterisk.gif"; 
document.form1.paladinsjudgment_star.src="no_asterisk.gif"; 
document.form1.radiantdelirium_star.src="no_asterisk.gif"; 
document.form1.huntersbeartrap_star.src="no_asterisk.gif"; 
document.form1.jawsofthewolf_star.src="no_asterisk.gif"; 
document.form1.splitthetree_star.src="no_asterisk.gif"; 
document.form1.suddenstrike_star.src="no_asterisk.gif"; 
document.form1.blindingbarrage_star.src="no_asterisk.gif"; 
document.form1.easytarget_star.src="no_asterisk.gif"; 
document.form1.trickstrike_star.src="no_asterisk.gif"; 
document.form1.armorofagathys_star.src="no_asterisk.gif"; 
document.form1.curseofthedarkdream_star.src="no_asterisk.gif"; 
document.form1.dreadstar_star.src="no_asterisk.gif"; 
document.form1.flamesofphlegethos_star.src="no_asterisk.gif"; 
document.form1.bastionofdefense_star.src="no_asterisk.gif"; 
document.form1.leadtheattack_star.src="no_asterisk.gif"; 
document.form1.pinthefoe_star.src="no_asterisk.gif"; 
document.form1.whiteravenonslaught_star.src="no_asterisk.gif"; 
document.form1.acidarrow_star.src="no_asterisk.gif"; 
document.form1.flamingsphere_star.src="no_asterisk.gif"; 
document.form1.freezingcloud_star.src="no_asterisk.gif"; 
document.form1.sleep_star.src="no_asterisk.gif";


document.form1.aspectofmight_star.src="no_asterisk.gif";
document.form1.oathofthefinaldual_star.src="no_asterisk.gif";
document.form1.renewingstrike_star.src="no_asterisk.gif";
document.form1.templeoflight_star.src="no_asterisk.gif";
document.form1.bloodhuntrage_star.src="no_asterisk.gif";
document.form1.macetailsrage_star.src="no_asterisk.gif";
document.form1.ragedrakesfrenzy_star.src="no_asterisk.gif";
document.form1.swiftpantherrage_star.src="no_asterisk.gif";
document.form1.echoesoftheguardian_star.src="no_asterisk.gif";
document.form1.slayerssong_star.src="no_asterisk.gif";
document.form1.stirringshout_star.src="no_asterisk.gif";
document.form1.verseoftriumph_star.src="no_asterisk.gif";
document.form1.faeriefire_star.src="no_asterisk.gif";
document.form1.firesoflife_star.src="no_asterisk.gif";
document.form1.savagefrenzy_star.src="no_asterisk.gif";
document.form1.windprison_star.src="no_asterisk.gif";
document.form1.angelicechelon_star.src="no_asterisk.gif";
document.form1.bindinginvocationofchains_star.src="no_asterisk.gif";
document.form1.purgingfire_star.src="no_asterisk.gif";
document.form1.summonangeloffire_star.src="no_asterisk.gif";
document.form1.blessingofthesevenwinds_star.src="no_asterisk.gif";
document.form1.cleansingwindofthenorth_star.src="no_asterisk.gif";
document.form1.spiritofthehealingflood_star.src="no_asterisk.gif";
document.form1.wrathofthespiritworld_star.src="no_asterisk.gif";
document.form1.chromaticorb_star.src="no_asterisk.gif";
document.form1.dazzlingray_star.src="no_asterisk.gif";
document.form1.dragonfangbolt_star.src="no_asterisk.gif";
document.form1.lightningbreath_star.src="no_asterisk.gif";
document.form1.formofthefearsomeram_star.src="no_asterisk.gif";
document.form1.formoftherelentlesspanther_star.src="no_asterisk.gif";
document.form1.formofthewillowsentinel_star.src="no_asterisk.gif";
document.form1.formofwintersherald_star.src="no_asterisk.gif";



document.form1.burningblade_star.src="no_asterisk.gif"; 
document.form1.frostbacklash_star.src="no_asterisk.gif"; 
document.form1.bless_star.src="no_asterisk.gif"; 
document.form1.curelightwounds_star.src="no_asterisk.gif"; 
document.form1.divineaid_star.src="no_asterisk.gif"; 
document.form1.sanctuary_star.src="no_asterisk.gif"; 
document.form1.shieldoffaith_star.src="no_asterisk.gif"; 
document.form1.boundlessendurance_star.src="no_asterisk.gif"; 
document.form1.getoverhere_star.src="no_asterisk.gif"; 
document.form1.noopening_star.src="no_asterisk.gif"; 
document.form1.unstoppable_star.src="no_asterisk.gif"; 
document.form1.astralspeech_star.src="no_asterisk.gif"; 
document.form1.martyrsblessing_star.src="no_asterisk.gif"; 
document.form1.sacredcircle_star.src="no_asterisk.gif"; 
document.form1.crucialadvice_star.src="no_asterisk.gif"; 
document.form1.unbalancingparry_star.src="no_asterisk.gif"; 
document.form1.yieldground_star.src="no_asterisk.gif"; 
document.form1.fleetingghost_star.src="no_asterisk.gif"; 
document.form1.greatleapr_star.src="no_asterisk.gif"; 
document.form1.masterofdeceit_star.src="no_asterisk.gif"; 
document.form1.quickfingers_star.src="no_asterisk.gif"; 
document.form1.tumble_star.src="no_asterisk.gif"; 
document.form1.beguilingtongue_star.src="no_asterisk.gif"; 
document.form1.etherealstride_star.src="no_asterisk.gif"; 
document.form1.fiendishresilience_star.src="no_asterisk.gif"; 
document.form1.shadowveil_star.src="no_asterisk.gif"; 
document.form1.aidtheinjured_star.src="no_asterisk.gif"; 
document.form1.crescendoofviolence_star.src="no_asterisk.gif"; 
document.form1.knightsmove_star.src="no_asterisk.gif"; 
document.form1.shakeitoff_star.src="no_asterisk.gif"; 
document.form1.expeditiousretreat_star.src="no_asterisk.gif"; 
document.form1.featherfall_star.src="no_asterisk.gif"; 
document.form1.jump_star.src="no_asterisk.gif"; 
document.form1.shield_star.src="no_asterisk.gif";


document.form1.blessingofvengeance_star.src="no_asterisk.gif";
document.form1.distractingflare_star.src="no_asterisk.gif";
document.form1.refocusenmity_star.src="no_asterisk.gif";
document.form1.resonantescape_star.src="no_asterisk.gif";
document.form1.combatspirit_star.src="no_asterisk.gif";
document.form1.primalvitality_star.src="no_asterisk.gif";
document.form1.stonebreaker_star.src="no_asterisk.gif";
document.form1.tigersleap_star.src="no_asterisk.gif";
document.form1.hunterstune_star.src="no_asterisk.gif";
document.form1.inspirecompetence_star.src="no_asterisk.gif";
document.form1.songofcourage_star.src="no_asterisk.gif";
document.form1.songofdefense_star.src="no_asterisk.gif";
document.form1.barkskin_star.src="no_asterisk.gif";
document.form1.fleetpursuit_star.src="no_asterisk.gif";
document.form1.obscuringmist_star.src="no_asterisk.gif";
document.form1.skitteringsneak_star.src="no_asterisk.gif";
document.form1.divinecall_star.src="no_asterisk.gif";
document.form1.emissaryofthegods_star.src="no_asterisk.gif";
document.form1.shroudofawe_star.src="no_asterisk.gif";
document.form1.shroudofwarning_star.src="no_asterisk.gif";
document.form1.walloflight_star.src="no_asterisk.gif";
document.form1.bondsoftheclan_star.src="no_asterisk.gif";
document.form1.spiritcall_star.src="no_asterisk.gif";
document.form1.spiritoflife_star.src="no_asterisk.gif";
document.form1.spiritsofbattle_star.src="no_asterisk.gif";
document.form1.dragonflamemantle_star.src="no_asterisk.gif";
document.form1.elementalshift_star.src="no_asterisk.gif";
document.form1.stretchspell_star.src="no_asterisk.gif";
document.form1.unseenaid_star.src="no_asterisk.gif";
document.form1.eyesofthehawk_star.src="no_asterisk.gif";
document.form1.mountainlionstep_star.src="no_asterisk.gif";
document.form1.naturesabundance_star.src="no_asterisk.gif";
document.form1.triumphantvigor_star.src="no_asterisk.gif";





document.form1.dimensionalwarp_star.src="no_asterisk.gif"; 
document.form1.eldritchspeed_star.src="no_asterisk.gif"; 
document.form1.blazingbeacon_star.src="no_asterisk.gif"; 
document.form1.command_star.src="no_asterisk.gif"; 
document.form1.dauntinglight_star.src="no_asterisk.gif"; 
document.form1.splitthesky_star.src="no_asterisk.gif"; 
document.form1.armorpiercingthrust_star.src="no_asterisk.gif"; 
document.form1.crushingblow_star.src="no_asterisk.gif"; 
document.form1.danceofsteel_star.src="no_asterisk.gif"; 
document.form1.precisestrike_star.src="no_asterisk.gif"; 
document.form1.rainofblows_star.src="no_asterisk.gif"; 
document.form1.sweepingblow_star.src="no_asterisk.gif"; 
document.form1.arcingsmite_star.src="no_asterisk.gif"; 
document.form1.invigoratingsmite_star.src="no_asterisk.gif"; 
document.form1.righteoussmite_star.src="no_asterisk.gif"; 
document.form1.staggeringsmite_star.src="no_asterisk.gif"; 
document.form1.cutandrun_star.src="no_asterisk.gif"; 
document.form1.disruptivestrike_star.src="no_asterisk.gif"; 
document.form1.shadowwaspstrike_star.src="no_asterisk.gif"; 
document.form1.thundertuskboarstrike_star.src="no_asterisk.gif"; 
document.form1.baitandswitch_star.src="no_asterisk.gif"; 
document.form1.setupstrike_star.src="no_asterisk.gif"; 
document.form1.toppleover_star.src="no_asterisk.gif"; 
document.form1.trickstersblade_star.src="no_asterisk.gif"; 
document.form1.eldritchrain_star.src="no_asterisk.gif"; 
document.form1.fierybolt_star.src="no_asterisk.gif"; 
document.form1.frigiddarkness_star.src="no_asterisk.gif"; 
document.form1.otherwindstride_star.src="no_asterisk.gif"; 
document.form1.holdtheline_star.src="no_asterisk.gif"; 
document.form1.inspiringwarcry_star.src="no_asterisk.gif"; 
document.form1.steelmonsoon_star.src="no_asterisk.gif"; 
document.form1.warlordsstrike_star.src="no_asterisk.gif"; 
document.form1.colorspray_star.src="no_asterisk.gif"; 
document.form1.fireshroud_star.src="no_asterisk.gif"; 
document.form1.icyrays_star.src="no_asterisk.gif"; 
document.form1.shocksphere_star.src="no_asterisk.gif";

document.form1.deflectingthunder_star.src="no_asterisk.gif";
document.form1.enmitysreach_star.src="no_asterisk.gif";
document.form1.halooffire_star.src="no_asterisk.gif";
document.form1.sequesteringstrike_star.src="no_asterisk.gif";
document.form1.bladesweep_star.src="no_asterisk.gif";
document.form1.bloodstrike_star.src="no_asterisk.gif";
document.form1.daringcharge_star.src="no_asterisk.gif";
document.form1.hammerfall_star.src="no_asterisk.gif";
document.form1.shatterbonestrike_star.src="no_asterisk.gif";
document.form1.chargerscall_star.src="no_asterisk.gif";
document.form1.cunningferocity_star.src="no_asterisk.gif";
document.form1.dissonantstrain_star.src="no_asterisk.gif";
document.form1.impellingforce_star.src="no_asterisk.gif";
document.form1.batteringclaws_star.src="no_asterisk.gif";
document.form1.calllightning_star.src="no_asterisk.gif";
document.form1.predatorsflurry_star.src="no_asterisk.gif";
document.form1.tundrawind_star.src="no_asterisk.gif";
document.form1.chainsofcarceri_star.src="no_asterisk.gif";
document.form1.glyphofimprisonment_star.src="no_asterisk.gif";
document.form1.offeringofjustice_star.src="no_asterisk.gif";
document.form1.sunhammer_star.src="no_asterisk.gif";
document.form1.calltothesavageelder_star.src="no_asterisk.gif";
document.form1.lightningpantherspirit_star.src="no_asterisk.gif";
document.form1.rimefirespirit_star.src="no_asterisk.gif";
document.form1.springrenewalstrike_star.src="no_asterisk.gif";
document.form1.dancinglightning_star.src="no_asterisk.gif";
document.form1.flamespiral_star.src="no_asterisk.gif";
document.form1.icedragonsteeth_star.src="no_asterisk.gif";
document.form1.poisonousexhalation_star.src="no_asterisk.gif";
document.form1.spectralclaw_star.src="no_asterisk.gif";
document.form1.burstofearthsfury_star.src="no_asterisk.gif";
document.form1.earthgraspstrike_star.src="no_asterisk.gif";
document.form1.predatoryguardian_star.src="no_asterisk.gif";
document.form1.thunderingstrike_star.src="no_asterisk.gif";


document.form1.consecratedground_star.src="no_asterisk.gif"; 
document.form1.runeofpeace_star.src="no_asterisk.gif"; 
document.form1.spiritualweapon_star.src="no_asterisk.gif"; 
document.form1.weaponofthegods_star.src="no_asterisk.gif"; 
document.form1.cracktheshell_star.src="no_asterisk.gif"; 
document.form1.dizzyingblow_star.src="no_asterisk.gif"; 
document.form1.rainofsteel_star.src="no_asterisk.gif"; 
document.form1.hallowedcircle_star.src="no_asterisk.gif"; 
document.form1.martyrsretribution_star.src="no_asterisk.gif"; 
document.form1.signofvulnerability_star.src="no_asterisk.gif"; 
document.form1.excruciatingshot_star.src="no_asterisk.gif"; 
document.form1.frenziedskirmish_star.src="no_asterisk.gif"; 
document.form1.splinteringshot_star.src="no_asterisk.gif"; 
document.form1.twowolfpounce_star.src="no_asterisk.gif"; 
document.form1.cleverriposte_star.src="no_asterisk.gif"; 
document.form1.deepcut_star.src="no_asterisk.gif"; 
document.form1.walkingwounded_star.src="no_asterisk.gif"; 
document.form1.avernianeruption_star.src="no_asterisk.gif"; 
document.form1.crownofmadness_star.src="no_asterisk.gif"; 
document.form1.curseofthebloodyfangs_star.src="no_asterisk.gif"; 
document.form1.hungerofhadar_star.src="no_asterisk.gif"; 
document.form1.standthefallen_star.src="no_asterisk.gif"; 
document.form1.turningpoint_star.src="no_asterisk.gif"; 
document.form1.villainsnightmare_star.src="no_asterisk.gif"; 
document.form1.bigbysicygrasp_star.src="no_asterisk.gif"; 
document.form1.fireball_star.src="no_asterisk.gif"; 
document.form1.stinkingcloud_star.src="no_asterisk.gif"; 
document.form1.web_star.src="no_asterisk.gif";


document.form1.bondofforesight_star.src="no_asterisk.gif";
document.form1.dawhfiresigil_star.src="no_asterisk.gif";
document.form1.executionerscloak_star.src="no_asterisk.gif";
document.form1.oathofconsuminglight_star.src="no_asterisk.gif";
document.form1.frostwolfrage_star.src="no_asterisk.gif";
document.form1.silverphoenixrage_star.src="no_asterisk.gif";
document.form1.thunderhawkrage_star.src="no_asterisk.gif";
document.form1.vengefulstormrage_star.src="no_asterisk.gif";
document.form1.satireofbravery_star.src="no_asterisk.gif";
document.form1.songofdiscord_star.src="no_asterisk.gif";
document.form1.tuneoficeandwind_star.src="no_asterisk.gif";
document.form1.wordofmysticwarding_star.src="no_asterisk.gif";
document.form1.hobblingrend_star.src="no_asterisk.gif";
document.form1.primalwolverine_star.src="no_asterisk.gif";
document.form1.roarofterror_star.src="no_asterisk.gif";
document.form1.wallofthorns_star.src="no_asterisk.gif";
document.form1.bladeofvengeance_star.src="no_asterisk.gif";
document.form1.graspingchainsofthejusticiar_star.src="no_asterisk.gif";
document.form1.iconofterror_star.src="no_asterisk.gif";
document.form1.searingorb_star.src="no_asterisk.gif";
document.form1.earthragespirit_star.src="no_asterisk.gif";
document.form1.spiritofthehawkswind_star.src="no_asterisk.gif";
document.form1.spiritoftheshieldingfire_star.src="no_asterisk.gif";
document.form1.warchieftainsblessing_star.src="no_asterisk.gif";
document.form1.stormstrike_star.src="no_asterisk.gif";
document.form1.acidicimplanation_star.src="no_asterisk.gif";
document.form1.palestflames_star.src="no_asterisk.gif";
document.form1.reelingtorment_star.src="no_asterisk.gif";
document.form1.serpentineblast_star.src="no_asterisk.gif";
document.form1.thunderleap_star.src="no_asterisk.gif";
document.form1.hailofthorns_star.src="no_asterisk.gif";
document.form1.stormstrike_star.src="no_asterisk.gif";
document.form1.thunderstep_star.src="no_asterisk.gif";
document.form1.wintersgrip_star.src="no_asterisk.gif";




document.form1.bastionofhealth_star.src="no_asterisk.gif"; 
document.form1.cureseriouswounds_star.src="no_asterisk.gif"; 
document.form1.divinevigor_star.src="no_asterisk.gif"; 
document.form1.holylantern_star.src="no_asterisk.gif"; 
document.form1.battleawareness_star.src="no_asterisk.gif"; 
document.form1.defensivetraining_star.src="no_asterisk.gif"; 
document.form1.unbreakable_star.src="no_asterisk.gif"; 
document.form1.divinebodyguard_star.src="no_asterisk.gif"; 
document.form1.oneheartonemind_star.src="no_asterisk.gif"; 
document.form1.wrathofthegods_star.src="no_asterisk.gif"; 
document.form1.evadeambush_star.src="no_asterisk.gif"; 
document.form1.skilledcompanion_star.src="no_asterisk.gif"; 
document.form1.weavethroughthefray_star.src="no_asterisk.gif"; 
document.form1.chameleon_star.src="no_asterisk.gif"; 
document.form1.ignobleescape_star.src="no_asterisk.gif"; 
document.form1.mobmentality_star.src="no_asterisk.gif"; 
document.form1.nimbleclimb_star.src="no_asterisk.gif"; 
document.form1.slipperymind_star.src="no_asterisk.gif"; 
document.form1.darkonesownluck_star.src="no_asterisk.gif"; 
document.form1.feyswitch_star.src="no_asterisk.gif"; 
document.form1.shroudofblacksteel_star.src="no_asterisk.gif"; 
document.form1.spiderclimb_star.src="no_asterisk.gif"; 
document.form1.guidethecharge_star.src="no_asterisk.gif"; 
document.form1.inspiringreaction_star.src="no_asterisk.gif"; 
document.form1.quickstep_star.src="no_asterisk.gif"; 
document.form1.standtough_star.src="no_asterisk.gif"; 
document.form1.dimensiondoor_star.src="no_asterisk.gif"; 
document.form1.disguiseself_star.src="no_asterisk.gif"; 
document.form1.dispelmagic_star.src="no_asterisk.gif"; 
document.form1.invisibility_star.src="no_asterisk.gif"; 
document.form1.levitate_star.src="no_asterisk.gif"; 
document.form1.walloffog_star.src="no_asterisk.gif";



document.form1.aspectofagility_star.src="no_asterisk.gif";
document.form1.oathofenduringwrath_star.src="no_asterisk.gif";
document.form1.oathoftherelentlesshunter_star.src="no_asterisk.gif";
document.form1.wrathofthedivine_star.src="no_asterisk.gif";
document.form1.combatsurge_star.src="no_asterisk.gif";
document.form1.indomitableshift_star.src="no_asterisk.gif";
document.form1.instinctivecharge_star.src="no_asterisk.gif";
document.form1.lossofwill_star.src="no_asterisk.gif";
document.form1.allegro_star.src="no_asterisk.gif";
document.form1.odetosacrifice_star.src="no_asterisk.gif";
document.form1.songofconquest_star.src="no_asterisk.gif";
document.form1.trickstershealing_star.src="no_asterisk.gif";
document.form1.blackharbinger_star.src="no_asterisk.gif";
document.form1.camouflagecloak_star.src="no_asterisk.gif";
document.form1.chantofsustenance_star.src="no_asterisk.gif";
document.form1.stalkerseyes_star.src="no_asterisk.gif";
document.form1.astralstep_star.src="no_asterisk.gif";
document.form1.demandjustice_star.src="no_asterisk.gif";
document.form1.sharedendurance_star.src="no_asterisk.gif";
document.form1.shieldoflight_star.src="no_asterisk.gif";
document.form1.symbolofhope_star.src="no_asterisk.gif";
document.form1.blessingoftheirontree_star.src="no_asterisk.gif";
document.form1.spiritofdawn_star.src="no_asterisk.gif";
document.form1.spiritofthekeeper_star.src="no_asterisk.gif";
document.form1.suddenrestoration_star.src="no_asterisk.gif";
document.form1.arcaneempowerment_star.src="no_asterisk.gif";
document.form1.energeticflight_star.src="no_asterisk.gif";
document.form1.suddenscales_star.src="no_asterisk.gif";
document.form1.swiftescape_star.src="no_asterisk.gif";
document.form1.bearsendurance_star.src="no_asterisk.gif";
document.form1.earthguard_star.src="no_asterisk.gif";
document.form1.seastride_star.src="no_asterisk.gif";
document.form1.windbornestep_star.src="no_asterisk.gif";



document.form1.awestrike_star.src="no_asterisk.gif"; 
document.form1.breakthespirit_star.src="no_asterisk.gif"; 
document.form1.searinglight_star.src="no_asterisk.gif"; 
document.form1.strengthenthefaithful_star.src="no_asterisk.gif"; 
document.form1.comeandgetit_star.src="no_asterisk.gif"; 
document.form1.griffonswrath_star.src="no_asterisk.gif"; 
document.form1.ironbulwark_star.src="no_asterisk.gif"; 
document.form1.recklessstrike_star.src="no_asterisk.gif"; 
document.form1.suddensurge_star.src="no_asterisk.gif"; 
document.form1.beckonfoe_star.src="no_asterisk.gif"; 
document.form1.benigntransposition_star.src="no_asterisk.gif"; 
document.form1.divinereverence_star.src="no_asterisk.gif"; 
document.form1.thundersmite_star.src="no_asterisk.gif"; 
document.form1.clawsofthegriffon_star.src="no_asterisk.gif"; 
document.form1.hawktalon_star.src="no_asterisk.gif"; 
document.form1.spikesofthemanticore_star.src="no_asterisk.gif"; 
document.form1.sweepingwhirlwind_star.src="no_asterisk.gif"; 
document.form1.cloudofsteel_star.src="no_asterisk.gif"; 
document.form1.imperilingstrike_star.src="no_asterisk.gif"; 
document.form1.roguesluck_star.src="no_asterisk.gif"; 
document.form1.sandintheeyes_star.src="no_asterisk.gif"; 
document.form1.howlofdoom_star.src="no_asterisk.gif"; 
document.form1.infernalmooncurse_star.src="no_asterisk.gif"; 
document.form1.mirethemind_star.src="no_asterisk.gif"; 
document.form1.signofillomen_star.src="no_asterisk.gif"; 
document.form1.lionsroar_star.src="no_asterisk.gif"; 
document.form1.sunderarmor_star.src="no_asterisk.gif"; 
document.form1.surpriseattack_star.src="no_asterisk.gif"; 
document.form1.surroundfoe_star.src="no_asterisk.gif"; 
document.form1.fireburst_star.src="no_asterisk.gif"; 
document.form1.lightningbolt_star.src="no_asterisk.gif"; 
document.form1.spectralram_star.src="no_asterisk.gif"; 
document.form1.winterswrath_star.src="no_asterisk.gif";


document.form1.avengingwinds_star.src="no_asterisk.gif";
document.form1.bladestep_star.src="no_asterisk.gif";
document.form1.inexorablepursuit_star.src="no_asterisk.gif";
document.form1.slintertheformation_star.src="no_asterisk.gif";
document.form1.curtainofsteel_star.src="no_asterisk.gif";
document.form1.greatshout_star.src="no_asterisk.gif";
document.form1.feastofviolence_star.src="no_asterisk.gif";
document.form1.tideofblood_star.src="no_asterisk.gif";
document.form1.deflectattention_star.src="no_asterisk.gif";
document.form1.distractingshout_star.src="no_asterisk.gif";
document.form1.scorpionsclawstrike_star.src="no_asterisk.gif";
document.form1.unluck_star.src="no_asterisk.gif";
document.form1.feastoffury_star.src="no_asterisk.gif";
document.form1.latchon_star.src="no_asterisk.gif";
document.form1.swlrlingwinds_star.src="no_asterisk.gif";
document.form1.tremor_star.src="no_asterisk.gif";
document.form1.balefuleyeofjudgment_star.src="no_asterisk.gif";
document.form1.boltoftherisingsun_star.src="no_asterisk.gif";
document.form1.invokeobedience_star.src="no_asterisk.gif";
document.form1.thunderboldoftheheavens_star.src="no_asterisk.gif";
document.form1.calltotheblooddancer_star.src="no_asterisk.gif";
document.form1.calltothehowlingstorm_star.src="no_asterisk.gif";
document.form1.thunderstormspirit_star.src="no_asterisk.gif";
document.form1.winterwindspirit_star.src="no_asterisk.gif";
document.form1.chaosstorm_star.src="no_asterisk.gif";
document.form1.crushingsphere_star.src="no_asterisk.gif";
document.form1.rimestorm_star.src="no_asterisk.gif";
document.form1.shout_star.src="no_asterisk.gif";
document.form1.earthgift_star.src="no_asterisk.gif";
document.form1.mountainhammer_star.src="no_asterisk.gif";
document.form1.stalkerspositioning_star.src="no_asterisk.gif";
document.form1.thornburst_star.src="no_asterisk.gif";





document.form1.astraldefenders_star.src="no_asterisk.gif"; 
document.form1.bladebarrier_star.src="no_asterisk.gif"; 
document.form1.divinepower_star.src="no_asterisk.gif"; 
document.form1.flamestrike_star.src="no_asterisk.gif"; 
document.form1.shiftthebattlefield_star.src="no_asterisk.gif"; 
document.form1.thicketofblades_star.src="no_asterisk.gif"; 
document.form1.victorioussurge_star.src="no_asterisk.gif"; 
document.form1.crownofglory_star.src="no_asterisk.gif"; 
document.form1.onestandsalone_star.src="no_asterisk.gif"; 
document.form1.radiantpulse_star.src="no_asterisk.gif"; 
document.form1.attacksontherun_star.src="no_asterisk.gif"; 
document.form1.closequartersshot_star.src="no_asterisk.gif"; 
document.form1.sprayofarrows_star.src="no_asterisk.gif"; 
document.form1.swirlingleavesofsteel_star.src="no_asterisk.gif"; 
document.form1.crimsonedge_star.src="no_asterisk.gif"; 
document.form1.deadlypositioning_star.src="no_asterisk.gif"; 
document.form1.knockout_star.src="no_asterisk.gif"; 
document.form1.curseoftheblackfrost_star.src="no_asterisk.gif"; 
document.form1.ironspikeofdis_star.src="no_asterisk.gif"; 
document.form1.summonsofkhirad_star.src="no_asterisk.gif"; 
document.form1.thiefoffivefates_star.src="no_asterisk.gif"; 
document.form1.irondragoncharge_star.src="no_asterisk.gif"; 
document.form1.knockthemdown_star.src="no_asterisk.gif"; 
document.form1.whiteravenstrike_star.src="no_asterisk.gif"; 
document.form1.icestorm_star.src="no_asterisk.gif"; 
document.form1.lightningserpent_star.src="no_asterisk.gif"; 
document.form1.mordenkainenssword_star.src="no_asterisk.gif"; 
document.form1.walloffire_star.src="no_asterisk.gif";



document.form1.aspectofspeed_star.src="no_asterisk.gif";
document.form1.enduringstrike_star.src="no_asterisk.gif";
document.form1.oathofpursuit_star.src="no_asterisk.gif";
document.form1.templeofshadow_star.src="no_asterisk.gif";
document.form1.blackdragonrage_star.src="no_asterisk.gif";
document.form1.oakhammerrage_star.src="no_asterisk.gif";
document.form1.stonebearrage_star.src="no_asterisk.gif";
document.form1.whitetigerrage_star.src="no_asterisk.gif";
document.form1.forcefulconduit_star.src="no_asterisk.gif";
document.form1.hideouslaughter_star.src="no_asterisk.gif";
document.form1.hymnofthedaringrescue_star.src="no_asterisk.gif";
document.form1.thunderblade_star.src="no_asterisk.gif";
document.form1.entangle_star.src="no_asterisk.gif";
document.form1.feralmauling_star.src="no_asterisk.gif";
document.form1.primalwolf_star.src="no_asterisk.gif";
document.form1.sunbeam_star.src="no_asterisk.gif";
document.form1.ceruleanflames_star.src="no_asterisk.gif";
document.form1.fourfoldinvocationofdoom_star.src="no_asterisk.gif";
document.form1.summonbladeangel_star.src="no_asterisk.gif";
document.form1.visionsofparadise_star.src="no_asterisk.gif";
document.form1.ancientwarlordsinspiration_star.src="no_asterisk.gif";
document.form1.clevertricksterspirit_star.src="no_asterisk.gif";
document.form1.ragingstormspirit_star.src="no_asterisk.gif";
document.form1.spiritofautumnsreaping_star.src="no_asterisk.gif";
document.form1.adamantineecho_star.src="no_asterisk.gif";
document.form1.contagiouscurse_star.src="no_asterisk.gif";
document.form1.primethefire_star.src="no_asterisk.gif";
document.form1.staggeringblast_star.src="no_asterisk.gif";
document.form1.formoftheoaksentinel_star.src="no_asterisk.gif";
document.form1.formofthefrenziedwolverine_star.src="no_asterisk.gif";
document.form1.formofthestonesentinel_star.src="no_asterisk.gif";
document.form1.formofthestormeagle_star.src="no_asterisk.gif";




document.form1.astralrefuge_star.src="no_asterisk.gif"; 
document.form1.knightsofunyieldingvalor_star.src="no_asterisk.gif"; 
document.form1.masscurelightwounds_star.src="no_asterisk.gif"; 
document.form1.shieldingword_star.src="no_asterisk.gif"; 
document.form1.intothefray_star.src="no_asterisk.gif"; 
document.form1.lastditchevasion_star.src="no_asterisk.gif"; 
document.form1.stalwartguard_star.src="no_asterisk.gif"; 
document.form1.cleansingspirit_star.src="no_asterisk.gif"; 
document.form1.nobleshield_star.src="no_asterisk.gif"; 
document.form1.turnthetide_star.src="no_asterisk.gif"; 
document.form1.expeditiousstride_star.src="no_asterisk.gif"; 
document.form1.opentherange_star.src="no_asterisk.gif"; 
document.form1.undauntedstride_star.src="no_asterisk.gif"; 
document.form1.certainfreedom_star.src="no_asterisk.gif"; 
document.form1.closequarters_star.src="no_asterisk.gif"; 
document.form1.dangeroustheft_star.src="no_asterisk.gif"; 
document.form1.shadowstride_star.src="no_asterisk.gif"; 
document.form1.ambassadorimp_star.src="no_asterisk.gif"; 
document.form1.shadowform_star.src="no_asterisk.gif"; 
document.form1.shieldingshades_star.src="no_asterisk.gif"; 
document.form1.warlocksleap_star.src="no_asterisk.gif"; 
document.form1.defensiverally_star.src="no_asterisk.gif"; 
document.form1.easesuffering_star.src="no_asterisk.gif"; 
document.form1.tacticalshift_star.src="no_asterisk.gif"; 
document.form1.arcanegate_star.src="no_asterisk.gif"; 
document.form1.blur_star.src="no_asterisk.gif"; 
document.form1.mirrorimage_star.src="no_asterisk.gif"; 
document.form1.resistance_star.src="no_asterisk.gif";



document.form1.avengersreadiness_star.src="no_asterisk.gif";
document.form1.channelendurance_star.src="no_asterisk.gif";
document.form1.eyeofjustice_star.src="no_asterisk.gif";
document.form1.riveroflife_star.src="no_asterisk.gif";
document.form1.denydeath_star.src="no_asterisk.gif";
document.form1.heartstrike_star.src="no_asterisk.gif";
document.form1.mountainroots_star.src="no_asterisk.gif";
document.form1.wellspringofrenewal_star.src="no_asterisk.gif";
document.form1.illusoryerasure_star.src="no_asterisk.gif";
document.form1.songofrecovery_star.src="no_asterisk.gif";
document.form1.veil_star.src="no_asterisk.gif";
document.form1.wordoflife_star.src="no_asterisk.gif";
document.form1.armorofthewild_star.src="no_asterisk.gif";
document.form1.feywildsojourn_star.src="no_asterisk.gif";
document.form1.rootsofrescue_star.src="no_asterisk.gif";
document.form1.winterstorm_star.src="no_asterisk.gif";
document.form1.angelicvisage_star.src="no_asterisk.gif";
document.form1.covenantofendurance_star.src="no_asterisk.gif";
document.form1.divinerenewal_star.src="no_asterisk.gif";
document.form1.martyrsward_star.src="no_asterisk.gif";
document.form1.primalgust_star.src="no_asterisk.gif";
document.form1.rockshieldspirits_star.src="no_asterisk.gif";
document.form1.spiritsoftheshadowedmoon_star.src="no_asterisk.gif";
document.form1.spiritsummons_star.src="no_asterisk.gif";
document.form1.chaoslink_star.src="no_asterisk.gif";
document.form1.devourmagic_star.src="no_asterisk.gif";
document.form1.invertresistance_star.src="no_asterisk.gif";
document.form1.narrowescape_star.src="no_asterisk.gif";
document.form1.earthstride_star.src="no_asterisk.gif";
document.form1.returningstrength_star.src="no_asterisk.gif";
document.form1.shieldofstone_star.src="no_asterisk.gif";
document.form1.wardingvines_star.src="no_asterisk.gif";




document.form1.arcoftherighteous_star.src="no_asterisk.gif"; 
document.form1.inspiringstrike_star.src="no_asterisk.gif"; 
document.form1.mantleofglory_star.src="no_asterisk.gif"; 
document.form1.plagueofdoom_star.src="no_asterisk.gif"; 
document.form1.anvilofdoom_star.src="no_asterisk.gif"; 
document.form1.chainsofsorrow_star.src="no_asterisk.gif"; 
document.form1.giantswake_star.src="no_asterisk.gif"; 
document.form1.silverstep_star.src="no_asterisk.gif"; 
document.form1.stormofblows_star.src="no_asterisk.gif"; 
document.form1.talonoftheroc_star.src="no_asterisk.gif"; 
document.form1.entanglingsmite_star.src="no_asterisk.gif"; 
document.form1.radiantcharge_star.src="no_asterisk.gif"; 
document.form1.renewingsmite_star.src="no_asterisk.gif"; 
document.form1.whirlwindsmite_star.src="no_asterisk.gif"; 
document.form1.armorsplinter_star.src="no_asterisk.gif"; 
document.form1.knockdownshot_star.src="no_asterisk.gif"; 
document.form1.nimbledefense_star.src="no_asterisk.gif"; 
document.form1.pinningstrike_star.src="no_asterisk.gif"; 
document.form1.foolsopportunity_star.src="no_asterisk.gif"; 
document.form1.stunningstrike_star.src="no_asterisk.gif"; 
document.form1.tornadostrike_star.src="no_asterisk.gif"; 
document.form1.unbalancingattack_star.src="no_asterisk.gif"; 
document.form1.bewitchingwhispers_star.src="no_asterisk.gif"; 
document.form1.coldfirevortex_star.src="no_asterisk.gif"; 
document.form1.harrowstorm_star.src="no_asterisk.gif"; 
document.form1.soulflaying_star.src="no_asterisk.gif"; 
document.form1.beatthemintotheground_star.src="no_asterisk.gif"; 
document.form1.bolsteringblow_star.src="no_asterisk.gif"; 
document.form1.denyingsmite_star.src="no_asterisk.gif"; 
document.form1.furyofthesirocco_star.src="no_asterisk.gif"; 
document.form1.frostburn_star.src="no_asterisk.gif"; 
document.form1.mesmerichold_star.src="no_asterisk.gif"; 
document.form1.prismaticburst_star.src="no_asterisk.gif"; 
document.form1.thunderlance_star.src="no_asterisk.gif";

document.form1.cloudofsouls_star.src="no_asterisk.gif";
document.form1.lightoftheavengingsun_star.src="no_asterisk.gif";
document.form1.sequesteringword_star.src="no_asterisk.gif";
document.form1.whirlingblades_star.src="no_asterisk.gif";
document.form1.bladewhirlwind_star.src="no_asterisk.gif";
document.form1.cracktheskull_star.src="no_asterisk.gif";
document.form1.stormofblades_star.src="no_asterisk.gif";
document.form1.terrorscry_star.src="no_asterisk.gif";
document.form1.thunderfall_star.src="no_asterisk.gif";
document.form1.earthquakestrike_star.src="no_asterisk.gif";
document.form1.foolhardyfighting_star.src="no_asterisk.gif";
document.form1.harmonyofthetwo_star.src="no_asterisk.gif";
document.form1.songofstorms_star.src="no_asterisk.gif";
document.form1.clawsofretribution_star.src="no_asterisk.gif";
document.form1.esxposeweakness_star.src="no_asterisk.gif";
document.form1.thundercrash_star.src="no_asterisk.gif";
document.form1.tidalsurge_star.src="no_asterisk.gif";
document.form1.compelattention_star.src="no_asterisk.gif";
document.form1.pilarofguardianflame_star.src="no_asterisk.gif";
document.form1.sealoftheheretic_star.src="no_asterisk.gif";
document.form1.windsofcelestia_star.src="no_asterisk.gif";
document.form1.calltotheindomitabledefender_star.src="no_asterisk.gif";
document.form1.calltothelaughingfortune_star.src="no_asterisk.gif";
document.form1.howlinggust_star.src="no_asterisk.gif";
document.form1.spiritofcleansinglight_star.src="no_asterisk.gif";
document.form1.chainsoffire_star.src="no_asterisk.gif";
document.form1.jawsoftheearth_star.src="no_asterisk.gif";
document.form1.mindhammer_star.src="no_asterisk.gif";
document.form1.thunderbreath_star.src="no_asterisk.gif";
document.form1.creepersgrasp_star.src="no_asterisk.gif";
document.form1.icyshards_star.src="no_asterisk.gif";
document.form1.ponderousstrike_star.src="no_asterisk.gif";
document.form1.sunburststrike_star.src="no_asterisk.gif";


document.form1.astralfury_star.src="no_asterisk.gif";
document.form1.readyforthefinalblow_star.src="no_asterisk.gif";
document.form1.spectralcharge_star.src="no_asterisk.gif";
document.form1.wardingblade_star.src="no_asterisk.gif";
document.form1.defastatingblow_star.src="no_asterisk.gif";
document.form1.mountaingrasp_star.src="no_asterisk.gif";
document.form1.shoulderslam_star.src="no_asterisk.gif";
document.form1.threateningfry_star.src="no_asterisk.gif";
document.form1.vigorousstrike_star.src="no_asterisk.gif";
document.form1.masksofmenace_star.src="no_asterisk.gif";
document.form1.shoutofevasion_star.src="no_asterisk.gif";
document.form1.songofsummons_star.src="no_asterisk.gif";
document.form1.wordofvulnerability_star.src="no_asterisk.gif";
document.form1.lightningcascade_star.src="no_asterisk.gif";
document.form1.scavengersprize_star.src="no_asterisk.gif";
document.form1.shiftingrake_star.src="no_asterisk.gif";
document.form1.windstorm_star.src="no_asterisk.gif";
document.form1.blooddebt_star.src="no_asterisk.gif";
document.form1.curseofhaemnathuun_star.src="no_asterisk.gif";
document.form1.glyphofradiance_star.src="no_asterisk.gif";
document.form1.glyphofthreeblades_star.src="no_asterisk.gif";
document.form1.calltothelashingbehemoth_star.src="no_asterisk.gif";
document.form1.shacklesofthemountain_star.src="no_asterisk.gif";
document.form1.spiritbondofvengeance_star.src="no_asterisk.gif";
document.form1.spiritofspringsrenewal_star.src="no_asterisk.gif";
document.form1.breathofwinter_star.src="no_asterisk.gif";
document.form1.dragontailmeditation_star.src="no_asterisk.gif";
document.form1.poisonousevasion_star.src="no_asterisk.gif";
document.form1.thundersummons_star.src="no_asterisk.gif";
document.form1.callforththeharvest_star.src="no_asterisk.gif";
document.form1.eagervinestrike_star.src="no_asterisk.gif";
document.form1.earthholdsrebuke_star.src="no_asterisk.gif";
document.form1.razorleafcut_star.src="no_asterisk.gif";





document.form1.avengersshield_star.src="no_asterisk.gif";
document.form1.bondofjustice_star.src="no_asterisk.gif";
document.form1.phaseduel_star.src="no_asterisk.gif";
document.form1.arcingthrow_star.src="no_asterisk.gif";
document.form1.berserkersshout_star.src="no_asterisk.gif";
document.form1.craterfall_star.src="no_asterisk.gif";
document.form1.fatalstrike_star.src="no_asterisk.gif";
document.form1.feralscythe_star.src="no_asterisk.gif";
document.form1.staggeringstrike_star.src="no_asterisk.gif";
document.form1.echoesintime_star.src="no_asterisk.gif";
document.form1.rhythmofdisorientation_star.src="no_asterisk.gif";
document.form1.songofliberation_star.src="no_asterisk.gif";
document.form1.wealandwoe_star.src="no_asterisk.gif";
document.form1.graspingearth_star.src="no_asterisk.gif";
document.form1.primalroar_star.src="no_asterisk.gif";
document.form1.stormburst_star.src="no_asterisk.gif";
document.form1.strengthofthehunt_star.src="no_asterisk.gif";
document.form1.cascadeoffivesuns_star.src="no_asterisk.gif";
document.form1.stormofcelestia_star.src="no_asterisk.gif";
document.form1.vindicatingflames_star.src="no_asterisk.gif";
document.form1.wordofrebuke_star.src="no_asterisk.gif";
document.form1.calltotheprimalprotector_star.src="no_asterisk.gif";
document.form1.calltotherelentlesshunter_star.src="no_asterisk.gif";
document.form1.spiritofthedeathraven_star.src="no_asterisk.gif";
document.form1.twintempestspirits_star.src="no_asterisk.gif";
document.form1.blackbreath_star.src="no_asterisk.gif";
document.form1.chaosorbs_star.src="no_asterisk.gif";
document.form1.ironchains_star.src="no_asterisk.gif";
document.form1.platesofice_star.src="no_asterisk.gif";
document.form1.guardianswrath_star.src="no_asterisk.gif";
document.form1.naturesally_star.src="no_asterisk.gif";
document.form1.startlingsavagery_star.src="no_asterisk.gif";
document.form1.whirlwindassault_star.src="no_asterisk.gif";



document.form1.astralcharge_star.src="no_asterisk.gif";
document.form1.deathstroke_star.src="no_asterisk.gif";
document.form1.inevitableend_star.src="no_asterisk.gif";
document.form1.scattertotheastralwinds_star.src="no_asterisk.gif";
document.form1.bloodwrath_star.src="no_asterisk.gif";
document.form1.bonebreaker_star.src="no_asterisk.gif";
document.form1.butchersfeast_star.src="no_asterisk.gif";
document.form1.hurricaneofblades_star.src="no_asterisk.gif";
document.form1.rampagingdragonstrike_star.src="no_asterisk.gif";
document.form1.bondofmalediction_star.src="no_asterisk.gif";
document.form1.kaleidoscopigburst_star.src="no_asterisk.gif";
document.form1.surgeofvalor_star.src="no_asterisk.gif";
document.form1.explosivewind_star.src="no_asterisk.gif";
document.form1.feralwhirlwind_star.src="no_asterisk.gif";
document.form1.leapingrake_star.src="no_asterisk.gif";
document.form1.polarblast_star.src="no_asterisk.gif";
document.form1.invoketerror_star.src="no_asterisk.gif";
document.form1.offeringofpeace_star.src="no_asterisk.gif";
document.form1.swarmofastralsteel_star.src="no_asterisk.gif";
document.form1.wordofannihilation_star.src="no_asterisk.gif";
document.form1.bloodreaperspirits_star.src="no_asterisk.gif";
document.form1.calltothecleansingfire_star.src="no_asterisk.gif";
document.form1.calltothegreathunter_star.src="no_asterisk.gif";
document.form1.spiritofelderwisdom_star.src="no_asterisk.gif";
document.form1.lightningeruption_star.src="no_asterisk.gif";
document.form1.poisonward_star.src="no_asterisk.gif";
document.form1.thunderpulse_star.src="no_asterisk.gif";
document.form1.wildfirecurse_star.src="no_asterisk.gif";
document.form1.earthtomb_star.src="no_asterisk.gif";
document.form1.guardiansstorm_star.src="no_asterisk.gif";
document.form1.screamingwindstrike_star.src="no_asterisk.gif";
document.form1.weightofthemountain_star.src="no_asterisk.gif";



document.form1.holyspark_star.src="no_asterisk.gif"; 
document.form1.purifyingfire_star.src="no_asterisk.gif"; 
document.form1.sealofwarding_star.src="no_asterisk.gif"; 
document.form1.dragonsfangs_star.src="no_asterisk.gif"; 
document.form1.serpentdancestrike_star.src="no_asterisk.gif"; 
document.form1.unyieldingavalanche_star.src="no_asterisk.gif"; 
document.form1.bloodiedretribution_star.src="no_asterisk.gif"; 
document.form1.breakthewall_star.src="no_asterisk.gif"; 
document.form1.truenemesis_star.src="no_asterisk.gif"; 
document.form1.bladecascade_star.src="no_asterisk.gif"; 
document.form1.bleedingwounds_star.src="no_asterisk.gif"; 
document.form1.confoundingarrows_star.src="no_asterisk.gif"; 
document.form1.stunningsteel_star.src="no_asterisk.gif"; 
document.form1.bloodypath_star.src="no_asterisk.gif"; 
document.form1.garottegrip_star.src="no_asterisk.gif"; 
document.form1.slayingstrike_star.src="no_asterisk.gif"; 
document.form1.curseofthegoldenmist_star.src="no_asterisk.gif"; 
document.form1.fireswarm_star.src="no_asterisk.gif"; 
document.form1.tendrilsofthuban_star.src="no_asterisk.gif"; 
document.form1.thirstingmaw_star.src="no_asterisk.gif"; 
document.form1.makethembleed_star.src="no_asterisk.gif"; 
document.form1.renewthetroops_star.src="no_asterisk.gif"; 
document.form1.warlordsgambit_star.src="no_asterisk.gif"; 
document.form1.bigbysgraspinghands_star.src="no_asterisk.gif"; 
document.form1.blastofcold_star.src="no_asterisk.gif"; 
document.form1.otilukesresilientsphere_star.src="no_asterisk.gif"; 
document.form1.prismaticbeams_star.src="no_asterisk.gif"; 
document.form1.wallofice_star.src="no_asterisk.gif"; 
document.form1.astralshield_star.src="no_asterisk.gif"; 
document.form1.cloakofpeace_star.src="no_asterisk.gif"; 
document.form1.divinearmor_star.src="no_asterisk.gif"; 
document.form1.hallowedground_star.src="no_asterisk.gif"; 
document.form1.interposingshield_star.src="no_asterisk.gif"; 
document.form1.ironwarrior_star.src="no_asterisk.gif"; 
document.form1.surprisestep_star.src="no_asterisk.gif"; 
document.form1.angelicintercession_star.src="no_asterisk.gif"; 
document.form1.deathward_star.src="no_asterisk.gif"; 
document.form1.evadetheblow_star.src="no_asterisk.gif"; 
document.form1.longstrider_star.src="no_asterisk.gif"; 
document.form1.momentaryrespite_star.src="no_asterisk.gif"; 
document.form1.foilthelock_star.src="no_asterisk.gif"; 
document.form1.hideinplainsight_star.src="no_asterisk.gif"; 
document.form1.leapingdodge_star.src="no_asterisk.gif"; 
document.form1.raisethestakes_star.src="no_asterisk.gif"; 
document.form1.cloakofshadow_star.src="no_asterisk.gif"; 
document.form1.eyeofthewarlock_star.src="no_asterisk.gif"; 
document.form1.infuriatingelusiveness_star.src="no_asterisk.gif"; 
document.form1.herosdefiance_star.src="no_asterisk.gif"; 
document.form1.warlordsbanner_star.src="no_asterisk.gif"; 
document.form1.whiteravenformation_star.src="no_asterisk.gif"; 
document.form1.displacement_star.src="no_asterisk.gif"; 
document.form1.fly_star.src="no_asterisk.gif"; 
document.form1.greaterinvisibility_star.src="no_asterisk.gif"; 
document.form1.stoneskin_star.src="no_asterisk.gif";



document.form1.astralcloak_star.src="no_asterisk.gif";
document.form1.bulwarkofdefiance_star.src="no_asterisk.gif";
document.form1.vengefulrevenant_star.src="no_asterisk.gif";
document.form1.windsoftheastralsea_star.src="no_asterisk.gif";
document.form1.fuelthefire_star.src="no_asterisk.gif";
document.form1.greatstomp_star.src="no_asterisk.gif";
document.form1.primalresistance_star.src="no_asterisk.gif";
document.form1.spurthecycle_star.src="no_asterisk.gif";
document.form1.blinkzone_star.src="no_asterisk.gif";
document.form1.chorusofrecovery_star.src="no_asterisk.gif";
document.form1.elegyoftheundefeated_star.src="no_asterisk.gif";
document.form1.songofsublimesnowfall_star.src="no_asterisk.gif";
document.form1.howlofthewild_star.src="no_asterisk.gif";
document.form1.insectplague_star.src="no_asterisk.gif";
document.form1.primalrestoration_star.src="no_asterisk.gif";
document.form1.wallofstone_star.src="no_asterisk.gif";
document.form1.covenantoflife_star.src="no_asterisk.gif";
document.form1.iconlflife_star.src="no_asterisk.gif";
document.form1.shieldofjustice_star.src="no_asterisk.gif";
document.form1.walkbetweenworlds_star.src="no_asterisk.gif";
document.form1.fateweaversshield_star.src="no_asterisk.gif";
document.form1.forgethechainsoflife_star.src="no_asterisk.gif";
document.form1.spiritbinding_star.src="no_asterisk.gif";
document.form1.spiritsofthedancingzephyr_star.src="no_asterisk.gif";
document.form1.breathofthedesertdragon_star.src="no_asterisk.gif";
document.form1.chaosechoes_star.src="no_asterisk.gif";
document.form1.chaossanctuary_star.src="no_asterisk.gif";
document.form1.comradesmantle_star.src="no_asterisk.gif";
document.form1.draconicmajesty_star.src="no_asterisk.gif";
document.form1.cleansingearth_star.src="no_asterisk.gif";
document.form1.monkeysgrip_star.src="no_asterisk.gif";
document.form1.primalleap_star.src="no_asterisk.gif";
document.form1.verdantlife_star.src="no_asterisk.gif";







document.form1.blindinglight_star.src="no_asterisk.gif"; 
document.form1.enthrall_star.src="no_asterisk.gif"; 
document.form1.sentinelstrike_star.src="no_asterisk.gif"; 
document.form1.thundrousword_star.src="no_asterisk.gif"; 
document.form1.exactingstrike_star.src="no_asterisk.gif"; 
document.form1.exorcismofsteel_star.src="no_asterisk.gif"; 
document.form1.harryingassault_star.src="no_asterisk.gif"; 
document.form1.mountainbreakingblow_star.src="no_asterisk.gif"; 
document.form1.vorpaltornado_star.src="no_asterisk.gif"; 
document.form1.warriorschallenge_star.src="no_asterisk.gif"; 
document.form1.enervatingsmite_star.src="no_asterisk.gif"; 
document.form1.fortifyingsmite_star.src="no_asterisk.gif"; 
document.form1.handofthegods_star.src="no_asterisk.gif"; 
document.form1.terrifyingsmite_star.src="no_asterisk.gif"; 
document.form1.arrowofvengeance_star.src="no_asterisk.gif"; 
document.form1.cheetahsrake_star.src="no_asterisk.gif"; 
document.form1.tripleshot_star.src="no_asterisk.gif"; 
document.form1.twoweaponeviscerate_star.src="no_asterisk.gif"; 
document.form1.dragontailstrike_star.src="no_asterisk.gif"; 
document.form1.houndingstrike_star.src="no_asterisk.gif"; 
document.form1.stabandgrab_star.src="no_asterisk.gif"; 
document.form1.strandoffate_star.src="no_asterisk.gif"; 
document.form1.thirstingtendrils_star.src="no_asterisk.gif"; 
document.form1.warlocksbargain_star.src="no_asterisk.gif"; 
document.form1.battleon_star.src="no_asterisk.gif"; 
document.form1.hailofsteel_star.src="no_asterisk.gif"; 
document.form1.thundrousfury_star.src="no_asterisk.gif"; 
document.form1.warlordsrush_star.src="no_asterisk.gif"; 
document.form1.combust_star.src="no_asterisk.gif"; 
document.form1.crushingtitansfist_star.src="no_asterisk.gif"; 
document.form1.forcevolley_star.src="no_asterisk.gif"; 
document.form1.icetomb_star.src="no_asterisk.gif"; 
document.form1.firestorm_star.src="no_asterisk.gif"; 
document.form1.holywrath_star.src="no_asterisk.gif"; 
document.form1.indominitablespirit_star.src="no_asterisk.gif"; 
document.form1.knightofglory_star.src="no_asterisk.gif"; 
document.form1.devastationswake_star.src="no_asterisk.gif"; 
document.form1.reavingstrike_star.src="no_asterisk.gif"; 
document.form1.strikeofthewatchfulguard_star.src="no_asterisk.gif"; 
document.form1.coronaofblindingradiance_star.src="no_asterisk.gif"; 
document.form1.crusadersboon_star.src="no_asterisk.gif"; 
document.form1.righteousinferno_star.src="no_asterisk.gif"; 
document.form1.cruelcageofsteel_star.src="no_asterisk.gif"; 
document.form1.greatramarrow_star.src="no_asterisk.gif"; 
document.form1.twoinoneshot_star.src="no_asterisk.gif"; 
document.form1.woundingwhirlwind_star.src="no_asterisk.gif"; 
document.form1.feintingflurry_star.src="no_asterisk.gif"; 
document.form1.flyingfoe_star.src="no_asterisk.gif"; 
document.form1.snakesretreat_star.src="no_asterisk.gif"; 
document.form1.delusionsofloyalty_star.src="no_asterisk.gif"; 
document.form1.minionsofmalbolge_star.src="no_asterisk.gif"; 
document.form1.wrathofacamar_star.src="no_asterisk.gif"; 
document.form1.breakthetempo_star.src="no_asterisk.gif"; 
document.form1.victorysurge_star.src="no_asterisk.gif"; 
document.form1.windmillofdoom_star.src="no_asterisk.gif"; 
document.form1.acidwave_star.src="no_asterisk.gif"; 
document.form1.cloudkill_star.src="no_asterisk.gif"; 
document.form1.disintegrate_star.src="no_asterisk.gif"; 
document.form1.evardsblacktentacles_star.src="no_asterisk.gif"; 
document.form1.angeloftheelevenwinds_star.src="no_asterisk.gif"; 
document.form1.clarioncalloftheastralsea_star.src="no_asterisk.gif"; 
document.form1.cloudchariot_star.src="no_asterisk.gif"; 
document.form1.purify_star.src="no_asterisk.gif"; 
document.form1.spiritofhealth_star.src="no_asterisk.gif"; 
document.form1.actofdesperation_star.src="no_asterisk.gif"; 
document.form1.nosurrender_star.src="no_asterisk.gif"; 
document.form1.angelicrescue_star.src="no_asterisk.gif"; 
document.form1.cleansingburst_star.src="no_asterisk.gif"; 
document.form1.giftoflife_star.src="no_asterisk.gif"; 
document.form1.unitedinfaith_star.src="no_asterisk.gif"; 
document.form1.forestghost_star.src="no_asterisk.gif"; 
document.form1.hitthedirt_star.src="no_asterisk.gif"; 
document.form1.masterofthehunt_star.src="no_asterisk.gif"; 
document.form1.safestride_star.src="no_asterisk.gif"; 
document.form1.cloudjump_star.src="no_asterisk.gif"; 
document.form1.dazzlingacrobatics_star.src="no_asterisk.gif"; 
document.form1.hidefromthelight_star.src="no_asterisk.gif"; 
document.form1.entropicward_star.src="no_asterisk.gif"; 
document.form1.ravensglamor_star.src="no_asterisk.gif"; 
document.form1.wingsofthefiend_star.src="no_asterisk.gif"; 
document.form1.heartofthetitan_star.src="no_asterisk.gif"; 
document.form1.heroicsurge_star.src="no_asterisk.gif"; 
document.form1.ownthebattlefield_star.src="no_asterisk.gif"; 
document.form1.massfly_star.src="no_asterisk.gif"; 
document.form1.mordenkainensmansion_star.src="no_asterisk.gif"; 
document.form1.timestop_star.src="no_asterisk.gif";


document.form1.ghostlyvengeance_star.src="no_asterisk.gif";
document.form1.indomitableresolve_star.src="no_asterisk.gif";
document.form1.oathofthefinalstrike_star.src="no_asterisk.gif";
document.form1.twinstep_star.src="no_asterisk.gif";
document.form1.laststand_star.src="no_asterisk.gif";
document.form1.primalinstinct_star.src="no_asterisk.gif";
document.form1.primalvigor_star.src="no_asterisk.gif";
document.form1.untouched_star.src="no_asterisk.gif";
document.form1.elegyunwritten_star.src="no_asterisk.gif";
document.form1.invisibletroupe_star.src="no_asterisk.gif";
document.form1.mirroredentourage_star.src="no_asterisk.gif";
document.form1.songoftransition_star.src="no_asterisk.gif";
document.form1.phantombeast_star.src="no_asterisk.gif";
document.form1.skytalon_star.src="no_asterisk.gif";
document.form1.unseenbeast_star.src="no_asterisk.gif";
document.form1.unyieldingroots_star.src="no_asterisk.gif";
document.form1.covenantofvengeance_star.src="no_asterisk.gif";
document.form1.invokeangelicform_star.src="no_asterisk.gif";
document.form1.invokeheroism_star.src="no_asterisk.gif";
document.form1.wardofdivinelight_star.src="no_asterisk.gif";
document.form1.bountyoflife_star.src="no_asterisk.gif";
document.form1.callthedead_star.src="no_asterisk.gif";
document.form1.doorwaytothespiritworld_star.src="no_asterisk.gif";
document.form1.spiritoftheworldhealer_star.src="no_asterisk.gif";
document.form1.dragonfear_star.src="no_asterisk.gif";
document.form1.platinumscales_star.src="no_asterisk.gif";
document.form1.sharedsorcery_star.src="no_asterisk.gif";
document.form1.windshape_star.src="no_asterisk.gif";
document.form1.eagleswings_star.src="no_asterisk.gif";
document.form1.panacea_star.src="no_asterisk.gif";
document.form1.renewal_star.src="no_asterisk.gif";
document.form1.wellspringoflife_star.src="no_asterisk.gif";



document.form1.astralbladesofdeath_star.src="no_asterisk.gif"; 
document.form1.divinecensure_star.src="no_asterisk.gif"; 
document.form1.hauntingstrike_star.src="no_asterisk.gif"; 
document.form1.healingtorch_star.src="no_asterisk.gif"; 
document.form1.cageofchains_star.src="no_asterisk.gif"; 
document.form1.fangsofsteel_star.src="no_asterisk.gif"; 
document.form1.hacknslash_star.src="no_asterisk.gif"; 
document.form1.paralyzingstrike_star.src="no_asterisk.gif"; 
document.form1.skullcrusher_star.src="no_asterisk.gif"; 
document.form1.warriorsurging_star.src="no_asterisk.gif"; 
document.form1.herewaitsthydoom_star.src="no_asterisk.gif"; 
document.form1.martyrssmite_star.src="no_asterisk.gif"; 
document.form1.resoundingsmite_star.src="no_asterisk.gif"; 
document.form1.sublimetranspostion_star.src="no_asterisk.gif"; 
document.form1.bladeward_star.src="no_asterisk.gif"; 
document.form1.cloakofthorns_star.src="no_asterisk.gif"; 
document.form1.hammershot_star.src="no_asterisk.gif"; 
document.form1.manticoresvolley_star.src="no_asterisk.gif"; 
document.form1.knavesgambit_star.src="no_asterisk.gif"; 
document.form1.scorpionstrike_star.src="no_asterisk.gif"; 
document.form1.steelentrapment_star.src="no_asterisk.gif"; 
document.form1.darktransport_star.src="no_asterisk.gif"; 
document.form1.spitefuldarts_star.src="no_asterisk.gif"; 
document.form1.thornsofvenom_star.src="no_asterisk.gif"; 
document.form1.greatdragonwarcry_star.src="no_asterisk.gif"; 
document.form1.pillartopost_star.src="no_asterisk.gif"; 
document.form1.rabbitsandwolves_star.src="no_asterisk.gif"; 
document.form1.suddenassault_star.src="no_asterisk.gif"; 
document.form1.acidstorm_star.src="no_asterisk.gif"; 
document.form1.chainlightning_star.src="no_asterisk.gif"; 
document.form1.thunderclap_star.src="no_asterisk.gif"; 
document.form1.nimbusofdoom_star.src="no_asterisk.gif"; 
document.form1.sacredword_star.src="no_asterisk.gif"; 
document.form1.sealofbinding_star.src="no_asterisk.gif"; 
document.form1.sealofprotection_star.src="no_asterisk.gif"; 
document.form1.reapersstance_star.src="no_asterisk.gif"; 
document.form1.reignofterror_star.src="no_asterisk.gif"; 
document.form1.supremacyofsteel_star.src="no_asterisk.gif"; 
document.form1.exaltedretribution_star.src="no_asterisk.gif"; 
document.form1.totheninehellswithyou_star.src="no_asterisk.gif"; 
document.form1.bloodstorm_star.src="no_asterisk.gif"; 
document.form1.tigersreflex_star.src="no_asterisk.gif"; 
document.form1.unstoppablearrows_star.src="no_asterisk.gif"; 
document.form1.bitingassault_star.src="no_asterisk.gif"; 
document.form1.ghostonthewind_star.src="no_asterisk.gif"; 
document.form1.hamstring_star.src="no_asterisk.gif"; 
document.form1.curseofthetwinprinces_star.src="no_asterisk.gif"; 
document.form1.tartareantomb_star.src="no_asterisk.gif"; 
document.form1.thirteenbalefulstars_star.src="no_asterisk.gif"; 
document.form1.relentlessassault_star.src="no_asterisk.gif"; 
document.form1.stirthehornetsnest_star.src="no_asterisk.gif"; 
document.form1.whiteravenscall_star.src="no_asterisk.gif"; 
document.form1.elementalmaw_star.src="no_asterisk.gif"; 
document.form1.maze_star.src="no_asterisk.gif"; 
document.form1.necroticweb_star.src="no_asterisk.gif"; 
document.form1.prismaticspray_star.src="no_asterisk.gif"; 
document.form1.punishingstrike_star.src="no_asterisk.gif"; 
document.form1.sacrificialhealing_star.src="no_asterisk.gif"; 
document.form1.scourgeoftheunworthy_star.src="no_asterisk.gif"; 
document.form1.sunburst_star.src="no_asterisk.gif"; 
document.form1.adamantinestrike_star.src="no_asterisk.gif"; 
document.form1.cruelreaper_star.src="no_asterisk.gif"; 
document.form1.diamondshielddefense_star.src="no_asterisk.gif"; 
document.form1.indomitablebattlestrike_star.src="no_asterisk.gif"; 
document.form1.blindingsmite_star.src="no_asterisk.gif"; 
document.form1.brandofjudgment_star.src="no_asterisk.gif"; 
document.form1.deificvengeance_star.src="no_asterisk.gif"; 
document.form1.restrictingsmite_star.src="no_asterisk.gif"; 
document.form1.stunningsmite_star.src="no_asterisk.gif"; 
document.form1.deathrend_star.src="no_asterisk.gif"; 
document.form1.hailofarrows_star.src="no_asterisk.gif"; 
document.form1.lightningshot_star.src="no_asterisk.gif"; 
document.form1.wanderingtornado_star.src="no_asterisk.gif"; 
document.form1.danceofdeath_star.src="no_asterisk.gif"; 
document.form1.hurricaneofblood_star.src="no_asterisk.gif"; 
document.form1.perfectstrike_star.src="no_asterisk.gif"; 
document.form1.banishtothevoid_star.src="no_asterisk.gif"; 
document.form1.curseofthefeyking_star.src="no_asterisk.gif"; 
document.form1.hellfirecurse_star.src="no_asterisk.gif"; 
document.form1.chimerabattlestrike_star.src="no_asterisk.gif"; 
document.form1.devastatingcharge_star.src="no_asterisk.gif"; 
document.form1.inciteheroism_star.src="no_asterisk.gif"; 
document.form1.warlordsdoom_star.src="no_asterisk.gif"; 
document.form1.blackfire_star.src="no_asterisk.gif"; 
document.form1.confusion_star.src="no_asterisk.gif"; 
document.form1.forcecage_star.src="no_asterisk.gif"; 
document.form1.astralstorm_star.src="no_asterisk.gif"; 
document.form1.godstrike_star.src="no_asterisk.gif"; 
document.form1.forcethebattle_star.src="no_asterisk.gif"; 
document.form1.nomercy_star.src="no_asterisk.gif"; 
document.form1.stormofdestruction_star.src="no_asterisk.gif"; 
document.form1.evenhandofjustice_star.src="no_asterisk.gif"; 
document.form1.powerfulfaith_star.src="no_asterisk.gif"; 
document.form1.followupblow_star.src="no_asterisk.gif"; 
document.form1.threeinoneshot_star.src="no_asterisk.gif"; 
document.form1.weaveawebofsteel_star.src="no_asterisk.gif"; 
document.form1.assassinspoint_star.src="no_asterisk.gif"; 
document.form1.immobilizingstrike_star.src="no_asterisk.gif"; 
document.form1.movingtarget_star.src="no_asterisk.gif"; 
document.form1.curseofthedarkdelirium_star.src="no_asterisk.gif"; 
document.form1.doomofdelban_star.src="no_asterisk.gif"; 
document.form1.hurlthroughhell_star.src="no_asterisk.gif"; 
document.form1.defydeath_star.src="no_asterisk.gif"; 
document.form1.standinvincible_star.src="no_asterisk.gif"; 
document.form1.greatericestorm_star.src="no_asterisk.gif"; 
document.form1.legionshold_star.src="no_asterisk.gif"; 
document.form1.meteorswarm_star.src="no_asterisk.gif"; 

document.form1.foesnare_star.src="no_asterisk.gif";
document.form1.lightningclash_star.src="no_asterisk.gif";
document.form1.whirlingblade_star.src="no_asterisk.gif";
document.form1.fearnoelements_star.src="no_asterisk.gif";
document.form1.mythalrecovery_star.src="no_asterisk.gif";
document.form1.blastbackswipe_star.src="no_asterisk.gif";
document.form1.corrosiveruin_star.src="no_asterisk.gif";
document.form1.slothstrike_star.src="no_asterisk.gif";
document.form1.transposinglunge_star.src="no_asterisk.gif";
document.form1.deepfreeze_star.src="no_asterisk.gif";
document.form1.elementalfoible_star.src="no_asterisk.gif";
document.form1.lingeringlightning_star.src="no_asterisk.gif";
document.form1.armathorsstep_star.src="no_asterisk.gif";
document.form1.dimensionalwarding_star.src="no_asterisk.gif";
document.form1.fatespurnedfoe_star.src="no_asterisk.gif";
document.form1.silversteelveil_star.src="no_asterisk.gif";
document.form1.electrifiedlash_star.src="no_asterisk.gif";
document.form1.flamewallstrike_star.src="no_asterisk.gif";
document.form1.isolatingslam_star.src="no_asterisk.gif";
document.form1.spikesofagony_star.src="no_asterisk.gif";
document.form1.beaconblade_star.src="no_asterisk.gif";
document.form1.begone_star.src="no_asterisk.gif";
document.form1.glamorblade_star.src="no_asterisk.gif";
document.form1.arcaneawareness_star.src="no_asterisk.gif";
document.form1.dimensionaldodge_star.src="no_asterisk.gif";
document.form1.impenetrablewarding_star.src="no_asterisk.gif";
document.form1.acidburstblade_star.src="no_asterisk.gif";
document.form1.dimensionalslash_star.src="no_asterisk.gif";
document.form1.seedoffire_star.src="no_asterisk.gif";
document.form1.acidforblood_star.src="no_asterisk.gif";
document.form1.infernossword_star.src="no_asterisk.gif";
document.form1.freethestormwithin_star.src="no_asterisk.gif";
document.form1.bolsteringwarding_star.src="no_asterisk.gif";
document.form1.elementalprotection_star.src="no_asterisk.gif";
document.form1.ironskin_star.src="no_asterisk.gif";
document.form1.suddenescape_star.src="no_asterisk.gif";
document.form1.icecage_star.src="no_asterisk.gif";
document.form1.spidersilkslash_star.src="no_asterisk.gif";
document.form1.swordshock_star.src="no_asterisk.gif";
document.form1.baneblade_star.src="no_asterisk.gif";
document.form1.hellsownblade_star.src="no_asterisk.gif";
document.form1.lightningrod_star.src="no_asterisk.gif";
document.form1.eyesofthemage_star.src="no_asterisk.gif";
document.form1.giantsmight_star.src="no_asterisk.gif";
document.form1.shackledwarding_star.src="no_asterisk.gif";
document.form1.acidfountain_star.src="no_asterisk.gif";
document.form1.meteorstrike_star.src="no_asterisk.gif";
document.form1.thunderreposte_star.src="no_asterisk.gif";
document.form1.boundinglightning_star.src="no_asterisk.gif";
document.form1.icyshackles_star.src="no_asterisk.gif";
document.form1.quicksilverblade_star.src="no_asterisk.gif";
document.form1.thunderingheart_star.src="no_asterisk.gif";
document.form1.maelstromblade_star.src="no_asterisk.gif";
document.form1.circleofdevastation_star.src="no_asterisk.gif";
document.form1.dimensionalcharge_star.src="no_asterisk.gif";
document.form1.astralthunderblade_star.src="no_asterisk.gif";
document.form1.obliteratingblaze_star.src="no_asterisk.gif";
document.form1.vorpaldoom_star.src="no_asterisk.gif";
document.form1.cursebite_star.src="no_asterisk.gif";
document.form1.flickeringvenom_star.src="no_asterisk.gif";
document.form1.contagion_star.src="no_asterisk.gif";
document.form1.yourglorioussacrifice_star.src="no_asterisk.gif";
document.form1.vestigeofkhaeleth_star.src="no_asterisk.gif";
document.form1.vestigeofmountvaelis_star.src="no_asterisk.gif";
document.form1.spiderscuttle_star.src="no_asterisk.gif";
document.form1.upsettingonslaught_star.src="no_asterisk.gif";
document.form1.yourdeliciousweakness_star.src="no_asterisk.gif";
document.form1.forcefulassault_star.src="no_asterisk.gif";
document.form1.twilightofthesoul_star.src="no_asterisk.gif";
document.form1.vestigeofugar_star.src="no_asterisk.gif";
document.form1.vestigeofxandor_star.src="no_asterisk.gif";
document.form1.shadowslip_star.src="no_asterisk.gif";
document.form1.deathboon_star.src="no_asterisk.gif";
document.form1.deathscommands_star.src="no_asterisk.gif";
document.form1.deathsfondcaress_star.src="no_asterisk.gif";
document.form1.ringofpain_star.src="no_asterisk.gif";
document.form1.vestigeofilmeth_star.src="no_asterisk.gif";
document.form1.vestigeofshax_star.src="no_asterisk.gif";
document.form1.darkestmirror_star.src="no_asterisk.gif";
document.form1.cursegrind_star.src="no_asterisk.gif";
document.form1.allmustsacrifice_star.src="no_asterisk.gif";
document.form1.kimmerielssmile_star.src="no_asterisk.gif";
document.form1.darkladysgift_star.src="no_asterisk.gif";
document.form1.vestigeofleraje_star.src="no_asterisk.gif";
document.form1.vestigeofsolis_star.src="no_asterisk.gif";
document.form1.ruinousresistance_star.src="no_asterisk.gif";
document.form1.unholyglee_star.src="no_asterisk.gif";
document.form1.yourdelectablepain_star.src="no_asterisk.gif";
document.form1.explosivecontagion_star.src="no_asterisk.gif";
document.form1.passionatebetrayal_star.src="no_asterisk.gif";
document.form1.vestigeofamaan_star.src="no_asterisk.gif";
document.form1.vestigeoftheburnedemperors_star.src="no_asterisk.gif";
document.form1.expedientsacrifice_star.src="no_asterisk.gif";
document.form1.dreadtheft_star.src="no_asterisk.gif";
document.form1.bladesofvanquishedarmies_star.src="no_asterisk.gif";
document.form1.invisibledeath_star.src="no_asterisk.gif";
document.form1.ringoftorment_star.src="no_asterisk.gif";
document.form1.vestigeoflandssoul_star.src="no_asterisk.gif";
document.form1.vestigeofthequeenofnamhar_star.src="no_asterisk.gif";
document.form1.inevitableundercut_star.src="no_asterisk.gif";
document.form1.onefinalsacrifice_star.src="no_asterisk.gif";
document.form1.spreadthecorrosion_star.src="no_asterisk.gif";
document.form1.vestigeofthemasterofthehiddenflame_star.src="no_asterisk.gif";
document.form1.vestigeofzuriel_star.src="no_asterisk.gif";
document.form1.horrificmawbite_star.src="no_asterisk.gif";
document.form1.plaguelash_star.src="no_asterisk.gif";
document.form1.burningfocus_star.src="no_asterisk.gif";
document.form1.spellmirror_star.src="no_asterisk.gif";
document.form1.spelleater_star.src="no_asterisk.gif";
document.form1.plagueofrootedmajesty_star.src="no_asterisk.gif";
document.form1.scarcarvingblade_star.src="no_asterisk.gif";
document.form1.calloftheplague_star.src="no_asterisk.gif";
document.form1.blurringblade_star.src="no_asterisk.gif";
document.form1.terribleimposition_star.src="no_asterisk.gif";
document.form1.hauntingreception_star.src="no_asterisk.gif";
document.form1.plaguefirebody_star.src="no_asterisk.gif";
document.form1.reachofthedoomed_star.src="no_asterisk.gif";
document.form1.cursedgraspingair_star.src="no_asterisk.gif";
document.form1.venomousbloodfang_star.src="no_asterisk.gif";
document.form1.burningtheplaguedbellows_star.src="no_asterisk.gif";
document.form1.submissionoftheearth_star.src="no_asterisk.gif";
document.form1.scarofbluewings_star.src="no_asterisk.gif";
document.form1.tearsoffireandblood_star.src="no_asterisk.gif";
document.form1.linesinburningsand_star.src="no_asterisk.gif";
document.form1.spellmothersembrace_star.src="no_asterisk.gif";
document.form1.inflictionoftheflamemist_star.src="no_asterisk.gif";
document.form1.rabidchainofsteel_star.src="no_asterisk.gif";
document.form1.bodynobody_star.src="no_asterisk.gif";
document.form1.healingfleshoftheinfected_star.src="no_asterisk.gif";
document.form1.irontoothofbloodlust_star.src="no_asterisk.gif";
document.form1.maskofmidnight_star.src="no_asterisk.gif";
document.form1.spellcurse_star.src="no_asterisk.gif";
document.form1.gravityofmoment_star.src="no_asterisk.gif";
document.form1.donningthemudflesh_star.src="no_asterisk.gif";
document.form1.spellplagueguardians_star.src="no_asterisk.gif";
document.form1.hideoustether_star.src="no_asterisk.gif";
document.form1.tonguesoftheearth_star.src="no_asterisk.gif";
document.form1.malignantgrowth_star.src="no_asterisk.gif";
document.form1.contagionflame_star.src="no_asterisk.gif";
document.form1.shiftingwave_star.src="no_asterisk.gif";
document.form1.impossibleflurry_star.src="no_asterisk.gif";
document.form1.echoesofvalor_star.src="no_asterisk.gif";
document.form1.metamorphosisofspellflame_star.src="no_asterisk.gif";





document.form1.aspectoffury_star.src="no_asterisk.gif";
document.form1.bondofthesacredduel_star.src="no_asterisk.gif";
document.form1.oathofdivinelightning_star.src="no_asterisk.gif";
document.form1.sigilofcarceri_star.src="no_asterisk.gif";
document.form1.flameheartrage_star.src="no_asterisk.gif";
document.form1.huntinglionrage_star.src="no_asterisk.gif";
document.form1.ironhammerrage_star.src="no_asterisk.gif";
document.form1.thunderfuryrage_star.src="no_asterisk.gif";
document.form1.confusingchorus_star.src="no_asterisk.gif";
document.form1.danceofbiringwind_star.src="no_asterisk.gif";
document.form1.menacingthunder_star.src="no_asterisk.gif";
document.form1.quicksteeldance_star.src="no_asterisk.gif";
document.form1.balefulpolymorph_star.src="no_asterisk.gif";
document.form1.calllightningstorm_star.src="no_asterisk.gif";
document.form1.devouringice_star.src="no_asterisk.gif";
document.form1.revitalizingpounce_star.src="no_asterisk.gif";
document.form1.slashingclaws_star.src="no_asterisk.gif";
document.form1.godhammer_star.src="no_asterisk.gif";
document.form1.markofanathema_star.src="no_asterisk.gif";
document.form1.threebeaconsoftwilight_star.src="no_asterisk.gif";
document.form1.wallofblades_star.src="no_asterisk.gif";
document.form1.guardianoftheprimalcopse_star.src="no_asterisk.gif";
document.form1.searingwindofthesouth_star.src="no_asterisk.gif";
document.form1.spiritofthewolfpack_star.src="no_asterisk.gif";
document.form1.stormguardianspirit_star.src="no_asterisk.gif";
document.form1.frosteddies_star.src="no_asterisk.gif";
document.form1.hostilitycharm_star.src="no_asterisk.gif";
document.form1.scintillatingstarburst_star.src="no_asterisk.gif";
document.form1.spitfirefurnace_star.src="no_asterisk.gif";
document.form1.formofsummerfire_star.src="no_asterisk.gif";
document.form1.formofthechargingboar_star.src="no_asterisk.gif";
document.form1.formoftherowansentinel_star.src="no_asterisk.gif";
document.form1.formofthestonecrusher_star.src="no_asterisk.gif";



document.form1.aspectofawe_star.src="no_asterisk.gif";
document.form1.oathoftheinevitableblade_star.src="no_asterisk.gif";
document.form1.templeofrespite_star.src="no_asterisk.gif";
document.form1.vengefulrecovery_star.src="no_asterisk.gif";
document.form1.ghostviperrage_star.src="no_asterisk.gif";
document.form1.hydrarage_star.src="no_asterisk.gif";
document.form1.stormdrakerage_star.src="no_asterisk.gif";
document.form1.winterphoenixrage_star.src="no_asterisk.gif";
document.form1.encirclingdance_star.src="no_asterisk.gif";
document.form1.increasingthetempo_star.src="no_asterisk.gif";
document.form1.irresistibledance_star.src="no_asterisk.gif";
document.form1.satireofprowess_star.src="no_asterisk.gif";
document.form1.entanglingthorns_star.src="no_asterisk.gif";
document.form1.lungeandvanish_star.src="no_asterisk.gif";
document.form1.primalbear_star.src="no_asterisk.gif";
document.form1.winterhailstorm_star.src="no_asterisk.gif";
document.form1.astraltempest_star.src="no_asterisk.gif";
document.form1.maledictionofgartak_star.src="no_asterisk.gif";
document.form1.summonangeloflight_star.src="no_asterisk.gif";
document.form1.tombofmagrym_star.src="no_asterisk.gif";
document.form1.greatbearguardian_star.src="no_asterisk.gif";
document.form1.hornsoftheundefeatedkhan_star.src="no_asterisk.gif";
document.form1.spiritoftheshieldbreaker_star.src="no_asterisk.gif";
document.form1.tendrilsofthefateweaver_star.src="no_asterisk.gif";
document.form1.balefulgazeofthebasilisk_star.src="no_asterisk.gif";
document.form1.blackfireserpent_star.src="no_asterisk.gif";
document.form1.prismaticexplsion_star.src="no_asterisk.gif";
document.form1.splitstrike_star.src="no_asterisk.gif";
document.form1.blizzardstrike_star.src="no_asterisk.gif";
document.form1.direbeastassault_star.src="no_asterisk.gif";
document.form1.lightningbarrage_star.src="no_asterisk.gif";
document.form1.thunderingbolts_star.src="no_asterisk.gif";






document.form1.aspectofdeath_star.src="no_asterisk.gif";
document.form1.bondofdestiny_star.src="no_asterisk.gif";
document.form1.executionersjustice_star.src="no_asterisk.gif";
document.form1.sigilofdamnation_star.src="no_asterisk.gif";
document.form1.ashhammerrage_star.src="no_asterisk.gif";
document.form1.blodhungerrage_star.src="no_asterisk.gif";
document.form1.bluedragonrage_star.src="no_asterisk.gif";
document.form1.stonetempestrage_star.src="no_asterisk.gif";
document.form1.adversarialsong_star.src="no_asterisk.gif";
document.form1.fraughtwithfailure_star.src="no_asterisk.gif";
document.form1.frenziedrhythm_star.src="no_asterisk.gif";
document.form1.visiondistortion_star.src="no_asterisk.gif";
document.form1.ferociousmaul_star.src="no_asterisk.gif";
document.form1.feylure_star.src="no_asterisk.gif";
document.form1.primalstorm_star.src="no_asterisk.gif";
document.form1.primaltiger_star.src="no_asterisk.gif";
document.form1.anthemofthefirstdawn_star.src="no_asterisk.gif";
document.form1.invokethefallen_star.src="no_asterisk.gif";
document.form1.rackinginvocationofpain_star.src="no_asterisk.gif";
document.form1.rainofcolorlessfire_star.src="no_asterisk.gif";
document.form1.ironbornspirit_star.src="no_asterisk.gif";
document.form1.spiritofthelaughingwanderer_star.src="no_asterisk.gif";
document.form1.spiritoftheworldserpent_star.src="no_asterisk.gif";
document.form1.westernwindofstorms_star.src="no_asterisk.gif";
document.form1.draconicincarnation_star.src="no_asterisk.gif";
document.form1.forcestorm_star.src="no_asterisk.gif";
document.form1.wordsofchaos_star.src="no_asterisk.gif";
document.form1.formoftheblackwolf_star.src="no_asterisk.gif";
document.form1.formofthedisplacerbeast_star.src="no_asterisk.gif";
document.form1.formofthejunglelord_star.src="no_asterisk.gif";
document.form1.formoftheautumnreaper_star.src="no_asterisk.gif";


document.form1.aspectofterror_star.src="no_asterisk.gif";
document.form1.fieryvengeance_star.src="no_asterisk.gif";
document.form1.finaloath_star.src="no_asterisk.gif";
document.form1.templeofresolution_star.src="no_asterisk.gif";
document.form1.crimsonphoenixrage_star.src="no_asterisk.gif";
document.form1.rageoftheprimalbeast_star.src="no_asterisk.gif";
document.form1.winterghostrage_star.src="no_asterisk.gif";
document.form1.worldserpentrage_star.src="no_asterisk.gif";
document.form1.herosbeacon_star.src="no_asterisk.gif";
document.form1.satireofleadership_star.src="no_asterisk.gif";
document.form1.spellbind_star.src="no_asterisk.gif";
document.form1.blindingblizzard_star.src="no_asterisk.gif";
document.form1.gazeofthebeast_star.src="no_asterisk.gif";
document.form1.lifeleechthorns_star.src="no_asterisk.gif";
document.form1.primalarchetype_star.src="no_asterisk.gif";
document.form1.firesofthesilvergate_star.src="no_asterisk.gif";
document.form1.invoketheabsolutedark_star.src="no_asterisk.gif";
document.form1.summonangelofvictory_star.src="no_asterisk.gif";
document.form1.wordofthegods_star.src="no_asterisk.gif";
document.form1.deathspirit_star.src="no_asterisk.gif";
document.form1.seaofserpents_star.src="no_asterisk.gif";
document.form1.spiritsofmist_star.src="no_asterisk.gif";
document.form1.spiritoftheunbrokenvow_star.src="no_asterisk.gif";
document.form1.endlessacid_star.src="no_asterisk.gif";
document.form1.entropicwhirlwind_star.src="no_asterisk.gif";
document.form1.prismaticstorm_star.src="no_asterisk.gif";
document.form1.formofthechimera_star.src="no_asterisk.gif";
document.form1.formofspringrenewal_star.src="no_asterisk.gif";
document.form1.formofthestarmetalwarrior_star.src="no_asterisk.gif";
document.form1.formofthesoulserpent_star.src="no_asterisk.gif";






TurnOffBeastStars();





document.form1.other01atwill_1_star.src="no_asterisk.gif";
document.form1.other01atwill_2_star.src="no_asterisk.gif"; 
document.form1.other01atwill_3_star.src="no_asterisk.gif"; 
document.form1.other01encounter_star.src="no_asterisk.gif"; 
document.form1.other01daily_star.src="no_asterisk.gif"; 
document.form1.other02atwill_star.src="no_asterisk.gif"; 
document.form1.other02encounter_star.src="no_asterisk.gif"; 
document.form1.other02daily_star.src="no_asterisk.gif"; 
document.form1.other03encounter_star.src="no_asterisk.gif"; 
document.form1.other05daily_star.src="no_asterisk.gif"; 
document.form1.other06atwill_star.src="no_asterisk.gif"; 
document.form1.other06encounter_star.src="no_asterisk.gif"; 
document.form1.other06daily_star.src="no_asterisk.gif"; 
document.form1.other07encounter_star.src="no_asterisk.gif"; 
document.form1.other09daily_star.src="no_asterisk.gif"; 
document.form1.other10atwill_star.src="no_asterisk.gif"; 
document.form1.other10encounter_star.src="no_asterisk.gif"; 
document.form1.other10daily_star.src="no_asterisk.gif"; 
document.form1.other13encounter_star.src="no_asterisk.gif"; 
document.form1.other15daily_star.src="no_asterisk.gif"; 
document.form1.other16atwill_star.src="no_asterisk.gif"; 
document.form1.other16encounter_star.src="no_asterisk.gif"; 
document.form1.other16daily_star.src="no_asterisk.gif"; 
document.form1.other17encounter_star.src="no_asterisk.gif"; 
document.form1.other19daily_star.src="no_asterisk.gif"; 
document.form1.other22atwill_star.src="no_asterisk.gif"; 
document.form1.other22encounter_star.src="no_asterisk.gif"; 
document.form1.other22daily_star.src="no_asterisk.gif"; 
document.form1.other23encounter_star.src="no_asterisk.gif"; 
document.form1.other25daily_star.src="no_asterisk.gif"; 
document.form1.other27encounter_star.src="no_asterisk.gif"; 
document.form1.other29daily_star.src="no_asterisk.gif"; 
 }

function LightPowerStars(){
//below here
if ((ClericAtWill())&(total_levels>=1))
{
document.form1.lanceoffaith_star.src="wis.gif"; 
document.form1.priestsshield_star.src="str.gif"; 
document.form1.righteousbrand_star.src="str.gif"; 
document.form1.sacredflame_star.src="wis.gif"; 
}
if ((FighterAtWill())&(total_levels>=1))
{
document.form1.cleave_star.src="str.gif"; 
document.form1.reapingstrike_star.src="str.gif"; 
document.form1.surestrike_star.src="str.gif"; 
document.form1.tideofiron_star.src="str.gif"; 
document.form1.brashstrike_star.src="strcon.gif"; 
document.form1.crushingsurge_star.src="strcon.gif"; 
document.form1.dualstrike_star.src="str.gif"; 
document.form1.footworklure_star.src="str.gif"; 
}
if ((PaladinAtWill())&(total_levels>=1))
{
document.form1.bolsteringstrike_star.src="wischr.gif"; 
document.form1.enfeeblingstrike_star.src="chr.gif"; 
document.form1.holystrike_star.src="strwis.gif"; 
document.form1.valiantstrike_star.src="str.gif"; 
}
if ((RangerAtWill())&(total_levels>=1))
{
document.form1.carefulattack_star.src="strdex.gif"; 
document.form1.hitandrun_star.src="str.gif"; 
document.form1.nimblestrike_star.src="dex.gif"; 
document.form1.twinstrike_star.src="strdex.gif"; 
document.form1.circlingstrike_star.src="str.gif";
document.form1.predatorstrike_star.src="none.gif";

}
if ((RogueAtWill())&(total_levels>=1))
{
document.form1.deftstrike_star.src="dex.gif"; 
document.form1.piercingstrike_star.src="dex.gif"; 
document.form1.ripostestrike_star.src="strdex.gif"; 
document.form1.slyflourish_star.src="dexchr.gif"; 
document.form1.dishearteningstrike_star.src="dex.gif"; 
}

if ((WarlockAtWill())&(total_levels>=1))
{
document.form1.direradiance_star.src="cn.gif"; 
document.form1.eldritchblast_star.src="conchr.gif"; 
document.form1.eyebite_star.src="chr.gif"; 
document.form1.eyesofthevestige_star.src="cn.gif"; 
document.form1.hellishrebuke_star.src="cn.gif"; 
document.form1.spitefulglamor_star.src="chr.gif"; 
}
if ((WarlordAtWill())&(total_levels>=1))
{
document.form1.commandersstrike_star.src="int.gif"; 
document.form1.furioussmash_star.src="strchr.gif"; 
document.form1.vipersstrike_star.src="str.gif"; 
document.form1.wolfpacktactics_star.src="str.gif"; 
document.form1.brashassault_star.src="strint.gif"; 
document.form1.openingshove_star.src="str.gif"; 
}
if ((WizardAtWill())&(total_levels>=1))
{
document.form1.cloudofdaggers_star.src="int.gif"; 
document.form1.magicmissile_star.src="int.gif"; 
document.form1.rayoffrost_star.src="int.gif"; 
document.form1.scorchingburst_star.src="int.gif"; 
document.form1.thunderwave_star.src="int.gif"; 
document.form1.illusoryambush_star.src="int.gif"; 
document.form1.phantombolt_star.src="int.gif"; 
document.form1.stormpillar_star.src="int.gif"; 
}
if ((AvengerAtWill())&(total_levels>=1))
{
document.form1.bondofpursuit_star.src="dexwis.gif";
document.form1.bondofretribution_star.src="intwis.gif";
document.form1.overwhelmingstrike_star.src="wis.gif";
document.form1.radiantvengeance_star.src="wis.gif";
}
if ((BarbarianAtWill())&(total_levels>=1))
{
document.form1.devastatingstrike_star.src="str.gif";
document.form1.howlingstrike_star.src="str.gif";
document.form1.pressingstrike_star.src="str.gif";
document.form1.recuperatingstrike_star.src="str.gif";
}
if ((BardAtWill())&(total_levels>=1))
{
document.form1.guidingstrike_star.src="chr.gif";
document.form1.misdirectedmark_star.src="chr.gif";
document.form1.viciousmockery_star.src="chr.gif";
document.form1.warsongstrike_star.src="chr.gif";
document.form1.jinxshot_star.src="chr.gif";
}
if ((DruidAtWill())&(total_levels>=1))
{

document.form1.callofthebeast_star.src="wis.gif";
document.form1.chillwind_star.src="wis.gif";
document.form1.flameseed_star.src="wis.gif";
document.form1.graspingclaws_star.src="wis.gif";
document.form1.pounce_star.src="wis.gif";
document.form1.savagerend_star.src="wis.gif";
document.form1.stormspike_star.src="wis.gif";
document.form1.thornwhip_star.src="wis.gif";
}
if ((InvokerAtWill())&(total_levels>=1))
{
document.form1.avenginglight_star.src="wis.gif";
document.form1.divinebolts_star.src="wis.gif";
document.form1.graspingshards_star.src="wis.gif";
document.form1.sunstrike_star.src="wis.gif";
document.form1.vanguardslightning_star.src="wis.gif";
}
if ((ShamanAtWill())&(total_levels>=1))
{
document.form1.defendingstrike_star.src="wis.gif";
document.form1.hauntingspirits_star.src="wis.gif";
document.form1.protectingstrike_star.src="wis.gif";
document.form1.stalkersstrike_star.src="wis.gif";
document.form1.watchersstrike_star.src="wis.gif";
document.form1.wrathofwinter_star.src="wis.gif";
}
if ((SorcererAtWill())&(total_levels>=1))
{
document.form1.acidorb_star.src="chr.gif";
document.form1.burningspray_star.src="chr.gif";
document.form1.chaosbolt_star.src="chr.gif";
document.form1.dragonfrost_star.src=dragonsoul();
document.form1.stormwalk_star.src="chr.gif";
document.form1.blazingstarfall_star.src=cosmicmagic();
document.form1.lightningstrike_star.src=stormmagic();
}
if ((WardenAtWill())&(total_levels>=1))
{
document.form1.earthshieldstrike_star.src="str.gif";
document.form1.strengthofstone_star.src="str.gif";
document.form1.thornstrike_star.src="str.gif";
document.form1.weightofearth_star.src="str.gif";
}
if ((SwordmageAtWill())&(total_levels>=1))
{
document.form1.boomingblade_star.src="conint.gif"; 
document.form1.greenflameblade_star.src="strint.gif"; 
document.form1.lightninglure_star.src="int.gif"; 
document.form1.swordburst_star.src="int.gif"; 
document.form1.luringstrike_star.src="int.gif"; 
}
if ((ClericEncounter())&(total_levels>=1))
{
document.form1.causefear_star.src="wis.gif"; 
document.form1.divineglow_star.src="wis.gif"; 
document.form1.healingstrike_star.src="str.gif"; 
document.form1.wrathfulthunder_star.src="str.gif"; 
}
if ((FighterEncounter())&(total_levels>=1))
{
document.form1.coveringattack_star.src="str.gif"; 
document.form1.passingattack_star.src="str.gif"; 
document.form1.spinningsweep_star.src="str.gif"; 
document.form1.steelserpentstrike_star.src="str.gif"; 
}
if ((PaladinEncounter())&(total_levels>=1))
{
document.form1.fearsomesmite_star.src="wischr.gif"; 
document.form1.piercingsmite_star.src="strwis.gif"; 
document.form1.radiantsmite_star.src="strwis.gif"; 
document.form1.shieldingsmite_star.src="wischr.gif"; 
}
if ((RangerEncounter())&(total_levels>=1))
{
document.form1.direwolverinestrike_star.src="str.gif"; 
document.form1.evasivestrike_star.src="strdex.gif"; 
document.form1.foxscunning_star.src="wis.gif"; 
document.form1.twofangedstrike_star.src="strdexwis.gif"; 
document.form1.enclosetheprey_star.src="str.gif";
document.form1.synchronizedstrike_star.src="none.gif";
}
if ((RogueEncounter())&(total_levels>=1))
{
document.form1.dazingstrike_star.src="dex.gif"; 
document.form1.kingscastle_star.src="dex.gif"; 
document.form1.positioningstrike_star.src="dexchr.gif"; 
document.form1.torturousstrike_star.src="strdex.gif"; 
}
if ((WarlockEncounter())&(total_levels>=1))
{
if (warlock_infernal){document.form1.diabolicgrasp_star.src="conint.gif"; }
else  {document.form1.diabolicgrasp_star.src="cn.gif"; }
if (warlock_star){document.form1.dreadfulword_star.src="intchr.gif"; }
else {document.form1.dreadfulword_star.src="chr.gif"; }
if (warlock_infernal){document.form1.vampiricembrace_star.src="conint.gif"; }
else {document.form1.vampiricembrace_star.src="cn.gif"; }
if (warlock_fey){document.form1.witchfire_star.src="intchr.gif"; }
else {document.form1.witchfire_star.src="chr.gif"; }
if (warlock_dark){document.form1.cursebite_star.src="intchr.gif";}
 else {document.form1.cursebite_star.src="chr.gif";}
document.form1.flickeringvenom_star.src="intchr.gif";
}
if ((WarlordEncounter())&(total_levels>=1))
{
if (warlord_inspiring){document.form1.guardingattack_star.src="strchr.gif"; }
else {document.form1.guardingattack_star.src="str.gif"; }
document.form1.hammerandanvil_star.src="str.gif"; 
document.form1.leafonthewind_star.src="str.gif"; 
if (warlord_tactical){document.form1.warlordsfavor_star.src="strint.gif"; }
else {document.form1.warlordsfavor_star.src="str.gif"; }
}
if ((WizardEncounter())&(total_levels>=1))
{
document.form1.burninghands_star.src="int.gif"; 
document.form1.chillstrike_star.src="int.gif"; 
document.form1.forceorb_star.src="int.gif"; 
document.form1.icyterrain_star.src="int.gif"; 
document.form1.rayofenfeeblement_star.src="int.gif"; 
}



if ((AvengerEncounter())&(total_levels>=1))
{
document.form1.angelicalacrity_star.src=censureofpursuit();
document.form1.avengingecho_star.src=censureofretribution();
document.form1.sharedmadness_star.src="wis.gif";
document.form1.whirlwindcharge_star.src="wis.gif";
}
if ((BarbarianEncounter())&(total_levels>=1))
{
document.form1.avalanchestrike_star.src=rageblood();
document.form1.bloodletting_star.src="str.gif";
document.form1.greatcleave_star.src="str.gif";
document.form1.vaultthefallen_star.src=thaneborn();
}


if ((BardEncounter())&(total_levels>=1))
{
document.form1.blunder_star.src=virtueofcunning();
document.form1.fastfriends_star.src="chr.gif";
document.form1.inspiringrefrain_star.src="chr.gif";
document.form1.shoutoftriumph_star.src=virtueofvalor();
}
if ((DruidEncounter())&(total_levels>=1))
{
document.form1.culltheherd_star.src="wis.gif";
document.form1.dartingbite_star.src=primalpredator();
document.form1.frostflash_star.src=primalguardian();
document.form1.twistingvines_star.src="wis.gif";
}
if ((InvokerEncounter())&(total_levels>=1))
{
document.form1.astralterror_star.src="wis.gif";
document.form1.bladesofastralfire_star.src=covenantofpreservation();
document.form1.spearoftheinquisitor_star.src="wis.gif";
document.form1.thunderofjudgment_star.src=covenantofwrath();
}
if ((ShamanEncounter())&(total_levels>=1))
{
document.form1.calltotheancestralwarrior_star.src="wis.gif";
document.form1.calltotheancientdefender_star.src="wis.gif";
document.form1.thunderbearswarding_star.src=protectorspirit();
document.form1.twinpanthers_star.src="wis.gif";
}
if ((SorcererEncounter())&(total_levels>=1))
{
document.form1.bedevilingburst_star.src="chr.gif";
document.form1.explosivepyre_star.src="chr.gif";
document.form1.frostbind_star.src="chr.gif";
document.form1.tempestbreath_star.src="chr.gif";
document.form1.thunderslam_star.src="chr.gif";
}

if ((WardenEncounter())&(total_levels>=1))
{
document.form1.earthspikes_star.src="str.gif";
document.form1.hungryearth_star.src="str.gif";
document.form1.thunderramassault_star.src=earthstrength();
document.form1.wildbloodfrenzy_star.src=wildblood();
}


if ((SwordmageEncounter())&(total_levels>=1))
{
document.form1.chillingblow_star.src="conint.gif"; 
document.form1.flamecyclone_star.src="strint.gif"; 
document.form1.foesnare_star.src="int.gif";
document.form1.lightningclash_star.src="int.gif";
}
if ((ClericDaily())&(total_levels>=1))
{
document.form1.avengingflame_star.src="str.gif"; 
document.form1.beaconofhope_star.src="wis.gif"; 
document.form1.cascadeoflight_star.src="wis.gif"; 
document.form1.guardianoffaith_star.src="wis.gif"; 
}
if ((FighterDaily())&(total_levels>=1))
{
document.form1.brutestrike_star.src="str.gif"; 
document.form1.comebackstrike_star.src="str.gif"; 
document.form1.villainsmenace_star.src="str.gif"; 
}
if ((PaladinDaily())&(total_levels>=1))
{
document.form1.onpainofdeath_star.src="chr.gif"; 
document.form1.paladinsjudgment_star.src="str.gif"; 
document.form1.radiantdelirium_star.src="chr.gif"; 
}
if ((RangerDaily())&(total_levels>=1))
{
document.form1.huntersbeartrap_star.src="strdex.gif"; 
document.form1.jawsofthewolf_star.src="str.gif"; 
document.form1.splitthetree_star.src="dex.gif"; 
document.form1.suddenstrike_star.src="str.gif"; 
document.form1.drivingthequarry_star.src="str.gif";
document.form1.partneredsavaging_star.src="none.gif";
}
if ((RogueDaily())&(total_levels>=1))
{
document.form1.blindingbarrage_star.src="dex.gif"; 
document.form1.easytarget_star.src="dex.gif"; 
document.form1.trickstrike_star.src="dex.gif"; 
}
if ((WarlockDaily())&(total_levels>=1))
{
document.form1.armorofagathys_star.src="conint.gif"; 
document.form1.curseofthedarkdream_star.src="chr.gif"; 
document.form1.dreadstar_star.src="chr.gif"; 
document.form1.flamesofphlegethos_star.src="cn.gif"; 
document.form1.contagion_star.src="chr.gif";
if (warlock_dark){document.form1.yourglorioussacrifice_star.src="intchr.gif";}
 else {document.form1.yourglorioussacrifice_star.src="chr.gif";}
document.form1.vestigeofkhaeleth_star.src="cn.gif";
document.form1.vestigeofmountvaelis_star.src="cn.gif";
}
if ((WarlordDaily())&(total_levels>=1))
{
document.form1.bastionofdefense_star.src="strchr.gif"; 
document.form1.leadtheattack_star.src="str.gif"; 
document.form1.pinthefoe_star.src="str.gif"; 
document.form1.whiteravenonslaught_star.src="str.gif"; 
}
if ((WizardDaily())&(total_levels>=1))
{
document.form1.acidarrow_star.src="int.gif"; 
document.form1.flamingsphere_star.src="int.gif"; 
document.form1.freezingcloud_star.src="int.gif"; 
document.form1.sleep_star.src="int.gif"; 
}


if ((AvengerDaily())&(total_levels>=1))
{
document.form1.aspectofmight_star.src="wis.gif";
document.form1.oathofthefinaldual_star.src="wis.gif";
document.form1.renewingstrike_star.src="wis.gif";
document.form1.templeoflight_star.src="wis.gif";
}
if ((BarbarianDaily())&(total_levels>=1))
{
document.form1.bloodhuntrage_star.src="str.gif";
document.form1.macetailsrage_star.src="str.gif";
document.form1.ragedrakesfrenzy_star.src="str.gif";
document.form1.swiftpantherrage_star.src="str.gif";
}
if ((BardDaily())&(total_levels>=1))
{
document.form1.echoesoftheguardian_star.src="chr.gif";
document.form1.slayerssong_star.src="chr.gif";
document.form1.stirringshout_star.src="chr.gif";
document.form1.verseoftriumph_star.src="chr.gif";
}
if ((DruidDaily())&(total_levels>=1))
{
document.form1.faeriefire_star.src="wis.gif";
document.form1.firesoflife_star.src="wis.gif";
document.form1.savagefrenzy_star.src="wis.gif";
document.form1.windprison_star.src="wis.gif";
}
if ((InvokerDaily())&(total_levels>=1))
{
document.form1.angelicechelon_star.src="wis.gif";
document.form1.bindinginvocationofchains_star.src="wis.gif";
document.form1.purgingfire_star.src="wis.gif";
document.form1.summonangeloffire_star.src="wis.gif";
}
if ((ShamanDaily())&(total_levels>=1))
{
document.form1.blessingofthesevenwinds_star.src="wis.gif";
document.form1.cleansingwindofthenorth_star.src="wis.gif";
document.form1.spiritofthehealingflood_star.src="wis.gif";
document.form1.wrathofthespiritworld_star.src="wis.gif";
}
if ((SorcererDaily())&(total_levels>=1))
{
document.form1.chromaticorb_star.src="chr.gif";
document.form1.dazzlingray_star.src="chr.gif";
document.form1.dragonfangbolt_star.src="chr.gif";
document.form1.lightningbreath_star.src="chr.gif";
}
if ((WardenDaily())&(total_levels>=1))
{
document.form1.formofthefearsomeram_star.src="str.gif";
document.form1.formoftherelentlesspanther_star.src="str.gif";
document.form1.formofthewillowsentinel_star.src="str.gif";
document.form1.formofwintersherald_star.src="str.gif";
}


if ((SwordmageDaily())&(total_levels>=1))
{
document.form1.burningblade_star.src="int.gif"; 
document.form1.frostbacklash_star.src="int.gif"; 
document.form1.whirlingblade_star.src="int.gif";
}
if ((ClericUtility())&(total_levels>=2))
{
document.form1.bless_star.src="none.gif"; 
document.form1.curelightwounds_star.src="none.gif"; 
document.form1.divineaid_star.src="chr.gif"; 
document.form1.sanctuary_star.src="none.gif"; 
document.form1.shieldoffaith_star.src="none.gif"; 
}
if ((FighterUtility())&(total_levels>=2))
{
document.form1.boundlessendurance_star.src="cn.gif"; 
document.form1.getoverhere_star.src="none.gif"; 
document.form1.noopening_star.src="none.gif"; 
document.form1.unstoppable_star.src="cn.gif"; 
}
if ((PaladinUtility())&(total_levels>=2))
{
document.form1.astralspeech_star.src="none.gif"; 
document.form1.martyrsblessing_star.src="none.gif"; 
document.form1.sacredcircle_star.src="none.gif"; 
}
if ((RangerUtility())&(total_levels>=2))
{
document.form1.crucialadvice_star.src="wis.gif"; 
document.form1.unbalancingparry_star.src="none.gif"; 
document.form1.yieldground_star.src="none.gif"; 
document.form1.heartenthebeast_star.src="none.gif";
document.form1.packalertness_star.src="none.gif";
}
if ((RogueUtility())&(total_levels>=2))
{
if (TrainedInStealth()){document.form1.fleetingghost_star.src="none.gif"; }
if (TrainedInAthletics()){document.form1.greatleapr_star.src="none.gif"; }
if (TrainedInBluff()){document.form1.masterofdeceit_star.src="none.gif"; }
if (TrainedInThievery()){document.form1.quickfingers_star.src="none.gif"; }
if (TrainedInAcrobatics()){document.form1.tumble_star.src="none.gif"; }
}
if ((WarlockUtility())&(total_levels>=2))
{
document.form1.beguilingtongue_star.src="none.gif"; 
document.form1.etherealstride_star.src="none.gif"; 
document.form1.fiendishresilience_star.src="cn.gif"; 
document.form1.shadowveil_star.src="none.gif"; 
document.form1.spiderscuttle_star.src="none.gif";
}
if ((WarlordUtility())&(total_levels>=2))
{
document.form1.aidtheinjured_star.src="none.gif"; 
document.form1.crescendoofviolence_star.src="chr.gif"; 
document.form1.knightsmove_star.src="none.gif"; 
document.form1.shakeitoff_star.src="chr.gif"; 
}
if ((WizardUtility())&(total_levels>=2))
{
document.form1.expeditiousretreat_star.src="none.gif"; 
document.form1.featherfall_star.src="none.gif"; 
document.form1.jump_star.src="none.gif"; 
document.form1.shield_star.src="none.gif"; 
}



if ((AvengerUtility())&(total_levels>=2))
{
document.form1.blessingofvengeance_star.src="none.gif";
document.form1.distractingflare_star.src="none.gif";
document.form1.refocusenmity_star.src="none.gif";
document.form1.resonantescape_star.src="none.gif";
}
if ((BarbarianUtility())&(total_levels>=2))
{
document.form1.combatspirit_star.src="none.gif";
document.form1.primalvitality_star.src="cn.gif";
document.form1.stonebreaker_star.src="none.gif";
document.form1.tigersleap_star.src="none.gif";
}
if ((BardUtility())&(total_levels>=2))
{
document.form1.hunterstune_star.src="none.gif";
document.form1.inspirecompetence_star.src="none.gif";
document.form1.songofcourage_star.src="none.gif";
document.form1.songofdefense_star.src="none.gif";
}
if ((DruidUtility())&(total_levels>=2))
{
document.form1.barkskin_star.src="cn.gif";
document.form1.fleetpursuit_star.src="dex.gif";
document.form1.obscuringmist_star.src="none.gif";
document.form1.skitteringsneak_star.src="none.gif";
}
if ((InvokerUtility())&(total_levels>=2))
{
document.form1.divinecall_star.src="none.gif";
document.form1.emissaryofthegods_star.src="none.gif";
document.form1.shroudofawe_star.src="none.gif";
document.form1.shroudofwarning_star.src="none.gif";
document.form1.walloflight_star.src="none.gif";
}
if ((ShamanUtility())&(total_levels>=2))
{
document.form1.bondsoftheclan_star.src="none.gif";
document.form1.spiritcall_star.src="none.gif";
document.form1.spiritoflife_star.src="none.gif";
document.form1.spiritsofbattle_star.src="none.gif";
}
if ((SorcererUtility())&(total_levels>=2))
{
document.form1.dragonflamemantle_star.src="none.gif";
document.form1.elementalshift_star.src="none.gif";
document.form1.stretchspell_star.src="dex.gif";
document.form1.unseenaid_star.src="none.gif";
}
if ((WardenUtility())&(total_levels>=2))
{
document.form1.eyesofthehawk_star.src="none.gif";
document.form1.mountainlionstep_star.src="none.gif";
document.form1.naturesabundance_star.src="none.gif";
document.form1.triumphantvigor_star.src="conwis.gif";
}





if ((SwordmageUtility())&(total_levels>=2))
{
document.form1.dimensionalwarp_star.src="none.gif"; 
document.form1.eldritchspeed_star.src="none.gif"; 
document.form1.fearnoelements_star.src="none.gif";
document.form1.mythalrecovery_star.src="none.gif";
}
if ((ClericEncounter())&(total_levels>=3))
{
document.form1.blazingbeacon_star.src="str.gif"; 
document.form1.command_star.src="wis.gif"; 
document.form1.dauntinglight_star.src="wis.gif"; 
document.form1.splitthesky_star.src="str.gif"; 
}
if ((FighterEncounter())&(total_levels>=3))
{
document.form1.armorpiercingthrust_star.src="strdex.gif"; 
document.form1.crushingblow_star.src="strcon.gif"; 
document.form1.danceofsteel_star.src="str.gif"; 
document.form1.precisestrike_star.src="str.gif"; 
document.form1.rainofblows_star.src="str.gif"; 
document.form1.sweepingblow_star.src="str.gif"; 
}
if ((PaladinEncounter())&(total_levels>=3))
{
document.form1.arcingsmite_star.src="str.gif"; 
document.form1.invigoratingsmite_star.src="wischr.gif"; 
document.form1.righteoussmite_star.src="wischr.gif"; 
document.form1.staggeringsmite_star.src="strwis.gif"; 
}
if ((RangerEncounter())&(total_levels>=3))
{
document.form1.cutandrun_star.src="strdex.gif"; 
document.form1.disruptivestrike_star.src="strdexwis.gif"; 
document.form1.shadowwaspstrike_star.src="strdex.gif"; 
document.form1.thundertuskboarstrike_star.src="strdexwis.gif"; 
document.form1.beastlatch_star.src="str.gif";
document.form1.pairedpredators_star.src="str.gif";
}
if ((RogueEncounter())&(total_levels>=3))
{
document.form1.baitandswitch_star.src=artfuldodger();
document.form1.setupstrike_star.src="dex.gif"; 
document.form1.toppleover_star.src=brutalscoundrel();
document.form1.trickstersblade_star.src="dexchr.gif"; 
}
if ((WarlockEncounter())&(total_levels>=3))
{
if (warlock_fey){document.form1.eldritchrain_star.src="intchr.gif"; }
else {document.form1.eldritchrain_star.src="chr.gif"; }
if (warlock_infernal){document.form1.fierybolt_star.src="conint.gif"; }
else  {document.form1.fierybolt_star.src="cn.gif"; }
if (warlock_star){document.form1.frigiddarkness_star.src="conint.gif"; }
else {document.form1.frigiddarkness_star.src="cn.gif"; }
if (warlock_fey){document.form1.otherwindstride_star.src="chr.gif"; }
else {document.form1.otherwindstride_star.src="intchr.gif"; }
document.form1.upsettingonslaught_star.src="chr.gif";
if (warlock_dark){document.form1.yourdeliciousweakness_star.src="intchr.gif";}
else {document.form1.yourdeliciousweakness_star.src="chr.gif";}
}
if ((WarlordEncounter())&(total_levels>=3))
{
document.form1.holdtheline_star.src="str.gif"; 
document.form1.inspiringwarcry_star.src="str.gif"; 
if (warlord_tactical){document.form1.steelmonsoon_star.src="strint.gif"; }
else {document.form1.steelmonsoon_star.src="str.gif"; }
if (warlord_inspiring){document.form1.warlordsstrike_star.src="strchr.gif"; }
else {document.form1.warlordsstrike_star.src="str.gif"; }
}
if ((WizardEncounter())&(total_levels>=3))
{
document.form1.colorspray_star.src="int.gif"; 
document.form1.fireshroud_star.src="int.gif"; 
document.form1.icyrays_star.src="int.gif"; 
document.form1.shocksphere_star.src="int.gif"; 
}


if ((AvengerEncounter())&(total_levels>=3))
{
document.form1.deflectingthunder_star.src="wis.gif";
document.form1.enmitysreach_star.src="wis.gif";
document.form1.halooffire_star.src=censureofretribution();
document.form1.sequesteringstrike_star.src=censureofpursuit();
}
if ((BarbarianEncounter())&(total_levels>=3))
{
document.form1.bladesweep_star.src=rageblood();
document.form1.bloodstrike_star.src="str.gif";
document.form1.daringcharge_star.src=thaneborn();
document.form1.hammerfall_star.src="str.gif";
document.form1.shatterbonestrike_star.src=thaneborn();
}
if ((BardEncounter())&(total_levels>=3))
{
document.form1.chargerscall_star.src=virtueofvalor();
document.form1.cunningferocity_star.src=virtueofcunning();
document.form1.dissonantstrain_star.src="chr.gif";
document.form1.impellingforce_star.src="chr.gif";
}
if ((DruidEncounter())&(total_levels>=3))
{
document.form1.batteringclaws_star.src="wis.gif";
document.form1.calllightning_star.src="wis.gif";
document.form1.predatorsflurry_star.src=primalpredator();
document.form1.tundrawind_star.src=primalguardian();
}
if ((InvokerEncounter())&(total_levels>=3))
{
document.form1.chainsofcarceri_star.src="wis.gif";
document.form1.glyphofimprisonment_star.src="wis.gif";
document.form1.offeringofjustice_star.src="wis.gif";
document.form1.sunhammer_star.src="wis.gif";
}
if ((ShamanEncounter())&(total_levels>=3))
{
document.form1.calltothesavageelder_star.src="wis.gif";
document.form1.lightningpantherspirit_star.src=stalkerspirit();
document.form1.rimefirespirit_star.src="wis.gif";
document.form1.springrenewalstrike_star.src=protectorspirit();
}
if ((SorcererEncounter())&(total_levels>=3))
{
document.form1.dancinglightning_star.src="chr.gif";
document.form1.flamespiral_star.src="chr.gif";
document.form1.icedragonsteeth_star.src="chr.gif";
document.form1.poisonousexhalation_star.src=dragonsoul();
document.form1.spectralclaw_star.src=wildmagic();
}
if ((WardenEncounter())&(total_levels>=3))
{
document.form1.burstofearthsfury_star.src="str.gif";
document.form1.earthgraspstrike_star.src=earthstrength();
document.form1.predatoryguardian_star.src=wildblood();
document.form1.thunderingstrike_star.src="str.gif";
}


if ((SwordmageEncounter())&(total_levels>=3))
{
document.form1.blastbackswipe_star.src="int.gif";
document.form1.corrosiveruin_star.src="int.gif";
document.form1.slothstrike_star.src="int.gif";
document.form1.transposinglunge_star.src="int.gif";
}
if ((ClericDaily())&(total_levels>=5))
{
document.form1.consecratedground_star.src="chr.gif"; 
document.form1.runeofpeace_star.src="str.gif"; 
document.form1.spiritualweapon_star.src="wis.gif"; 
document.form1.weaponofthegods_star.src="str.gif"; 
}
if ((FighterDaily())&(total_levels>=5))
{
document.form1.cracktheshell_star.src="str.gif"; 
document.form1.dizzyingblow_star.src="str.gif"; 
document.form1.rainofsteel_star.src="str.gif"; 
}
if ((PaladinDaily())&(total_levels>=5))
{
document.form1.hallowedcircle_star.src="chr.gif"; 
document.form1.martyrsretribution_star.src="str.gif"; 
document.form1.signofvulnerability_star.src="chr.gif"; 
}
if ((RangerDaily())&(total_levels>=5))
{
document.form1.excruciatingshot_star.src="dex.gif"; 
document.form1.frenziedskirmish_star.src="str.gif"; 
document.form1.splinteringshot_star.src="dex.gif"; 
document.form1.twowolfpounce_star.src="str.gif"; 
document.form1.bloodiedfrenzy_star.src="none.gif";
document.form1.laceratingmaul_star.src="str.gif";
}
if ((RogueDaily())&(total_levels>=5))
{
document.form1.cleverriposte_star.src="dex.gif"; 
document.form1.deepcut_star.src="strdex.gif"; 
document.form1.walkingwounded_star.src="dex.gif"; 
}
if ((WarlockDaily())&(total_levels>=5))
{
document.form1.avernianeruption_star.src="cn.gif"; 
document.form1.crownofmadness_star.src="chr.gif"; 
document.form1.curseofthebloodyfangs_star.src="chr.gif"; 
document.form1.hungerofhadar_star.src="cn.gif"; 
document.form1.forcefulassault_star.src="chr.gif";
document.form1.twilightofthesoul_star.src="chr.gif";
document.form1.vestigeofugar_star.src="cn.gif";
document.form1.vestigeofxandor_star.src="cn.gif";
}
if ((WarlordDaily())&(total_levels>=5))
{
document.form1.standthefallen_star.src="str.gif"; 
document.form1.turningpoint_star.src="str.gif"; 
document.form1.villainsnightmare_star.src="str.gif"; 
}
if ((WizardDaily())&(total_levels>=5))
{
document.form1.bigbysicygrasp_star.src="int.gif"; 
document.form1.fireball_star.src="int.gif"; 
document.form1.stinkingcloud_star.src="int.gif"; 
document.form1.web_star.src="int.gif"; 
}



if ((AvengerDaily())&(total_levels>=5))
{
document.form1.bondofforesight_star.src="wis.gif";
document.form1.dawhfiresigil_star.src="wis.gif";
document.form1.executionerscloak_star.src="wis.gif";
document.form1.oathofconsuminglight_star.src="wis.gif";
}
if ((BarbarianDaily())&(total_levels>=5))
{
document.form1.frostwolfrage_star.src="str.gif";
document.form1.silverphoenixrage_star.src="str.gif";
document.form1.thunderhawkrage_star.src="str.gif";
document.form1.vengefulstormrage_star.src="str.gif";
}
if ((BardDaily())&(total_levels>=5))
{
document.form1.satireofbravery_star.src="chr.gif";
document.form1.songofdiscord_star.src="chr.gif";
document.form1.tuneoficeandwind_star.src="chr.gif";
document.form1.wordofmysticwarding_star.src="chr.gif";
}
if ((DruidDaily())&(total_levels>=5))
{
document.form1.hobblingrend_star.src="wis.gif";
document.form1.primalwolverine_star.src="wis.gif";
document.form1.roarofterror_star.src="wis.gif";
document.form1.wallofthorns_star.src="wis.gif";
}
if ((InvokerDaily())&(total_levels>=5))
{
document.form1.bladeofvengeance_star.src="wis.gif";
document.form1.graspingchainsofthejusticiar_star.src="wis.gif";
document.form1.iconofterror_star.src=covenantofwrath();
document.form1.searingorb_star.src=covenantofpreservation();
}
if ((ShamanDaily())&(total_levels>=5))
{
document.form1.earthragespirit_star.src="wis.gif";
document.form1.spiritofthehawkswind_star.src="wis.gif";
document.form1.spiritoftheshieldingfire_star.src="wis.gif";
document.form1.warchieftainsblessing_star.src="wis.gif";
}
if ((SorcererDaily())&(total_levels>=5))
{
document.form1.acidicimplanation_star.src="chr.gif";
document.form1.palestflames_star.src="chr.gif";
document.form1.reelingtorment_star.src="chr.gif";
document.form1.serpentineblast_star.src="chr.gif";
document.form1.thunderleap_star.src="chr.gif";
}
if ((WardenDaily())&(total_levels>=5))
{
document.form1.hailofthorns_star.src="str.gif";
document.form1.stormstrike_star.src="str.gif";
document.form1.thunderstep_star.src="str.gif";
document.form1.wintersgrip_star.src="str.gif";
}




if ((SwordmageDaily())&(total_levels>=5))
{
document.form1.deepfreeze_star.src="int.gif";
document.form1.elementalfoible_star.src="int.gif";
document.form1.lingeringlightning_star.src="int.gif";
}
if ((ClericUtility())&(total_levels>=6))
{
document.form1.bastionofhealth_star.src="chr.gif"; 
document.form1.cureseriouswounds_star.src="none.gif"; 
document.form1.divinevigor_star.src="none.gif"; 
document.form1.holylantern_star.src="none.gif"; 
}
if ((FighterUtility())&(total_levels>=6))
{
document.form1.battleawareness_star.src="none.gif"; 
document.form1.defensivetraining_star.src="none.gif"; 
document.form1.unbreakable_star.src="cn.gif"; 
}
if ((PaladinUtility())&(total_levels>=6))
{
document.form1.divinebodyguard_star.src="none.gif"; 
document.form1.oneheartonemind_star.src="none.gif"; 
document.form1.wrathofthegods_star.src="chr.gif"; 
}
if ((RangerUtility())&(total_levels>=6))
{
document.form1.evadeambush_star.src="none.gif"; 
document.form1.skilledcompanion_star.src="none.gif"; 
document.form1.weavethroughthefray_star.src="wis.gif"; 
document.form1.defensiveposture_star.src="none.gif";
document.form1.invigoratethebeast_star.src="none.gif";
}
if ((RogueUtility())&(total_levels>=6))
{
if (TrainedInStealth()){document.form1.chameleon_star.src="none.gif"; }
if (TrainedInAcrobatics()){document.form1.ignobleescape_star.src="none.gif"; }
if (TrainedInIntimidate()){document.form1.mobmentality_star.src="chr.gif"; }
if (TrainedInAthletics()){document.form1.nimbleclimb_star.src="none.gif"; }
if (TrainedInBluff()){document.form1.slipperymind_star.src="none.gif"; }
}
if ((WarlockUtility())&(total_levels>=6))
{
document.form1.darkonesownluck_star.src="none.gif"; 
document.form1.feyswitch_star.src="none.gif"; 
document.form1.shroudofblacksteel_star.src="none.gif"; 
document.form1.spiderclimb_star.src="none.gif"; 
document.form1.shadowslip_star.src="none.gif";
}
if ((WarlordUtility())&(total_levels>=6))
{
document.form1.guidethecharge_star.src="int.gif"; 
document.form1.inspiringreaction_star.src="chr.gif"; 
document.form1.quickstep_star.src="none.gif"; 
document.form1.standtough_star.src="chr.gif"; 
}
if ((WizardUtility())&(total_levels>=6))
{
document.form1.dimensiondoor_star.src="none.gif"; 
document.form1.disguiseself_star.src="none.gif"; 
document.form1.dispelmagic_star.src="int.gif"; 
document.form1.invisibility_star.src="none.gif"; 
document.form1.levitate_star.src="none.gif"; 
document.form1.walloffog_star.src="none.gif"; 
}


if ((AvengerUtility())&(total_levels>=6))
{
document.form1.aspectofagility_star.src="none.gif";
document.form1.oathofenduringwrath_star.src="none.gif";
document.form1.oathoftherelentlesshunter_star.src="none.gif";
document.form1.wrathofthedivine_star.src="none.gif";
}
if ((BarbarianUtility())&(total_levels>=6))
{
document.form1.combatsurge_star.src="none.gif";
document.form1.indomitableshift_star.src="cn.gif";
document.form1.instinctivecharge_star.src="none.gif";
document.form1.lossofwill_star.src="none.gif";
}
if ((BardUtility())&(total_levels>=6))
{
document.form1.allegro_star.src="none.gif";
document.form1.odetosacrifice_star.src="cn.gif";
document.form1.songofconquest_star.src="cn.gif";
document.form1.trickstershealing_star.src="none.gif";
}
if ((DruidUtility())&(total_levels>=6))
{
document.form1.blackharbinger_star.src="none.gif";
document.form1.camouflagecloak_star.src="none.gif";
document.form1.chantofsustenance_star.src="none.gif";
document.form1.stalkerseyes_star.src="none.gif";
}
if ((InvokerUtility())&(total_levels>=6))
{
if (invoker_preservation){document.form1.astralstep_star.src="intelligence.gif";}
else {document.form1.astralstep_star.src="none.gif";}
document.form1.demandjustice_star.src="none.gif";
document.form1.sharedendurance_star.src="none.gif";
document.form1.shieldoflight_star.src="none.gif";
document.form1.symbolofhope_star.src="none.gif";
}
if ((ShamanUtility())&(total_levels>=6))
{
document.form1.blessingoftheirontree_star.src="none.gif";
document.form1.spiritofdawn_star.src="none.gif";
document.form1.spiritofthekeeper_star.src="none.gif";
document.form1.suddenrestoration_star.src="none.gif";
}
if ((SorcererUtility())&(total_levels>=6))
{
document.form1.arcaneempowerment_star.src="none.gif";
document.form1.energeticflight_star.src="none.gif";
if (sorcerer_dragonsoul){document.form1.suddenscales_star.src="str.gif";}
else {document.form1.suddenscales_star.src="none.gif";}
if (sorcerer_wildmagic){document.form1.swiftescape_star.src="dex.gif";}
else {document.form1.swiftescape_star.src="none.gif";}
}


if ((WardenUtility())&(total_levels>=6))
{
document.form1.bearsendurance_star.src="none.gif";
document.form1.earthguard_star.src="none.gif";
document.form1.seastride_star.src="none.gif";
document.form1.windbornestep_star.src="none.gif";
}


if ((SwordmageUtility())&(total_levels>=6))
{
document.form1.armathorsstep_star.src="none.gif";
document.form1.dimensionalwarding_star.src="none.gif";
document.form1.fatespurnedfoe_star.src="none.gif";
document.form1.silversteelveil_star.src="none.gif";
}
if ((ClericEncounter())&(total_levels>=7))
{
document.form1.awestrike_star.src="str.gif"; 
document.form1.breakthespirit_star.src="wis.gif"; 
document.form1.searinglight_star.src="wis.gif"; 
document.form1.strengthenthefaithful_star.src="str.gif"; 
}
if ((FighterEncounter())&(total_levels>=7))
{
document.form1.comeandgetit_star.src="str.gif"; 
document.form1.griffonswrath_star.src="str.gif"; 
document.form1.ironbulwark_star.src="str.gif"; 
document.form1.recklessstrike_star.src="str.gif"; 
document.form1.suddensurge_star.src="strdex.gif"; 
}
if ((PaladinEncounter())&(total_levels>=7))
{
document.form1.beckonfoe_star.src="wischr.gif"; 
document.form1.benigntransposition_star.src="wischr.gif"; 
document.form1.divinereverence_star.src="chr.gif"; 
document.form1.thundersmite_star.src="str.gif"; 
}
if ((RangerEncounter())&(total_levels>=7))
{
document.form1.clawsofthegriffon_star.src="str.gif"; 
document.form1.hawktalon_star.src="strdex.gif"; 
document.form1.spikesofthemanticore_star.src="dex.gif"; 
document.form1.sweepingwhirlwind_star.src="strwis.gif"; 
document.form1.beastrush_star.src="str.gif";
document.form1.harriedquarry_star.src="str.gif";
}
if ((RogueEncounter())&(total_levels>=7))
{
document.form1.cloudofsteel_star.src="dex.gif"; 
document.form1.imperilingstrike_star.src=brutalscoundrel();
document.form1.roguesluck_star.src=artfuldodger();
document.form1.sandintheeyes_star.src="dex.gif"; 
}
if ((WarlockEncounter())&(total_levels>=7))
{
if (warlock_infernal){document.form1.howlofdoom_star.src="cn.gif"; }
else {document.form1.howlofdoom_star.src="conint.gif"; }
if (warlock_infernal){document.form1.infernalmooncurse_star.src="cn.gif"; }
else {document.form1.infernalmooncurse_star.src="conint.gif"; }
if (warlock_fey){document.form1.mirethemind_star.src="intchr.gif"; }
else  {document.form1.mirethemind_star.src="chr.gif"; }
if (warlock_star){document.form1.signofillomen_star.src="intchr.gif"; }
else {document.form1.signofillomen_star.src="chr.gif"; }
document.form1.deathboon_star.src="chr.gif";
document.form1.deathscommands_star.src="chr.gif";
}
if ((WarlordEncounter())&(total_levels>=7))
{
if (warlord_inspiring){document.form1.lionsroar_star.src="strchr.gif"; }
else {document.form1.lionsroar_star.src="str.gif"; }
document.form1.sunderarmor_star.src="str.gif"; 
if (warlord_tactical){document.form1.surpriseattack_star.src="strchr.gif"; }
else {document.form1.surpriseattack_star.src="str.gif"; }
document.form1.surroundfoe_star.src="str.gif"; 
}
if ((WizardEncounter())&(total_levels>=7))
{
document.form1.fireburst_star.src="int.gif"; 
document.form1.lightningbolt_star.src="int.gif"; 
document.form1.spectralram_star.src="int.gif"; 
document.form1.winterswrath_star.src="int.gif"; 
}
//e=checkbox name=other07encounter_box><input name=other07encounter value="Other Le"asterisk.gif"; 
//<b>Level 9 Daily Powers:</b>
//<table width=100%><tr width=100%><td width=25% valign="top"><font face="Arial">



if ((AvengerEncounter())&(total_levels>=7))
{
document.form1.avengingwinds_star.src="wis.gif";
document.form1.bladestep_star.src="wis.gif";
document.form1.inexorablepursuit_star.src=censureofpursuit();
document.form1.slintertheformation_star.src=censureofretribution();
}
if ((BarbarianEncounter())&(total_levels>=7))
{
document.form1.curtainofsteel_star.src="str.gif";
document.form1.greatshout_star.src="str.gif";
document.form1.feastofviolence_star.src="str.gif";
document.form1.tideofblood_star.src="str.gif";
}
if ((BardEncounter())&(total_levels>=7))
{
document.form1.deflectattention_star.src="chr.gif";
document.form1.distractingshout_star.src=virtueofcunning();
document.form1.scorpionsclawstrike_star.src=virtueofvalor();
document.form1.unluck_star.src="chr.gif";
}
if ((DruidEncounter())&(total_levels>=7))
{
document.form1.feastoffury_star.src="wis.gif";
document.form1.latchon_star.src=primalpredator();
document.form1.swlrlingwinds_star.src=primalguardian();
document.form1.tremor_star.src="wis.gif";
}
if ((InvokerEncounter())&(total_levels>=7))
{
document.form1.balefuleyeofjudgment_star.src="wis.gif";
document.form1.boltoftherisingsun_star.src="wis.gif";
document.form1.invokeobedience_star.src=covenantofwrath();
document.form1.thunderboldoftheheavens_star.src=covenantofpreservation();
}
if ((ShamanEncounter())&(total_levels>=7))
{
document.form1.calltotheblooddancer_star.src="wis.gif";
document.form1.calltothehowlingstorm_star.src="wis.gif";
document.form1.thunderstormspirit_star.src="wis.gif";
document.form1.winterwindspirit_star.src="wis.gif";
}
if ((SorcererEncounter())&(total_levels>=7))
{
document.form1.chaosstorm_star.src="chr.gif";
document.form1.crushingsphere_star.src="chr.gif";
document.form1.rimestorm_star.src="chr.gif";
document.form1.shout_star.src="chr.gif";
}
if ((WardenEncounter())&(total_levels>=7))
{
document.form1.earthgift_star.src="str.gif";
document.form1.mountainhammer_star.src=earthstrength();
document.form1.stalkerspositioning_star.src=wildblood();
document.form1.thornburst_star.src="str.gif";
}

if ((SwordmageEncounter())&(total_levels>=7))
{
document.form1.electrifiedlash_star.src="int.gif";
document.form1.flamewallstrike_star.src="conint.gif";
document.form1.isolatingslam_star.src="conint.gif";
document.form1.spikesofagony_star.src="strint.gif";
}
if ((ClericDaily())&(total_levels>=9))
{
document.form1.astraldefenders_star.src="wis.gif"; 
document.form1.bladebarrier_star.src="wis.gif"; 
document.form1.divinepower_star.src="str.gif"; 
document.form1.flamestrike_star.src="wis.gif"; 
}
if ((FighterDaily())&(total_levels>=9))
{
document.form1.shiftthebattlefield_star.src="str.gif"; 
document.form1.thicketofblades_star.src="str.gif"; 
document.form1.victorioussurge_star.src="str.gif"; 
}
if ((PaladinDaily())&(total_levels>=9))
{
document.form1.crownofglory_star.src="chr.gif"; 
document.form1.onestandsalone_star.src="chr.gif"; 
document.form1.radiantpulse_star.src="chr.gif"; 
}
if ((RangerDaily())&(total_levels>=9))
{
document.form1.attacksontherun_star.src="strdex.gif"; 
document.form1.closequartersshot_star.src="dex.gif"; 
document.form1.sprayofarrows_star.src="dex.gif"; 
document.form1.swirlingleavesofsteel_star.src="str.gif"; 
document.form1.menacingcry_star.src="none.gif";
}
if ((RogueDaily())&(total_levels>=9))
{
document.form1.crimsonedge_star.src="strdex.gif"; 
document.form1.deadlypositioning_star.src="dex.gif"; 
document.form1.knockout_star.src="dex.gif"; 
}
if ((WarlockDaily())&(total_levels>=9))
{
document.form1.curseoftheblackfrost_star.src="chr.gif"; 
document.form1.ironspikeofdis_star.src="cn.gif"; 
document.form1.summonsofkhirad_star.src="cn.gif"; 
document.form1.thiefoffivefates_star.src="chr.gif"; 
document.form1.deathsfondcaress_star.src="chr.gif";
if (warlock_dark){document.form1.ringofpain_star.src="intchr.gif";}
else {document.form1.ringofpain_star.src="chr.gif";}
document.form1.vestigeofilmeth_star.src="cn.gif"; 
document.form1.vestigeofshax_star.src=vestigepact(); 
}
if ((WarlordDaily())&(total_levels>=9))
{
document.form1.irondragoncharge_star.src="str.gif"; 
document.form1.knockthemdown_star.src="str.gif"; 
document.form1.whiteravenstrike_star.src="strchr.gif"; 
}
if ((WizardDaily())&(total_levels>=9))
{
document.form1.icestorm_star.src="int.gif"; 
document.form1.lightningserpent_star.src="int.gif"; 
document.form1.mordenkainenssword_star.src="int.gif"; 
document.form1.walloffire_star.src="int.gif"; 
}



if ((AvengerDaily())&(total_levels>=9))
{
document.form1.aspectofspeed_star.src="wis.gif";
document.form1.enduringstrike_star.src="wis.gif";
document.form1.oathofpursuit_star.src="wis.gif";
document.form1.templeofshadow_star.src="wis.gif";
}
if ((BarbarianDaily())&(total_levels>=9))
{
document.form1.blackdragonrage_star.src="str.gif";
document.form1.oakhammerrage_star.src="str.gif";
document.form1.stonebearrage_star.src="str.gif";
document.form1.whitetigerrage_star.src="str.gif";
}
if ((BardDaily())&(total_levels>=9))
{
document.form1.forcefulconduit_star.src="chr.gif";
document.form1.hideouslaughter_star.src="chr.gif";
document.form1.hymnofthedaringrescue_star.src="chr.gif";
document.form1.thunderblade_star.src="chr.gif";
}
if ((DruidDaily())&(total_levels>=9))
{
document.form1.entangle_star.src="wis.gif";
document.form1.feralmauling_star.src="wis.gif";
document.form1.primalwolf_star.src="wis.gif";
document.form1.sunbeam_star.src="wis.gif";
}
if ((InvokerDaily())&(total_levels>=9))
{
document.form1.ceruleanflames_star.src="wis.gif";
document.form1.fourfoldinvocationofdoom_star.src="wis.gif";
document.form1.summonbladeangel_star.src="wis.gif";
document.form1.visionsofparadise_star.src="wis.gif";
}
if ((ShamanDaily())&(total_levels>=9))
{
document.form1.ancientwarlordsinspiration_star.src="wis.gif";
document.form1.clevertricksterspirit_star.src="wis.gif";
document.form1.ragingstormspirit_star.src="wis.gif";
document.form1.spiritofautumnsreaping_star.src="wis.gif";
}



if ((SorcererDaily())&(total_levels>=9))
{
document.form1.adamantineecho_star.src=dragonsoul();
document.form1.contagiouscurse_star.src="chr.gif";
document.form1.primethefire_star.src="chr.gif";
document.form1.staggeringblast_star.src="chr.gif";
}
if ((WardenDaily())&(total_levels>=9))
{
document.form1.formoftheoaksentinel_star.src="str.gif";
document.form1.formofthefrenziedwolverine_star.src="str.gif";
document.form1.formofthestonesentinel_star.src="str.gif";
document.form1.formofthestormeagle_star.src="str.gif";
}



if ((SwordmageDaily())&(total_levels>=9))
{
document.form1.beaconblade_star.src="int.gif";
document.form1.begone_star.src="int.gif";
document.form1.glamorblade_star.src="int.gif";
}
if ((ClericUtility())&(total_levels>=10))
{
document.form1.astralrefuge_star.src="none.gif"; 
document.form1.knightsofunyieldingvalor_star.src="none.gif"; 
document.form1.masscurelightwounds_star.src="chr.gif"; 
document.form1.shieldingword_star.src="none.gif"; 
}
if ((FighterUtility())&(total_levels>=10))
{
document.form1.intothefray_star.src="none.gif"; 
document.form1.lastditchevasion_star.src="none.gif"; 
document.form1.stalwartguard_star.src="none.gif"; 
}
if ((PaladinUtility())&(total_levels>=10))
{
document.form1.cleansingspirit_star.src="none.gif"; 
document.form1.nobleshield_star.src="none.gif"; 
document.form1.turnthetide_star.src="none.gif"; 
}
if ((RangerUtility())&(total_levels>=10))
{
document.form1.expeditiousstride_star.src="none.gif"; 
document.form1.opentherange_star.src="wis.gif"; 
document.form1.undauntedstride_star.src="none.gif"; 
document.form1.companionemplacement_star.src="none.gif";
document.form1.quickrecovery_star.src="none.gif";
}
if ((RogueUtility())&(total_levels>=10))
{
if (TrainedInAcrobatics()){document.form1.certainfreedom_star.src="none.gif"; }
if (TrainedInAcrobatics()){document.form1.closequarters_star.src="none.gif"; }
if (TrainedInThievery()){document.form1.dangeroustheft_star.src="none.gif"; }
if (TrainedInStealth()){document.form1.shadowstride_star.src="none.gif"; }
}
if ((WarlockUtility())&(total_levels>=10))
{
document.form1.ambassadorimp_star.src="none.gif"; 
document.form1.shadowform_star.src="none.gif"; 
document.form1.shieldingshades_star.src="none.gif"; 
document.form1.warlocksleap_star.src="none.gif"; 
document.form1.darkestmirror_star.src="none.gif";
}
if ((WarlordUtility())&(total_levels>=10))
{
document.form1.defensiverally_star.src="none.gif"; 
document.form1.easesuffering_star.src="none.gif"; 
document.form1.tacticalshift_star.src="int.gif"; 
}
if ((WizardUtility())&(total_levels>=10))
{
document.form1.arcanegate_star.src="none.gif"; 
document.form1.blur_star.src="none.gif"; 
document.form1.mirrorimage_star.src="none.gif"; 
document.form1.resistance_star.src="int.gif"; 
}


if ((AvengerUtility())&(total_levels>=10))
{
document.form1.avengersreadiness_star.src="none.gif";
document.form1.channelendurance_star.src="none.gif";
document.form1.eyeofjustice_star.src="none.gif";
document.form1.riveroflife_star.src="none.gif";
}
if ((BarbarianUtility())&(total_levels>=10))
{
document.form1.denydeath_star.src="none.gif";
document.form1.heartstrike_star.src="chr.gif";
document.form1.mountainroots_star.src="none.gif";
document.form1.wellspringofrenewal_star.src="cn.gif";
}
if ((BardUtility())&(total_levels>=10))
{
document.form1.illusoryerasure_star.src="none.gif";
document.form1.songofrecovery_star.src="none.gif";
document.form1.veil_star.src="none.gif";
document.form1.wordoflife_star.src="none.gif";
}
if ((DruidUtility())&(total_levels>=10))
{
document.form1.armorofthewild_star.src="cn.gif";
document.form1.feywildsojourn_star.src="none.gif";
document.form1.rootsofrescue_star.src="none.gif";
document.form1.winterstorm_star.src="none.gif";
}
if ((InvokerUtility())&(total_levels>=10))
{
document.form1.angelicvisage_star.src="none.gif";
document.form1.covenantofendurance_star.src="none.gif";
document.form1.divinerenewal_star.src="none.gif";
document.form1.martyrsward_star.src="none.gif";
}
if ((ShamanUtility())&(total_levels>=10))
{
document.form1.primalgust_star.src="none.gif";
document.form1.rockshieldspirits_star.src="none.gif";
document.form1.spiritsoftheshadowedmoon_star.src="none.gif";
document.form1.spiritsummons_star.src="none.gif";
}
if ((SorcererUtility())&(total_levels>=10))
{
document.form1.chaoslink_star.src="none.gif";
document.form1.devourmagic_star.src="chr.gif";
document.form1.invertresistance_star.src="none.gif";
document.form1.narrowescape_star.src="dexchr.gif";
}
if ((WardenUtility())&(total_levels>=10))
{
document.form1.earthstride_star.src="cn.gif";
document.form1.returningstrength_star.src="str.gif";
document.form1.shieldofstone_star.src="none.gif";
document.form1.wardingvines_star.src="none.gif";
}




if ((SwordmageUtility())&(total_levels>=10))
{
document.form1.arcaneawareness_star.src="none.gif";
document.form1.dimensionaldodge_star.src="none.gif";
document.form1.impenetrablewarding_star.src="none.gif";
}
if ((ClericEncounter())&(total_levels>=13))
{
document.form1.arcoftherighteous_star.src="str.gif"; 
document.form1.inspiringstrike_star.src="str.gif"; 
document.form1.mantleofglory_star.src="wis.gif"; 
document.form1.plagueofdoom_star.src="wis.gif"; 
}
if ((FighterEncounter())&(total_levels>=13))
{
document.form1.anvilofdoom_star.src="str.gif"; 
document.form1.chainsofsorrow_star.src="strdex.gif"; 
document.form1.giantswake_star.src="strcon.gif"; 
document.form1.silverstep_star.src="strdex.gif"; 
document.form1.stormofblows_star.src="strdex.gif"; 
document.form1.talonoftheroc_star.src="str.gif"; 
}
if ((PaladinEncounter())&(total_levels>=13))
{
document.form1.entanglingsmite_star.src="chr.gif"; 
document.form1.radiantcharge_star.src="strwis.gif"; 
document.form1.renewingsmite_star.src="wischr.gif"; 
document.form1.whirlwindsmite_star.src="str.gif"; 
}
if ((RangerEncounter())&(total_levels>=13))
{
document.form1.armorsplinter_star.src="strwis.gif"; 
document.form1.knockdownshot_star.src="dex.gif"; 
document.form1.nimbledefense_star.src="strwis.gif"; 
document.form1.pinningstrike_star.src="strdex.gif"; 
document.form1.herdtheprey_star.src="none.gif";
document.form1.knockdownpounce_star.src="str.gif";
}
if ((RogueEncounter())&(total_levels>=13))
{
document.form1.foolsopportunity_star.src="dex.gif"; 
document.form1.stunningstrike_star.src="none.gif"; 
document.form1.tornadostrike_star.src=artfuldodger();
document.form1.unbalancingattack_star.src="dex.gif"; 
}
if ((WarlockEncounter())&(total_levels>=13))
{
if (warlock_fey){document.form1.bewitchingwhispers_star.src="intchr.gif"; }
else {document.form1.bewitchingwhispers_star.src="chr.gif"; }
if (warlock_star){document.form1.coldfirevortex_star.src="conint.gif"; }
else {document.form1.coldfirevortex_star.src="cn.gif"; }
if (warlock_infernal){document.form1.harrowstorm_star.src="conint.gif"; }
else {document.form1.harrowstorm_star.src="cn.gif"; }
if (warlock_infernal){document.form1.soulflaying_star.src="conint.gif"; }
else {document.form1.soulflaying_star.src="cn.gif"; }
document.form1.cursegrind_star.src="chr.gif";
document.form1.allmustsacrifice_star.src="chr.gif";
}
if ((WarlordEncounter())&(total_levels>=13))
{
if (warlord_tactical){document.form1.beatthemintotheground_star.src="strint.gif"; }
else {document.form1.beatthemintotheground_star.src="str.gif"; }
if (warlord_inspiring){document.form1.bolsteringblow_star.src="strchr.gif"; }
else {document.form1.bolsteringblow_star.src="str.gif"; }
document.form1.denyingsmite_star.src="str.gif"; 
document.form1.furyofthesirocco_star.src="str.gif"; 
}
if ((WizardEncounter())&(total_levels>=13))
{
document.form1.frostburn_star.src="int.gif"; 
document.form1.mesmerichold_star.src="int.gif"; 
document.form1.prismaticburst_star.src="int.gif"; 
document.form1.thunderlance_star.src="int.gif"; 
}



if ((AvengerEncounter())&(total_levels>=13))
{
document.form1.cloudofsouls_star.src=censureofretribution();
document.form1.lightoftheavengingsun_star.src="wis.gif";
document.form1.sequesteringword_star.src=censureofpursuit();
document.form1.whirlingblades_star.src="wis.gif";
}
if ((BarbarianEncounter())&(total_levels>=13))
{
document.form1.bladewhirlwind_star.src="str.gif";
document.form1.cracktheskull_star.src="str.gif";
document.form1.stormofblades_star.src="str.gif";
document.form1.terrorscry_star.src=thaneborn();
document.form1.thunderfall_star.src="str.gif";
}
if ((BardEncounter())&(total_levels>=13))
{
document.form1.earthquakestrike_star.src=virtueofvalor();
document.form1.foolhardyfighting_star.src=virtueofcunning();
document.form1.harmonyofthetwo_star.src="chr.gif";
document.form1.songofstorms_star.src="chr.gif";
}
if ((DruidEncounter())&(total_levels>=13))
{
document.form1.clawsofretribution_star.src=primalpredator();
document.form1.esxposeweakness_star.src=primalguardian();
document.form1.thundercrash_star.src="wis.gif";
document.form1.tidalsurge_star.src="wis.gif";
}
if ((InvokerEncounter())&(total_levels>=13))
{
document.form1.compelattention_star.src="wis.gif";
document.form1.pilarofguardianflame_star.src="wis.gif";
document.form1.sealoftheheretic_star.src=covenantofwrath();
document.form1.windsofcelestia_star.src=covenantofpreservation();
}
if ((ShamanEncounter())&(total_levels>=13))
{
document.form1.calltotheindomitabledefender_star.src=protectorspirit();
document.form1.calltothelaughingfortune_star.src=stalkerspirit();
document.form1.howlinggust_star.src="wis.gif";
document.form1.spiritofcleansinglight_star.src="wis.gif";
}
if ((SorcererEncounter())&(total_levels>=13))
{
document.form1.chainsoffire_star.src="chr.gif";
document.form1.jawsoftheearth_star.src="chr.gif";
document.form1.mindhammer_star.src=wildmagic();
document.form1.thunderbreath_star.src=dragonsoul();
}
if ((WardenEncounter())&(total_levels>=13))
{
document.form1.creepersgrasp_star.src="str.gif";
document.form1.icyshards_star.src="str.gif";
document.form1.ponderousstrike_star.src=earthstrength();
document.form1.sunburststrike_star.src=wildblood();
}

// below here

if ((SwordmageEncounter())&(total_levels>=13))
{
document.form1.acidburstblade_star.src="strint.gif";
document.form1.dimensionalslash_star.src="conint.gif";
document.form1.seedoffire_star.src="int.gif";
}
if ((ClericDaily())&(total_levels>=15))
{
document.form1.holyspark_star.src="str.gif"; 
document.form1.purifyingfire_star.src="wis.gif"; 
document.form1.sealofwarding_star.src="wis.gif"; 
}
if ((FighterDaily())&(total_levels>=15))
{
document.form1.dragonsfangs_star.src="str.gif"; 
document.form1.serpentdancestrike_star.src="str.gif"; 
document.form1.unyieldingavalanche_star.src="cn.gif"; 
}
if ((PaladinDaily())&(total_levels>=15))
{
document.form1.bloodiedretribution_star.src="str.gif"; 
document.form1.breakthewall_star.src="chr.gif"; 
document.form1.truenemesis_star.src="chr.gif"; 
}
if ((RangerDaily())&(total_levels>=15))
{
document.form1.bladecascade_star.src="str.gif"; 
document.form1.bleedingwounds_star.src="dex.gif"; 
document.form1.confoundingarrows_star.src="dex.gif"; 
document.form1.stunningsteel_star.src="str.gif"; 
document.form1.bloodfrenzy_star.src="str.gif";
document.form1.scentoffear_star.src="none.gif";
}
if ((RogueDaily())&(total_levels>=15))
{
document.form1.bloodypath_star.src="none.gif"; 
document.form1.garottegrip_star.src="dex.gif"; 
document.form1.slayingstrike_star.src="strdex.gif"; 
}
if ((WarlockDaily())&(total_levels>=15))
{
document.form1.curseofthegoldenmist_star.src="chr.gif"; 
document.form1.fireswarm_star.src="cn.gif"; 
document.form1.tendrilsofthuban_star.src="cn.gif"; 
document.form1.thirstingmaw_star.src="cn.gif"; 
document.form1.kimmerielssmile_star.src="chr.gif";
document.form1.darkladysgift_star.src="chr.gif";
document.form1.vestigeofleraje_star.src="cn.gif";
document.form1.vestigeofsolis_star.src="cn.gif";
}
if ((WarlordDaily())&(total_levels>=15))
{
document.form1.makethembleed_star.src="str.gif"; 
document.form1.renewthetroops_star.src="strchr.gif"; 
document.form1.warlordsgambit_star.src="str.gif"; 
}
if ((WizardDaily())&(total_levels>=15))
{
document.form1.bigbysgraspinghands_star.src="int.gif"; 
document.form1.blastofcold_star.src="int.gif"; 
document.form1.otilukesresilientsphere_star.src="int.gif"; 
document.form1.prismaticbeams_star.src="int.gif"; 
document.form1.wallofice_star.src="int.gif"; 
}



if ((AvengerDaily())&(total_levels>=15))
{
document.form1.aspectoffury_star.src="wis.gif";
document.form1.bondofthesacredduel_star.src="wis.gif";
document.form1.oathofdivinelightning_star.src="wis.gif";
document.form1.sigilofcarceri_star.src="wis.gif";
}
if ((BarbarianDaily())&(total_levels>=15))
{
document.form1.flameheartrage_star.src="str.gif";
document.form1.huntinglionrage_star.src="str.gif";
document.form1.ironhammerrage_star.src="str.gif";
document.form1.thunderfuryrage_star.src="str.gif";
}
if ((BardDaily())&(total_levels>=15))
{
document.form1.confusingchorus_star.src="chr.gif";
document.form1.danceofbiringwind_star.src="chr.gif";
document.form1.menacingthunder_star.src="chr.gif";
document.form1.quicksteeldance_star.src="chr.gif";
}
if ((DruidDaily())&(total_levels>=15))
{
document.form1.balefulpolymorph_star.src="wis.gif";
document.form1.calllightningstorm_star.src="wis.gif";
document.form1.devouringice_star.src="wis.gif";
document.form1.revitalizingpounce_star.src="wis.gif";
document.form1.slashingclaws_star.src="wis.gif";
}
if ((InvokerDaily())&(total_levels>=15))
{
document.form1.godhammer_star.src="wis.gif";
document.form1.markofanathema_star.src="wis.gif";
document.form1.threebeaconsoftwilight_star.src="wis.gif";
document.form1.wallofblades_star.src="wis.gif";
}
if ((ShamanDaily())&(total_levels>=15))
{
document.form1.guardianoftheprimalcopse_star.src="wis.gif";
document.form1.searingwindofthesouth_star.src="wis.gif";
document.form1.spiritofthewolfpack_star.src="wis.gif";
document.form1.stormguardianspirit_star.src="wis.gif";
}
if ((SorcererDaily())&(total_levels>=15))
{
document.form1.frosteddies_star.src="chr.gif";
document.form1.hostilitycharm_star.src=wildmagic();
document.form1.scintillatingstarburst_star.src="chr.gif";
document.form1.spitfirefurnace_star.src=dragonsoul();
}
if ((WardenDaily())&(total_levels>=15))
{
document.form1.formofsummerfire_star.src="str.gif";
document.form1.formofthechargingboar_star.src="str.gif";
document.form1.formoftherowansentinel_star.src="str.gif";
document.form1.formofthestonecrusher_star.src="str.gif";
}



if ((SwordmageDaily())&(total_levels>=15))
{
document.form1.acidforblood_star.src="int.gif";
document.form1.infernossword_star.src="int.gif";
document.form1.freethestormwithin_star.src="none.gif";
}
if ((ClericUtility())&(total_levels>=16))
{
document.form1.astralshield_star.src="none.gif"; 
document.form1.cloakofpeace_star.src="none.gif"; 
document.form1.divinearmor_star.src="none.gif"; 
document.form1.hallowedground_star.src="none.gif"; 
}
if ((FighterUtility())&(total_levels>=16))
{
document.form1.interposingshield_star.src="none.gif"; 
document.form1.ironwarrior_star.src="cn.gif"; 
document.form1.surprisestep_star.src="none.gif"; 
}
if ((PaladinUtility())&(total_levels>=16))
{
document.form1.angelicintercession_star.src="none.gif"; 
document.form1.deathward_star.src="chr.gif"; 
}
if ((RangerUtility())&(total_levels>=16))
{
document.form1.evadetheblow_star.src="none.gif"; 
document.form1.longstrider_star.src="none.gif"; 
document.form1.momentaryrespite_star.src="wis.gif"; 
document.form1.packstealth_star.src="none.gif";
document.form1.sharedhealing_star.src="none.gif";
}
if ((RogueUtility())&(total_levels>=16))
{
if (TrainedInThievery()){document.form1.foilthelock_star.src="none.gif"; }
if (TrainedInStealth()){document.form1.hideinplainsight_star.src="none.gif"; }
if (TrainedInAthletics()){document.form1.leapingdodge_star.src="none.gif"; }
if (TrainedInBluff()){document.form1.raisethestakes_star.src="none.gif"; }
}
if ((WarlockUtility())&(total_levels>=16))
{
document.form1.cloakofshadow_star.src="none.gif"; 
document.form1.eyeofthewarlock_star.src="none.gif"; 
document.form1.infuriatingelusiveness_star.src="none.gif"; 
document.form1.ruinousresistance_star.src="none.gif";
}
if ((WarlordUtility())&(total_levels>=16))
{
document.form1.herosdefiance_star.src="none.gif"; 
document.form1.warlordsbanner_star.src="none.gif"; 
document.form1.whiteravenformation_star.src="none.gif"; 
}
if ((WizardUtility())&(total_levels>=16))
{
document.form1.displacement_star.src="none.gif"; 
document.form1.fly_star.src="none.gif"; 
document.form1.greaterinvisibility_star.src="none.gif"; 
document.form1.stoneskin_star.src="none.gif"; 
}



if ((AvengerUtility())&(total_levels>=16))
{
document.form1.astralcloak_star.src="none.gif";
document.form1.bulwarkofdefiance_star.src="none.gif";
document.form1.vengefulrevenant_star.src="none.gif";
document.form1.windsoftheastralsea_star.src="none.gif";
}

if ((BarbarianUtility())&(total_levels>=16))
{
document.form1.fuelthefire_star.src="none.gif";
document.form1.greatstomp_star.src="none.gif";
document.form1.primalresistance_star.src="none.gif";
document.form1.spurthecycle_star.src="none.gif";
}

if ((BardUtility())&(total_levels>=16))
{
document.form1.blinkzone_star.src="none.gif";
document.form1.chorusofrecovery_star.src="none.gif";
document.form1.elegyoftheundefeated_star.src="none.gif";
document.form1.songofsublimesnowfall_star.src="chr.gif";
}

if ((DruidUtility())&(total_levels>=16))
{
document.form1.howlofthewild_star.src="none.gif";
document.form1.insectplague_star.src="none.gif";
document.form1.primalrestoration_star.src="none.gif";
document.form1.wallofstone_star.src="none.gif";
}

if ((InvokerUtility())&(total_levels>=16))
{
document.form1.covenantoflife_star.src="none.gif";
document.form1.iconlflife_star.src="none.gif";
document.form1.shieldofjustice_star.src="none.gif";
document.form1.walkbetweenworlds_star.src="none.gif";
}

if ((ShamanUtility())&(total_levels>=16))
{
document.form1.fateweaversshield_star.src="none.gif";
document.form1.forgethechainsoflife_star.src="none.gif";
document.form1.spiritbinding_star.src="none.gif";
document.form1.spiritsofthedancingzephyr_star.src="none.gif";
}


if ((SorcererUtility())&(total_levels>=16))
{
document.form1.breathofthedesertdragon_star.src="strchr.gif";
document.form1.chaosechoes_star.src="none.gif";
document.form1.chaossanctuary_star.src="dex.gif";
document.form1.comradesmantle_star.src="none.gif";
document.form1.draconicmajesty_star.src="str.gif";
}

if ((WardenUtility())&(total_levels>=16))
{
document.form1.cleansingearth_star.src="none.gif";
document.form1.monkeysgrip_star.src="none.gif";
document.form1.primalleap_star.src="str.gif";
document.form1.verdantlife_star.src="none.gif";
}





if ((SwordmageUtility())&(total_levels>=16))
{
document.form1.bolsteringwarding_star.src="none.gif";
document.form1.elementalprotection_star.src="none.gif";
document.form1.ironskin_star.src="none.gif";
document.form1.suddenescape_star.src="none.gif";
}
//<p align="right">
//e=other16atwill value="Other A"none.gif"; 
//e=other16encounter value="Other Enc"none.gif"; 
//e=other16daily value="Othe"none.gif"; 
if ((ClericEncounter())&(total_levels>=17))
{
document.form1.blindinglight_star.src="str.gif"; 
document.form1.enthrall_star.src="wis.gif"; 
document.form1.sentinelstrike_star.src="str.gif"; 
document.form1.thundrousword_star.src="wis.gif"; 
}
if (((FighterEncounter())&(total_levels>=17))|(epic_martialarchetype))
{
document.form1.exactingstrike_star.src="str.gif"; 
document.form1.exorcismofsteel_star.src="str.gif"; 
document.form1.harryingassault_star.src="strdex.gif"; 
document.form1.mountainbreakingblow_star.src="str.gif"; 
document.form1.vorpaltornado_star.src="str.gif"; 
document.form1.warriorschallenge_star.src="str.gif"; 
}
if ((PaladinEncounter())&(total_levels>=17))
{
document.form1.enervatingsmite_star.src="chr.gif"; 
document.form1.fortifyingsmite_star.src="wischr.gif"; 
document.form1.handofthegods_star.src="wischr.gif"; 
document.form1.terrifyingsmite_star.src="strchr.gif"; 
}
if (((RangerEncounter())&(total_levels>=17))|(epic_martialarchetype))
{
document.form1.arrowofvengeance_star.src="dexwis.gif"; 
document.form1.cheetahsrake_star.src="str.gif"; 
document.form1.tripleshot_star.src="dex.gif"; 
document.form1.twoweaponeviscerate_star.src="str.gif"; 
document.form1.bladeandfang_star.src="str.gif";
document.form1.houndingbeast_star.src="str.gif";
}
if (((RogueEncounter())&(total_levels>=17))|(epic_martialarchetype))
{
document.form1.dragontailstrike_star.src=brutalscoundrel();
document.form1.houndingstrike_star.src=artfuldodger();
document.form1.stabandgrab_star.src="dex.gif"; 
}
if ((WarlockEncounter())&(total_levels>=17))
{
if (warlock_star){document.form1.strandoffate_star.src="intchr.gif"; }
else {document.form1.strandoffate_star.src="chr.gif"; }
if (warlock_fey){document.form1.thirstingtendrils_star.src="intchr.gif"; }
else {document.form1.thirstingtendrils_star.src="chr.gif"; } 
if (warlock_infernal){document.form1.warlocksbargain_star.src="conint.gif"; }
else {document.form1.warlocksbargain_star.src="cn.gif"; }
document.form1.unholyglee_star.src="chr.gif";
if (warlock_dark){document.form1.yourdelectablepain_star.src="intchr.gif";}
else {document.form1.yourdelectablepain_star.src="chr.gif";}
}
if (((WarlordEncounter())&(total_levels>=17))|(epic_martialarchetype))
{
if (warlord_inspiring){document.form1.battleon_star.src="strchr.gif"; }
else {document.form1.battleon_star.src="str.gif"; }
document.form1.hailofsteel_star.src="str.gif"; 
if (warlord_tactical){document.form1.thundrousfury_star.src="strint.gif"; }
else {document.form1.thundrousfury_star.src="str.gif"; }
document.form1.warlordsrush_star.src="str.gif"; 
}
if ((WizardEncounter())&(total_levels>=17))
{
document.form1.combust_star.src="int.gif"; 
document.form1.crushingtitansfist_star.src="int.gif"; 
document.form1.forcevolley_star.src="int.gif"; 
document.form1.icetomb_star.src="int.gif"; 
}

if ((AvengerEncounter())&(total_levels>=17))
{
document.form1.astralfury_star.src="wis.gif";
document.form1.readyforthefinalblow_star.src=censureofpursuit();
document.form1.spectralcharge_star.src="wis.gif";
document.form1.wardingblade_star.src=censureofretribution();
}
if ((BarbarianEncounter())&(total_levels>=17))
{
document.form1.defastatingblow_star.src=thaneborn();
document.form1.mountaingrasp_star.src="str.gif";
document.form1.shoulderslam_star.src="str.gif";
document.form1.threateningfry_star.src="str.gif";
document.form1.vigorousstrike_star.src=rageblood();
}
if ((BardEncounter())&(total_levels>=17))
{
document.form1.masksofmenace_star.src="chr.gif";
document.form1.shoutofevasion_star.src=virtueofcunning();
document.form1.songofsummons_star.src=virtueofvalor();
document.form1.wordofvulnerability_star.src="chr.gif";
}
if ((DruidEncounter())&(total_levels>=17))
{
document.form1.lightningcascade_star.src="wis.gif";
document.form1.scavengersprize_star.src=primalpredator();
document.form1.shiftingrake_star.src="wis.gif";
document.form1.windstorm_star.src=primalguardian();
}
if ((InvokerEncounter())&(total_levels>=17))
{
document.form1.blooddebt_star.src=covenantofwrath();
document.form1.curseofhaemnathuun_star.src="wis.gif";
document.form1.glyphofradiance_star.src="wis.gif";
document.form1.glyphofthreeblades_star.src=covenantofpreservation();
}
if ((ShamanEncounter())&(total_levels>=17))
{
document.form1.calltothelashingbehemoth_star.src="wis.gif";
document.form1.shacklesofthemountain_star.src=stalkerspirit();
document.form1.spiritbondofvengeance_star.src="wis.gif";
document.form1.spiritofspringsrenewal_star.src=protectorspirit();
}
if ((SorcererEncounter())&(total_levels>=17))
{
document.form1.breathofwinter_star.src="chr.gif";
document.form1.dragontailmeditation_star.src=dragonsoul();
document.form1.poisonousevasion_star.src="chr.gif";
document.form1.thundersummons_star.src=wildmagic();
}
if ((WardenEncounter())&(total_levels>=17))
{
document.form1.callforththeharvest_star.src="str.gif";
document.form1.eagervinestrike_star.src=earthstrength();
document.form1.earthholdsrebuke_star.src="str.gif";
document.form1.razorleafcut_star.src=wildblood();
}






if ((SwordmageEncounter())&(total_levels>=17))
{
document.form1.icecage_star.src="conint.gif";
document.form1.spidersilkslash_star.src="int.gif";
document.form1.swordshock_star.src="int.gif";
}


//e=checkbox name=other17encounter_box><input name=other17encounter value="Other Lev"none.gif";
//<b>Level 19 Daily Powers:</b>
//<table width=100%><tr width=100%><td width=25% valign="top"><font face="Arial">
if ((ClericDaily())&(total_levels>=19))
{
document.form1.firestorm_star.src="wis.gif"; 
document.form1.holywrath_star.src="str.gif"; 
document.form1.indominitablespirit_star.src="str.gif"; 
document.form1.knightofglory_star.src="wis.gif"; 
}


// below here

if ((FighterDaily())&(total_levels>=19))
{
document.form1.devastationswake_star.src="str.gif"; 
document.form1.reavingstrike_star.src="str.gif"; 
document.form1.strikeofthewatchfulguard_star.src="str.gif"; 
}
if ((PaladinDaily())&(total_levels>=19))
{
document.form1.coronaofblindingradiance_star.src="chr.gif"; 
document.form1.crusadersboon_star.src="str.gif"; 
document.form1.righteousinferno_star.src="chr.gif"; 
}
if ((RangerDaily())&(total_levels>=19))
{
document.form1.cruelcageofsteel_star.src="str.gif"; 
document.form1.greatramarrow_star.src="dex.gif"; 
document.form1.twoinoneshot_star.src="dex.gif"; 
document.form1.woundingwhirlwind_star.src="str.gif"; 
document.form1.ferociousroar_star.src="none.gif";
document.form1.gnawingassault_star.src="none.gif";
}
if ((RogueDaily())&(total_levels>=19))
{
document.form1.feintingflurry_star.src="dexchr.gif"; 
document.form1.flyingfoe_star.src="strdex.gif"; 
document.form1.snakesretreat_star.src="dex.gif"; 
}
if ((WarlockDaily())&(total_levels>=19))
{
document.form1.delusionsofloyalty_star.src="chr.gif"; 
document.form1.minionsofmalbolge_star.src="none.gif"; 
document.form1.wrathofacamar_star.src="chr.gif"; 
if (warlock_dark){document.form1.explosivecontagion_star.src="intchr.gif";}
else {document.form1.explosivecontagion_star.src="intchr.gif";}
if (warlock_dark){document.form1.passionatebetrayal_star.src="intchr.gif";}
else {document.form1.passionatebetrayal_star.src="chr.gif";}
document.form1.vestigeofamaan_star.src=vestigepact();
document.form1.vestigeoftheburnedemperors_star.src="cn.gif";
}
if ((WarlordDaily())&(total_levels>=19))
{
document.form1.breakthetempo_star.src="str.gif"; 
document.form1.victorysurge_star.src="str.gif"; 
document.form1.windmillofdoom_star.src="str.gif"; 
}
if ((WizardDaily())&(total_levels>=19))
{
document.form1.acidwave_star.src="int.gif"; 
document.form1.cloudkill_star.src="int.gif"; 
document.form1.disintegrate_star.src="int.gif"; 
document.form1.evardsblacktentacles_star.src="int.gif"; 
}



if ((AvengerDaily())&(total_levels>=19))
{
document.form1.aspectofawe_star.src="wis.gif";
document.form1.oathoftheinevitableblade_star.src="wis.gif";
document.form1.templeofrespite_star.src="wis.gif";
document.form1.vengefulrecovery_star.src="wis.gif";
}
if ((BarbarianDaily())&(total_levels>=19))
{
document.form1.ghostviperrage_star.src="str.gif";
document.form1.hydrarage_star.src="str.gif";
document.form1.stormdrakerage_star.src="str.gif";
document.form1.winterphoenixrage_star.src="str.gif";
}
if ((BardDaily())&(total_levels>=19))
{
document.form1.encirclingdance_star.src="chr.gif";
document.form1.increasingthetempo_star.src="chr.gif";
document.form1.irresistibledance_star.src="chr.gif";
document.form1.satireofprowess_star.src="chr.gif";
}
if ((DruidDaily())&(total_levels>=19))
{
document.form1.entanglingthorns_star.src="wis.gif";
document.form1.lungeandvanish_star.src="wis.gif";
document.form1.primalbear_star.src="wis.gif";
document.form1.winterhailstorm_star.src="wis.gif";
}
if ((InvokerDaily())&(total_levels>=19))
{
document.form1.astraltempest_star.src="wis.gif";
document.form1.maledictionofgartak_star.src="wis.gif";
document.form1.summonangeloflight_star.src="wis.gif";
document.form1.tombofmagrym_star.src="wis.gif";
}
if ((ShamanDaily())&(total_levels>=19))
{
document.form1.greatbearguardian_star.src="wis.gif";
document.form1.hornsoftheundefeatedkhan_star.src="wis.gif";
document.form1.spiritoftheshieldbreaker_star.src="wis.gif";
document.form1.tendrilsofthefateweaver_star.src="wis.gif";
}
if ((SorcererDaily())&(total_levels>=19))
{
document.form1.balefulgazeofthebasilisk_star.src=dragonsoul();
document.form1.blackfireserpent_star.src="chr.gif";
document.form1.prismaticexplsion_star.src="chr.gif";
document.form1.splitstrike_star.src=wildmagic();
}
if ((WardenDaily())&(total_levels>=19))
{
document.form1.blizzardstrike_star.src="str.gif";
document.form1.direbeastassault_star.src="str.gif";
document.form1.lightningbarrage_star.src="str.gif";
document.form1.thunderingbolts_star.src="str.gif";
}









if ((SwordmageDaily())&(total_levels>=19))
{
document.form1.baneblade_star.src="int.gif";
document.form1.hellsownblade_star.src="int.gif";
document.form1.lightningrod_star.src="int.gif";
}
if (((ClericUtility()) )&(total_levels>=22))
{
document.form1.angeloftheelevenwinds_star.src="none.gif"; 
document.form1.clarioncalloftheastralsea_star.src="none.gif"; 
document.form1.cloudchariot_star.src="none.gif"; 
document.form1.purify_star.src="none.gif"; 
document.form1.spiritofhealth_star.src="none.gif"; 
}
if ((((FighterUtility()) )&(total_levels>=22))|((epic_martialarchetype)&(total_levels>=26)))
{
document.form1.actofdesperation_star.src="none.gif"; 
document.form1.nosurrender_star.src="none.gif"; 
}
if (((PaladinUtility()) )&(total_levels>=22))
{
document.form1.angelicrescue_star.src="none.gif"; 
document.form1.cleansingburst_star.src="none.gif"; 
document.form1.giftoflife_star.src="none.gif"; 
document.form1.unitedinfaith_star.src="none.gif"; 
}
if ((((RangerUtility()) )&(total_levels>=22))||((epic_martialarchetype)&(total_levels>=26)))
{
document.form1.forestghost_star.src="none.gif"; 
document.form1.hitthedirt_star.src="wis.gif"; 
document.form1.masterofthehunt_star.src="wis.gif"; 
document.form1.safestride_star.src="wis.gif"; 
document.form1.selflesssacrifice_star.src="none.gif";
document.form1.wilddash_star.src="none.gif";
}
if ((((RogueUtility()) )&(total_levels>=22))|((epic_martialarchetype)&(total_levels>=26)))
{
if (TrainedInAthletics()){document.form1.cloudjump_star.src="none.gif"; }
if (TrainedInAcrobatics()){document.form1.dazzlingacrobatics_star.src="none.gif"; }
if (TrainedInStealth()){document.form1.hidefromthelight_star.src="none.gif"; }
}
if (((WarlockUtility()) )&(total_levels>=22))
{
document.form1.entropicward_star.src="none.gif"; 
document.form1.ravensglamor_star.src="none.gif"; 
document.form1.wingsofthefiend_star.src="none.gif"; 
document.form1.expedientsacrifice_star.src="none.gif";
}
if ((((WarlordUtility()) )&(total_levels>=22))|((epic_martialarchetype)&(total_levels>=26)))
{
document.form1.heartofthetitan_star.src="chr.gif"; 
document.form1.heroicsurge_star.src="chr.gif"; 
document.form1.ownthebattlefield_star.src="none.gif"; 
}
if (((WizardUtility()) )&(total_levels>=22))
{
document.form1.massfly_star.src="none.gif"; 
document.form1.mordenkainensmansion_star.src="none.gif"; 
document.form1.timestop_star.src="none.gif"; 
}


if (((AvengerUtility()) )&(total_levels>=22))
{
document.form1.ghostlyvengeance_star.src="none.gif";
document.form1.indomitableresolve_star.src="none.gif";
document.form1.oathofthefinalstrike_star.src="none.gif";
document.form1.twinstep_star.src="none.gif";
}
if (((BarbarianUtility()) )&(total_levels>=22))
{
document.form1.laststand_star.src="none.gif";
document.form1.primalinstinct_star.src="none.gif";
document.form1.primalvigor_star.src="cn.gif";
document.form1.untouched_star.src="cn.gif";
}
if (((BardUtility()) )&(total_levels>=22))
{
document.form1.elegyunwritten_star.src="none.gif";
document.form1.invisibletroupe_star.src="none.gif";
document.form1.mirroredentourage_star.src="none.gif";
document.form1.songoftransition_star.src="none.gif";
}
if (((DruidUtility()) )&(total_levels>=22))
{
document.form1.phantombeast_star.src="none.gif";
document.form1.skytalon_star.src="none.gif";
document.form1.unseenbeast_star.src="none.gif";
document.form1.unyieldingroots_star.src="cn.gif";
}
if (((InvokerUtility()) )&(total_levels>=22))
{

document.form1.covenantofvengeance_star.src="none.gif";
document.form1.invokeangelicform_star.src="none.gif";
document.form1.invokeheroism_star.src="none.gif";
document.form1.wardofdivinelight_star.src="none.gif";
}
if (((ShamanUtility()) )&(total_levels>=22))
{
document.form1.bountyoflife_star.src="none.gif";
document.form1.callthedead_star.src="none.gif";
document.form1.doorwaytothespiritworld_star.src="none.gif";
document.form1.spiritoftheworldhealer_star.src="none.gif";
}
if (((SorcererUtility()) )&(total_levels>=22))
{
document.form1.dragonfear_star.src="none.gif";
document.form1.platinumscales_star.src="str.gif";
document.form1.sharedsorcery_star.src="none.gif";
document.form1.windshape_star.src="none.gif";
}
if (((WardenUtility()) )&(total_levels>=22))
{
document.form1.eagleswings_star.src="none.gif";
document.form1.panacea_star.src="none.gif";
document.form1.renewal_star.src="none.gif";
document.form1.wellspringoflife_star.src="str.gif";
}


if (((SwordmageUtility()) )&(total_levels>=22))
{
document.form1.eyesofthemage_star.src="none.gif";
document.form1.giantsmight_star.src="none.gif";
document.form1.shackledwarding_star.src="none.gif";
}
if (((ClericEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.astralbladesofdeath_star.src="wis.gif"; 
document.form1.divinecensure_star.src="str.gif"; 
document.form1.hauntingstrike_star.src="str.gif"; 
document.form1.healingtorch_star.src="wis.gif"; 
}
if ((((FighterEncounter()) | (epic_eternalseeker))&(total_levels>=23))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.cageofchains_star.src="str.gif"; 
document.form1.fangsofsteel_star.src="strdex.gif"; 
document.form1.hacknslash_star.src="strcon.gif"; 
document.form1.paralyzingstrike_star.src="str.gif"; 
document.form1.skullcrusher_star.src="strcon.gif"; 
document.form1.warriorsurging_star.src="str.gif"; 
}
if (((PaladinEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.herewaitsthydoom_star.src="wischr.gif"; 
document.form1.martyrssmite_star.src="str.gif"; 
document.form1.resoundingsmite_star.src="str.gif"; 
document.form1.sublimetranspostion_star.src="wischr.gif"; 
}
if ((((RangerEncounter()) | (epic_eternalseeker))&(total_levels>=23))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.bladeward_star.src="strwis.gif"; 
document.form1.cloakofthorns_star.src="str.gif"; 
document.form1.hammershot_star.src="dexwis.gif"; 
document.form1.manticoresvolley_star.src="dex.gif"; 
document.form1.chasedown_star.src="str.gif";
document.form1.overwhelmingfury_star.src="str.gif";
}
if ((((RogueEncounter()) | (epic_eternalseeker))&(total_levels>=23))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.knavesgambit_star.src=artfuldodger();
document.form1.scorpionstrike_star.src=brutalscoundrel();
document.form1.steelentrapment_star.src="dex.gif"; 
}
if (((WarlockEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
if (warlock_star){document.form1.darktransport_star.src="intchr.gif"; }
else {document.form1.darktransport_star.src="chr.gif"; }
if (warlock_infernal){document.form1.spitefuldarts_star.src="conint.gif"; }
else {document.form1.spitefuldarts_star.src="cn.gif"; }
if (warlock_fey){document.form1.thornsofvenom_star.src="intchr.gif"; }
else {document.form1.thornsofvenom_star.src="chr.gif"; }
document.form1.dreadtheft_star.src="chr.gif";
if (warlock_dark){document.form1.bladesofvanquishedarmies_star.src="intchr.gif";}
else {document.form1.bladesofvanquishedarmies_star.src="chr.gif";}

}
if ((((WarlordEncounter()) | (epic_eternalseeker))&(total_levels>=23))|((epic_martialarchetype)&(total_levels==30)))
{
if (warlord_inspiring){document.form1.greatdragonwarcry_star.src="strchr.gif"; }
else {document.form1.greatdragonwarcry_star.src="str.gif"; }
document.form1.pillartopost_star.src="str.gif"; 
document.form1.rabbitsandwolves_star.src="str.gif"; 
if (warlord_tactical){document.form1.suddenassault_star.src="stritn.gif"; }
else {document.form1.suddenassault_star.src="str.gif"; }
}
if (((WizardEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.acidstorm_star.src="int.gif"; 
document.form1.chainlightning_star.src="int.gif"; 
document.form1.thunderclap_star.src="int.gif"; 
}




if (((AvengerEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.avengersshield_star.src="wis.gif";
document.form1.bondofjustice_star.src=censureofpursuit();
document.form1.phaseduel_star.src=censureofretribution();
}
if (((BarbarianEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.arcingthrow_star.src="str.gif";
document.form1.berserkersshout_star.src=thaneborn();
document.form1.craterfall_star.src="str.gif";
document.form1.fatalstrike_star.src=rageblood();
document.form1.feralscythe_star.src="str.gif";
document.form1.staggeringstrike_star.src="str.gif";
}
if (((BardEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.echoesintime_star.src=virtueofcunning();
document.form1.rhythmofdisorientation_star.src="chr.gif";
document.form1.songofliberation_star.src="chr.gif";
document.form1.wealandwoe_star.src=virtueofvalor();
}
if (((DruidEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.graspingearth_star.src=primalpredator();
document.form1.primalroar_star.src="wis.gif";
document.form1.stormburst_star.src="wis.gif";
document.form1.strengthofthehunt_star.src=primalguardian();
}
if (((InvokerEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.cascadeoffivesuns_star.src="wis.gif";
document.form1.stormofcelestia_star.src="wis.gif";
document.form1.vindicatingflames_star.src=covenantofwrath();
document.form1.wordofrebuke_star.src=covenantofpreservation();
}


if (((ShamanEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.calltotheprimalprotector_star.src=protectorspirit();
document.form1.calltotherelentlesshunter_star.src=stalkerspirit();
document.form1.spiritofthedeathraven_star.src="wis.gif";
document.form1.twintempestspirits_star.src="wis.gif";
}
if (((SorcererEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.blackbreath_star.src=dragonsoul();
document.form1.chaosorbs_star.src="chr.gif";
document.form1.ironchains_star.src="chr.gif";
document.form1.platesofice_star.src=wildmagic();
}
if (((WardenEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.guardianswrath_star.src="str.gif";
document.form1.naturesally_star.src=earthstrength();
document.form1.startlingsavagery_star.src=wildblood();
document.form1.whirlwindassault_star.src="str.gif";
}







if (((SwordmageEncounter()) | (epic_eternalseeker))&(total_levels>=23))
{
document.form1.acidfountain_star.src="int.gif";
document.form1.meteorstrike_star.src="strint.gif";
document.form1.thunderreposte_star.src="int.gif";
}
if (((ClericDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.nimbusofdoom_star.src="str.gif"; 
document.form1.sacredword_star.src="wis.gif"; 
document.form1.sealofbinding_star.src="wis.gif"; 
document.form1.sealofprotection_star.src="str.gif"; 
}
if ((((FighterDaily()) | (epic_eternalseeker))&(total_levels>=25))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.reapersstance_star.src="dex.gif"; 
document.form1.reignofterror_star.src="str.gif"; 
document.form1.supremacyofsteel_star.src="str.gif"; 
}
if (((PaladinDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.exaltedretribution_star.src="str.gif"; 
document.form1.totheninehellswithyou_star.src="chr.gif"; 
}
if ((((RangerDaily()) | (epic_eternalseeker))&(total_levels>=25))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.bloodstorm_star.src="strdexwis.gif"; 
document.form1.tigersreflex_star.src="none.gif"; 
document.form1.unstoppablearrows_star.src="dex.gif"; 
document.form1.primalrampage_star.src="str.gif";
document.form1.pursuitofthewildhunt_star.src="str.gif";
}
if ((((RogueDaily()) | (epic_eternalseeker))&(total_levels>=25))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.bitingassault_star.src="dex.gif"; 
document.form1.ghostonthewind_star.src="dex.gif"; 
document.form1.hamstring_star.src="dex.gif"; 
}
if (((WarlockDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.curseofthetwinprinces_star.src="chr.gif"; 
document.form1.tartareantomb_star.src="cn.gif"; 
document.form1.thirteenbalefulstars_star.src="cn.gif"; 
if (warlock_dark){document.form1.invisibledeath_star.src="intchr.gif";}
else {document.form1.invisibledeath_star.src="chr.gif";}
if (warlock_dark){document.form1.ringoftorment_star.src="intchr.gif";}
else {document.form1.ringoftorment_star.src="chr.gif";}
document.form1.vestigeoflandssoul_star.src=vestigepact();
document.form1.vestigeofthequeenofnamhar_star.src="cn.gif";
}
if ((((WarlordDaily()) | (epic_eternalseeker))&(total_levels>=25))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.relentlessassault_star.src="str.gif"; 
document.form1.stirthehornetsnest_star.src="str.gif"; 
document.form1.whiteravenscall_star.src="str.gif"; 
}
if (((WizardDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.elementalmaw_star.src="int.gif"; 
document.form1.maze_star.src="int.gif"; 
document.form1.necroticweb_star.src="int.gif"; 
document.form1.prismaticspray_star.src="int.gif"; 
}



if (((AvengerDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.aspectofdeath_star.src="wis.gif";
document.form1.bondofdestiny_star.src="wis.gif";
document.form1.executionersjustice_star.src="wis.gif";
document.form1.sigilofdamnation_star.src="wis.gif";
}
if (((BarbarianDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.ashhammerrage_star.src="str.gif";
document.form1.blodhungerrage_star.src="str.gif";
document.form1.bluedragonrage_star.src="str.gif";
document.form1.stonetempestrage_star.src="str.gif";
}
if (((BardDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.adversarialsong_star.src="chr.gif";
document.form1.fraughtwithfailure_star.src="chr.gif";
document.form1.frenziedrhythm_star.src="chr.gif";
document.form1.visiondistortion_star.src="chr.gif";
}
if (((DruidDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.ferociousmaul_star.src="wis.gif";
document.form1.feylure_star.src="wis.gif";
document.form1.primalstorm_star.src="wis.gif";
document.form1.primaltiger_star.src="wis.gif";
}
if (((InvokerDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.anthemofthefirstdawn_star.src="wis.gif";
document.form1.invokethefallen_star.src="wis.gif";
document.form1.rackinginvocationofpain_star.src="wis.gif";
document.form1.rainofcolorlessfire_star.src="wis.gif";
}
if (((ShamanDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.ironbornspirit_star.src="wis.gif";
document.form1.spiritofthelaughingwanderer_star.src="wis.gif";
document.form1.spiritoftheworldserpent_star.src="wis.gif";
document.form1.westernwindofstorms_star.src="wis.gif";
}
if (((SorcererDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.draconicincarnation_star.src=dragonsoul();
document.form1.forcestorm_star.src="chr.gif";
document.form1.wordsofchaos_star.src=wildmagic();
}
if (((WardenDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.formoftheblackwolf_star.src="str.gif";
document.form1.formofthedisplacerbeast_star.src="str.gif";
document.form1.formofthejunglelord_star.src="str.gif";
document.form1.formoftheautumnreaper_star.src="str.gif";
}





if (((SwordmageDaily()) | (epic_eternalseeker))&(total_levels>=25))
{
document.form1.boundinglightning_star.src="int.gif";
document.form1.icyshackles_star.src="int.gif";
document.form1.quicksilverblade_star.src="none.gif";
document.form1.thunderingheart_star.src="strint.gif";
}
if (((ClericEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.punishingstrike_star.src="str.gif"; 
document.form1.sacrificialhealing_star.src="str.gif"; 
document.form1.scourgeoftheunworthy_star.src="wis.gif"; 
document.form1.sunburst_star.src="wis.gif"; 
}
if ((((FighterEncounter()) | (epic_eternalseeker))&(total_levels>=27))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.adamantinestrike_star.src="str.gif"; 
document.form1.cruelreaper_star.src="str.gif"; 
document.form1.diamondshielddefense_star.src="str.gif"; 
document.form1.indomitablebattlestrike_star.src="str.gif"; 
}
if (((PaladinEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.blindingsmite_star.src="str.gif"; 
document.form1.brandofjudgment_star.src="chr.gif"; 
document.form1.deificvengeance_star.src="chr.gif"; 
document.form1.restrictingsmite_star.src="chr.gif"; 
document.form1.stunningsmite_star.src="str.gif"; 
}
if ((((RangerEncounter()) | (epic_eternalseeker))&(total_levels>=27))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.deathrend_star.src="str.gif"; 
document.form1.hailofarrows_star.src="dex.gif"; 
document.form1.lightningshot_star.src="dex.gif"; 
document.form1.wanderingtornado_star.src="str.gif"; 
document.form1.beastlyvise_star.src="str.gif";
document.form1.catchanddrop_star.src="str.gif";
}
if ((((RogueEncounter()) | (epic_eternalseeker))&(total_levels>=27))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.danceofdeath_star.src=artfuldodger();
document.form1.hurricaneofblood_star.src=brutalscoundrel();
document.form1.perfectstrike_star.src="dex.gif"; 
}
if (((WarlockEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
if (warlock_star){document.form1.banishtothevoid_star.src="conint.gif"; }
else {document.form1.banishtothevoid_star.src="cn.gif"; }
if (warlock_fey){document.form1.curseofthefeyking_star.src="intchr.gif"; }
else {document.form1.curseofthefeyking_star.src="chr.gif"; }
if (warlock_infernal){document.form1.hellfirecurse_star.src="conint.gif"; }
else {document.form1.hellfirecurse_star.src="cn.gif"; }
document.form1.inevitableundercut_star.src="chr.gif";
}
if ((((WarlordEncounter()) | (epic_eternalseeker))&(total_levels>=27))|((epic_martialarchetype)&(total_levels==30)))
{
if (warlord_tactical){document.form1.chimerabattlestrike_star.src="strint.gif"; }
else {document.form1.chimerabattlestrike_star.src="str.gif"; }
document.form1.devastatingcharge_star.src="strchr.gif"; 
if (warlord_inspiring){document.form1.inciteheroism_star.src="strchr.gif"; }
else {document.form1.inciteheroism_star.src="str.gif"; }
document.form1.warlordsdoom_star.src="str.gif"; 
}
if (((WizardEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.blackfire_star.src="int.gif"; 
document.form1.confusion_star.src="int.gif"; 
document.form1.forcecage_star.src="int.gif"; 
}


if (((AvengerEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.astralcharge_star.src="wis.gif";
document.form1.deathstroke_star.src="wis.gif";
document.form1.inevitableend_star.src="wis.gif";
document.form1.scattertotheastralwinds_star.src=censureofretribution();
}
if (((BarbarianEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.bloodwrath_star.src=rageblood();
document.form1.bonebreaker_star.src="str.gif";
document.form1.butchersfeast_star.src=thaneborn();
document.form1.hurricaneofblades_star.src="str.gif";
document.form1.rampagingdragonstrike_star.src="str.gif";
}
if (((BardEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.bondofmalediction_star.src=virtueofcunning();
document.form1.kaleidoscopigburst_star.src="chr.gif";
document.form1.surgeofvalor_star.src=virtueofvalor();
}
if (((DruidEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.explosivewind_star.src="wis.gif";
document.form1.feralwhirlwind_star.src="wis.gif";
document.form1.leapingrake_star.src="wis.gif";
document.form1.polarblast_star.src="wis.gif";
}
if (((InvokerEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.invoketerror_star.src=covenantofwrath();
document.form1.offeringofpeace_star.src=covenantofpreservation();
document.form1.swarmofastralsteel_star.src="wis.gif";
document.form1.wordofannihilation_star.src="wis.gif";
}
if (((ShamanEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.bloodreaperspirits_star.src=stalkerspirit();
document.form1.calltothecleansingfire_star.src=protectorspirit();
document.form1.calltothegreathunter_star.src="wis.gif";
document.form1.spiritofelderwisdom_star.src="wis.gif";
}
if (((SorcererEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.lightningeruption_star.src="chr.gif";
document.form1.poisonward_star.src="chr.gif";
document.form1.thunderpulse_star.src="chr.gif";
document.form1.wildfirecurse_star.src="chr.gif";
}
if (((WardenEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.earthtomb_star.src=earthstrength();
document.form1.guardiansstorm_star.src=wildblood();
document.form1.screamingwindstrike_star.src="str.gif";
document.form1.weightofthemountain_star.src="str.gif";
}

if (((SwordmageEncounter()) | (epic_eternalseeker))&(total_levels>=27))
{
document.form1.maelstromblade_star.src="int.gif";
document.form1.circleofdevastation_star.src="int.gif";
document.form1.dimensionalcharge_star.src="int.gif";
}                     
//e=checkbox name=other27encounter_box><input name=other27encounter value="Other Lev"none.gif"; 
//<b>Level 29 Daily Powers:</b>
//<table width=100%><tr width=100%><td width=25% valign="top"><font face="Arial">
if (((ClericDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.astralstorm_star.src="wis.gif"; 
document.form1.godstrike_star.src="str.gif"; 
}
if ((((FighterDaily()) | (epic_eternalseeker))&(total_levels>=29))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.forcethebattle_star.src="none.gif"; 
document.form1.nomercy_star.src="str.gif"; 
document.form1.stormofdestruction_star.src="str.gif"; 
}
if (((PaladinDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.evenhandofjustice_star.src="chr.gif"; 
document.form1.powerfulfaith_star.src="str.gif"; 
}
if ((((RangerDaily()) | (epic_eternalseeker))&(total_levels>=29))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.followupblow_star.src="str.gif"; 
document.form1.threeinoneshot_star.src="dex.gif"; 
document.form1.weaveawebofsteel_star.src="str.gif"; 
document.form1.huntmastersmauling_star.src="str.gif";
}
if ((((RogueDaily()) | (epic_eternalseeker))&(total_levels>=29))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.assassinspoint_star.src="dex.gif"; 
document.form1.immobilizingstrike_star.src="dex.gif"; 
document.form1.movingtarget_star.src="chr.gif"; 
}
if (((WarlockDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.curseofthedarkdelirium_star.src="chr.gif"; 
document.form1.doomofdelban_star.src="cn.gif"; 
document.form1.hurlthroughhell_star.src="cn.gif"; 
document.form1.onefinalsacrifice_star.src="chr.gif";
document.form1.spreadthecorrosion_star.src="chr.gif";
document.form1.vestigeofthemasterofthehiddenflame_star.src="cn.gif";
document.form1.vestigeofzuriel_star.src=vestigepact();
}
if ((((WarlordDaily()) | (epic_eternalseeker))&(total_levels>=29))|((epic_martialarchetype)&(total_levels==30)))
{
document.form1.defydeath_star.src="str.gif"; 
document.form1.standinvincible_star.src="str.gif"; 
}
if (((WizardDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.greatericestorm_star.src="int.gif"; 
document.form1.legionshold_star.src="int.gif"; 
document.form1.meteorswarm_star.src="int.gif"; 
}

if (((AvengerDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.aspectofterror_star.src="wis.gif";
document.form1.fieryvengeance_star.src="wis.gif";
document.form1.finaloath_star.src="wis.gif";
document.form1.templeofresolution_star.src="wis.gif";
}
if (((BarbarianDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.crimsonphoenixrage_star.src="str.gif";
document.form1.rageoftheprimalbeast_star.src="str.gif";
document.form1.winterghostrage_star.src="str.gif";
document.form1.worldserpentrage_star.src="str.gif";
}
if (((BardDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.herosbeacon_star.src="chr.gif";
document.form1.satireofleadership_star.src="chr.gif";
document.form1.spellbind_star.src="chr.gif";
}
if (((DruidDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.blindingblizzard_star.src="wis.gif";
document.form1.gazeofthebeast_star.src="wis.gif";
document.form1.lifeleechthorns_star.src="wis.gif";
document.form1.primalarchetype_star.src="wis.gif";
}
if (((InvokerDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.firesofthesilvergate_star.src="wis.gif";
document.form1.invoketheabsolutedark_star.src="wis.gif";
document.form1.summonangelofvictory_star.src="wis.gif";
document.form1.wordofthegods_star.src="wis.gif";
}
if (((ShamanDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.deathspirit_star.src="wis.gif";
document.form1.seaofserpents_star.src="wis.gif";
document.form1.spiritsofmist_star.src="wis.gif";
document.form1.spiritoftheunbrokenvow_star.src="wis.gif";
}
if (((SorcererDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.endlessacid_star.src="chr.gif";
document.form1.entropicwhirlwind_star.src="chr.gif";
document.form1.prismaticstorm_star.src="chr.gif";
}
if (((WardenDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.formofthechimera_star.src="str.gif";
document.form1.formofspringrenewal_star.src="str.gif";
document.form1.formofthestarmetalwarrior_star.src="str.gif";
document.form1.formofthesoulserpent_star.src="str.gif";
}


if (((SwordmageDaily()) | (epic_eternalseeker))&(total_levels>=29))
{
document.form1.astralthunderblade_star.src="int.gif";
document.form1.obliteratingblaze_star.src="int.gif";
document.form1.vorpaldoom_star.src="int.gif";
}




if (((SpellscarredEncounter())&(total_levels>=1))|((paragon_spellscarredsavant)&(total_levels>=10)))
{
document.form1.horrificmawbite_star.src="physical.gif";
document.form1.plaguelash_star.src="mental.gif";
}
if (((SpellscarredDaily())&(total_levels>=1))|((paragon_spellscarredsavant)&(total_levels>=20)))
{
document.form1.burningfocus_star.src="physical.gif";
document.form1.spellmirror_star.src="mental.gif";
}
if ((SpellscarredUtility())&(total_levels>=2))
{
document.form1.spelleater_star.src="none.gif";
document.form1.plagueofrootedmajesty_star.src="none.gif";
}
if (((SpellscarredEncounter())&(total_levels>=3))|((paragon_spellscarredsavant)&(total_levels>=10)))
{
document.form1.scarcarvingblade_star.src="physical.gif";
document.form1.calloftheplague_star.src="mental.gif";
}
if (((SpellscarredDaily())&(total_levels>=5))|((paragon_spellscarredsavant)&(total_levels>=20)))
{
document.form1.blurringblade_star.src="none.gif";
document.form1.terribleimposition_star.src="mental.gif";
}
if ((SpellscarredUtility())&(total_levels>=6))
{
document.form1.hauntingreception_star.src="none.gif";
document.form1.plaguefirebody_star.src="none.gif";
}
if (((SpellscarredEncounter())&(total_levels>=7))|((paragon_spellscarredsavant)&(total_levels>=10)))
{
document.form1.reachofthedoomed_star.src="physical.gif";
document.form1.cursedgraspingair_star.src="mental.gif";
document.form1.venomousbloodfang_star.src="physical.gif";
}
if (((SpellscarredDaily())&(total_levels>=9))|((paragon_spellscarredsavant)&(total_levels>=20)))
{
document.form1.burningtheplaguedbellows_star.src="mental.gif";
document.form1.submissionoftheearth_star.src="physical.gif";
}
if ((SpellscarredUtility())&(total_levels>=10))
{
document.form1.scarofbluewings_star.src="none.gif";
document.form1.tearsoffireandblood_star.src="none.gif";
}
if ((SpellscarredEncounter())&(total_levels>=13))
{
document.form1.linesinburningsand_star.src="mental.gif";
document.form1.spellmothersembrace_star.src="physical.gif";
}
if (((SpellscarredDaily())&(total_levels>=15))|((paragon_spellscarredsavant)&(total_levels>=20)))
{
document.form1.inflictionoftheflamemist_star.src="mental.gif";
document.form1.rabidchainofsteel_star.src="physical.gif";
}
if ((SpellscarredUtility())&(total_levels>=16))
{
document.form1.bodynobody_star.src="none.gif";
document.form1.healingfleshoftheinfected_star.src="none.gif";
}
if ((SpellscarredEncounter())&(total_levels>=17))
{
document.form1.irontoothofbloodlust_star.src="physical.gif";
document.form1.maskofmidnight_star.src="mental.gif";
}
if (((SpellscarredDaily())&(total_levels>=19))|((paragon_spellscarredsavant)&(total_levels>=20)))
{
document.form1.spellcurse_star.src="physical.gif";
document.form1.gravityofmoment_star.src="mental.gif";
}
if ((SpellscarredUtility())&(total_levels>=22))
{
document.form1.donningthemudflesh_star.src="none.gif";
document.form1.spellplagueguardians_star.src="none.gif";
}
if ((SpellscarredEncounter())&(total_levels>=23))
{
document.form1.hideoustether_star.src="physical.gif";
document.form1.tonguesoftheearth_star.src="mental.gif";
}
if ((SpellscarredDaily())&(total_levels>=25))
{
document.form1.malignantgrowth_star.src="mental.gif";
document.form1.contagionflame_star.src="physical.gif";
}
if ((SpellscarredEncounter())&(total_levels>=27))
{
document.form1.shiftingwave_star.src="mental.gif";
document.form1.impossibleflurry_star.src="physical.gif";
}
if ((SpellscarredDaily())&(total_levels>=29))
{
document.form1.echoesofvalor_star.src="physical.gif";
document.form1.metamorphosisofspellflame_star.src="mental.gif";
}



if (total_levels>=1){document.form1.other01atwill_1_star.src="any.gif"; }
if (total_levels>=1){document.form1.other01atwill_2_star.src="any.gif"; }
if (total_levels>=1){document.form1.other01atwill_3_star.src="any.gif"; }
if (total_levels>=1){document.form1.other01encounter_star.src="any.gif"; }
if (total_levels>=1){document.form1.other01daily_star.src="any.gif"; }
if (total_levels>=2){document.form1.other02atwill_star.src="any.gif"; }
if (total_levels>=2){document.form1.other02encounter_star.src="any.gif"; }
if (total_levels>=2){document.form1.other02daily_star.src="any.gif"; }
if (total_levels>=3){document.form1.other03encounter_star.src="any.gif"; }
if (total_levels>=5){document.form1.other05daily_star.src="any.gif"; }
if (total_levels>=6){document.form1.other06atwill_star.src="any.gif"; }
if (total_levels>=6){document.form1.other06encounter_star.src="any.gif"; }
if (total_levels>=6){document.form1.other06daily_star.src="any.gif"; }
if (total_levels>=7){document.form1.other07encounter_star.src="any.gif"; }
if (total_levels>=9){document.form1.other09daily_star.src="any.gif"; }
if (total_levels>=10){document.form1.other10atwill_star.src="any.gif"; }
if (total_levels>=10){document.form1.other10encounter_star.src="any.gif"; }
if (total_levels>=10){document.form1.other10daily_star.src="any.gif"; }
if (total_levels>=13){document.form1.other13encounter_star.src="any.gif"; }
if (total_levels>=15){document.form1.other15daily_star.src="any.gif"; }
if (total_levels>=16){document.form1.other16atwill_star.src="any.gif"; }
if (total_levels>=16){document.form1.other16encounter_star.src="any.gif"; }
if (total_levels>=16){document.form1.other16daily_star.src="any.gif"; }
if (total_levels>=17){document.form1.other17encounter_star.src="any.gif"; }
if (total_levels>=19){document.form1.other19daily_star.src="any.gif"; }
if (total_levels>=22){document.form1.other22atwill_star.src="any.gif"; }
if (total_levels>=22){document.form1.other22encounter_star.src="any.gif"; }
if (total_levels>=22){document.form1.other22daily_star.src="any.gif"; }
if (total_levels>=23){document.form1.other23encounter_star.src="any.gif"; }
if (total_levels>=25){document.form1.other25daily_star.src="any.gif"; }
if (total_levels>=27){document.form1.other27encounter_star.src="any.gif"; }
if (total_levels>=29){document.form1.other29daily_star.src="any.gif"; }
                      
if (!ranger_beastmaster){TurnOffBeastStars();}

// above here
 }


function PlusOrMinus(i){
 stringy2=""; 
 if (i>=0){stringy2="+"+i; }
 if (i<0){stringy2=i; }
 return stringy2; 
 }

function UnLightSkillStars(){
 document.form1.main_acrobatics_star.src="no_asterisk.gif"; 
 document.form1.main_arcana_star.src="no_asterisk.gif"; 
 document.form1.main_athletics_star.src="no_asterisk.gif"; 
 document.form1.main_bluff_star.src="no_asterisk.gif"; 
 document.form1.main_diplomacy_star.src="no_asterisk.gif"; 
 document.form1.main_dungeoneering_star.src="no_asterisk.gif"; 
 document.form1.main_endurance_star.src="no_asterisk.gif"; 
 document.form1.main_heal_star.src="no_asterisk.gif"; 
 document.form1.main_history_star.src="no_asterisk.gif"; 
 document.form1.main_insight_star.src="no_asterisk.gif"; 
 document.form1.main_intimidate_star.src="no_asterisk.gif"; 
 document.form1.main_nature_star.src="no_asterisk.gif"; 
 document.form1.main_perception_star.src="no_asterisk.gif"; 
 document.form1.main_religion_star.src="no_asterisk.gif"; 
 document.form1.main_stealth_star.src="no_asterisk.gif"; 
 document.form1.main_streetwise_star.src="no_asterisk.gif"; 
 document.form1.main_thievery_star.src="no_asterisk.gif"; 
 document.form1.multi_acrobatics_star.src="no_asterisk.gif"; 
 document.form1.multi_arcana_star.src="no_asterisk.gif"; 
 document.form1.multi_athletics_star.src="no_asterisk.gif"; 
 document.form1.multi_bluff_star.src="no_asterisk.gif"; 
 document.form1.multi_diplomacy_star.src="no_asterisk.gif"; 
 document.form1.multi_dungeoneering_star.src="no_asterisk.gif"; 
 document.form1.multi_endurance_star.src="no_asterisk.gif"; 
 document.form1.multi_heal_star.src="no_asterisk.gif"; 
 document.form1.multi_history_star.src="no_asterisk.gif"; 
 document.form1.multi_insight_star.src="no_asterisk.gif"; 
 document.form1.multi_intimidate_star.src="no_asterisk.gif"; 
 document.form1.multi_nature_star.src="no_asterisk.gif"; 
 document.form1.multi_perception_star.src="no_asterisk.gif"; 
 document.form1.multi_religion_star.src="no_asterisk.gif"; 
 document.form1.multi_stealth_star.src="no_asterisk.gif"; 
 document.form1.multi_streetwise_star.src="no_asterisk.gif"; 
 document.form1.multi_thievery_star.src="no_asterisk.gif"; 
 }

function LightSkillStars(){
//greenwood
 UnLightSkillStars();
 if ((class_avenger)|(class_barbarian)|(class_bard)|(frb_nelantherisles)|(class_barbarian)|(class_ranger) |(paragon_feybeguiler) | (class_rogue) | (class_other)){if ((!eladrin_acrobatics)&(!document.form1.train_multiclass[0].checked)){document.form1.main_acrobatics_star.src="asterisk.gif"; }}
 if ((class_druid)|(class_invoker)|(class_shaman)|(frb_netheril)|(frb_greatdale)|(class_cleric) | (class_warlock) |(paragon_feybeguiler) | (class_wizard) | (class_swordmage) | (class_other)){if ((!eladrin_arcana)&(!document.form1.train_multiclass[1].checked)&(!multi_wizard_arcaneinitiate)&(!multi_bard_bardicritualist)){document.form1.main_arcana_star.src="asterisk.gif"; }}
 if ((class_avenger)|(class_barbarian)|(class_bard)|(class_druid)|(class_shaman)|(class_sorcerer)|(class_warden)|(frb_nelantherisles)|(frb_elfharrow)|(class_barbarian)|(class_fighter) | (class_ranger) |(paragon_feybeguiler) | (class_rogue) | (class_warlord) | (class_swordmage) | (class_other) | (frb_tymanther)){if ((!eladrin_athletics)&(!document.form1.train_multiclass[2].checked)){document.form1.main_athletics_star.src="asterisk.gif"; }}
 if ((class_bard)|(class_sorcerer)|(paragon_feybeguiler) |(class_rogue) | (class_warlock) | (class_other)){if ((!eladrin_bluff)&(!document.form1.train_multiclass[3].checked)){document.form1.main_bluff_star.src="asterisk.gif"; }}

 if ((class_bard)|(class_druid)|(class_invoker)|(class_sorcerer)|(class_cleric) | (class_paladin) | (class_warlord) |(paragon_feybeguiler) | (class_wizard) | (class_swordmage) | (class_other) | (frb_waterdeep)){if ((!eladrin_diplomacy)&(!document.form1.train_multiclass[4].checked)){document.form1.main_diplomacy_star.src="asterisk.gif"; }}
 if ((class_bard)|(class_sorcerer)|(class_warden)|(class_ranger) |(paragon_feybeguiler) | (class_rogue) | (class_wizard) | (class_other) | (frb_eastrift)){if ((!eladrin_dungeoneering)&(!document.form1.train_multiclass[5].checked)){document.form1.main_dungeoneering_star.src="asterisk.gif"; }}
 if ((class_avenger)|(class_barbarian)|(class_druid)|(class_invoker)|(class_shaman)|(class_sorcerer)|(class_warden)|(frb_narfell)|(class_fighter) |(class_barbarian)| (class_paladin) | (class_ranger) | (class_warlord) | (class_swordmage) | (class_other)){if ((!eladrin_endurance)&(!document.form1.train_multiclass[6].checked)){document.form1.main_endurance_star.src="asterisk.gif"; }}
 if ((class_avenger)|(class_barbarian)|(class_bard)|(class_druid)|(class_shaman)|(class_warden)|(class_cleric) |(class_barbarian)| (class_fighter) | (class_paladin) | (class_ranger) | (class_warlord) | (class_other)){if ((!eladrin_heal)&(!document.form1.train_multiclass[7].checked)){document.form1.main_heal_star.src="asterisk.gif"; }}

 if ((class_bard)|(class_druid)|(class_invoker)|(frb_netheril)|(class_cleric) | (class_paladin) | (class_warlock) | (class_warlord) |(paragon_feybeguiler) | (class_wizard) | (class_swordmage) | (class_other)){if ((!eladrin_history)&(!document.form1.train_multiclass[8].checked)){document.form1.main_history_star.src="asterisk.gif"; }}
 if ((class_bard)|(class_druid)|(class_sorcerer)|(class_warden)|(class_cleric) | (class_paladin)| (class_invoker) |(paragon_feybeguiler) | (class_rogue) | (class_warlock) | (class_swordmage) | (class_wizard) | (class_other) | (frb_cormyr)){if ((!eladrin_insight)&(!document.form1.train_multiclass[9].checked)){document.form1.main_insight_star.src="asterisk.gif"; }}
 if ((class_avenger)|(class_barbarian)|(class_invoker)|(class_shaman)|(class_sorcerer)|(class_warden)|(class_fighter) |(class_barbarian)| (class_paladin) |(paragon_feybeguiler)|(class_bard) | (class_rogue) | (class_warlock) | (class_warlord) | (class_swordmage) | (class_other)){if ((!eladrin_intimidate)&(!document.form1.train_multiclass[10].checked)){document.form1.main_intimidate_star.src="asterisk.gif"; }}
 if ((class_barbarian)|(class_bard)|(class_sorcerer)|(class_warden)|(frb_greatdale)|(frb_grayvale)|(frb_elfharrow)|(class_barbarian)|(class_ranger) |(paragon_feybeguiler) | (class_wizard) | (class_other)){if ((!eladrin_nature)&(!document.form1.train_multiclass[11].checked)){document.form1.main_nature_star.src="asterisk.gif"; }}

 if ((class_avenger)|(class_barbarian)|(class_bard)|(class_druid)|(class_shaman)|(class_warden)|(class_ranger) |(class_barbarian)|(paragon_feybeguiler) | (class_rogue) | (class_other) | (frb_aglarond)){if ((!eladrin_perception)&(!document.form1.train_multiclass[12].checked)){document.form1.main_perception_star.src="asterisk.gif"; }}
 if ((class_bard)|(class_shaman)|(class_cleric) | (class_paladin) | (class_warlock) |(paragon_feybeguiler) | (class_wizard) | (class_other)){if ((!eladrin_religion)&(!document.form1.train_multiclass[13].checked)&(!multi_cleric_initiateofthefaith)){document.form1.main_religion_star.src="asterisk.gif"; }}
 if ((class_avenger)|(frb_luskan)|(paragon_feybeguiler) |(class_ranger) | (class_rogue) | (class_other)){if ((!eladrin_stealth)&(!document.form1.train_multiclass[14].checked)&(!multi_rogue_ruthlessefficiency)){document.form1.main_stealth_star.src="asterisk.gif"; }}
 if ((class_avenger)|(class_bard)|(frb_baldursgate)|(frb_amn)|(class_fighter) |(paragon_feybeguiler) | (class_rogue) | (class_warlock) | (class_other) | (frb_baldursgate)){if ((!eladrin_streetwise)&(!document.form1.train_multiclass[15].checked)){document.form1.main_streetwise_star.src="asterisk.gif"; }}

 if ((frb_wheloon)|(frb_luskan)|(frb_amn)|(paragon_feybeguiler) |(class_rogue) | (class_warlock) | (class_other)){if ((!eladrin_thievery)&(!multi_rogue_sneakofshadows)&(!document.form1.train_multiclass[16].checked)){document.form1.main_thievery_star.src="asterisk.gif"; }}
                                              
 if ((multi_barbarian_berserkersfury)|(multi_bard_bardicdilettante)|(multi_ranger_warriorofthewild)|(multi_ranger_twobladewarrior)){if ((!eladrin_acrobatics)&(!document.form1.train_acrobatics.checked)){document.form1.multi_acrobatics_star.src="asterisk.gif"; }}
 if ((multi_bard_bardicdilettante)|(multi_wizard_learnedspellcaster)|(multi_warlock_pactinitiate) | (multi_wizard_arcaneinitiate)|(multi_bard_bardicritualist)){if ((!eladrin_arcana)&(!document.form1.train_arcana.checked)){document.form1.multi_arcana_star.src="asterisk.gif"; }}
 if ((multi_warden_defenderofthewild)|(multi_swordmage_heartoftheblade)|(multi_barbarian_berserkersfury)|(multi_bard_bardicdilettante)|(multi_fighter_studentofthesword)|(multi_fighter_battleawareness) | (multi_ranger_warriorofthewild)|(multi_ranger_twobladewarrior) | (multi_warlord_studentofbattle)|(multi_warlord_inspiringleader)|(multi_warlord_tacticalleader)){if ((!eladrin_athletics)&(!document.form1.train_athletics.checked)){document.form1.multi_athletics_star.src="asterisk.gif"; }}
 if ((multi_bard_bardicdilettante)|(multi_warlock_pactinitiate)|(multi_rogue_slydodge)){if ((!eladrin_bluff)&(!document.form1.train_bluff.checked)){document.form1.multi_bluff_star.src="asterisk.gif"; }}
 if ((multi_bard_bardicdilettante)|(multi_warlock_pactinitiate) | (multi_warlord_studentofbattle)|(multi_warlord_inspiringleader)|(multi_warlord_tacticalleader)){if ((!eladrin_diplomacy)&(!document.form1.train_diplomacy.checked)){document.form1.multi_diplomacy_star.src="asterisk.gif"; }}
 if ((multi_warden_defenderofthewild)|(multi_bard_bardicdilettante)|(multi_ranger_warriorofthewild)|(multi_ranger_twobladewarrior)){if ((!eladrin_dungeoneering)&(!document.form1.train_dungeoneering.checked)){document.form1.multi_dungeoneering_star.src="asterisk.gif"; }}
 if ((multi_warden_defenderofthewild)|(multi_swordmage_heartoftheblade)|(multi_barbarian_berserkersfury)|(multi_fighter_studentofthesword)|(multi_fighter_battleawareness) | (multi_warlock_pactinitiate) | (multi_ranger_warriorofthewild)|(multi_ranger_twobladewarrior) | (multi_warlord_studentofbattle)|(multi_warlord_inspiringleader)|(multi_warlord_tacticalleader)){if ((!eladrin_endurance)&(!document.form1.train_endurance.checked)){document.form1.multi_endurance_star.src="asterisk.gif"; }}
 if ((multi_warden_defenderofthewild)|(multi_barbarian_berserkersfury)|(multi_bard_bardicdilettante)|(multi_fighter_studentofthesword)|(multi_fighter_battleawareness) | (multi_warlock_pactinitiate) | (multi_ranger_warriorofthewild)|(multi_ranger_twobladewarrior) | (multi_warlord_studentofbattle)|(multi_warlord_inspiringleader)|(multi_warlord_tacticalleader)){if ((!eladrin_heal)&(!document.form1.train_heal.checked)){document.form1.multi_heal_star.src="asterisk.gif"; }}
 if ((multi_bard_bardicdilettante)|(multi_warlock_pactinitiate) | (multi_warlock_pactinitiate) | (multi_warlord_studentofbattle)|(multi_warlord_inspiringleader)|(multi_warlord_tacticalleader)){if ((!eladrin_history)&(!document.form1.train_history.checked)){document.form1.multi_history_star.src="asterisk.gif"; }}
 if ((multi_bard_bardicdilettante)|(multi_warlock_pactinitiate) | (multi_warlock_pactinitiate)){if ((!eladrin_insight)&(!document.form1.train_insight.checked)){document.form1.multi_insight_star.src="asterisk.gif"; }}
 if ((multi_warden_defenderofthewild)|(multi_barbarian_berserkersfury)|(multi_bard_bardicdilettante)|(multi_fighter_studentofthesword)|(multi_rogue_slydodge)|(multi_fighter_battleawareness) | (multi_warlock_pactinitiate) | (multi_warlock_pactinitiate) | (multi_warlord_studentofbattle)|(multi_warlord_inspiringleader)|(multi_warlord_tacticalleader)){if ((!eladrin_intimidate)&(!document.form1.train_intimidate.checked)){document.form1.multi_intimidate_star.src="asterisk.gif"; }}
 if ((multi_warden_defenderofthewild)|(multi_wizard_learnedspellcaster)|(multi_barbarian_berserkersfury)|(multi_bard_bardicdilettante)|(multi_ranger_warriorofthewild)|(multi_ranger_twobladewarrior)){if ((!eladrin_nature)&(!document.form1.train_nature.checked)){document.form1.multi_nature_star.src="asterisk.gif"; }}
 if ((multi_warden_defenderofthewild)|(multi_barbarian_berserkersfury)|(multi_bard_bardicdilettante)|(multi_ranger_warriorofthewild)|(multi_ranger_twobladewarrior)){if ((!eladrin_perception)&(!document.form1.train_perception.checked)){document.form1.multi_perception_star.src="asterisk.gif"; }}
 if ((multi_bard_bardicdilettante)|(multi_wizard_learnedspellcaster)|(multi_warlock_pactinitiate) | (multi_warlock_pactinitiate)){if (((!eladrin_religion)&(!multi_cleric_initiateofthefaith)&(!document.form1.train_religion.checked))){document.form1.multi_religion_star.src="asterisk.gif"; }}
 if ((multi_ranger_warriorofthewild)|(multi_ranger_twobladewarrior)|(multi_rogue_ruthlessefficiency)){if ((!eladrin_stealth)&(!document.form1.train_stealth.checked)){document.form1.multi_stealth_star.src="asterisk.gif"; }}
 if ((multi_bard_bardicdilettante)|(multi_fighter_studentofthesword)|(multi_fighter_battleawareness) | (multi_warlock_pactinitiate)){if ((!eladrin_streetwise)&(!document.form1.train_streetwise.checked)){document.form1.multi_streetwise_star.src="asterisk.gif"; }}
 if ((multi_warlock_pactinitiate) ){if ((!eladrin_thievery)&(!document.form1.train_thievery.checked)){document.form1.multi_thievery_star.src="asterisk.gif"; }}


 }

function LightFeatStars(){
//  alert("Entering LightFeatStars()"); 
  light_actionsurge_star(); //alert("001"); 
  light_agilehunter_star(); //alert("002"); 
  light_alertness_star(); //alert("003"); 
  light_armorofbahamut_star(); //alert("004"); 
  light_armorproficiency_star(); //alert("005"); 
  light_astralfire_star(); //alert("006"); 
  light_avandrasrescue_star(); //alert("007"); 
  light_backstabber_star(); //alert("008"); 
  light_bladeopportunist_star(); //alert("009"); 
  light_burningblizzard_star(); //alert("010"); 
  light_combatreflexes_star(); 
  light_corellonsgrace_star(); 
  light_darkfury_star(); 
  light_defensivemobility_star(); 
  light_distractingshield_star(); 
  light_dodgegiants_star(); 
  light_dragonbornfrenzy_star(); 
  light_dragonbornsenses_star(); 
  light_durable_star(); 
  light_dwarvenweapontraining_star(); //alert("020"); 
  light_eladrinsoldier_star(); 
  light_elvenprecision_star(); 
  light_enlargeddragonbreath_star(); 
  light_escapeartist_star(); 
  light_expandedspellbook_star(); 
  light_farshot_star(); 
  light_farthrow_star(); 
  light_fastrunner_star(); 
  light_ferociousrebuke_star(); 
  light_groupinsight_star(); //alert("030"); 
  light_halflingagility_star(); 
  light_harmonyoferathis_star(); 
  light_healinghands_star(); 
  light_hellfireblood_star(); 
  light_humanperseverance_star(); 
  light_improveddarkonesblessing_star(); 
  light_improvedfateofthevoid_star(); 
  light_improvedinitiative_star(); 
  light_improvedmistystep_star(); 
  light_inspiredrecovery_star(); //alert("040"); 
  light_iounspoise_star(); 
  light_jackofalltrades_star(); 
  light_kordsfavor_star(); 
  light_lethalhunter_star(); 
  light_lightstep_star(); 
  light_linguist_star(); 
  light_longjumper_star(); 
  light_longinthecrowd_star(); 
  light_melorastide_star(); 
  light_moradinsresolve_star(); //alert("050"); 
  light_mountedcombat_star(); 
  light_nimbleblade_star(); 
  light_pelorsradiance_star(); 
  light_potentchallenge_star(); 
  light_powerattack_star(); 
  light_powerfulcharge_star(); 
  light_precisehunter_star(); 
  light_presstheadvantage_star(); 
  light_quickdraw_star(); 
  light_ragingstorm_star(); //alert("060"); 
  light_ravenqueensblessing_star(); 
  light_ritualcaster_star(); 
  light_sehaninesreversal_star(); 
   light_angharradhsfavor_star();
   light_avoweddragonfoe_star();
   light_berronarssalve_star();
   light_blessingofsilvanus_star();
   light_brokenshackles_star();
   light_chaunteasblessing_star();
   light_clutchofdarkness_star();
   light_elementalassault_star();
   light_escalatingassault_star();
   DoubleGenieStars();
   light_eyesofselune_star();
   light_fleetnessofmielikki_star();
   light_ghostwiseheritage_star();
   light_glittergoldsgambit_star();
   light_golddwarfpride_star();
   light_gondscraft_star();
   light_ilmatersmartyrdom_star();
   light_improvedswordbond_star();
   light_intelligentblademaster_star();
   light_kelemvorsjudgment_star();
   light_manifestresistance_star();
   light_improvedrazorswarm_star();
   light_moonelfresilience_star();
   light_oghmasrecall_star();
   light_powerofamaunator_star();
   light_retributiveshield_star();
   light_righteousrageoftempus_star();
   light_ruthlesshunter_star();
   light_scionofthegods_star();
   light_sheelaperyroylsgift_star();
   light_shieldofshadows_star();
   light_shieldthefallen_star();
   light_stubbornsurvivor_star();
   light_studentofswordmagic_star();
   light_sunelfgrace_star();
   light_sunestouch_star();
   light_tormsjustice_star();
   light_tymorascoin_star();
   light_versatileresistance_star();
   light_waukeenssilvertongue_star();
   light_alchemist_star();
   light_alchemistswap_star();
   light_wildelfluck_star();
   light_woodelfagility_star();
  light_demonwebspiral_star();
  light_distantswordbond_star();
  light_doubleaegis_star();
  light_improveddarkspiralaura_star();
  light_masteroffireanddarkness_star();
  light_mercilesskiller_star();
  light_moongleamoath_star();
//  light_shockingflame_star();
//  light_stoneguard_star();
//  light_stormrider_star();
  light_venemousheritage_star();
  light_warwizardry_star();
  light_agileopportunist_star();
  light_paragondefenses_star();
  light_quickrecoveryfeat_star();
  light_reservemaneuver_star();
//  light_doublemanifestation_star();
  light_totalaegis_star();


   light_aggressiveassault_star();
   light_anklecutter_star();
   light_beastguidance_star();
   light_beastprotector_star();
   light_beasttrainingathletics_star();
   light_beasttrainingendurance_star();
   light_beasttrainingperception_star();
   light_beasttrainingstealth_star();
   light_bloodiedinvigoration_star();
   light_bolsteringinspiration_star();
   light_bracingbreath_star();
   light_bravuraspirit_star();
   light_breathresistantbeast_star();
   light_brutalaccuracy_star();
   light_brutalteamwork_star();
   light_brutalwound_star();
   light_camouflage_star();
   light_commandthedarkness_star();
   light_coordinatedopportunity_star();
   light_cunningambusher_star();
   light_darkfiretargeting_star();
   light_deepgash_star();
   light_defensiveresilience_star();
   light_devotedchallenge_star();
   light_dirtyfighting_star();
   light_draggingflail_star();
   light_drowbeastmastery_star();
   light_dwarfstoneblood_star();
   light_dwarftrapsmith_star();
   light_elvenbeastmastery_star();
   light_experttracker_star();
   light_feyblades_star();
   light_feycommand_star();
   light_feyborncompanion_star();
   light_fiendishcompanion_star();
   light_groupassault_star();
   light_groupquarry_star();
   light_grouprattling_star();
   light_halflingstalwart_star();
   light_humanbeastmastery_star();
   light_hunterofwindandwave_star();
   light_huntersaim_star();
   light_improvedbravura_star();
   light_improvedinspiration_star();
   light_improvedinspiringword_star();
   light_improvedresources_star();
   light_improvedtactics_star();
   light_improvedvigor_star();
   light_inspireddefense_star();
   light_inspiredtactics_star();
   light_intothefraymp_star();
   light_keeperofstorm_star();
   light_leadingfire_star();
   light_lendmight_star();
   light_lingeringwrath_star();
   light_longswordfinesse_star();
   light_luckyskirmisher_star();
   light_martialalacrity_star();
   light_martialfreedom_star();
   light_masterofrumblingearth_star();
   light_nimblecompanion_star();
   light_offensiveresilience_star();
   light_opportunisticaccuracy_star();
   light_polearmmomentum_star();
   light_predatoryaction_star();
   light_primestrike_star();
   light_rashsneakattack_star();
   light_rattlingwrath_star();
   light_reapingblade_star();
   light_recklessscramble_star();
   light_ruthlessinjury_star();
   light_savinginspiration_star();
   light_secureencampment_star();
   light_shielddefense_star();
   light_sidewaysdefense_star();
   light_slayingaction_star();
   light_sneakyaccuracy_star();
   light_speedyresponse_star();
   light_streetthug_star();
   light_surprisingcharge_star();
   light_tacticalinspiration_star();
   light_takemeasure_star();
   light_thunderhammer_star();
   light_thundertuskcompanion_star();
   light_trapsense_star();
   light_tunnelstalker_star();
   light_twofistedshooter_star();
   light_unbalancingwrath_star();
   light_vengefulbeast_star();
   light_victorsconfidence_star();
   light_wielderofpiercingflame_star();



  light_advantageofcunning_star();
  light_angerunleashed_star();
  light_arcanespellfury_star();
  light_auspiciouslineage_star();
  light_bardicknowledge_star();
  light_blurringclaws_star();
  light_combatmedic_star();
  light_coordinatedexplosion_star();
  light_crushingearthstrength_star();
  light_deadlyrage_star();
  light_disciplinedwildsoul_star();
  light_distantadvantage_star();
  light_echoesofthunder_star();
  light_enragedboarform_star();
  light_expertritualist_star();
  light_ferocioustigerform_star();
  light_feytrickster_star();
  light_goliathgreatweaponprowess_star();
  light_gorebrutecharge_star();
  light_groupstealth_star();
  light_guaranteedretribution_star();
  light_implementexpertiseholysymbol_star();
  light_implementexpertiseorb_star();
  light_implementexpertiserod_star();
  light_implementexpertisestaff_star();
  light_implementexpertisewand_star();
  light_implementexpertisedagger_star();
  light_implementexpertisemusic_star();
  light_implementexpertisetome_star();
  light_implementexpertisetotem_star();
  light_improvedarmoroffaith_star();
  light_improvedbullrush_star();
  light_improveddragonsoul_star();
  light_improvedgrab_star();
  light_improvedmajesticword_star();
  light_improvedragebloodvigor_star();
  light_improvedroaroftriumph_star();
  light_insightfulpreservation_star();
  light_invigoratingpursuit_star();
  light_invokerdefense_star();
  light_markingsoftheblessed_star();
  light_markingsofthevictor_star();
  light_meleetraining_star();
  light_oncomingstorm_star();
  light_potentrebirth_star();
  light_primalfury_star();
  light_primalinstinct_star();
  light_protectorspiritadept_star();
  light_radiantpower_star();
  light_resonatingcovenant_star();
  light_restfulhealing_star();
  light_revitalizingfontoflife_star();
  light_risingfury_star();
  light_savageassault_star();
  light_scouringwrath_star();
  light_shadowskulk_star();
  light_sharedhealingspirit_star();
  light_sorcerousbladechanneling_star();
  light_speedloader_star();
  light_spritspeaker_star();
  light_stalkerspiritadept_star();
  light_strengthofvalor_star();
  light_suddenroots_star();
  light_surgingflame_star();
  light_thirstforbattle_star();
  light_timelyrespite_star();
  light_twoweaponthreat_star();
  light_twoweaponopening_star();
  light_versatilemaster_star();
  light_weaponexpertiseaxe_star();
  light_weaponexpertisebow_star();
  light_weaponexpertisecrossbow_star();
  light_weaponexpertiseflail_star();
  light_weaponexpertisehammer_star();
  light_weaponexpertiseheavyblade_star();
  light_weaponexpertiselightblade_star();
  light_weaponexpertisemace_star();
  light_weaponexpertisepick_star();
  light_weaponexpertisepolearm_star();
  light_weaponexpertisesling_star();
  light_weaponexpertisespear_star();
  light_weaponexpertisestaff_star();
  light_weaponexpertiseunarmed_star();
  light_wildbloodcunning_star();
  light_wildsenses_star();
  light_arcaneimplementproficiencydagger_star();
  light_arcaneimplementproficiencymusic_star();
  light_arcaneimplementproficiencyorb_star();
  light_arcaneimplementproficiencyrod_star();
  light_arcaneimplementproficiencystaff_star();
  light_arcaneimplementproficiencytome_star();
  light_arcaneimplementproficiencywand_star();
  light_dualimplementspellcaster_star();




   light_agiletempest_star();
   light_avandrasgift_star();
   light_avengingspirit_star();
   light_bleedingbackstab_star();
   light_bleedingprecision_star();
   light_bloodyinspiration_star();
   light_bloodytenacity_star();
   light_chainmailagility_star();
   light_combatopening_star();
   light_culltheweak_star();
   light_darkhunter_star();
   light_darkjumper_star();
   light_dauntingchallenge_star();
   light_defensivesurge_star();
   light_distractingcompanion_star();
   light_draconicarrogance_star();
   light_dragonbreathwarrior_star();
   light_elementalcompanions_star();
   light_elementalguardian_star();
   light_enduringwallop_star();
   light_evasivefootwork_star();
   light_feycharge_star();
   light_feygambit_star();
   light_feytactics_star();
   light_fiendishdefender_star();
   light_grit_star();
   light_groupflanking_star();
   light_halflingbeastmastery_star();
   light_huntersadvantage_star();
   light_huntersresurgence_star();
   light_impetuouscharger_star();
   light_infernalsneakattack_star();
   light_markedscourge_star();
   light_mightybattlerage_star();
   light_opportunisticarcher_star();
   light_opportunisticsneakattack_star();
   light_phalanxwarrior_star();
   light_preternaturalsenses_star();
   light_primequarry_star();
   light_primeslayer_star();
   light_protectivebeast_star();
   light_recklessattacker_star();
   light_reliableresources_star();
   light_rogueweaponmastery_star();
   light_roundaboutcharge_star();
   light_steadfasttacatics_star();
   light_stonefootreprisal_star();
   light_sturdybeast_star();
   light_vitalinspiration_star();
   light_warlordsformation_star();
   light_wrathfulhunter_star();
   light_actiongrant_star();
   light_aggressiveleadership_star();
   light_artfulprovocation_star();
   light_boldspirit_star();
   light_brutaladvantage_star();
   light_calltoglory_star();
   light_channeledbattlerage_star();
   light_correctingaim_star();
   light_darkfirewarrior_star();
   light_dragonwarrior_star();
   light_elementalwarrior_star();
   light_epicrecovery_star();
   light_feywildwarrior_star();
   light_fortuneswarrior_star();
   light_hawkeyewarrior_star();
   light_improvedprimeshot_star();
   light_infernalwarrior_star();
   light_invigoratingexploit_star();
   light_knockbackswing_star();
   light_lastingadvantage_star();
   light_martialmastery_star();
   light_martialresolve_star();
   light_mobilewarrior_star();
   light_onewithshadow_star();
   light_peerlesshunter_star();
   light_practicedreliability_star();
   light_primehunter_star();
   light_protectiveleadership_star();
   light_quickbeastcommand_star();
   light_rattlingexploit_star();
   light_reachingwhirlwind_star();
   light_rendingtempest_star();
   light_ruthlessterror_star();
   light_staggeringshot_star();
   light_stoneheartwarrior_star();
   light_supremeinspiration_star();
   light_surpriseaction_star();
   light_tacticalcunning_star();
   light_tacticalinsight_star();
   light_timelyrevival_star();
   light_unstoppablecharge_star();
   light_whirlwindsneakattack_star();
   light_ph2epic_star();
   light_battleacumen_star();
   light_battleinstructor_star();
   light_courageousshooter_star();
   light_firstin_star();
   light_arcanefamiliar_star();
   light_alertfamiliar_star();
   light_aggressivefamiliar_star();
   light_bondedfamiliar_star();
   light_shieldingfamiliar_star();
   light_spellseerfamiliar_star();
   light_quickfamiliar_star();
   light_sharedspeed_star();




  light_otherfeat_stars();
  light_shieldproficiency_star(); 
  light_shieldpush_star(); 
  light_skillfocusacrobatics_star(); 
  light_skillfocusarcana_star(); 
  light_skillfocusathletics_star(); 
  light_skillfocusbluff_star(); 
  light_skillfocusdiplomacy_star(); //alert("070"); 
  light_skillfocusdungeoneering_star(); 
  light_skillfocusendurance_star(); 
  light_skillfocusheal_star(); 
  light_skillfocushistory_star(); 
  light_skillfocusinsight_star(); 
  light_skillfocusintimidate_star(); 
  light_skillfocusnature_star(); 
  light_skillfocusperception_star(); 
  light_skillfocusreligion_star(); 
  light_skillfocusstealth_star(); //alert("080"); 
  light_skillfocusstreetwise_star(); 
  light_skillfocusthievery_star(); 
  light_skilltrainingacrobatics_star(); 
  light_skilltrainingarcana_star(); 
  light_skilltrainingathletics_star(); 
  light_skilltrainingbluff_star(); 
  light_skilltrainingdiplomacy_star(); 
  light_skilltrainingdungeoneering_star(); 
  light_skilltrainingendurance_star(); 
  light_skilltrainingheal_star(); //alert("090"); 
  light_skilltraininghistory_star(); 
  light_skilltraininginsight_star(); 
  light_skilltrainingintimidate_star(); 
  light_skilltrainingnature_star(); 
  light_skilltrainingperception_star(); 
  light_skilltrainingreligion_star(); 
  light_skilltrainingstealth_star(); 
  light_skilltrainingstreetwise_star(); 
  light_skilltrainingthievery_star(); 
  light_sureclimber_star(); //alert("100"); 
  light_surpriseknockdown_star(); 
  light_tacticalassault_star(); 
  light_toughness_star(); 
  light_twoweapondefense_star(); 
  light_twoweaponfighting_star(); 
  light_weaponfocusaxe_star(); 
  light_weaponfocusbow_star(); 
  light_weaponfocuscrossbow_star(); 
  light_weaponfocusflail_star(); 
  light_weaponfocushammer_star(); //alert("110"); 
  light_weaponfocusheavyblade_star(); 
  light_weaponfocuslightblade_star(); 
  light_weaponfocusmace_star(); 
  light_weaponfocuspick_star(); 
  light_weaponfocuspolearm_star(); 
  light_weaponfocussling_star(); 
  light_weaponfocusspear_star(); 
  light_weaponfocusstaff_star(); 
  light_weaponfocusunarmed_star(); 
  light_weaponproficiencyclub_star(); //alert("120"); 
  light_weaponproficiencydagger_star(); 
  light_weaponproficiencyjavelin_star(); 
  light_weaponproficiencymace_star(); 
  light_weaponproficiencysickle_star(); 
  light_weaponproficiencyothersimplemeleeweapons_star(); 
  light_weaponproficiencyothermilitarymeleeweapons_star(); 
  light_weaponproficiencyothersuperiormeleeweapons_star(); 
  light_weaponproficiencyothersimplerangedweapons_star(); 
  light_weaponproficiencyothersuperiorrangedweapons_star(); 
  light_weaponproficiencyspear_star(); 
  light_weaponproficiencygreatclub_star(); 
  light_weaponproficiencymorningstar_star(); 
  light_weaponproficiencyquarterstaff_star(); 
  light_weaponproficiencyscythe_star(); 
  light_weaponproficiencybattleaxe_star(); //alert("130"); 
  light_weaponproficiencyflail_star(); 
  light_weaponproficiencyhandaxe_star(); 
  light_weaponproficiencylongsword_star(); 
  light_weaponproficiencyscimitar_star(); 
  light_weaponproficiencyshortsword_star(); 
  light_weaponproficiencythrowinghammer_star(); 
  light_weaponproficiencywarhammer_star(); 
  light_weaponproficiencywarpick_star(); 
  light_weaponproficiencyfalchion_star(); 
  light_weaponproficiencyglaive_star(); //alert("140"); 
  light_weaponproficiencygreataxe_star(); 
  light_weaponproficiencygreatsword_star(); 
  light_weaponproficiencyhalberd_star(); 
  light_weaponproficiencyheavyflail_star(); 
  light_weaponproficiencylongspear_star(); 
  light_weaponproficiencymaul_star(); 
  light_weaponproficiencybastardsword_star(); 
  light_weaponproficiencykatar_star(); 
  light_weaponproficiencyrapier_star(); 
  light_weaponproficiencyspikedchain_star(); //alert("150"); 
  light_weaponproficiencyhandcrossbow_star(); 
  light_weaponproficiencysling_star(); 
  light_weaponproficiencycrossbow_star(); 
  light_weaponproficiencylongbow_star(); 
  light_weaponproficiencyshortbow_star(); 
  light_weaponproficiencyshuriken_star(); 
  light_wintertouched_star(); 
  light_actionrecovery_star(); 
  light_agileathlete_star(); 
  light_arcanereach_star(); //alert("160"); 
  light_backtothewall_star(); 
  light_bloodthirst_star(); 
  light_combatanticipation_star(); 
  light_combatcommander_star(); 
  light_dangersense_star(); 
  light_deadlyaxe_star(); 
  light_defensiveadvantage_star(); 
  light_devastatingcritical_star(); 
  light_distantshot_star(); 
  light_dwarvendurability_star(); //alert("170"); 
  light_empowereddragonbreath_star(); 
  light_evasion_star(); 
  light_feywildprotection_star(); 
  light_fieryrebuke_star(); 
  light_fleetfooted_star(); 
  light_greatfortitude_star(); 
  light_hammerrhythm_star(); 
  light_heavybladeopportunity_star(); 
  light_improvedsecondwind_star(); 
  light_inescapableforce_star(); //alert("180"); 
  light_ironwill_star(); 
  light_lastingfrost_star(); 
  light_lightbladeprecision_star(); 
  light_lightningarc_star(); 
  light_lightningreflexes_star(); 
  light_mettle_star(); 
  light_pointblankshot_star(); 
  light_polearmgamble_star(); 
  light_psychiclock_star(); 
  light_resoundingthunder_star(); //alert("190"); 
  light_runningshot_star(); 
  light_scimitardance_star(); 
  light_secondimplementorb_star(); 
  light_secondimplementstaff_star(); 
  light_secondimplementwand_star(); 
  light_secretstride_star(); 
  light_seizethemoment_star(); 
  light_slyhunter_star(); 
  light_solidsound_star(); 
  light_spearpush_star(); //alert("200"); 
  light_spellfocus_star(); 
  light_steadyshooter_star(); 
  light_sweepingflail_star(); 
  light_twofoldcurse_star(); 
  light_uncannydodge_star(); 
  light_underfoot_star(); 
  light_arcanemastery_star(); 
  light_axemastery_star(); 
  light_blindfight_star(); 
  light_bludgeonmastery_star(); //alert("210"); 
  light_epicresurgence_star(); 
  light_flailmastery_star(); 
  light_flankingmaneuver_star(); 
  light_fontofradiance_star(); 
  light_heavyblademastery_star(); 
  light_irresistableflame_star(); 
  light_lightblademastery_star(); 
  light_pickmastery_star(); 
  light_spearmastery_star(); //alert("220"); 
  light_spellaccuracy_star(); 
  light_triumphantattack_star(); 
  light_twoweaponflurry_star(); 
  light_unfetteredstride_star(); 
  light_multiclasspowerswap_star(); //alert("225"); 
// alert("Leaving LightFeatStars()"); 
 
 }

function UnLightFeatStars(){
// alert("Entering UnLightFeatStars()"); 
  document.form1.actionsurge_star.src="no_asterisk.gif"; 
  document.form1.agilehunter_star.src="no_asterisk.gif"; 
  document.form1.alertness_star.src="no_asterisk.gif"; 
  document.form1.armorofbahamut_star.src="no_asterisk.gif"; 
  document.form1.armorproficiencychainmail_star.src="no_asterisk.gif"; 
  document.form1.armorproficiencyleather_star.src="no_asterisk.gif"; 
  document.form1.armorproficiencyhide_star.src="no_asterisk.gif"; 
  document.form1.armorproficiencyplate_star.src="no_asterisk.gif"; 
  document.form1.armorproficiencyscale_star.src="no_asterisk.gif"; 
  document.form1.astralfire_star.src="no_asterisk.gif"; 
  document.form1.avandrasrescue_star.src="no_asterisk.gif"; 
  document.form1.backstabber_star.src="no_asterisk.gif"; 
  document.form1.bladeopportunist_star.src="no_asterisk.gif"; 
  document.form1.burningblizzard_star.src="no_asterisk.gif"; 
  document.form1.combatreflexes_star.src="no_asterisk.gif"; 
  document.form1.corellonsgrace_star.src="no_asterisk.gif"; 
  document.form1.darkfury_star.src="no_asterisk.gif"; 
  document.form1.defensivemobility_star.src="no_asterisk.gif"; 
  document.form1.distractingshield_star.src="no_asterisk.gif"; 
  document.form1.dodgegiants_star.src="no_asterisk.gif"; 
  document.form1.dragonbornfrenzy_star.src="no_asterisk.gif"; 
  document.form1.dragonbornsenses_star.src="no_asterisk.gif"; 
  document.form1.durable_star.src="no_asterisk.gif"; 
  document.form1.dwarvenweapontraining_star.src="no_asterisk.gif"; 
  document.form1.eladrinsoldier_star.src="no_asterisk.gif"; 
  document.form1.elvenprecision_star.src="no_asterisk.gif"; 
  document.form1.enlargeddragonbreath_star.src="no_asterisk.gif"; 
  document.form1.escapeartist_star.src="no_asterisk.gif"; 
  document.form1.expandedspellbook_star.src="no_asterisk.gif"; 
  document.form1.farshot_star.src="no_asterisk.gif"; 
  document.form1.farthrow_star.src="no_asterisk.gif"; 
  document.form1.fastrunner_star.src="no_asterisk.gif"; 
  document.form1.ferociousrebuke_star.src="no_asterisk.gif"; 
  document.form1.groupinsight_star.src="no_asterisk.gif"; 
  document.form1.halflingagility_star.src="no_asterisk.gif"; 
  document.form1.harmonyoferathis_star.src="no_asterisk.gif"; 
  document.form1.healinghands_star.src="no_asterisk.gif"; 
  document.form1.hellfireblood_star.src="no_asterisk.gif"; 
  document.form1.humanperseverance_star.src="no_asterisk.gif"; 
  document.form1.improveddarkonesblessing_star.src="no_asterisk.gif"; 
  document.form1.improvedfateofthevoid_star.src="no_asterisk.gif"; 
  document.form1.improvedinitiative_star.src="no_asterisk.gif"; 
  document.form1.improvedmistystep_star.src="no_asterisk.gif"; 
  document.form1.inspiredrecovery_star.src="no_asterisk.gif"; 
  document.form1.iounspoise_star.src="no_asterisk.gif"; 
  document.form1.jackofalltrades_star.src="no_asterisk.gif"; 
  document.form1.kordsfavor_star.src="no_asterisk.gif"; 
  document.form1.lethalhunter_star.src="no_asterisk.gif"; 
  document.form1.lightstep_star.src="no_asterisk.gif"; 
  document.form1.linguist_star.src="no_asterisk.gif"; 
  document.form1.longjumper_star.src="no_asterisk.gif"; 
  document.form1.longinthecrowd_star.src="no_asterisk.gif"; 
  document.form1.melorastide_star.src="no_asterisk.gif"; 
  document.form1.moradinsresolve_star.src="no_asterisk.gif"; 
  document.form1.mountedcombat_star.src="no_asterisk.gif"; 
  document.form1.nimbleblade_star.src="no_asterisk.gif"; 
  document.form1.pelorsradiance_star.src="no_asterisk.gif"; 
  document.form1.potentchallenge_star.src="no_asterisk.gif"; 
  document.form1.powerattack_star.src="no_asterisk.gif"; 
  document.form1.powerfulcharge_star.src="no_asterisk.gif"; 
  document.form1.precisehunter_star.src="no_asterisk.gif"; 
  document.form1.presstheadvantage_star.src="no_asterisk.gif"; 
  document.form1.quickdraw_star.src="no_asterisk.gif"; 
  document.form1.ragingstorm_star.src="no_asterisk.gif"; 
  document.form1.ravenqueensblessing_star.src="no_asterisk.gif"; 
  document.form1.ritualcaster_star.src="no_asterisk.gif"; 
  document.form1.sehaninesreversal_star.src="no_asterisk.gif"; 
   document.form1.angharradhsfavor_star.src="no_asterisk.gif";
   document.form1.avoweddragonfoe_star.src="no_asterisk.gif";
   document.form1.berronarssalve_star.src="no_asterisk.gif";
   document.form1.blessingofsilvanus_star.src="no_asterisk.gif";
   document.form1.brokenshackles_star.src="no_asterisk.gif";
   document.form1.chaunteasblessing_star.src="no_asterisk.gif";
   document.form1.clutchofdarkness_star.src="no_asterisk.gif";
   document.form1.elementalassault_star.src="no_asterisk.gif";
   document.form1.escalatingassault_star.src="no_asterisk.gif";
   document.form1.extramanifestationearthsoul_star.src="no_asterisk.gif";
   document.form1.extramanifestationfiresoul_star.src="no_asterisk.gif";
   document.form1.extramanifestationstormsoul_star.src="no_asterisk.gif";
   document.form1.extramanifestationwatersoul_star.src="no_asterisk.gif";
   document.form1.extramanifestationwindsoul_star.src="no_asterisk.gif";
   document.form1.eyesofselune_star.src="no_asterisk.gif";
   document.form1.fleetnessofmielikki_star.src="no_asterisk.gif";
   document.form1.ghostwiseheritage_star.src="no_asterisk.gif";
   document.form1.glittergoldsgambit_star.src="no_asterisk.gif";
   document.form1.golddwarfpride_star.src="no_asterisk.gif";
   document.form1.gondscraft_star.src="no_asterisk.gif";
   document.form1.ilmatersmartyrdom_star.src="no_asterisk.gif";
   document.form1.improvedswordbond_star.src="no_asterisk.gif";
   document.form1.intelligentblademaster_star.src="no_asterisk.gif";
   document.form1.kelemvorsjudgment_star.src="no_asterisk.gif";
   document.form1.manifestresistance_star.src="no_asterisk.gif";
   document.form1.improvedrazorswarm_star.src="no_asterisk.gif";
   document.form1.moonelfresilience_star.src="no_asterisk.gif";
   document.form1.oghmasrecall_star.src="no_asterisk.gif";
   document.form1.powerofamaunator_star.src="no_asterisk.gif";
   document.form1.retributiveshield_star.src="no_asterisk.gif";
   document.form1.righteousrageoftempus_star.src="no_asterisk.gif";
   document.form1.ruthlesshunter_star.src="no_asterisk.gif";
   document.form1.scionofthegods_star.src="no_asterisk.gif";
   document.form1.sheelaperyroylsgift_star.src="no_asterisk.gif";
   document.form1.shieldofshadows_star.src="no_asterisk.gif";
   document.form1.shieldthefallen_star.src="no_asterisk.gif";
   document.form1.stubbornsurvivor_star.src="no_asterisk.gif";
   document.form1.studentofswordmagic_star.src="no_asterisk.gif";
   document.form1.sunelfgrace_star.src="no_asterisk.gif";
   document.form1.sunestouch_star.src="no_asterisk.gif";
   document.form1.tormsjustice_star.src="no_asterisk.gif";
   document.form1.tymorascoin_star.src="no_asterisk.gif";
   document.form1.versatileresistance_star.src="no_asterisk.gif";
   document.form1.waukeenssilvertongue_star.src="no_asterisk.gif";
   document.form1.alchemist_star.src="no_asterisk.gif";
   document.form1.alchemistswap_star.src="no_asterisk.gif";
   document.form1.wildelfluck_star.src="no_asterisk.gif";
   document.form1.woodelfagility_star.src="no_asterisk.gif";
  document.form1.demonwebspiral_star.src="no_asterisk.gif";
  document.form1.distantswordbond_star.src="no_asterisk.gif";
  document.form1.doubleaegis_star.src="no_asterisk.gif";
  document.form1.improveddarkspiralaura_star.src="no_asterisk.gif";
  document.form1.masteroffireanddarkness_star.src="no_asterisk.gif";
  document.form1.mercilesskiller_star.src="no_asterisk.gif";
  document.form1.moongleamoath_star.src="no_asterisk.gif";
  document.form1.shockingflame_star.src="no_asterisk.gif";
  document.form1.stoneguard_star.src="no_asterisk.gif";
  document.form1.stormrider_star.src="no_asterisk.gif";
  document.form1.venemousheritage_star.src="no_asterisk.gif";
  document.form1.warwizardry_star.src="no_asterisk.gif";
  document.form1.agileopportunist_star.src="no_asterisk.gif";
  document.form1.paragondefenses_star.src="no_asterisk.gif";
  document.form1.quickrecoveryfeat_star.src="no_asterisk.gif";
  document.form1.reservemaneuver_star.src="no_asterisk.gif";
  document.form1.doublemanifestation_star.src="no_asterisk.gif";
  document.form1.totalaegis_star.src="no_asterisk.gif";


  document.form1.aggressiveassault_star.src="no_asterisk.gif";
  document.form1.anklecutter_star.src="no_asterisk.gif";
  document.form1.beastguidance_star.src="no_asterisk.gif";
  document.form1.beastprotector_star.src="no_asterisk.gif";
  document.form1.beasttrainingathletics_star.src="no_asterisk.gif";
  document.form1.beasttrainingendurance_star.src="no_asterisk.gif";
  document.form1.beasttrainingperception_star.src="no_asterisk.gif";
  document.form1.beasttrainingstealth_star.src="no_asterisk.gif";
  document.form1.bloodiedinvigoration_star.src="no_asterisk.gif";
  document.form1.bolsteringinspiration_star.src="no_asterisk.gif";
  document.form1.bracingbreath_star.src="no_asterisk.gif";
  document.form1.bravuraspirit_star.src="no_asterisk.gif";
  document.form1.breathresistantbeast_star.src="no_asterisk.gif";
  document.form1.brutalaccuracy_star.src="no_asterisk.gif";
  document.form1.brutalteamwork_star.src="no_asterisk.gif";
  document.form1.brutalwound_star.src="no_asterisk.gif";
  document.form1.camouflage_star.src="no_asterisk.gif";
  document.form1.commandthedarkness_star.src="no_asterisk.gif";
  document.form1.coordinatedopportunity_star.src="no_asterisk.gif";
  document.form1.cunningambusher_star.src="no_asterisk.gif";
  document.form1.darkfiretargeting_star.src="no_asterisk.gif";
  document.form1.deepgash_star.src="no_asterisk.gif";
  document.form1.defensiveresilience_star.src="no_asterisk.gif";
  document.form1.devotedchallenge_star.src="no_asterisk.gif";
  document.form1.dirtyfighting_star.src="no_asterisk.gif";
  document.form1.draggingflail_star.src="no_asterisk.gif";
  document.form1.drowbeastmastery_star.src="no_asterisk.gif";
  document.form1.dwarfstoneblood_star.src="no_asterisk.gif";
  document.form1.dwarftrapsmith_star.src="no_asterisk.gif";
  document.form1.elvenbeastmastery_star.src="no_asterisk.gif";
  document.form1.experttracker_star.src="no_asterisk.gif";
  document.form1.feyblades_star.src="no_asterisk.gif";
  document.form1.feycommand_star.src="no_asterisk.gif";
  document.form1.feyborncompanion_star.src="no_asterisk.gif";
  document.form1.fiendishcompanion_star.src="no_asterisk.gif";
  document.form1.groupassault_star.src="no_asterisk.gif";
  document.form1.groupquarry_star.src="no_asterisk.gif";
  document.form1.grouprattling_star.src="no_asterisk.gif";
  document.form1.halflingstalwart_star.src="no_asterisk.gif";
  document.form1.humanbeastmastery_star.src="no_asterisk.gif";
  document.form1.hunterofwindandwave_star.src="no_asterisk.gif";
  document.form1.huntersaim_star.src="no_asterisk.gif";
  document.form1.improvedbravura_star.src="no_asterisk.gif";
  document.form1.improvedinspiration_star.src="no_asterisk.gif";
  document.form1.improvedinspiringword_star.src="no_asterisk.gif";
  document.form1.improvedresources_star.src="no_asterisk.gif";
  document.form1.improvedtactics_star.src="no_asterisk.gif";
  document.form1.improvedvigor_star.src="no_asterisk.gif";
  document.form1.inspireddefense_star.src="no_asterisk.gif";
  document.form1.inspiredtactics_star.src="no_asterisk.gif";
  document.form1.intothefraymp_star.src="no_asterisk.gif";
  document.form1.keeperofstorm_star.src="no_asterisk.gif";
  document.form1.leadingfire_star.src="no_asterisk.gif";
  document.form1.lendmight_star.src="no_asterisk.gif";
  document.form1.lingeringwrath_star.src="no_asterisk.gif";
  document.form1.longswordfinesse_star.src="no_asterisk.gif";
  document.form1.luckyskirmisher_star.src="no_asterisk.gif";
  document.form1.martialalacrity_star.src="no_asterisk.gif";
  document.form1.martialfreedom_star.src="no_asterisk.gif";
  document.form1.masterofrumblingearth_star.src="no_asterisk.gif";
  document.form1.nimblecompanion_star.src="no_asterisk.gif";
  document.form1.offensiveresilience_star.src="no_asterisk.gif";
  document.form1.opportunisticaccuracy_star.src="no_asterisk.gif";
  document.form1.polearmmomentum_star.src="no_asterisk.gif";
  document.form1.predatoryaction_star.src="no_asterisk.gif";
  document.form1.primestrike_star.src="no_asterisk.gif";
  document.form1.rashsneakattack_star.src="no_asterisk.gif";
  document.form1.rattlingwrath_star.src="no_asterisk.gif";
  document.form1.reapingblade_star.src="no_asterisk.gif";
  document.form1.recklessscramble_star.src="no_asterisk.gif";
  document.form1.ruthlessinjury_star.src="no_asterisk.gif";
  document.form1.savinginspiration_star.src="no_asterisk.gif";
  document.form1.secureencampment_star.src="no_asterisk.gif";
  document.form1.shielddefense_star.src="no_asterisk.gif";
  document.form1.sidewaysdefense_star.src="no_asterisk.gif";
  document.form1.slayingaction_star.src="no_asterisk.gif";
  document.form1.sneakyaccuracy_star.src="no_asterisk.gif";
  document.form1.speedyresponse_star.src="no_asterisk.gif";
  document.form1.streetthug_star.src="no_asterisk.gif";
  document.form1.surprisingcharge_star.src="no_asterisk.gif";
  document.form1.tacticalinspiration_star.src="no_asterisk.gif";
  document.form1.takemeasure_star.src="no_asterisk.gif";
  document.form1.thunderhammer_star.src="no_asterisk.gif";
  document.form1.thundertuskcompanion_star.src="no_asterisk.gif";
  document.form1.trapsense_star.src="no_asterisk.gif";
  document.form1.tunnelstalker_star.src="no_asterisk.gif";
  document.form1.twofistedshooter_star.src="no_asterisk.gif";
  document.form1.unbalancingwrath_star.src="no_asterisk.gif";
  document.form1.vengefulbeast_star.src="no_asterisk.gif";
  document.form1.victorsconfidence_star.src="no_asterisk.gif";
  document.form1.wielderofpiercingflame_star.src="no_asterisk.gif";


  document.form1.advantageofcunning_star.src="no_asterisk.gif";
  document.form1.angerunleashed_star.src="no_asterisk.gif";
  document.form1.arcanespellfury_star.src="no_asterisk.gif";
  document.form1.auspiciouslineage_star.src="no_asterisk.gif";
  document.form1.bardicknowledge_star.src="no_asterisk.gif";
  document.form1.blurringclaws_star.src="no_asterisk.gif";
  document.form1.combatmedic_star.src="no_asterisk.gif";
  document.form1.coordinatedexplosion_star.src="no_asterisk.gif";
  document.form1.crushingearthstrength_star.src="no_asterisk.gif";
  document.form1.deadlyrage_star.src="no_asterisk.gif";
  document.form1.disciplinedwildsoul_star.src="no_asterisk.gif";
  document.form1.distantadvantage_star.src="no_asterisk.gif";
  document.form1.echoesofthunder_star.src="no_asterisk.gif";
  document.form1.enragedboarform_star.src="no_asterisk.gif";
  document.form1.expertritualist_star.src="no_asterisk.gif";
  document.form1.ferocioustigerform_star.src="no_asterisk.gif";
  document.form1.feytrickster_star.src="no_asterisk.gif";
  document.form1.goliathgreatweaponprowess_star.src="no_asterisk.gif";
  document.form1.gorebrutecharge_star.src="no_asterisk.gif";
  document.form1.groupstealth_star.src="no_asterisk.gif";
  document.form1.guaranteedretribution_star.src="no_asterisk.gif";
  document.form1.implementexpertiseholysymbol_star.src="no_asterisk.gif";
  document.form1.implementexpertiseorb_star.src="no_asterisk.gif";
  document.form1.implementexpertiserod_star.src="no_asterisk.gif";
  document.form1.implementexpertisestaff_star.src="no_asterisk.gif";
  document.form1.implementexpertisewand_star.src="no_asterisk.gif";
  document.form1.implementexpertisedagger_star.src="no_asterisk.gif";
  document.form1.implementexpertisemusic_star.src="no_asterisk.gif";
  document.form1.implementexpertisetome_star.src="no_asterisk.gif";
  document.form1.implementexpertisetotem_star.src="no_asterisk.gif";
  document.form1.improvedarmoroffaith_star.src="no_asterisk.gif";
  document.form1.improvedbullrush_star.src="no_asterisk.gif";
  document.form1.improveddragonsoul_star.src="no_asterisk.gif";
  document.form1.improvedgrab_star.src="no_asterisk.gif";
  document.form1.improvedmajesticword_star.src="no_asterisk.gif";
  document.form1.improvedragebloodvigor_star.src="no_asterisk.gif";
  document.form1.improvedroaroftriumph_star.src="no_asterisk.gif";
  document.form1.insightfulpreservation_star.src="no_asterisk.gif";
  document.form1.invigoratingpursuit_star.src="no_asterisk.gif";
  document.form1.invokerdefense_star.src="no_asterisk.gif";
  document.form1.markingsoftheblessed_star.src="no_asterisk.gif";
  document.form1.markingsofthevictor_star.src="no_asterisk.gif";
  document.form1.meleetraining_star.src="no_asterisk.gif";
  document.form1.oncomingstorm_star.src="no_asterisk.gif";
  document.form1.potentrebirth_star.src="no_asterisk.gif";
  document.form1.primalfury_star.src="no_asterisk.gif";
  document.form1.primalinstinct_star.src="no_asterisk.gif";
  document.form1.protectorspiritadept_star.src="no_asterisk.gif";
  document.form1.radiantpower_star.src="no_asterisk.gif";
  document.form1.resonatingcovenant_star.src="no_asterisk.gif";
  document.form1.restfulhealing_star.src="no_asterisk.gif";
  document.form1.revitalizingfontoflife_star.src="no_asterisk.gif";
  document.form1.risingfury_star.src="no_asterisk.gif";
  document.form1.savageassault_star.src="no_asterisk.gif";
  document.form1.scouringwrath_star.src="no_asterisk.gif";
  document.form1.shadowskulk_star.src="no_asterisk.gif";
  document.form1.sharedhealingspirit_star.src="no_asterisk.gif";
  document.form1.sorcerousbladechanneling_star.src="no_asterisk.gif";
  document.form1.speedloader_star.src="no_asterisk.gif";
  document.form1.spritspeaker_star.src="no_asterisk.gif";
  document.form1.stalkerspiritadept_star.src="no_asterisk.gif";
  document.form1.strengthofvalor_star.src="no_asterisk.gif";
  document.form1.suddenroots_star.src="no_asterisk.gif";
  document.form1.surgingflame_star.src="no_asterisk.gif";
  document.form1.thirstforbattle_star.src="no_asterisk.gif";
  document.form1.timelyrespite_star.src="no_asterisk.gif";
  document.form1.twoweaponthreat_star.src="no_asterisk.gif";
  document.form1.twoweaponopening_star.src="no_asterisk.gif";
  document.form1.versatilemaster_star.src="no_asterisk.gif";
  document.form1.weaponexpertiseaxe_star.src="no_asterisk.gif";
  document.form1.weaponexpertisebow_star.src="no_asterisk.gif";
  document.form1.weaponexpertisecrossbow_star.src="no_asterisk.gif";
  document.form1.weaponexpertiseflail_star.src="no_asterisk.gif";
  document.form1.weaponexpertisehammer_star.src="no_asterisk.gif";
  document.form1.weaponexpertiseheavyblade_star.src="no_asterisk.gif";
  document.form1.weaponexpertiselightblade_star.src="no_asterisk.gif";
  document.form1.weaponexpertisemace_star.src="no_asterisk.gif";
  document.form1.weaponexpertisepick_star.src="no_asterisk.gif";
  document.form1.weaponexpertisepolearm_star.src="no_asterisk.gif";
  document.form1.weaponexpertisesling_star.src="no_asterisk.gif";
  document.form1.weaponexpertisespear_star.src="no_asterisk.gif";
  document.form1.weaponexpertisestaff_star.src="no_asterisk.gif";
  document.form1.weaponexpertiseunarmed_star.src="no_asterisk.gif";
  document.form1.wildbloodcunning_star.src="no_asterisk.gif";
  document.form1.wildsenses_star.src="no_asterisk.gif";
  document.form1.arcaneimplementproficiencydagger_star.src="no_asterisk.gif";
  document.form1.arcaneimplementproficiencymusic_star.src="no_asterisk.gif";
  document.form1.arcaneimplementproficiencyorb_star.src="no_asterisk.gif";
  document.form1.arcaneimplementproficiencyrod_star.src="no_asterisk.gif";
  document.form1.arcaneimplementproficiencystaff_star.src="no_asterisk.gif";
  document.form1.arcaneimplementproficiencytome_star.src="no_asterisk.gif";
  document.form1.arcaneimplementproficiencywand_star.src="no_asterisk.gif";
  document.form1.dualimplementspellcaster_star.src="no_asterisk.gif";


  document.form1.agiletempest_star.src="no_asterisk.gif";
  document.form1.avandrasgift_star.src="no_asterisk.gif";
  document.form1.avengingspirit_star.src="no_asterisk.gif";
  document.form1.bleedingbackstab_star.src="no_asterisk.gif";
  document.form1.bleedingprecision_star.src="no_asterisk.gif";
  document.form1.bloodyinspiration_star.src="no_asterisk.gif";
  document.form1.bloodytenacity_star.src="no_asterisk.gif";
  document.form1.chainmailagility_star.src="no_asterisk.gif";
  document.form1.combatopening_star.src="no_asterisk.gif";
  document.form1.culltheweak_star.src="no_asterisk.gif";
  document.form1.darkhunter_star.src="no_asterisk.gif";
  document.form1.darkjumper_star.src="no_asterisk.gif";
  document.form1.dauntingchallenge_star.src="no_asterisk.gif";
  document.form1.defensivesurge_star.src="no_asterisk.gif";
  document.form1.distractingcompanion_star.src="no_asterisk.gif";
  document.form1.draconicarrogance_star.src="no_asterisk.gif";
  document.form1.dragonbreathwarrior_star.src="no_asterisk.gif";
  document.form1.elementalcompanions_star.src="no_asterisk.gif";
  document.form1.elementalguardian_star.src="no_asterisk.gif";
  document.form1.enduringwallop_star.src="no_asterisk.gif";
  document.form1.evasivefootwork_star.src="no_asterisk.gif";
  document.form1.feycharge_star.src="no_asterisk.gif";
  document.form1.feygambit_star.src="no_asterisk.gif";
  document.form1.feytactics_star.src="no_asterisk.gif";
  document.form1.fiendishdefender_star.src="no_asterisk.gif";
  document.form1.grit_star.src="no_asterisk.gif";
  document.form1.groupflanking_star.src="no_asterisk.gif";
  document.form1.halflingbeastmastery_star.src="no_asterisk.gif";
  document.form1.huntersadvantage_star.src="no_asterisk.gif";
  document.form1.huntersresurgence_star.src="no_asterisk.gif";
  document.form1.impetuouscharger_star.src="no_asterisk.gif";
  document.form1.infernalsneakattack_star.src="no_asterisk.gif";
  document.form1.markedscourge_star.src="no_asterisk.gif";
  document.form1.mightybattlerage_star.src="no_asterisk.gif";
  document.form1.opportunisticarcher_star.src="no_asterisk.gif";
  document.form1.opportunisticsneakattack_star.src="no_asterisk.gif";
  document.form1.phalanxwarrior_star.src="no_asterisk.gif";
  document.form1.preternaturalsenses_star.src="no_asterisk.gif";
  document.form1.primequarry_star.src="no_asterisk.gif";
  document.form1.primeslayer_star.src="no_asterisk.gif";
  document.form1.protectivebeast_star.src="no_asterisk.gif";
  document.form1.recklessattacker_star.src="no_asterisk.gif";
  document.form1.reliableresources_star.src="no_asterisk.gif";
  document.form1.rogueweaponmastery_star.src="no_asterisk.gif";
  document.form1.roundaboutcharge_star.src="no_asterisk.gif";
  document.form1.steadfasttacatics_star.src="no_asterisk.gif";
  document.form1.stonefootreprisal_star.src="no_asterisk.gif";
  document.form1.sturdybeast_star.src="no_asterisk.gif";
  document.form1.vitalinspiration_star.src="no_asterisk.gif";
  document.form1.warlordsformation_star.src="no_asterisk.gif";
  document.form1.wrathfulhunter_star.src="no_asterisk.gif";
  document.form1.actiongrant_star.src="no_asterisk.gif";
  document.form1.aggressiveleadership_star.src="no_asterisk.gif";
  document.form1.artfulprovocation_star.src="no_asterisk.gif";
  document.form1.boldspirit_star.src="no_asterisk.gif";
  document.form1.brutaladvantage_star.src="no_asterisk.gif";
  document.form1.calltoglory_star.src="no_asterisk.gif";
  document.form1.channeledbattlerage_star.src="no_asterisk.gif";
  document.form1.correctingaim_star.src="no_asterisk.gif";
  document.form1.darkfirewarrior_star.src="no_asterisk.gif";
  document.form1.dragonwarrior_star.src="no_asterisk.gif";
  document.form1.elementalwarrior_star.src="no_asterisk.gif";
  document.form1.epicrecovery_star.src="no_asterisk.gif";
  document.form1.feywildwarrior_star.src="no_asterisk.gif";
  document.form1.fortuneswarrior_star.src="no_asterisk.gif";
  document.form1.hawkeyewarrior_star.src="no_asterisk.gif";
  document.form1.improvedprimeshot_star.src="no_asterisk.gif";
  document.form1.infernalwarrior_star.src="no_asterisk.gif";
  document.form1.invigoratingexploit_star.src="no_asterisk.gif";
  document.form1.knockbackswing_star.src="no_asterisk.gif";
  document.form1.lastingadvantage_star.src="no_asterisk.gif";
  document.form1.martialmastery_star.src="no_asterisk.gif";
  document.form1.martialresolve_star.src="no_asterisk.gif";
  document.form1.mobilewarrior_star.src="no_asterisk.gif";
  document.form1.onewithshadow_star.src="no_asterisk.gif";
  document.form1.peerlesshunter_star.src="no_asterisk.gif";
  document.form1.practicedreliability_star.src="no_asterisk.gif";
  document.form1.primehunter_star.src="no_asterisk.gif";
  document.form1.protectiveleadership_star.src="no_asterisk.gif";
  document.form1.quickbeastcommand_star.src="no_asterisk.gif";
  document.form1.rattlingexploit_star.src="no_asterisk.gif";
  document.form1.reachingwhirlwind_star.src="no_asterisk.gif";
  document.form1.rendingtempest_star.src="no_asterisk.gif";
  document.form1.ruthlessterror_star.src="no_asterisk.gif";
  document.form1.staggeringshot_star.src="no_asterisk.gif";
  document.form1.stoneheartwarrior_star.src="no_asterisk.gif";
  document.form1.supremeinspiration_star.src="no_asterisk.gif";
  document.form1.surpriseaction_star.src="no_asterisk.gif";
  document.form1.tacticalcunning_star.src="no_asterisk.gif";
  document.form1.tacticalinsight_star.src="no_asterisk.gif";
  document.form1.timelyrevival_star.src="no_asterisk.gif";
  document.form1.unstoppablecharge_star.src="no_asterisk.gif";
  document.form1.whirlwindsneakattack_star.src="no_asterisk.gif";
  document.form1.bowmastery_star.src="no_asterisk.gif";
  document.form1.epicfortitude_star.src="no_asterisk.gif";
  document.form1.epicreflexes_star.src="no_asterisk.gif";
  document.form1.epicwill_star.src="no_asterisk.gif";
  document.form1.indomitablewill_star.src="no_asterisk.gif";
  document.form1.opportunereflexes_star.src="no_asterisk.gif";
  document.form1.robustdefenses_star.src="no_asterisk.gif";
  document.form1.unyieldingfortitude_star.src="no_asterisk.gif";
  document.form1.battleacumen_star.src="no_asterisk.gif";
  document.form1.battleinstructor_star.src="no_asterisk.gif";
  document.form1.courageousshooter_star.src="no_asterisk.gif";
  document.form1.firstin_star.src="no_asterisk.gif";
  document.form1.arcanefamiliar_star.src="no_asterisk.gif";
  document.form1.alertfamiliar_star.src="no_asterisk.gif";
  document.form1.aggressivefamiliar_star.src="no_asterisk.gif";
  document.form1.bondedfamiliar_star.src="no_asterisk.gif";
  document.form1.shieldingfamiliar_star.src="no_asterisk.gif";
  document.form1.spellseerfamiliar_star.src="no_asterisk.gif";
  document.form1.quickfamiliar_star.src="no_asterisk.gif";
  document.form1.sharedspeed_star.src="no_asterisk.gif";



  document.form1.otherfeat01_star.src="no_asterisk.gif"; 
  document.form1.otherfeat02_star.src="no_asterisk.gif"; 
  document.form1.otherfeat03_star.src="no_asterisk.gif"; 
  document.form1.otherfeat04_star.src="no_asterisk.gif"; 
  document.form1.otherfeat05_star.src="no_asterisk.gif"; 
  document.form1.otherfeat06_star.src="no_asterisk.gif"; 
  document.form1.otherfeat07_star.src="no_asterisk.gif"; 
  document.form1.shieldproficiencyheavy_star.src="no_asterisk.gif"; 
  document.form1.shieldproficiencylight_star.src="no_asterisk.gif"; 
  document.form1.shieldpush_star.src="no_asterisk.gif"; 
  document.form1.skillfocusacrobatics_star.src="no_asterisk.gif"; 
  document.form1.skillfocusarcana_star.src="no_asterisk.gif"; 
  document.form1.skillfocusathletics_star.src="no_asterisk.gif"; 
  document.form1.skillfocusbluff_star.src="no_asterisk.gif"; 
  document.form1.skillfocusdiplomacy_star.src="no_asterisk.gif"; 
  document.form1.skillfocusdungeoneering_star.src="no_asterisk.gif"; 
  document.form1.skillfocusendurance_star.src="no_asterisk.gif"; 
  document.form1.skillfocusheal_star.src="no_asterisk.gif"; 
  document.form1.skillfocushistory_star.src="no_asterisk.gif"; 
  document.form1.skillfocusinsight_star.src="no_asterisk.gif"; 
  document.form1.skillfocusintimidate_star.src="no_asterisk.gif"; 
  document.form1.skillfocusnature_star.src="no_asterisk.gif"; 
  document.form1.skillfocusperception_star.src="no_asterisk.gif"; 
  document.form1.skillfocusreligion_star.src="no_asterisk.gif"; 
  document.form1.skillfocusstealth_star.src="no_asterisk.gif"; 
  document.form1.skillfocusstreetwise_star.src="no_asterisk.gif"; 
  document.form1.skillfocusthievery_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingacrobatics_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingarcana_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingathletics_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingbluff_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingdiplomacy_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingdungeoneering_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingendurance_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingheal_star.src="no_asterisk.gif"; 
  document.form1.skilltraininghistory_star.src="no_asterisk.gif"; 
  document.form1.skilltraininginsight_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingintimidate_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingnature_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingperception_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingreligion_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingstealth_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingstreetwise_star.src="no_asterisk.gif"; 
  document.form1.skilltrainingthievery_star.src="no_asterisk.gif"; 
  document.form1.sureclimber_star.src="no_asterisk.gif"; 
  document.form1.surpriseknockdown_star.src="no_asterisk.gif"; 
  document.form1.tacticalassault_star.src="no_asterisk.gif"; 
  document.form1.toughness_star.src="no_asterisk.gif"; 
  document.form1.twoweapondefense_star.src="no_asterisk.gif"; 
  document.form1.twoweaponfighting_star.src="no_asterisk.gif"; 
  document.form1.weaponfocusaxe_star.src="no_asterisk.gif"; 
  document.form1.weaponfocusbow_star.src="no_asterisk.gif"; 
  document.form1.weaponfocuscrossbow_star.src="no_asterisk.gif"; 
  document.form1.weaponfocusflail_star.src="no_asterisk.gif"; 
  document.form1.weaponfocushammer_star.src="no_asterisk.gif"; 
  document.form1.weaponfocusheavyblade_star.src="no_asterisk.gif"; 
  document.form1.weaponfocuslightblade_star.src="no_asterisk.gif"; 
  document.form1.weaponfocusmace_star.src="no_asterisk.gif"; 
  document.form1.weaponfocuspick_star.src="no_asterisk.gif"; 
  document.form1.weaponfocuspolearm_star.src="no_asterisk.gif"; 
  document.form1.weaponfocussling_star.src="no_asterisk.gif"; 
  document.form1.weaponfocusspear_star.src="no_asterisk.gif"; 
  document.form1.weaponfocusstaff_star.src="no_asterisk.gif"; 
  document.form1.weaponfocusunarmed_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyclub_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencydagger_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyjavelin_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencymace_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencysickle_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyothersimplemeleeweapons_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyothermilitarymeleeweapons_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyothersuperiormeleeweapons_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyothersimplerangedweapons_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyothersuperiorrangedweapons_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyspear_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencygreatclub_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencymorningstar_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyquarterstaff_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyscythe_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencybattleaxe_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyflail_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyhandaxe_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencylongsword_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyscimitar_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyshortsword_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencythrowinghammer_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencywarhammer_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencywarpick_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyfalchion_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyglaive_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencygreataxe_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencygreatsword_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyhalberd_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyheavyflail_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencylongspear_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencymaul_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencybastardsword_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencykatar_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyrapier_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyspikedchain_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyhandcrossbow_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencysling_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencycrossbow_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencylongbow_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyshortbow_star.src="no_asterisk.gif"; 
  document.form1.weaponproficiencyshuriken_star.src="no_asterisk.gif"; 
  document.form1.wintertouched_star.src="no_asterisk.gif"; 
  document.form1.actionrecovery_star.src="no_asterisk.gif"; 
  document.form1.agileathlete_star.src="no_asterisk.gif"; 
  document.form1.arcanereach_star.src="no_asterisk.gif"; 
  document.form1.armorspecializationchainmail_star.src="no_asterisk.gif"; 
  document.form1.armorspecializationhide_star.src="no_asterisk.gif"; 
  document.form1.armorspecializationplate_star.src="no_asterisk.gif"; 
  document.form1.armorspecializationscale_star.src="no_asterisk.gif"; 
  document.form1.backtothewall_star.src="no_asterisk.gif"; 
  document.form1.bloodthirst_star.src="no_asterisk.gif"; 
  document.form1.combatanticipation_star.src="no_asterisk.gif"; 
  document.form1.combatcommander_star.src="no_asterisk.gif"; 
  document.form1.dangersense_star.src="no_asterisk.gif"; 
  document.form1.deadlyaxe_star.src="no_asterisk.gif"; 
  document.form1.defensiveadvantage_star.src="no_asterisk.gif"; 
  document.form1.devastatingcritical_star.src="no_asterisk.gif"; 
  document.form1.distantshot_star.src="no_asterisk.gif"; 
  document.form1.dwarvendurability_star.src="no_asterisk.gif"; 
  document.form1.empowereddragonbreath_star.src="no_asterisk.gif"; 
  document.form1.evasion_star.src="no_asterisk.gif"; 
  document.form1.feywildprotection_star.src="no_asterisk.gif"; 
  document.form1.fieryrebuke_star.src="no_asterisk.gif"; 
  document.form1.fleetfooted_star.src="no_asterisk.gif"; 
  document.form1.greatfortitude_star.src="no_asterisk.gif"; 
  document.form1.hammerrhythm_star.src="no_asterisk.gif"; 
  document.form1.heavybladeopportunity_star.src="no_asterisk.gif"; 
  document.form1.improvedsecondwind_star.src="no_asterisk.gif"; 
  document.form1.inescapableforce_star.src="no_asterisk.gif"; 
  document.form1.ironwill_star.src="no_asterisk.gif"; 
  document.form1.lastingfrost_star.src="no_asterisk.gif"; 
  document.form1.lightbladeprecision_star.src="no_asterisk.gif"; 
  document.form1.lightningarc_star.src="no_asterisk.gif"; 
  document.form1.lightningreflexes_star.src="no_asterisk.gif"; 
  document.form1.mettle_star.src="no_asterisk.gif"; 
  document.form1.pointblankshot_star.src="no_asterisk.gif"; 
  document.form1.polearmgamble_star.src="no_asterisk.gif"; 
  document.form1.psychiclock_star.src="no_asterisk.gif"; 
  document.form1.resoundingthunder_star.src="no_asterisk.gif"; 
  document.form1.runningshot_star.src="no_asterisk.gif"; 
  document.form1.scimitardance_star.src="no_asterisk.gif"; 
  document.form1.secondimplementorb_star.src="no_asterisk.gif"; 
  document.form1.secondimplementstaff_star.src="no_asterisk.gif"; 
  document.form1.secondimplementwand_star.src="no_asterisk.gif"; 
  document.form1.secretstride_star.src="no_asterisk.gif"; 
  document.form1.seizethemoment_star.src="no_asterisk.gif"; 
  document.form1.shieldspecialization_star.src="no_asterisk.gif"; 
  document.form1.slyhunter_star.src="no_asterisk.gif"; 
  document.form1.solidsound_star.src="no_asterisk.gif"; 
  document.form1.spearpush_star.src="no_asterisk.gif"; 
  document.form1.spellfocus_star.src="no_asterisk.gif"; 
  document.form1.steadyshooter_star.src="no_asterisk.gif"; 
  document.form1.sweepingflail_star.src="no_asterisk.gif"; 
  document.form1.twofoldcurse_star.src="no_asterisk.gif"; 
  document.form1.uncannydodge_star.src="no_asterisk.gif"; 
  document.form1.underfoot_star.src="no_asterisk.gif"; 
  document.form1.arcanemastery_star.src="no_asterisk.gif"; 
  document.form1.axemastery_star.src="no_asterisk.gif"; 
  document.form1.blindfight_star.src="no_asterisk.gif"; 
  document.form1.bludgeonmastery_star.src="no_asterisk.gif"; 
  document.form1.epicresurgence_star.src="no_asterisk.gif"; 
  document.form1.flailmastery_star.src="no_asterisk.gif"; 
  document.form1.flankingmaneuver_star.src="no_asterisk.gif"; 
  document.form1.fontofradiance_star.src="no_asterisk.gif"; 
  document.form1.heavyblademastery_star.src="no_asterisk.gif"; 
  document.form1.irresistableflame_star.src="no_asterisk.gif"; 
  document.form1.lightblademastery_star.src="no_asterisk.gif"; 
  document.form1.pickmastery_star.src="no_asterisk.gif"; 
  document.form1.spearmastery_star.src="no_asterisk.gif"; 
  document.form1.spellaccuracy_star.src="no_asterisk.gif"; 
  document.form1.triumphantattack_star.src="no_asterisk.gif"; 
  document.form1.twoweaponflurry_star.src="no_asterisk.gif"; 
  document.form1.unfetteredstride_star.src="no_asterisk.gif"; 
//  alert("I turned off unfetteredstride_star"); 
  document.form1.multiclasspowerswapencounter_star.src="no_asterisk.gif"; 
  document.form1.multiclasspowerswaputility_star.src="no_asterisk.gif"; 
  document.form1.multiclasspowerswapdaily_star.src="no_asterisk.gif"; 
 }

function MilitaryStars(){

if ((already_knows_club) | (feat_weaponproficiencyclub))
 {document.form1.club_prof_arrow.src="asterisk.gif"; }
  else {document.form1.club_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_dagger) | (feat_weaponproficiencydagger))
 {document.form1.dagger_prof_arrow.src="asterisk.gif"; }
  else {document.form1.dagger_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_javelin) | (feat_weaponproficiencyjavelin))
 {document.form1.javelin_prof_arrow.src="asterisk.gif"; }
  else {document.form1.javelin_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_mace) | (feat_weaponproficiencymace))
 {document.form1.mace_prof_arrow.src="asterisk.gif"; }
  else {document.form1.mace_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_sickle) | (feat_weaponproficiencysickle))
 {document.form1.sickle_prof_arrow.src="asterisk.gif"; }
  else {document.form1.sickle_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_spear) | (feat_weaponproficiencyspear))
 {document.form1.spear_prof_arrow.src="asterisk.gif"; }
  else {document.form1.spear_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_othersimplemeleeweapons)|(feat_weaponproficiencyothersimplemeleeweapons))
 {document.form1.spikedgauntlet_prof_arrow.src="asterisk.gif"; }
  else {document.form1.spikedgauntlet_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_greatclub) | (feat_weaponproficiencygreatclub))
 {document.form1.greatclub_prof_arrow.src="asterisk.gif"; }
  else {document.form1.greatclub_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_morningstar) | (feat_weaponproficiencymorningstar))
 {document.form1.morningstar_prof_arrow.src="asterisk.gif"; }
  else {document.form1.morningstar_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_quarterstaff) | (feat_weaponproficiencyquarterstaff))
 {document.form1.quarterstaff_prof_arrow.src="asterisk.gif"; }
  else {document.form1.quarterstaff_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_scythe) | (feat_weaponproficiencyscythe))
 {document.form1.scythe_prof_arrow.src="asterisk.gif"; }
  else {document.form1.scythe_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_battleaxe) | (feat_weaponproficiencybattleaxe))
 {document.form1.battleaxe_prof_arrow.src="asterisk.gif"; }
  else {document.form1.battleaxe_prof_arrow.src="no_asterisk.gif"; }


if ((already_knows_othermilitarymeleeweapons)|(feat_weaponproficiencyothermilitarymeleeweapons))
 {
  document.form1.broadsword_prof_arrow.src="asterisk.gif";
  document.form1.khopesh_prof_arrow.src="asterisk.gif";
  document.form1.lightwarpick_prof_arrow.src="asterisk.gif";
  document.form1.scourge_prof_arrow.src="asterisk.gif";
  document.form1.trident_prof_arrow.src="asterisk.gif";
  document.form1.heavywarpick_prof_arrow.src="asterisk.gif";
 }
  else
 {
  document.form1.broadsword_prof_arrow.src="no_asterisk.gif";
  document.form1.khopesh_prof_arrow.src="no_asterisk.gif";
  document.form1.lightwarpick_prof_arrow.src="no_asterisk.gif";
  document.form1.scourge_prof_arrow.src="no_asterisk.gif";
  document.form1.trident_prof_arrow.src="no_asterisk.gif";
  document.form1.heavywarpick_prof_arrow.src="no_asterisk.gif";
 }
  
if (class_swordmage)
 {
  document.form1.broadsword_prof_arrow.src="asterisk.gif";
  document.form1.khopesh_prof_arrow.src="asterisk.gif";
 }

if ((already_knows_flail) | (feat_weaponproficiencyflail))
 {document.form1.flail_prof_arrow.src="asterisk.gif"; }
  else {document.form1.flail_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_handaxe) | (feat_weaponproficiencyhandaxe))
 {document.form1.handaxe_prof_arrow.src="asterisk.gif"; }
  else {document.form1.handaxe_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_longsword) | (feat_weaponproficiencylongsword))
 {document.form1.longsword_prof_arrow.src="asterisk.gif"; }
  else {document.form1.longsword_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_scimitar) | (feat_weaponproficiencyscimitar))
 {document.form1.scimitar_prof_arrow.src="asterisk.gif"; }
  else {document.form1.scimitar_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_shortsword) | (feat_weaponproficiencyshortsword))
 {document.form1.shortsword_prof_arrow.src="asterisk.gif"; }
  else {document.form1.shortsword_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_throwinghammer) | (feat_weaponproficiencythrowinghammer))
 {document.form1.throwinghammer_prof_arrow.src="asterisk.gif"; }
  else {document.form1.throwinghammer_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_warhammer) | (feat_weaponproficiencywarhammer))
 {document.form1.warhammer_prof_arrow.src="asterisk.gif"; }
  else {document.form1.warhammer_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_warpick) | (feat_weaponproficiencywarpick))
 {document.form1.warpick_prof_arrow.src="asterisk.gif"; }
  else {document.form1.warpick_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_falchion) | (feat_weaponproficiencyfalchion))
 {document.form1.falchion_prof_arrow.src="asterisk.gif"; }
  else {document.form1.falchion_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_glaive) | (feat_weaponproficiencyglaive))
 {document.form1.glaive_prof_arrow.src="asterisk.gif"; }
  else {document.form1.glaive_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_greataxe) | (feat_weaponproficiencygreataxe))
 {document.form1.greataxe_prof_arrow.src="asterisk.gif"; }
  else {document.form1.greataxe_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_greatsword) | (feat_weaponproficiencygreatsword))
 {document.form1.greatsword_prof_arrow.src="asterisk.gif"; }
  else {document.form1.greatsword_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_halberd) | (feat_weaponproficiencyhalberd))
 {document.form1.halberd_prof_arrow.src="asterisk.gif"; }
  else {document.form1.halberd_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_heavyflail) | (feat_weaponproficiencyheavyflail))
 {document.form1.heavyflail_prof_arrow.src="asterisk.gif"; }
  else {document.form1.heavyflail_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_longspear) | (feat_weaponproficiencylongspear))
 {document.form1.longspear_prof_arrow.src="asterisk.gif"; }
  else {document.form1.longspear_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_maul) | (feat_weaponproficiencymaul))
 {document.form1.maul_prof_arrow.src="asterisk.gif"; }
  else {document.form1.maul_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_bastardsword) | (feat_weaponproficiencybastardsword))
 {document.form1.bastardsword_prof_arrow.src="asterisk.gif"; }
  else {document.form1.bastardsword_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_katar) | (feat_weaponproficiencykatar))
 {document.form1.katar_prof_arrow.src="asterisk.gif"; }
  else {document.form1.katar_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_rapier) | (feat_weaponproficiencyrapier))
 {document.form1.rapier_prof_arrow.src="asterisk.gif"; }
  else {document.form1.rapier_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_spikedchain) | (feat_weaponproficiencyspikedchain))
 {document.form1.spikedchain_prof_arrow.src="asterisk.gif"; }
  else {document.form1.spikedchain_prof_arrow.src="no_asterisk.gif"; }

if (feat_weaponproficiencyothersuperiormeleeweapons)
 {
  document.form1.craghammer_prof_arrow.src="asterisk.gif";
  document.form1.kukri_prof_arrow.src="asterisk.gif";
  document.form1.parryingdagger_prof_arrow.src="asterisk.gif";
  document.form1.spikedshield_prof_arrow.src="asterisk.gif";
  document.form1.tratnyr_prof_arrow.src="asterisk.gif";
  document.form1.tripleheadedflail_prof_arrow.src="asterisk.gif";
  document.form1.waraxe_prof_arrow.src="asterisk.gif";
 }
else
 {
  document.form1.craghammer_prof_arrow.src="no_asterisk.gif";
  document.form1.kukri_prof_arrow.src="no_asterisk.gif";
  document.form1.parryingdagger_prof_arrow.src="no_asterisk.gif";
  document.form1.spikedshield_prof_arrow.src="no_asterisk.gif";
  document.form1.tratnyr_prof_arrow.src="no_asterisk.gif";
  document.form1.tripleheadedflail_prof_arrow.src="no_asterisk.gif";
  document.form1.waraxe_prof_arrow.src="no_asterisk.gif";
 }

if ((feat_weaponproficiencyothersuperiormeleeweapons)&(!small))
 {
  document.form1.executionaxe_prof_arrow.src="asterisk.gif";
  document.form1.fullblade_prof_arrow.src="asterisk.gif";
  document.form1.greatspear_prof_arrow.src="asterisk.gif";
  document.form1.mordenkrad_prof_arrow.src="asterisk.gif";
  document.form1.doubleaxe_prof_arrow.src="asterisk.gif";
  document.form1.doubleflail_prof_arrow.src="asterisk.gif";
  document.form1.doublesword_prof_arrow.src="asterisk.gif";
  document.form1.urgrosh_prof_arrow.src="asterisk.gif";
 }
else
 {
  document.form1.executionaxe_prof_arrow.src="no_asterisk.gif";
  document.form1.fullblade_prof_arrow.src="no_asterisk.gif";
  document.form1.greatspear_prof_arrow.src="no_asterisk.gif";
  document.form1.mordenkrad_prof_arrow.src="no_asterisk.gif";
  document.form1.doubleaxe_prof_arrow.src="no_asterisk.gif";
  document.form1.doubleflail_prof_arrow.src="no_asterisk.gif";
  document.form1.doublesword_prof_arrow.src="no_asterisk.gif";
  document.form1.urgrosh_prof_arrow.src="no_asterisk.gif";
 }

if (feat_weaponproficiencyothersuperiorrangedweapons)
 {
  document.form1.greatbow_prof_arrow.src="asterisk.gif";
  document.form1.superiorcrossbow_prof_arrow.src="asterisk.gif";
 }
else
 {
  document.form1.greatbow_prof_arrow.src="no_asterisk.gif";
  document.form1.superiorcrossbow_prof_arrow.src="no_asterisk.gif";
 }




if ((already_knows_handcrossbow) | (feat_weaponproficiencyhandcrossbow))
 {document.form1.handcrossbow_prof_arrow.src="asterisk.gif"; }
  else {document.form1.handcrossbow_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_sling) | (feat_weaponproficiencysling))
 {document.form1.sling_prof_arrow.src="asterisk.gif"; }
  else {document.form1.sling_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_crossbow) | (feat_weaponproficiencycrossbow))
 {document.form1.crossbow_prof_arrow.src="asterisk.gif"; }
  else {document.form1.crossbow_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_othersimplerangedweapons) | (feat_weaponproficiencyothersimplerangedweapons))
 {document.form1.repeatingcrossbow_prof_arrow.src="asterisk.gif"; }
  else {document.form1.repeatingcrossbow_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_longbow) | (feat_weaponproficiencylongbow))
 {document.form1.longbow_prof_arrow.src="asterisk.gif"; }
  else {document.form1.longbow_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_shortbow) | (feat_weaponproficiencyshortbow))
 {document.form1.shortbow_prof_arrow.src="asterisk.gif"; }
  else {document.form1.shortbow_prof_arrow.src="no_asterisk.gif"; }

if ((already_knows_shuriken) | (feat_weaponproficiencyshuriken))
 {document.form1.shuriken_prof_arrow.src="asterisk.gif"; }
  else {document.form1.shuriken_prof_arrow.src="no_asterisk.gif"; }


if ((already_knows_leather) | (feat_armorproficiencyleather))
 {document.form1.leather_prof_arrow.src="asterisk.gif"; }
  else {document.form1.leather_prof_arrow.src="no_asterisk.gif"; }


if ((already_knows_hide) | (feat_armorproficiencyhide))
 {document.form1.hide_prof_arrow.src="asterisk.gif"; }
  else {document.form1.hide_prof_arrow.src="no_asterisk.gif"; }


if ((already_knows_chainmail) | (feat_armorproficiencychainmail))
 {document.form1.chainmail_prof_arrow.src="asterisk.gif"; }
  else {document.form1.chainmail_prof_arrow.src="no_asterisk.gif"; }


if ((already_knows_scale) | (feat_armorproficiencyscale))
 {document.form1.scale_prof_arrow.src="asterisk.gif"; }
  else {document.form1.scale_prof_arrow.src="no_asterisk.gif"; }


if ((already_knows_plate) | (feat_armorproficiencyplate))
 {document.form1.plate_prof_arrow.src="asterisk.gif"; }
  else {document.form1.plate_prof_arrow.src="no_asterisk.gif"; }


if ((already_knows_lightshield) | (feat_shieldproficiencylight))
 {document.form1.lightshield_prof_arrow.src="asterisk.gif"; }
  else {document.form1.lightshield_prof_arrow.src="no_asterisk.gif"; }


if ((already_knows_heavyshield) | (feat_shieldproficiencyheavy))
 {document.form1.heavyshield_prof_arrow.src="asterisk.gif"; }
  else {document.form1.heavyshield_prof_arrow.src="no_asterisk.gif"; }


 if (feat_dwarvenweapontraining)
  {
   document.form1.battleaxe_prof_arrow.src="asterisk.gif";
   document.form1.handaxe_prof_arrow.src="asterisk.gif";
   document.form1.throwinghammer_prof_arrow.src="asterisk.gif";
   document.form1.warhammer_prof_arrow.src="asterisk.gif";
   document.form1.greataxe_prof_arrow.src="asterisk.gif";
   document.form1.halberd_prof_arrow.src="asterisk.gif";
   document.form1.maul_prof_arrow.src="asterisk.gif";
   document.form1.khopesh_prof_arrow.src="asterisk.gif";
   document.form1.craghammer_prof_arrow.src="asterisk.gif";
   document.form1.waraxe_prof_arrow.src="asterisk.gif";
   document.form1.executionaxe_prof_arrow.src="asterisk.gif";
   document.form1.mordenkrad_prof_arrow.src="asterisk.gif";
   document.form1.doubleaxe_prof_arrow.src="asterisk.gif";
   document.form1.urgrosh_prof_arrow.src="asterisk.gif";
  }
 }

function ArmorProficient(){
 if ((document.form1.armor_radio[1].checked)&(!already_knows_leather)&(!feat_armorproficiencyleather)){return false; }
 if ((document.form1.armor_radio[2].checked)&(!already_knows_hide)&(!feat_armorproficiencyhide)){return false; }
 if ((document.form1.armor_radio[3].checked)&(!already_knows_chainmail)&(!feat_armorproficiencychainmail)){return false; }
 if ((document.form1.armor_radio[4].checked)&(!already_knows_scale)&(!feat_armorproficiencyscale)){return false; }
 if ((document.form1.armor_radio[5].checked)&(!already_knows_plate)&(!feat_armorproficiencyplate)){return false; }
 return true; 
 }

function StrengthDamage(){
 stringy2=""; 
 if (modifier_number(strength)>0){stringy2="+"+modifier_number(strength)+" [strength bonus]"; }
 if (modifier_number(strength)==0){stringy2=""; }
 if (modifier_number(strength)<0){stringy2=modifier_number(strength)+" [strength penalty]"; }
 return stringy2; 
 }

function GoliathGreatweapon(){
 if (!feat_goliathgreatweaponprowess){return "";}
 if (total_levels>20){return "+4 [goliath greatweapon prowess]";}
 if (total_levels>10){return "+3 [goliath greatweapon prowess]";}
 return "+2 [goliath greatweapon prowess]";
 }

function StrengthNote(){
 if (strength_attack_base>0){stringy2="[+"+strength_attack_base+" strength attack]"; }
 if (strength_attack_base<=0){stringy2="["+strength_attack_base+" strength attack]"; }
 return stringy2; 
 }

function DexterityNote(){
 if (dexterity_attack_base>0){stringy2="[+"+dexterity_attack_base+" dexterity attack]"; }
 if (dexterity_attack_base<=0){stringy2="["+dexterity_attack_base+" dexterity attack]"; }
 return stringy2; 
 }

function DexterityDamage(){
 if (modifier_number(dexterity)>0){stringy2="+"+modifier_number(dexterity)+" [dexterity bonus]"; }
 if (modifier_number(dexterity)==0){stringy2=""; }
 if (modifier_number(dexterity)<0){stringy2=modifier_number(dexterity)+" [dexterity penalty]"; }
 return stringy2; 
 }

function uncheck_powers_boxes(){

  document.form1.other01atwill_1_box.checked=false;
  document.form1.other01atwill_2_box.checked=false; 
  document.form1.other01atwill_3_box.checked=false; 
  document.form1.other01encounter_box.checked=false; 
  document.form1.other01daily_box.checked=false; 
  document.form1.other02atwill_box.checked=false; 
  document.form1.other02encounter_box.checked=false; 
  document.form1.other02daily_box.checked=false; 
  document.form1.other03encounter_box.checked=false; 
  document.form1.other05daily_box.checked=false; 
  document.form1.other06atwill_box.checked=false; 
  document.form1.other06encounter_box.checked=false; 
  document.form1.other06daily_box.checked=false; 
  document.form1.other07encounter_box.checked=false; 
  document.form1.other09daily_box.checked=false; 
  document.form1.other10atwill_box.checked=false; 
  document.form1.other10encounter_box.checked=false; 
  document.form1.other10daily_box.checked=false; 
  document.form1.other13encounter_box.checked=false; 
  document.form1.other15daily_box.checked=false; 
  document.form1.other16atwill_box.checked=false; 
  document.form1.other16encounter_box.checked=false; 
  document.form1.other16daily_box.checked=false; 
  document.form1.other17encounter_box.checked=false; 
  document.form1.other19daily_box.checked=false; 
  document.form1.other22atwill_box.checked=false; 
  document.form1.other22encounter_box.checked=false; 
  document.form1.other22daily_box.checked=false; 
  document.form1.other23encounter_box.checked=false; 
  document.form1.other25daily_box.checked=false; 
  document.form1.other27encounter_box.checked=false; 
  document.form1.other29daily_box.checked=false; 
     c_cl_aw();
     c_cl_e();
     c_cl_d();
     c_cl_u();
     c_fi_aw();
     c_fi_e();
     c_fi_d();
     c_fi_u();
     c_pa_aw();
     c_pa_e();
     c_pa_d();
     c_pa_u();
     c_ra_aw();
     c_ra_e();
     c_ra_d();
     c_ra_u();
     c_ro_aw();
     c_ro_e();
     c_ro_d();
     c_ro_u();
     c_wk_aw();
     c_wk_e();
     c_wk_d();
     c_wk_u();
     c_wd_aw();
     c_wd_e();
     c_wd_d();
     c_wd_u();
     c_wz_aw();
     c_wz_e();
     c_wz_d();
     c_wz_u();
     c_sw_aw();
     c_sw_e();
     c_sw_d();
     c_sw_u();
     c_av_aw();
     c_bd_aw();
     c_bn_aw();
     c_dr_aw();
     c_in_aw();
     c_sh_aw();
     c_so_aw();
     c_wn_aw();
     c_av_e();
     c_bd_e();
     c_bn_e();
     c_dr_e();
     c_in_e();
     c_sh_e();
     c_so_e();
     c_wn_e();
     c_av_u();
     c_bd_u();
     c_bn_u();
     c_dr_u();
     c_in_u();
     c_sh_u();
     c_so_u();
     c_wn_u();
     c_av_d();
     c_bd_d();
     c_bn_d();
     c_dr_d();
     c_in_d();
     c_sh_d();
     c_so_d();
     c_wn_d();
     c_spellscarred_e();
     c_spellscarred_d();
     c_spellscarred_u();
 }



function ArrowShow(){
 
 if ((stat1==0) || (my_character_is_done==true))
  {document.form1.rollthedicearrow.src="dragonarrowleft.gif"; }
  else if ((AbilitiesHaveBeenEstablished==false))
   {document.form1.rollthedicearrow.src="dragongrayleft.gif"; }
    else {document.form1.rollthedicearrow.src="dragonblank.gif"; }

 if ((stat1==0) || (stat2==0) || (stat3==0) || (stat4==0) || (stat5==0) || (stat6==0) || (my_character_is_done==true))
  {
   if (strength==0)
    {
     if (AbilitiesAreProperlyAssigned==true){document.form1.changemhere.src="adjustyourscoresgray.gif"; }
     else {document.form1.changemhere.src="adjustyourscoreshere.gif"; }
    }
   else {document.form1.changemhere.src="startoverred.gif"; }
  }
  else if ((AbilitiesHaveBeenEstablished==false))
   {document.form1.changemhere.src="adjustyourscoresgray.gif"; }
    else {document.form1.changemhere.src="startoverblack.gif"; }



 if ((stat1>0)&&(AbilitiesHaveBeenEstablished==false)
     &&(document.form1.firststat[0].checked==false)
     &&(document.form1.firststat[1].checked==false)
     &&(document.form1.firststat[2].checked==false)
     &&(document.form1.firststat[3].checked==false)
     &&(document.form1.firststat[4].checked==false)
     &&(document.form1.firststat[5].checked==false)
     )
  {document.form1.stat1arrow.src="dragonarrowright.gif"; }
  else if ((stat1>0)&&(AbilitiesHaveBeenEstablished==false))
   {document.form1.stat1arrow.src="dragongrayright.gif"; }
    else {document.form1.stat1arrow.src="dragonblank.gif"; }

 if ((stat2>0)&&(AbilitiesHaveBeenEstablished==false)
     &&(document.form1.secondstat[0].checked==false)
     &&(document.form1.secondstat[1].checked==false)
     &&(document.form1.secondstat[2].checked==false)
     &&(document.form1.secondstat[3].checked==false)
     &&(document.form1.secondstat[4].checked==false)
     &&(document.form1.secondstat[5].checked==false)
     )
  {document.form1.stat2arrow.src="dragonarrowright.gif"; }
  else if ((stat2>0)&&(AbilitiesHaveBeenEstablished==false))
   {document.form1.stat2arrow.src="dragongrayright.gif"; }
    else {document.form1.stat2arrow.src="dragonblank.gif"; }

 if ((stat3>0)&&(AbilitiesHaveBeenEstablished==false)
     &&(document.form1.thirdstat[0].checked==false)
     &&(document.form1.thirdstat[1].checked==false)
     &&(document.form1.thirdstat[2].checked==false)
     &&(document.form1.thirdstat[3].checked==false)
     &&(document.form1.thirdstat[4].checked==false)
     &&(document.form1.thirdstat[5].checked==false)
     )
  {document.form1.stat3arrow.src="dragonarrowright.gif"; }
  else if ((stat3>0)&&(AbilitiesHaveBeenEstablished==false))
   {document.form1.stat3arrow.src="dragongrayright.gif"; }
    else {document.form1.stat3arrow.src="dragonblank.gif"; }

 if ((stat4>0)&&(AbilitiesHaveBeenEstablished==false)
     &&(document.form1.fourthstat[0].checked==false)
     &&(document.form1.fourthstat[1].checked==false)
     &&(document.form1.fourthstat[2].checked==false)
     &&(document.form1.fourthstat[3].checked==false)
     &&(document.form1.fourthstat[4].checked==false)
     &&(document.form1.fourthstat[5].checked==false)
     )
  {document.form1.stat4arrow.src="dragonarrowright.gif"; }
  else if ((stat4>0)&&(AbilitiesHaveBeenEstablished==false))
   {document.form1.stat4arrow.src="dragongrayright.gif"; }
    else {document.form1.stat4arrow.src="dragonblank.gif"; }

 if ((stat5>0)&&(AbilitiesHaveBeenEstablished==false)
     &&(document.form1.fifthstat[0].checked==false)
     &&(document.form1.fifthstat[1].checked==false)
     &&(document.form1.fifthstat[2].checked==false)
     &&(document.form1.fifthstat[3].checked==false)
     &&(document.form1.fifthstat[4].checked==false)
     &&(document.form1.fifthstat[5].checked==false)
     )
  {document.form1.stat5arrow.src="dragonarrowright.gif"; }
  else if ((stat5>0)&&(AbilitiesHaveBeenEstablished==false))
   {document.form1.stat5arrow.src="dragongrayright.gif"; }
    else {document.form1.stat5arrow.src="dragonblank.gif"; }

 if ((stat6>0)&&(AbilitiesHaveBeenEstablished==false)
     &&(document.form1.sixthstat[0].checked==false)
     &&(document.form1.sixthstat[1].checked==false)
     &&(document.form1.sixthstat[2].checked==false)
     &&(document.form1.sixthstat[3].checked==false)
     &&(document.form1.sixthstat[4].checked==false)
     &&(document.form1.sixthstat[5].checked==false)
     )
  {document.form1.stat6arrow.src="dragonarrowright.gif"; }
  else if ((stat6>0)&&(AbilitiesHaveBeenEstablished==false))
   {document.form1.stat6arrow.src="dragongrayright.gif"; }
    else {document.form1.stat6arrow.src="dragonblank.gif"; }

 if ((AbilitiesAreProperlyAssigned==true)&&(AbilitiesHaveBeenEstablished==false))
  {document.form1.acceptscoresarrow.src="dragonarrowleft.gif"; }
    else {document.form1.acceptscoresarrow.src="dragonblank.gif"; }


 if ((CharacterTypeHasBeenEstablished==false)&&(AbilitiesHaveBeenEstablished==true))
   {
   if (RaceAssigned()==false){document.form1.racearrow.src="dragonarrowright.gif"; }
   else {document.form1.racearrow.src="dragongrayright.gif"; }
   }
    else {document.form1.racearrow.src="dragonblank.gif"; }

 if ((CharacterTypeHasBeenEstablished==false)&&(AbilitiesHaveBeenEstablished==true))
   {
   if (gender==0){document.form1.genderarrow.src="dragonarrowright.gif"; }
   else {document.form1.genderarrow.src="dragongrayright.gif"; }
   }
    else {document.form1.genderarrow.src="dragonblank.gif"; }

 if ((CharacterTypeHasBeenEstablished==false)&&(AbilitiesHaveBeenEstablished==true))
   {
   if (alignment==0){document.form1.alignmentarrow.src="dragonarrowright.gif"; }
   else {document.form1.alignmentarrow.src="dragongrayright.gif"; }
   }
    else {document.form1.alignmentarrow.src="dragonblank.gif"; }

 if ((CharacterTypeHasBeenEstablished==false)&&(AbilitiesHaveBeenEstablished==true))
   {
   if (total_levels==0){document.form1.totallevelsarrow.src="dragonarrowright.gif"; }
   else {document.form1.totallevelsarrow.src="dragongrayright.gif"; }
   }
    else {document.form1.totallevelsarrow.src="dragonblank.gif"; }


 if ((CharacterTypeHasBeenEstablished==false)&&(RaceAssigned()==true)
  &&((gender>0) | (race_warforged))&&(alignment>0)&&(total_levels>0))
  {document.form1.acceptthispersonarrow.src="dragonarrowleft.gif"; }
    else {document.form1.acceptthispersonarrow.src="dragonblank.gif"; }

 if ((ClassesHaveBeenEstablished==false)&&(CharacterTypeHasBeenEstablished==true))
  {
   if (BasicClassAssigned()==false){document.form1.classesarrow.src="dragonarrowright.gif"; }
   else {document.form1.classesarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.classesarrow.src="dragonblank.gif"; }


 if ((ClassesHaveBeenEstablished==false)&&(CharacterTypeHasBeenEstablished==true))
  {
   document.form1.multiclassarrow.src="dragongrayright.gif"; 
  }
    else {document.form1.classesarrow.src="dragonblank.gif"; }

 if ((ClassesHaveBeenEstablished==false)&&(CharacterTypeHasBeenEstablished==true)&&(total_levels>10)&&(BasicClassAssigned()==true))
  {
   if (ParagonPathAssigned()==false){document.form1.paragonsarrow.src="dragonarrowright.gif"; }
   else {document.form1.paragonsarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.paragonsarrow.src="dragonblank.gif"; }


 if ((ClassesHaveBeenEstablished==false)&&(CharacterTypeHasBeenEstablished==true)&&(total_levels>20)&&(BasicClassAssigned()==true))
  {
   if (EpicDestinyAssigned()==false){document.form1.epicdestinyarrow.src="dragonarrowright.gif"; }
   else {document.form1.epicdestinyarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.epicdestinyarrow.src="dragonblank.gif"; }


 if ((ClassesHaveBeenEstablished==false)&&(AllClassStuffAssigned()==true))
  {document.form1.acceptclassesarrow.src="dragonarrowleft.gif"; }
    else {document.form1.acceptclassesarrow.src="dragonblank.gif"; }

 if ((race_human)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!Raise01Okay()){document.form1.up01arrow.src="dragonarrowright.gif"; }
   else {document.form1.up01arrow.src="dragongrayright.gif"; }
  }
    else {document.form1.up01arrow.src="dragonblank.gif"; }

 if ((race_dragonborn)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!BreathTypeChosen()){document.form1.breathtypearrow.src="dragonarrowright.gif"; }
   else {document.form1.breathtypearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.breathtypearrow.src="dragonblank.gif"; }

 if ((race_dragonborn)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!BreathStatChosen()){document.form1.breathstatarrow.src="dragonarrowright.gif"; }
   else {document.form1.breathstatarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.breathstatarrow.src="dragonblank.gif"; }

 if ((race_eladrin)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!EladrinEducationChosen()){document.form1.eladrineducationarrow.src="dragonarrowright.gif"; }
   else {document.form1.eladrineducationarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.eladrineducationarrow.src="dragonblank.gif"; }

 if ((race_halfelf)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!DilettanteChoiceMade()){document.form1.dilettantearrow.src="dragonarrowright.gif"; }
   else {document.form1.dilettantearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.dilettantearrow.src="dragonblank.gif"; }


 if ((race_genasi)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
    if (MandatoryGensaiExpression()){document.form1.genasisoultypearrow.src="dragonarrowblank.gif"; } else
   if (!GenasiSoulTypeChosen()){document.form1.genasisoultypearrow.src="dragonarrowright.gif"; }
   else {document.form1.genasisoultypearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.genasisoultypearrow.src="dragonblank.gif"; }



// if ((class_cleric)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
//  {
//   if (!ClericStartingRitualOkay()){document.form1.clericstartingritualarrow.src="dragonarrowright.gif"; }
//   else {document.form1.clericstartingritualarrow.src="dragongrayright.gif"; }
//  }
//    else {document.form1.clericstartingritualarrow.src="dragonblank.gif"; }
                        
 if (((class_fighter) | (multi_fighter_studentofthesword))&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!FighterStyleChosen()){document.form1.fighterstylearrow.src="dragonarrowright.gif"; }
   else {document.form1.fighterstylearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.fighterstylearrow.src="dragonblank.gif"; }

 if ((class_ranger)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryRangerStyle()){document.form1.rangerstylearrow.src="dragonblank.gif"; }
   else if (!RangerStyleChosen()){document.form1.rangerstylearrow.src="dragonarrowright.gif"; }
   else {document.form1.rangerstylearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.rangerstylearrow.src="dragonblank.gif"; }

 if ((class_rogue)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!RogueStyleChosen()){document.form1.roguestylearrow.src="dragonarrowright.gif"; }
   else {document.form1.roguestylearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.roguestylearrow.src="dragonblank.gif"; }

 if (((class_warlock) | (multi_warlock_with_pact()))&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryWarlockPact()){document.form1.warlockpactarrow.src="dragonblank.gif"; }
   else if (!WarlockPactChosen()){document.form1.warlockpactarrow.src="dragonarrowright.gif"; }
   else {document.form1.warlockpactarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.warlockpactarrow.src="dragonblank.gif"; }

 if ((race_other)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!OtherRaceSightChosen()){document.form1.otherracesightarrow.src="dragonarrowright.gif"; }
   else {document.form1.otherracesightarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.otherracesightarrow.src="dragonblank.gif"; }

 if ((race_other)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!OtherRaceSizeChosen()){document.form1.otherracesizearrow.src="dragonarrowright.gif"; }
   else {document.form1.otherracesizearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.otherracesizearrow.src="dragonblank.gif"; }

 if ((class_other)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!OtherClassDefenseChosen()){document.form1.otherclassdefensearrow.src="dragonarrowright.gif"; }
   else {document.form1.otherclassdefensearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.otherclassdefensearrow.src="dragonblank.gif"; }

 if ((class_other)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!OtherClassHitPointsChosen()){document.form1.otherclasshitpointsarrow.src="dragonarrowright.gif"; }
   else {document.form1.otherclasshitpointsarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.otherclasshitpointsarrow.src="dragonblank.gif"; }

 if ((class_other)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!OtherClassSurgesChosen()){document.form1.otherclasssurgesarrow.src="dragonarrowright.gif"; }
   else {document.form1.otherclasssurgesarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.otherclasssurgesarrow.src="dragonblank.gif"; }

 if ((class_warlord)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!WarlordPresenceChosen()){document.form1.warlordpresencearrow.src="dragonarrowright.gif"; }
   else {document.form1.warlordpresencearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.warlordpresencearrow.src="dragonblank.gif"; }

 if ((class_wizard)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!WizardImplementChosen()){document.form1.wizardimplementarrow.src="dragonarrowright.gif"; }
   else {document.form1.wizardimplementarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.wizardimplementarrow.src="dragonblank.gif"; }

 if ((multi_wizard_arcaneinitiate)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
    document.form1.arcaneinitiatearrow.src="dragongrayright.gif"; 
  }
    else {document.form1.arcaneinitiatearrow.src="dragonblank.gif"; }


 if ((multi_sorcerer_soulofsorcery)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
    document.form1.soulofsorceryarrow.src="dragongrayright.gif"; 
  }
    else {document.form1.soulofsorceryarrow.src="dragonblank.gif"; }


 if ((class_swordmage)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatorySwordmageAegis()){document.form1.swordmageaegisarrow.src="dragonblank.gif"; }
   else if (!SwordmageAegisChosen()){document.form1.swordmageaegisarrow.src="dragonarrowright.gif"; }
   else {document.form1.swordmageaegisarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.swordmageaegisarrow.src="dragonblank.gif"; }


 if ((class_avenger)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryAvengerCensure()){document.form1.avengercensurearrow.src="dragonblank.gif"; }
   else if (!AvengerCensureChosen()){document.form1.avengercensurearrow.src="dragonarrowright.gif"; }
   else {document.form1.avengercensurearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.avengercensurearrow.src="dragonblank.gif"; }


 if ((class_barbarian)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryBarbarianFeral()){document.form1.barbarianferalarrow.src="dragonblank.gif"; }
   else if (!BarbarianFeralChosen()){document.form1.barbarianferalarrow.src="dragonarrowright.gif"; }
   else {document.form1.barbarianferalarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.barbarianferalarrow.src="dragonblank.gif"; }


 if ((class_bard)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryBardVirtue()){document.form1.bardvirtuearrow.src="dragonblank.gif"; }
   else if (!BardVirtueChosen()){document.form1.bardvirtuearrow.src="dragonarrowright.gif"; }
   else {document.form1.bardvirtuearrow.src="dragongrayright.gif"; }
  }
    else {document.form1.bardvirtuearrow.src="dragonblank.gif"; }


 if ((class_druid)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryDruidPrimal()){document.form1.druidprimalarrow.src="dragonblank.gif"; }
   else if (!DruidPrimalChosen()){document.form1.druidprimalarrow.src="dragonarrowright.gif"; }
   else {document.form1.druidprimalarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.druidprimalarrow.src="dragonblank.gif"; }


 if ((class_invoker)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryInvokerCovenant()){document.form1.invokercovenantarrow.src="dragonblank.gif"; }
   else if (!InvokerCovenantChosen()){document.form1.invokercovenantarrow.src="dragonarrowright.gif"; }
   else {document.form1.invokercovenantarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.invokercovenantarrow.src="dragonblank.gif"; }


 if ((class_shaman)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryShamanSpirit()){document.form1.shamanspiritarrow.src="dragonblank.gif"; }
   else if (!ShamanSpiritChosen()){document.form1.shamanspiritarrow.src="dragonarrowright.gif"; }
   else {document.form1.shamanspiritarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.shamanspiritarrow.src="dragonblank.gif"; }


 if ((class_sorcerer)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatorySorcererMagic()){document.form1.sorcerermagicarrow.src="dragonblank.gif"; }
   else if (!SorcererMagicChosen()){document.form1.sorcerermagicarrow.src="dragonarrowright.gif"; }
   else {document.form1.sorcerermagicarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.sorcerermagicarrow.src="dragonblank.gif"; }


 if ((class_warden)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryWardenMight()){document.form1.wardenmightarrow.src="dragonblank.gif"; }
   else if (!WardenMightChosen()){document.form1.wardenmightarrow.src="dragonarrowright.gif"; }
   else {document.form1.wardenmightarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.wardenmightarrow.src="dragonblank.gif"; }


 if ((total_levels>=4)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!Raise04Okay()){document.form1.up04arrow.src="dragonarrowleft.gif"; }
   else {document.form1.up04arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.up04arrow.src="dragonblank.gif"; }

 if ((total_levels>=8)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!Raise08Okay()){document.form1.up08arrow.src="dragonarrowleft.gif"; }
   else {document.form1.up08arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.up08arrow.src="dragonblank.gif"; }

 if ((total_levels>=14)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!Raise14Okay()){document.form1.up14arrow.src="dragonarrowleft.gif"; }
   else {document.form1.up14arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.up14arrow.src="dragonblank.gif"; }

 if ((total_levels>=18)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!Raise18Okay()){document.form1.up18arrow.src="dragonarrowleft.gif"; }
   else {document.form1.up18arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.up18arrow.src="dragonblank.gif"; }

 if ((total_levels>=24)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!Raise24Okay()){document.form1.up24arrow.src="dragonarrowleft.gif"; }
   else {document.form1.up24arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.up24arrow.src="dragonblank.gif"; }

 if ((total_levels>=28)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!Raise28Okay()){document.form1.up28arrow.src="dragonarrowleft.gif"; }
   else {document.form1.up28arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.up28arrow.src="dragonblank.gif"; }

 if (((epic_demigod)|(epic_chosen))&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!Raise21Okay()){document.form1.up21arrow.src="dragonarrowleft.gif"; }
   else {document.form1.up21arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.up21arrow.src="dragonblank.gif"; }

 if ((epic_other)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   document.form1.upepicarrow.src="dragongrayleft.gif";  
  }
    else {document.form1.upepicarrow.src="dragonblank.gif"; }

 if ((document.form1.rangerstyle[2].checked)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (MandatoryRangerBeast()){document.form1.beastmasterarrow.src="dragonblank.gif";} else
   if (!BeastChosen()){document.form1.beastmasterarrow.src="dragonarrowright.gif"; }
   else {document.form1.beastmasterarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.beastmasterarrow.src="dragonblank.gif"; }

 if ((arcane_caster())&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   document.form1.familiararrow.src="dragongrayright.gif"; 
  }
    else {document.form1.familiararrow.src="dragonblank.gif"; }

 if ((race_other)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!RaiseOtherRaceStatsOkay()){document.form1.upother_race_statsarrow.src="dragonarrowright.gif"; }
   else {document.form1.upother_race_statsarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.upother_race_statsarrow.src="dragonblank.gif"; }

 if ((race_other)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!RaiseOtherRaceSkillsOkay()){document.form1.upother_race_skillsarrow.src="dragonarrowright.gif"; }
   else {document.form1.upother_race_skillsarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.upother_race_skillsarrow.src="dragonblank.gif"; }


                      
 if ((total_levels>=4)&(document.form1.rangerstyle[2].checked)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!b_Raise04Okay()){document.form1.b_up04arrow.src="dragonarrowleft.gif"; }
   else {document.form1.b_up04arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.b_up04arrow.src="dragonblank.gif"; }

 if ((total_levels>=8)&(document.form1.rangerstyle[2].checked)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!b_Raise08Okay()){document.form1.b_up08arrow.src="dragonarrowleft.gif"; }
   else {document.form1.b_up08arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.b_up08arrow.src="dragonblank.gif"; }

 if ((total_levels>=14)&(document.form1.rangerstyle[2].checked)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!b_Raise14Okay()){document.form1.b_up14arrow.src="dragonarrowleft.gif"; }
   else {document.form1.b_up14arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.b_up14arrow.src="dragonblank.gif"; }

 if ((total_levels>=18)&(document.form1.rangerstyle[2].checked)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!b_Raise18Okay()){document.form1.b_up18arrow.src="dragonarrowleft.gif"; }
   else {document.form1.b_up18arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.b_up18arrow.src="dragonblank.gif"; }

 if ((total_levels>=24)&(document.form1.rangerstyle[2].checked)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!b_Raise24Okay()){document.form1.b_up24arrow.src="dragonarrowleft.gif"; }
   else {document.form1.b_up24arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.b_up24arrow.src="dragonblank.gif"; }

 if ((total_levels>=28)&(document.form1.rangerstyle[2].checked)&&(ClassesHaveBeenEstablished==true)&&(AbilityIncreasesAreLocked==false))
  {
   if (!b_Raise28Okay()){document.form1.b_up28arrow.src="dragonarrowleft.gif"; }
   else {document.form1.b_up28arrow.src="dragongrayleft.gif"; }
  }
    else {document.form1.b_up28arrow.src="dragonblank.gif"; }




 if ((FighterFeatsEtcFrozen==false)
    &&(AbilitiesWellIncreased())
    &&(BreathTypeChosen())
    &&(BreathStatChosen())
    &&(EladrinEducationChosen())
    &&(DilettanteChoiceMade())
//    &&(ClericStartingRitualChosen())
    &&(GenasiSoulTypeChosen())
    &&(FighterStyleChosen())
    &&(RangerStyleChosen())
    &&(RogueStyleChosen())
    &&(WarlockPactChosen())
    &&(WarlordPresenceChosen())
    &&(WizardImplementChosen())
    &&(SwordmageAegisChosen())
    &&(BarbarianFeralChosen())
    &&(AvengerCensureChosen())
    &&(BardVirtueChosen())
    &&(DruidPrimalChosen())
    &&(InvokerCovenantChosen())
    &&(ShamanSpiritChosen())
    &&(SorcererMagicChosen())
    &&(WardenMightChosen())
    &&(ClassesHaveBeenEstablished==true)
    &&(RaiseOtherRaceStatsOkay())
    &&(RaiseOtherRaceSkillsOkay())
    &&(OtherRaceSightChosen())
    &&(OtherRaceSizeChosen())
    &&(OtherClassDefenseChosen())
    &&(OtherClassHitPointsChosen())
    &&(OtherClassSurgesChosen())
    &&(b_AbilitiesWellIncreased())
    &&(BeastChosen())

    )
  {document.form1.moveonarrow.src="dragonarrowleft.gif"; }
    else {document.form1.moveonarrow.src="dragonblank.gif"; }


 if ((FighterFeatsEtcFrozen==true)&&(SkillsAreAssigned==false))
  {
    if (!SkillSetOkay()){document.form1.skillsarrow.src="dragonarrowright.gif"; }
    else {document.form1.skillsarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.skillsarrow.src="dragonblank.gif"; }

 if ((FighterFeatsEtcFrozen==true)&&(SkillsAreAssigned==false))
  {
    if (!MultiSkillChoiceAvailable()){document.form1.multiskillsarrow.src="dragonblank.gif"; } else
    if (!MultiSkillOkay()){document.form1.multiskillsarrow.src="dragonarrowright.gif"; }
    else {document.form1.multiskillsarrow.src="dragongrayright.gif"; }
  }
    else {document.form1.multiskillsarrow.src="dragonblank.gif"; }




 if ((FighterFeatsEtcFrozen==true)&&(SkillsAreAssigned==false)&&(SkillSetOkay())&(MultiSkillOkay()))
 {document.form1.acceptskillsarrow.src="dragonarrowleft.gif"; }
    else {document.form1.acceptskillsarrow.src="dragonblank.gif"; }



 if ((SkillsAreAssigned==false) || (FeatsAreLocked==true))
     {
      document.form1.featsarrow.src="dragonblank.gif"; 
      document.form1.acceptfeatsarrow.src="dragonblank.gif"; 
     }
   else if (CountFeats())
     {
      document.form1.featsarrow.src="dragongrayright.gif"; 
      document.form1.acceptfeatsarrow.src="dragonarrowleft.gif"; 
     }
   else
    {
     document.form1.featsarrow.src="dragonarrowright.gif"; 
      document.form1.acceptfeatsarrow.src="dragonblank.gif"; 
    }

 if ((FeatsAreLocked==true))
  {document.form1.doitarrow.src="dragonarrowright.gif"; }
    else {document.form1.doitarrow.src="dragonblank.gif"; }

 if ((SkillsAreAssigned)&(!FeatsAreLocked))
  {
//   alert("In Arrowshow()"); 
   LightFeatStars(); 
  }

 }

function Raise01Okay(){
 if (!race_human){return true; }
 if (document.form1.upat01[0].checked){return true; }
 if (document.form1.upat01[1].checked){return true; }
 if (document.form1.upat01[2].checked){return true; }
 if (document.form1.upat01[3].checked){return true; }
 if (document.form1.upat01[4].checked){return true; }
 if (document.form1.upat01[5].checked){return true; }
 return false; 
 }



 function OtherRaceSightChosen(){
  if (!race_other){return true; }
  if (document.form1.otherracesight[0].checked){return true; }
  if (document.form1.otherracesight[1].checked){return true; }
  if (document.form1.otherracesight[2].checked){return true; }
  return false; 
  }

 function OtherRaceSizeChosen(){
  if (!race_other){return true; }
  if (document.form1.otherracesize[0].checked){return true; }
  if (document.form1.otherracesize[1].checked){return true; }
  return false; 
  }

 function OtherClassDefenseChosen(){
  if (!class_other){return true; }
  if (document.form1.otherclassdefense[0].checked){return true; }
  if (document.form1.otherclassdefense[1].checked){return true; }
  if (document.form1.otherclassdefense[2].checked){return true; }
  if (document.form1.otherclassdefense[3].checked){return true; }
  if (document.form1.otherclassdefense[4].checked){return true; }
  if (document.form1.otherclassdefense[5].checked){return true; }
  if (document.form1.otherclassdefense[6].checked){return true; }
  return false; 
  }

 function OtherClassHitPointsChosen(){
  if (!class_other){return true; }
  if (document.form1.otherclasshitpoints[0].checked){return true; }
  if (document.form1.otherclasshitpoints[1].checked){return true; }
  if (document.form1.otherclasshitpoints[2].checked){return true; }
  return false; 
  }

 function OtherClassSurgesChosen(){
  if (!class_other){return true; }
  if (document.form1.otherclasssurges[0].checked){return true; }
  if (document.form1.otherclasssurges[1].checked){return true; }
  if (document.form1.otherclasssurges[2].checked){return true; }
  if (document.form1.otherclasssurges[3].checked){return true; }
  if (document.form1.otherclasssurges[4].checked){return true; }
  return false; 
  }


function Raise04Okay(){
 z=0; 
 if (total_levels<4){return true; }
 if (document.form1.str_04_box.checked==true){z++; }
 if (document.form1.dex_04_box.checked==true){z++; }
 if (document.form1.con_04_box.checked==true){z++; }
 if (document.form1.int_04_box.checked==true){z++; }
 if (document.form1.wis_04_box.checked==true){z++; }
 if (document.form1.chr_04_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function Raise08Okay(){
 z=0; 
 if (total_levels<8){return true; }
 if (document.form1.str_08_box.checked==true){z++; }
 if (document.form1.dex_08_box.checked==true){z++; }
 if (document.form1.con_08_box.checked==true){z++; }
 if (document.form1.int_08_box.checked==true){z++; }
 if (document.form1.wis_08_box.checked==true){z++; }
 if (document.form1.chr_08_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function Raise14Okay(){
 z=0; 
 if (total_levels<14){return true; }
 if (document.form1.str_14_box.checked==true){z++; }
 if (document.form1.dex_14_box.checked==true){z++; }
 if (document.form1.con_14_box.checked==true){z++; }
 if (document.form1.int_14_box.checked==true){z++; }
 if (document.form1.wis_14_box.checked==true){z++; }
 if (document.form1.chr_14_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function Raise18Okay(){
 z=0; 
 if (total_levels<18){return true; }
 if (document.form1.str_18_box.checked==true){z++; }
 if (document.form1.dex_18_box.checked==true){z++; }
 if (document.form1.con_18_box.checked==true){z++; }
 if (document.form1.int_18_box.checked==true){z++; }
 if (document.form1.wis_18_box.checked==true){z++; }
 if (document.form1.chr_18_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function Raise24Okay(){
 z=0; 
 if (total_levels<24){return true; }
 if (document.form1.str_24_box.checked==true){z++; }
 if (document.form1.dex_24_box.checked==true){z++; }
 if (document.form1.con_24_box.checked==true){z++; }
 if (document.form1.int_24_box.checked==true){z++; }
 if (document.form1.wis_24_box.checked==true){z++; }
 if (document.form1.chr_24_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function Raise28Okay(){
 z=0; 
 if (total_levels<28){return true; }
 if (document.form1.str_28_box.checked==true){z++; }
 if (document.form1.dex_28_box.checked==true){z++; }
 if (document.form1.con_28_box.checked==true){z++; }
 if (document.form1.int_28_box.checked==true){z++; }
 if (document.form1.wis_28_box.checked==true){z++; }
 if (document.form1.chr_28_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function BeastChosen(){
 if (document.form1.rangerstyle[2].checked==false){return true;}
 if (document.form1.beast[0].checked){return true;}
 if (document.form1.beast[1].checked){return true;}
 if (document.form1.beast[2].checked){return true;}
 if (document.form1.beast[3].checked){return true;}
 if (document.form1.beast[4].checked){return true;}
 if (document.form1.beast[5].checked){return true;}
 if (document.form1.beast[6].checked){return true;}
 if (document.form1.beast[7].checked){return true;}
 return false;
 }

function b_Raise04Okay(){
 z=0;
 if (document.form1.rangerstyle[2].checked==false){return true;}
 if (total_levels<4){return true; }
 if (document.form1.b_str_04_box.checked==true){z++; }
 if (document.form1.b_dex_04_box.checked==true){z++; }
 if (document.form1.b_con_04_box.checked==true){z++; }
 if (document.form1.b_int_04_box.checked==true){z++; }
 if (document.form1.b_wis_04_box.checked==true){z++; }
 if (document.form1.b_chr_04_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function b_Raise08Okay(){
 z=0; 
 if (document.form1.rangerstyle[2].checked==false){return true;}
 if (total_levels<8){return true; }
 if (document.form1.b_str_08_box.checked==true){z++; }
 if (document.form1.b_dex_08_box.checked==true){z++; }
 if (document.form1.b_con_08_box.checked==true){z++; }
 if (document.form1.b_int_08_box.checked==true){z++; }
 if (document.form1.b_wis_08_box.checked==true){z++; }
 if (document.form1.b_chr_08_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function b_Raise14Okay(){
 z=0; 
 if (document.form1.rangerstyle[2].checked==false){return true;}
 if (total_levels<14){return true; }
 if (document.form1.b_str_14_box.checked==true){z++; }
 if (document.form1.b_dex_14_box.checked==true){z++; }
 if (document.form1.b_con_14_box.checked==true){z++; }
 if (document.form1.b_int_14_box.checked==true){z++; }
 if (document.form1.b_wis_14_box.checked==true){z++; }
 if (document.form1.b_chr_14_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function b_Raise18Okay(){
 z=0; 
 if (document.form1.rangerstyle[2].checked==false){return true;}
 if (total_levels<18){return true; }
 if (document.form1.b_str_18_box.checked==true){z++; }
 if (document.form1.b_dex_18_box.checked==true){z++; }
 if (document.form1.b_con_18_box.checked==true){z++; }
 if (document.form1.b_int_18_box.checked==true){z++; }
 if (document.form1.b_wis_18_box.checked==true){z++; }
 if (document.form1.b_chr_18_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function b_Raise24Okay(){
 z=0; 
 if (document.form1.rangerstyle[2].checked==false){return true;}
 if (total_levels<24){return true; }
 if (document.form1.b_str_24_box.checked==true){z++; }
 if (document.form1.b_dex_24_box.checked==true){z++; }
 if (document.form1.b_con_24_box.checked==true){z++; }
 if (document.form1.b_int_24_box.checked==true){z++; }
 if (document.form1.b_wis_24_box.checked==true){z++; }
 if (document.form1.b_chr_24_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function b_Raise28Okay(){
 z=0; 
 if (document.form1.rangerstyle[2].checked==false){return true;}
 if (total_levels<28){return true; }
 if (document.form1.b_str_28_box.checked==true){z++; }
 if (document.form1.b_dex_28_box.checked==true){z++; }
 if (document.form1.b_con_28_box.checked==true){z++; }
 if (document.form1.b_int_28_box.checked==true){z++; }
 if (document.form1.b_wis_28_box.checked==true){z++; }
 if (document.form1.b_chr_28_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function Raise21Okay(){
 z=0; 
 if ((!epic_demigod)&(!epic_chosen)){return true; }
 if (document.form1.str_21_box.checked==true){z++; }
 if (document.form1.dex_21_box.checked==true){z++; }
 if (document.form1.con_21_box.checked==true){z++; }
 if (document.form1.int_21_box.checked==true){z++; }
 if (document.form1.wis_21_box.checked==true){z++; }
 if (document.form1.chr_21_box.checked==true){z++; }
 if (z==2){return true; }
 return false; 
 }

function RaiseOtherRaceStatsOkay(){
 z=0; 
 if (!race_other){return true; }
 if (document.form1.str_other_race_stat_box.checked==true){z++; }
 if (document.form1.dex_other_race_stat_box.checked==true){z++; }
 if (document.form1.con_other_race_stat_box.checked==true){z++; }
 if (document.form1.int_other_race_stat_box.checked==true){z++; }
 if (document.form1.wis_other_race_stat_box.checked==true){z++; }
 if (document.form1.chr_other_race_stat_box.checked==true){z++; }
 if ((z==1) | (z==2)){return true; }
 return false; 
 }

function RaiseOtherRaceSkillsOkay(){
 z=0; 
 if (!race_other){return true; }
 if (document.form1.acrobatics_other_race_box.checked==true){z++; }
 if (document.form1.arcana_other_race_box.checked==true){z++; }
 if (document.form1.athletics_other_race_box.checked==true){z++; }
 if (document.form1.bluff_other_race_box.checked==true){z++; }
 if (document.form1.diplomacy_other_race_box.checked==true){z++; }
 if (document.form1.dungeoneering_other_race_box.checked==true){z++; }
 if (document.form1.endurance_other_race_box.checked==true){z++; }
 if (document.form1.heal_other_race_box.checked==true){z++; }
 if (document.form1.history_other_race_box.checked==true){z++; }
 if (document.form1.insight_other_race_box.checked==true){z++; }
 if (document.form1.intimidate_other_race_box.checked==true){z++; }
 if (document.form1.nature_other_race_box.checked==true){z++; }
 if (document.form1.perception_other_race_box.checked==true){z++; }
 if (document.form1.religion_other_race_box.checked==true){z++; }
 if (document.form1.stealth_other_race_box.checked==true){z++; }
 if (document.form1.streetwise_other_race_box.checked==true){z++; }
 if (document.form1.thievery_other_race_box.checked==true){z++; }
 if ((z==1) | (z==2)){return true; }
 return false; 
 }

function slottage(i){
 if (i==1){return "slot"; }
 return "slots"; 
 }

function ThisTakesAMoment(){
 if (CharacterTypeHasBeenEstablished==true){return; }
 if (AbilitiesHaveBeenEstablished==false){return; }
 if (RaceAssigned()==false){return; }
 if (alignment==0){return; }
 if (gender==0){return; }
 if (total_levels==0){return; }
 document.form1.second_comment_box.value="Ready to accept.  This takes just a moment."
 }





function SumOfModifiers(){
  return (modifier_number(stat1) + modifier_number(stat2) + modifier_number(stat3) + modifier_number(stat4) + modifier_number(stat5) + modifier_number(stat6))
  }

 function AdjustIfTooLow4(){
 if ((stat1<13)&(stat2<13)&(stat3<13)&(stat4<13)&(stat5<13)&(stat6<13))
  {stat6=13; }
 if (SumOfModifiers()<1)
   {
    do
     {
      RaiseARandomStatistic(); 
     }
     while (SumOfModifiers()<1); 
   }
 }

function RaiseARandomStatistic(){
      x=Math.floor (6*Math.random())
      switch (x){
       case 0:{if (stat1<18){stat1++ ; }break; }
       case 1:{if (stat2<18){stat2++ ; }break; }
       case 2:{if (stat3<18){stat3++ ; }break; }
       case 3:{if (stat4<18){stat4++ ; }break; }
       case 4:{if (stat5<18){stat5++ ; }break; }
       case 5:{if (stat6<18){stat6++ ; }break; }
       }
 }

 function AdjustIfTooLow5(){
 if ((stat1<15)&(stat2<15)&(stat3<15)&(stat4<15)&(stat5<15)&(stat6<15))
  {stat6=15; }
 if (SumOfModifiers()<2)
   {
    do
     {
      RaiseARandomStatistic(); 
     }
     while (SumOfModifiers()<2); 
   }
 }


 function AdjustIfTooLow3(){
 if ((stat1<12)&(stat2<12)&(stat3<12)&(stat4<12)&(stat5<12)&(stat6<12))
  {stat6=12; }
 if (SumOfModifiers()<0)
   {
    do
     {
      RaiseARandomStatistic(); 
     }
     while (SumOfModifiers()<0); 
   }
 }

function IndexForWeight(lbs){
 if (lbs<31){return 1; } else
 if (lbs<32){return 2; } else
 if (lbs<33){return 3; } else
 if (lbs<34){return 4; } else
 if (lbs<35){return 5; } else
 if (lbs<36){return 6; } else
 if (lbs<37){return 7; } else
 if (lbs<38){return 8; } else
 if (lbs<39){return 9; } else
 if (lbs<40){return 10; } else
 if (lbs<41){return 11; } else
 if (lbs<42){return 12; } else
 if (lbs<43){return 13; } else
 if (lbs<44){return 14; } else
 if (lbs<45){return 15; } else
 if (lbs<46){return 16; } else
 if (lbs<47){return 17; } else
 if (lbs<48){return 18; } else
 if (lbs<49){return 19; } else
 if (lbs<50){return 20; } else
 if (lbs<55){return 21; } else
 if (lbs<60){return 22; } else
 if (lbs<65){return 23; } else
 if (lbs<70){return 24; } else
 if (lbs<75){return 25; } else
 if (lbs<80){return 26; } else
 if (lbs<85){return 27; } else
 if (lbs<90){return 28; } else
 if (lbs<95){return 29; } else
 if (lbs<100){return 30; } else
 if (lbs<105){return 31; } else
 if (lbs<110){return 32; } else
 if (lbs<115){return 33; } else
 if (lbs<120){return 34; } else
 if (lbs<125){return 35; } else
 if (lbs<130){return 36; } else
 if (lbs<135){return 37; } else
 if (lbs<140){return 38; } else
 if (lbs<145){return 39; } else
 if (lbs<150){return 40; } else
 if (lbs<155){return 41; } else
 if (lbs<160){return 42; } else
 if (lbs<165){return 43; } else
 if (lbs<170){return 44; } else
 if (lbs<175){return 45; } else
 if (lbs<180){return 46; } else
 if (lbs<185){return 47; } else
 if (lbs<190){return 48; } else
 if (lbs<195){return 49; } else
 if (lbs<200){return 50; } else
 if (lbs<210){return 51; } else
 if (lbs<220){return 52; } else
 if (lbs<230){return 53; } else
 if (lbs<240){return 54; } else
 if (lbs<250){return 55; } else
 if (lbs<260){return 56; } else
 if (lbs<270){return 57; } else
 if (lbs<280){return 58; } else
 if (lbs<290){return 59; } else
 if (lbs<300){return 60; } else
 if (lbs<310){return 61; } else
 if (lbs<320){return 62; } else
 if (lbs<330){return 63; } else
 if (lbs<340){return 64; } else
 if (lbs<350){return 65; } else
 if (lbs<360){return 66; } else
 if (lbs<370){return 67; } else
 if (lbs<380){return 68; } else
 if (lbs<390){return 69; } else
 if (lbs<400){return 70; } else
 if (lbs<410){return 71; } else
 if (lbs<420){return 72; } else
 if (lbs<430){return 73; } else
 if (lbs<440){return 74; } else {return 75; }
 }

function x_and_heft(){
  if (strength== 1){x=3; }
  if (strength== 2){x=6; }
  if (strength== 3){x=10; }
  if (strength== 4){x=13; }
  if (strength== 5){x=16; }
  if (strength== 6){x=20; }
  if (strength== 7){x=23; }
  if (strength== 8){x=26; }
  if (strength== 9){x=30; }
  if (strength==10){x=33; }
  if (strength==11){x=38; }
  if (strength==12){x=43; }
  if (strength==13){x=50; }
  if (strength==14){x=58; }
  if (strength==15){x=66; }
  if (strength==16){x=76; }
  if (strength==17){x=86; }
  if (strength==18){x=100; }
  if (strength==19){x=116; }
  if (strength==20){x=133; }
  if (strength==21){x=153; }
  if (strength==22){x=173; }
  if (strength==23){x=200; }
  if (strength==24){x=233; }
  if (strength==25){x=266; }
  if (strength==26){x=306; }
  if (strength==27){x=346; }
  if (strength==28){x=400; }
  if (strength==29){x=466; }
  heft=x; if (small==true){heft=Math.round(x*3/4)}
 }



function AdjustHeightAndWeight(){
// alert("Entering AdjustHeightAndWeight"); 

 if (RaceAssigned()==false){document.form1.how_tall.selectedIndex=0; document.form1.how_heavy.selectedIndex=0; }

 if (race_dragonborn)
  {

    if (document.form1.how_tall.selectedIndex<43-2){document.form1.how_tall.selectedIndex=43-2; }
    if (document.form1.how_tall.selectedIndex>49+4){document.form1.how_tall.selectedIndex=49+4; }
    if (document.form1.how_heavy.selectedIndex<43-2){document.form1.how_heavy.selectedIndex=43-2; }
    if (document.form1.how_heavy.selectedIndex>63+2){document.form1.how_heavy.selectedIndex=63+2; }
    
  }
 if (race_dwarf)
  {
    if (document.form1.how_tall.selectedIndex<20-2){document.form1.how_tall.selectedIndex=20-2; }
    if (document.form1.how_tall.selectedIndex>26+4){document.form1.how_tall.selectedIndex=26+4; }
    if (document.form1.how_heavy.selectedIndex<43-2){document.form1.how_heavy.selectedIndex=43-2; }
    if (document.form1.how_heavy.selectedIndex>52+2){document.form1.how_heavy.selectedIndex=52+2; }
    
  }
 if (race_eladrin)
  {
    if (document.form1.how_tall.selectedIndex<34-2){document.form1.how_tall.selectedIndex=34-2; }
    if (document.form1.how_tall.selectedIndex>42+4){document.form1.how_tall.selectedIndex=42+4; }
    if (document.form1.how_heavy.selectedIndex<37-2){document.form1.how_heavy.selectedIndex=37-2; }
    if (document.form1.how_heavy.selectedIndex>47+2){document.form1.how_heavy.selectedIndex=47+2; }
    
  }
 if (race_elf)
  {
    if (document.form1.how_tall.selectedIndex<33-2){document.form1.how_tall.selectedIndex=33-2; }
    if (document.form1.how_tall.selectedIndex>41+4){document.form1.how_tall.selectedIndex=41+4; }
    if (document.form1.how_heavy.selectedIndex<37-2){document.form1.how_heavy.selectedIndex=37-2; }
    if (document.form1.how_heavy.selectedIndex>45+2){document.form1.how_heavy.selectedIndex=45+2; }
    
  }
 if (race_halfelf)
  {
    if (document.form1.how_tall.selectedIndex<35-2){document.form1.how_tall.selectedIndex=35-2; }
    if (document.form1.how_tall.selectedIndex>43+4){document.form1.how_tall.selectedIndex=43+4; }
    if (document.form1.how_heavy.selectedIndex<37-2){document.form1.how_heavy.selectedIndex=37-2; }
    if (document.form1.how_heavy.selectedIndex>49+2){document.form1.how_heavy.selectedIndex=49+2; }
    
  }
 if (race_halfling)
  {
    if (document.form1.how_tall.selectedIndex<15-2){document.form1.how_tall.selectedIndex=15-2; }
    if (document.form1.how_tall.selectedIndex>19+4){document.form1.how_tall.selectedIndex=19+4; }
    if (document.form1.how_heavy.selectedIndex<26-2){document.form1.how_heavy.selectedIndex=26-2; }
    if (document.form1.how_heavy.selectedIndex>28+2){document.form1.how_heavy.selectedIndex=28+2; }
    
  }
 if (race_human)
  {
    if (document.form1.how_tall.selectedIndex<35-8){document.form1.how_tall.selectedIndex=35-8; }
    if (document.form1.how_tall.selectedIndex>43+8){document.form1.how_tall.selectedIndex=43+8; }
    if (document.form1.how_heavy.selectedIndex<38-2){document.form1.how_heavy.selectedIndex=38-2; }
    if (document.form1.how_heavy.selectedIndex>53+2){document.form1.how_heavy.selectedIndex=53+2; }
    
  }


  if (race_deva)
    {
      if (document.form1.how_tall.selectedIndex<42-2){document.form1.how_tall.selectedIndex=42-2; }
      if (document.form1.how_tall.selectedIndex>47+4){document.form1.how_tall.selectedIndex=47+4; }
      if (document.form1.how_heavy.selectedIndex<46-2){document.form1.how_heavy.selectedIndex=46-2; }
      if (document.form1.how_heavy.selectedIndex>59+4){document.form1.how_heavy.selectedIndex=59+4; }
    }

  if (race_halforc)
    {
      if (document.form1.how_tall.selectedIndex<38-2){document.form1.how_tall.selectedIndex=38-2; }
      if (document.form1.how_tall.selectedIndex>45+4){document.form1.how_tall.selectedIndex=45+4; }
      if (document.form1.how_heavy.selectedIndex<42-2){document.form1.how_heavy.selectedIndex=42-2; }
      if (document.form1.how_heavy.selectedIndex>54+4){document.form1.how_heavy.selectedIndex=54+4; }
    }

  if (race_goliath)
    {
      if (document.form1.how_tall.selectedIndex<53-2){document.form1.how_tall.selectedIndex=53-2; }
//      if (document.form1.how_tall.selectedIndex>59+4){document.form1.how_tall.selectedIndex=59+4; }
      if (document.form1.how_heavy.selectedIndex<59-2){document.form1.how_heavy.selectedIndex=59-2; }
      if (document.form1.how_heavy.selectedIndex>65+4){document.form1.how_heavy.selectedIndex=65+4; }
    }



 if (race_tiefling)
  {
    if (document.form1.how_tall.selectedIndex<35-2){document.form1.how_tall.selectedIndex=35-2; }
    if (document.form1.how_tall.selectedIndex>43+4){document.form1.how_tall.selectedIndex=43+4; }
    if (document.form1.how_heavy.selectedIndex<39-2){document.form1.how_heavy.selectedIndex=39-2; }
    if (document.form1.how_heavy.selectedIndex>54+2){document.form1.how_heavy.selectedIndex=54+2; }
    
  }

  if (race_bugbear)
    {
      if (document.form1.how_tall.selectedIndex<51-2){document.form1.how_tall.selectedIndex=51-2; }
      if (document.form1.how_tall.selectedIndex>55+4){document.form1.how_tall.selectedIndex=55+4; }
      if (document.form1.how_heavy.selectedIndex<56-2){document.form1.how_heavy.selectedIndex=56-2; }
      if (document.form1.how_heavy.selectedIndex>61+4){document.form1.how_heavy.selectedIndex=61+4; }
    }

  if (race_doppelganger)
    {
      if (document.form1.how_tall.selectedIndex<36-2){document.form1.how_tall.selectedIndex=36-2; }
      if (document.form1.how_tall.selectedIndex>41+4){document.form1.how_tall.selectedIndex=41+4; }
      if (document.form1.how_heavy.selectedIndex<35-2){document.form1.how_heavy.selectedIndex=35-2; }
      if (document.form1.how_heavy.selectedIndex>43+4){document.form1.how_heavy.selectedIndex=43+4; }
    }

  if (race_drow)
    {
      if (document.form1.how_tall.selectedIndex<33-2){document.form1.how_tall.selectedIndex=33-2; }
      if (document.form1.how_tall.selectedIndex>41+4){document.form1.how_tall.selectedIndex=41+4; }
      if (document.form1.how_heavy.selectedIndex<37-2){document.form1.how_heavy.selectedIndex=37-2; }
      if (document.form1.how_heavy.selectedIndex>45+4){document.form1.how_heavy.selectedIndex=45+4; }
    }

  if (race_genasi)
    {
      if (document.form1.how_tall.selectedIndex<36-2){document.form1.how_tall.selectedIndex=36-2; }
      if (document.form1.how_tall.selectedIndex>43+4){document.form1.how_tall.selectedIndex=43+4; }
      if (document.form1.how_heavy.selectedIndex<37-2){document.form1.how_heavy.selectedIndex=37-2; }
      if (document.form1.how_heavy.selectedIndex>54+4){document.form1.how_heavy.selectedIndex=54+4; }
    }

  if (race_bladeling)
    {
      if (document.form1.how_tall.selectedIndex<37-2){document.form1.how_tall.selectedIndex=37-2; }
      if (document.form1.how_tall.selectedIndex>45+4){document.form1.how_tall.selectedIndex=45+4; }
      if (document.form1.how_heavy.selectedIndex<52-2){document.form1.how_heavy.selectedIndex=52-2; }
      if (document.form1.how_heavy.selectedIndex>62+4){document.form1.how_heavy.selectedIndex=62+4; }
    }


  if ((race_githyanki) | (race_githzerai))
    {
      if (document.form1.how_tall.selectedIndex<41-2){document.form1.how_tall.selectedIndex=41-2; }
      if (document.form1.how_tall.selectedIndex>46+4){document.form1.how_tall.selectedIndex=46+4; }
      if (document.form1.how_heavy.selectedIndex<43-2){document.form1.how_heavy.selectedIndex=43-2; }
      if (document.form1.how_heavy.selectedIndex>49+4){document.form1.how_heavy.selectedIndex=49+4; }
    }


  if (race_gnoll)
    {
      if (document.form1.how_tall.selectedIndex<53-2){document.form1.how_tall.selectedIndex=53-2; }
      if (document.form1.how_tall.selectedIndex>59+4){document.form1.how_tall.selectedIndex=59+4; }
      if (document.form1.how_heavy.selectedIndex<59-2){document.form1.how_heavy.selectedIndex=59-2; }
      if (document.form1.how_heavy.selectedIndex>63+4){document.form1.how_heavy.selectedIndex=63+4; }
    }

  if (race_gnome)
    {
      if (document.form1.how_tall.selectedIndex<9-2){document.form1.how_tall.selectedIndex=9-2; }
      if (document.form1.how_tall.selectedIndex>13+4){document.form1.how_tall.selectedIndex=13+4; }
      if (document.form1.how_heavy.selectedIndex<21-2){document.form1.how_heavy.selectedIndex=21-2; }
      if (document.form1.how_heavy.selectedIndex>26+4){document.form1.how_heavy.selectedIndex=26+4; }
    }

  if (race_goblin)
    {
      if (document.form1.how_tall.selectedIndex<9-2){document.form1.how_tall.selectedIndex=9-2; }
      if (document.form1.how_tall.selectedIndex>13+4){document.form1.how_tall.selectedIndex=13+4; }
      if (document.form1.how_heavy.selectedIndex<11-2){document.form1.how_heavy.selectedIndex=11-2; }
      if (document.form1.how_heavy.selectedIndex>22+4){document.form1.how_heavy.selectedIndex=22+4; }
    }

  if (race_hobgoblin)
    {
      if (document.form1.how_tall.selectedIndex<42-2){document.form1.how_tall.selectedIndex=42-2; }
      if (document.form1.how_tall.selectedIndex>46+4){document.form1.how_tall.selectedIndex=46+4; }
      if (document.form1.how_heavy.selectedIndex<49-2){document.form1.how_heavy.selectedIndex=49-2; }
      if (document.form1.how_heavy.selectedIndex>55+4){document.form1.how_heavy.selectedIndex=55+4; }
    }

  if (race_kobold)
    {
      if (document.form1.how_tall.selectedIndex<11-2){document.form1.how_tall.selectedIndex=11-2; }
      if (document.form1.how_tall.selectedIndex>17+4){document.form1.how_tall.selectedIndex=17+4; }
      if (document.form1.how_heavy.selectedIndex<23-2){document.form1.how_heavy.selectedIndex=23-2; }
      if (document.form1.how_heavy.selectedIndex>26+4){document.form1.how_heavy.selectedIndex=26+4; }
    }

  if (race_minotaur)
    {
      if (document.form1.how_tall.selectedIndex<54-2){document.form1.how_tall.selectedIndex=54-2; }
      if (document.form1.how_tall.selectedIndex>58+4){document.form1.how_tall.selectedIndex=58+4; }
      if (document.form1.how_heavy.selectedIndex<63-2){document.form1.how_heavy.selectedIndex=63-2; }
      if (document.form1.how_heavy.selectedIndex>66+4){document.form1.how_heavy.selectedIndex=66+4; }
    }

  if (race_orc)
    {
      if (document.form1.how_tall.selectedIndex<41-2){document.form1.how_tall.selectedIndex=41-2; }
      if (document.form1.how_tall.selectedIndex>46+4){document.form1.how_tall.selectedIndex=46+4; }
      if (document.form1.how_heavy.selectedIndex<51-2){document.form1.how_heavy.selectedIndex=51-2; }
      if (document.form1.how_heavy.selectedIndex>54+4){document.form1.how_heavy.selectedIndex=54+4; }
    }

  if (race_shadarkai)
    {
      if (document.form1.how_tall.selectedIndex<36-2){document.form1.how_tall.selectedIndex=36-2; }
      if (document.form1.how_tall.selectedIndex>41+4){document.form1.how_tall.selectedIndex=41+4; }
      if (document.form1.how_heavy.selectedIndex<37-2){document.form1.how_heavy.selectedIndex=37-2; }
      if (document.form1.how_heavy.selectedIndex>45+4){document.form1.how_heavy.selectedIndex=45+4; }
    }

  if ((race_shifterlongtooth) | (race_shifterrazorclaw))
    {
      if (document.form1.how_tall.selectedIndex<36-2){document.form1.how_tall.selectedIndex=36-2; }
      if (document.form1.how_tall.selectedIndex>41+4){document.form1.how_tall.selectedIndex=41+4; }
      if (document.form1.how_heavy.selectedIndex<37-2){document.form1.how_heavy.selectedIndex=37-2; }
      if (document.form1.how_heavy.selectedIndex>47+4){document.form1.how_heavy.selectedIndex=47+4; }
    }

  if (race_warforged)
    {
      if (document.form1.how_tall.selectedIndex<41-2){document.form1.how_tall.selectedIndex=41-2; }
      if (document.form1.how_tall.selectedIndex>47+4){document.form1.how_tall.selectedIndex=47+4; }
      if (document.form1.how_heavy.selectedIndex<58-2){document.form1.how_heavy.selectedIndex=58-2; }
      if (document.form1.how_heavy.selectedIndex>61+4){document.form1.how_heavy.selectedIndex=61+4; }
    }

 



 }



function RollSomeDice(){
 my_character_is_done=false; 

 if ((stat1!=0) | (stat2!=0) | (stat3!=0) | (stat4!=0) | (stat5!=0) | (stat6!=0))
  {if (RaceAssigned()==true){startup()}}
 AbilitiesHaveBeenEstablished=false; 
 ClearAllAbilityAssignments()
 strength=0; 
 intelligence=0; 
 wisdom=0; 
 constitution=0; 
 dexterity=0; 
 charisma=0; 
 b_strength=0; 
 b_intelligence=0; 
 b_wisdom=0; 
 b_constitution=0; 
 b_dexterity=0; 
 b_charisma=0; 
 beast_bear=false;
 beast_boar=false;
 beast_cat=false;
 beast_lizard=false;
 beast_raptor=false;
 beast_serpent=false;
 beast_spider=false;
 beast_wolf=false;
 RollTheDice(); 
 if (document.form1.methods_list.selectedIndex==0)
  {
   stat1=16; 
   stat2=14; 
   stat3=13; 
   stat4=12; 
   stat5=11; 
   stat6=10; 
   document.form1.stat1_list.selectedIndex=13; 
   document.form1.stat2_list.selectedIndex=11; 
   document.form1.stat3_list.selectedIndex=10; 
   document.form1.stat4_list.selectedIndex=9; 
   document.form1.stat5_list.selectedIndex=8; 
   document.form1.stat6_list.selectedIndex=7; 
   DiceHaveBeenRolled=true; 
  }
 if (document.form1.methods_list.selectedIndex==1)
  {
   stat1=10; 
   stat2=10; 
   stat3=10; 
   stat4=10; 
   stat5=10; 
   stat6=8; 
   document.form1.stat1_list.selectedIndex=7; 
   document.form1.stat2_list.selectedIndex=7; 
   document.form1.stat3_list.selectedIndex=7; 
   document.form1.stat4_list.selectedIndex=7; 
   document.form1.stat5_list.selectedIndex=7; 
   document.form1.stat6_list.selectedIndex=5; 
   DiceHaveBeenRolled=true; 
  }
 if (document.form1.methods_list.selectedIndex==3+2)
  {
   stat1=8; 
   stat2=8; 
   stat3=8; 
   stat4=8; 
   stat5=8; 
   stat6=8; 
   document.form1.stat1_list.selectedIndex=5; 
   document.form1.stat2_list.selectedIndex=5; 
   document.form1.stat3_list.selectedIndex=5; 
   document.form1.stat4_list.selectedIndex=5; 
   document.form1.stat5_list.selectedIndex=5; 
   document.form1.stat6_list.selectedIndex=5; 
   DiceHaveBeenRolled=true; 
  }
 if (document.form1.methods_list.selectedIndex==6+2)
  {
   stat1=3; 
   stat2=3; 
   stat3=3; 
   stat4=3; 
   stat5=3; 
   stat6=3; 
   document.form1.stat1_list.selectedIndex=0; 
   document.form1.stat2_list.selectedIndex=0; 
   document.form1.stat3_list.selectedIndex=0; 
   document.form1.stat4_list.selectedIndex=0; 
   document.form1.stat5_list.selectedIndex=0; 
   document.form1.stat6_list.selectedIndex=0; 
   DiceHaveBeenRolled=true; 
  }
 DisplayTrueStatistics()
 DiceHaveBeenRolled=true; 
 if ((document.form1.methods_list.selectedIndex!=1)
    &(document.form1.methods_list.selectedIndex!=3+2)
    &(document.form1.methods_list.selectedIndex!=6+2)){document.form1.first_comment_box.value="Now assign your abilities."; }
 TellAboutPointBuy(); 
 ArrowShow(); 
 }

function findTheClass(radiobuttons){
 }

function AdjustFeatMenus(){
  document.form1.linguist_list.length=0; 
  z=total_feat_entitlement; if (intelligence<13){z=0; }
  // alert("total_feat_entitlement="+total_feat_entitlement); 
  for (x=0; x<=z; x++ ){
    document.form1.linguist_list.options[x]=new Option(x); }
      document.form1.linguist_list.options[0].selected=true; 
 }




function Languages(){

  z=0;
  document.form1.common_box.checked=true; 
  extra_language_entitlement=3*feat_linguist; 
  if ((race_halfelf) | (race_halfling) | (race_human)| (race_goliath) | (race_tiefling) | (race_shifterrazorclaw)| (race_shifterlongtooth)| (race_other)){extra_language_entitlement++; }
  if (race_deva){extra_language_entitlement+=2;}
  if ((frb_baldursgate) | (frb_dragoncoast) | (frb_luruar)| (frb_grayvale) | (frb_waterdeep)){extra_language_entitlement++; }
  if (deepspeech_nativespeaker){document.form1.deepspeech_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.deepspeech_box.checked=false; }
    else if (document.form1.deepspeech_box.checked){z++; }
  if (draconic_nativespeaker){document.form1.draconic_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.draconic_box.checked=false; }
    else if (document.form1.draconic_box.checked){z++; }
  if (dwarven_nativespeaker){document.form1.dwarven_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.dwarven_box.checked=false; }
    else if (document.form1.dwarven_box.checked){z++; }
  if (elven_nativespeaker){document.form1.elven_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.elven_box.checked=false; }
    else if (document.form1.elven_box.checked){z++; }
  if (giant_nativespeaker){document.form1.giant_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.giant_box.checked=false; }
    else if (document.form1.giant_box.checked){z++; }
  if (goblin_nativespeaker){document.form1.goblin_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.goblin_box.checked=false; }
    else if (document.form1.goblin_box.checked){z++; }
  if (primordial_nativespeaker){document.form1.primordial_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.primordial_box.checked=false; }
    else if (document.form1.primordial_box.checked){z++; }
  if (supernal_nativespeaker){document.form1.supernal_box.checked=true; }
   else if ((total_levels==1)&(!race_other)){document.form1.supernal_box.checked=false; }
   else if (z==extra_language_entitlement){document.form1.supernal_box.checked=false; }
    else if (document.form1.supernal_box.checked){z++; }
  if (abyssal_nativespeaker){document.form1.abyssal_box.checked=true; }
   else if ((total_levels==1)&(!race_other)){document.form1.abyssal_box.checked=false; }
   else if (z==extra_language_entitlement){document.form1.abyssal_box.checked=false; }
    else if (document.form1.abyssal_box.checked){z++; }
  if (chondathan_nativespeaker){document.form1.chondathan_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.chondathan_box.checked=false; }
    else if (document.form1.chondathan_box.checked){z++; }
  if (damaran_nativespeaker){document.form1.damaran_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.damaran_box.checked=false; }
    else if (document.form1.damaran_box.checked){z++; }
  if (netherese_nativespeaker){document.form1.netherese_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.netherese_box.checked=false; }
    else if (document.form1.netherese_box.checked){z++; }
  if (shou_nativespeaker){document.form1.shou_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.shou_box.checked=false; }
    else if (document.form1.shou_box.checked){z++; }
  if (thayan_nativespeaker){document.form1.thayan_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.thayan_box.checked=false; }
    else if (document.form1.thayan_box.checked){z++; }
  if (tuigan_nativespeaker){document.form1.tuigan_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.tuigan_box.checked=false; }
    else if (document.form1.tuigan_box.checked){z++; }
  if (untheric_nativespeaker){document.form1.untheric_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.untheric_box.checked=false; }
    else if (document.form1.untheric_box.checked){z++; }
  if (other01_nativespeaker){document.form1.other01_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.other01_box.checked=false; }
    else if (document.form1.other01_box.checked){z++; }
  if (other02_nativespeaker){document.form1.other02_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.other02_box.checked=false; }
    else if (document.form1.other02_box.checked){z++; }
  if (other03_nativespeaker){document.form1.other03_box.checked=true; }
   else if (z==extra_language_entitlement){document.form1.other03_box.checked=false; }
    else if (document.form1.other03_box.checked){z++; }


  }


function NegateSkillsTraining(){
    trained_acrobatics=false; 
    trained_arcana=false; 
    trained_athletics=false; 
    trained_bluff=false; 
    trained_diplomacy=false; 
    trained_dungeoneering=false; 
    trained_endurance=false; 
    trained_heal=false; 
    trained_history=false; 
    trained_insight=false; 
    trained_intimidate=false; 
    trained_nature=false; 
    trained_perception=false; 
    trained_religion=false; 
    trained_stealth=false; 
    trained_streetwise=false; 
    trained_thievery=false; 
    multi_trained_acrobatics=false; 
    multi_trained_arcana=false; 
    multi_trained_athletics=false; 
    multi_trained_bluff=false; 
    multi_trained_diplomacy=false; 
    multi_trained_dungeoneering=false; 
    multi_trained_endurance=false; 
    multi_trained_heal=false; 
    multi_trained_history=false; 
    multi_trained_insight=false; 
    multi_trained_intimidate=false; 
    multi_trained_nature=false; 
    multi_trained_perception=false; 
    multi_trained_religion=false; 
    multi_trained_stealth=false; 
    multi_trained_streetwise=false; 
    multi_trained_thievery=false; 
 }

function MandatoryClassSkills(){
// alert("Entering MandatoryClassSkills multi_rogue="+multi_rogue()+" multi_rogue_sneakofshadows="+multi_rogue_sneakofshadows);
 if ((class_cleric)|(class_paladin)|(class_avenger)|(class_invoker)){document.form1.train_religion.checked=true; }
 if ((class_wizard) | (class_swordmage)|(class_bard)|(class_sorcerer)){document.form1.train_arcana.checked=true; }
 if ((class_druid)|(class_warden)|(class_shaman)){document.form1.train_nature.checked=true; }
 if ((class_rogue)){document.form1.train_stealth.checked=true; document.form1.train_thievery.checked=true; }
 if ((paragon_zealousassassin)){document.form1.train_stealth.checked=true; }
 if ((multi_cleric_initiateofthefaith)|(multi_invoker_acolyteofdivinesecrets)|(multi_avenger_discipleofdivinewrath)){document.form1.train_multiclass[13].checked=true; }
 if ((multi_wizard_arcaneinitiate)|(multi_swordmage_bladeinitiate)|(multi_sorcerer_arcaneprodigy)|(multi_bard_bardicritualist)){document.form1.train_multiclass[1].checked=true; }
 if (multi_rogue_sneakofshadows){document.form1.train_multiclass[16].checked=true;}
 if (multi_rogue_ruthlessefficiency){document.form1.train_multiclass[14].checked=true; }
 if ((multi_druid_initiateoftheoldfaith)|(multi_shaman_spirittalker)){document.form1.train_multiclass[11].checked=true; }
 }

function ClearSkillBoxes(){
// alert("clearing skill boxes");
 document.form1.train_acrobatics.checked=false; 
 document.form1.train_arcana.checked=false; 
 document.form1.train_athletics.checked=false; 
 document.form1.train_bluff.checked=false; 
 document.form1.train_diplomacy.checked=false; 
 document.form1.train_dungeoneering.checked=false; 
 document.form1.train_endurance.checked=false; 
 document.form1.train_heal.checked=false; 
 document.form1.train_history.checked=false; 
 document.form1.train_insight.checked=false; 
 document.form1.train_intimidate.checked=false; 
 document.form1.train_nature.checked=false; 
 document.form1.train_perception.checked=false; 
 document.form1.train_religion.checked=false; 
 document.form1.train_stealth.checked=false; 
 document.form1.train_streetwise.checked=false; 
 document.form1.train_thievery.checked=false; 
 document.form1.train_multiclass[0].checked=true; 
 document.form1.train_multiclass[0].checked=false;
// alert("I just cleared all skill boxes");
 MandatoryClassSkills(); 
 }

function ClearMultiSkillBoxes(){
 document.form1.train_multiclass[0].checked=true; 
 document.form1.train_multiclass[0].checked=false;
// alert("I just cleared multiskill boxes for some reason");
 }

function RecordSkills(){
 trained_acrobatics=document.form1.train_acrobatics.checked; 
 trained_arcana=document.form1.train_arcana.checked; 
 trained_athletics=document.form1.train_athletics.checked; 
 trained_bluff=document.form1.train_bluff.checked; 
 trained_diplomacy=document.form1.train_diplomacy.checked; 
 trained_dungeoneering=document.form1.train_dungeoneering.checked; 
 trained_endurance=document.form1.train_endurance.checked; 
 trained_heal=document.form1.train_heal.checked; 
 trained_history=document.form1.train_history.checked; 
 trained_insight=document.form1.train_insight.checked; 
 trained_intimidate=document.form1.train_intimidate.checked; 
 trained_nature=document.form1.train_nature.checked; 
 trained_perception=document.form1.train_perception.checked; 
 trained_religion=document.form1.train_religion.checked; 
 trained_stealth=document.form1.train_stealth.checked; 
 trained_streetwise=document.form1.train_streetwise.checked; 
 trained_thievery=document.form1.train_thievery.checked; 
 multi_trained_acrobatics=document.form1.train_multiclass[0].checked; 
 multi_trained_arcana=document.form1.train_multiclass[1].checked; 
 multi_trained_athletics=document.form1.train_multiclass[2].checked; 
 multi_trained_bluff=document.form1.train_multiclass[3].checked; 
 multi_trained_diplomacy=document.form1.train_multiclass[4].checked; 
 multi_trained_dungeoneering=document.form1.train_multiclass[5].checked; 
 multi_trained_endurance=document.form1.train_multiclass[6].checked; 
 multi_trained_heal=document.form1.train_multiclass[7].checked; 
 multi_trained_history=document.form1.train_multiclass[8].checked; 
 multi_trained_insight=document.form1.train_multiclass[9].checked; 
 multi_trained_intimidate=document.form1.train_multiclass[10].checked; 
 multi_trained_nature=document.form1.train_multiclass[11].checked; 
 multi_trained_perception=document.form1.train_multiclass[12].checked; 
 multi_trained_religion=document.form1.train_multiclass[13].checked; 
 multi_trained_stealth=document.form1.train_multiclass[14].checked; 
 multi_trained_streetwise=document.form1.train_multiclass[15].checked; 
 multi_trained_thievery=document.form1.train_multiclass[16].checked; 
 }                                                         

function RememberSkills(){
 alert("remembering skills");
 document.form1.train_acrobatics.checked=trained_acrobatics; 
 document.form1.train_arcana.checked=trained_arcana; 
 document.form1.train_athletics.checked=trained_athletics; 
 document.form1.train_bluff.checked=trained_bluff; 
 document.form1.train_diplomacy.checked=trained_diplomacy; 
 document.form1.train_dungeoneering.checked=trained_dungeoneering; 
 document.form1.train_endurance.checked=trained_endurance; 
 document.form1.train_heal.checked=trained_heal; 
 document.form1.train_history.checked=trained_history; 
 document.form1.train_insight.checked=trained_insight; 
 document.form1.train_intimidate.checked=trained_intimidate; 
 document.form1.train_nature.checked=trained_nature; 
 document.form1.train_perception.checked=trained_perception; 
 document.form1.train_religion.checked=trained_religion; 
 document.form1.train_stealth.checked=trained_stealth; 
 document.form1.train_streetwise.checked=trained_streetwise; 
 document.form1.train_thievery.checked=trained_thievery; 
 document.form1.train_multiclass[0].checked=multi_trained_acrobatics; 
 document.form1.train_multiclass[1].checked=multi_trained_arcana; 
 document.form1.train_multiclass[2].checked=multi_trained_athletics; 
 document.form1.train_multiclass[3].checked=multi_trained_bluff; 
 document.form1.train_multiclass[4].checked=multi_trained_diplomacy; 
 document.form1.train_multiclass[5].checked=multi_trained_dungeoneering; 
 document.form1.train_multiclass[6].checked=multi_trained_endurance; 
 document.form1.train_multiclass[7].checked=multi_trained_heal; 
 document.form1.train_multiclass[8].checked=multi_trained_history; 
 document.form1.train_multiclass[9].checked=multi_trained_insight; 
 document.form1.train_multiclass[10].checked=multi_trained_intimidate; 
 document.form1.train_multiclass[11].checked=multi_trained_nature; 
 document.form1.train_multiclass[12].checked=multi_trained_perception; 
 document.form1.train_multiclass[13].checked=multi_trained_religion; 
 document.form1.train_multiclass[14].checked=multi_trained_stealth; 
 document.form1.train_multiclass[15].checked=multi_trained_streetwise; 
 document.form1.train_multiclass[16].checked=multi_trained_thievery;
// alert("remembering skills");
 }

function ConsiderSkill(){
//greenwood
 if (!FighterFeatsEtcFrozen){ClearSkillBoxes(); ClearMultiSkillBoxes(); return; }
 if (SkillsAreAssigned){RememberSkills(); return; }
 MandatoryClassSkills(); 

 if ((!class_avenger)&(!class_barbarian)&(!class_bard)&(!frb_nelantherisles)&(!class_barbarian)&(!class_ranger)&(!paragon_feybeguiler)&(!class_rogue)&(!class_other)){document.form1.train_acrobatics.checked=false; }
 if ((!class_druid)&(!class_invoker)&(!class_shaman)&(!frb_netheril)&(!frb_greatdale)&(!class_cleric)&(!class_warlock)&(!paragon_feybeguiler)&(!class_wizard)&(!class_bard)&(!class_sorcerer)&(!class_swordmage)&(!class_other)){document.form1.train_arcana.checked=false; }
 if ((!class_avenger)&(!class_barbarian)&(!class_bard)&(!class_druid)&(!class_shaman)&(!class_sorcerer)&(!class_warden)&(!frb_nelantherisles)&(!class_barbarian)&(!frb_elfharrow)&(!class_fighter)&(!class_ranger)&(!paragon_feybeguiler)&(!class_rogue)&(!class_warlord)&(!class_swordmage)&(!class_other)&(!frb_tymanther)){document.form1.train_athletics.checked=false; }
 if ((!class_bard)&(!class_sorcerer)&(!paragon_feybeguiler)&(!class_rogue)&(!class_warlock)&(!class_other)){document.form1.train_bluff.checked=false; }

 if ((!class_bard)&(!class_druid)&(!class_invoker)&(!class_sorcerer)&(!class_cleric)&(!class_paladin)&(!class_warlord)&(!paragon_feybeguiler)&(!class_wizard)&(!class_swordmage)&(!class_other)&(!frb_waterdeep)){document.form1.train_diplomacy.checked=false; }
 if ((!class_bard)&(!class_sorcerer)&(!class_warden)&(!class_ranger)&(!paragon_feybeguiler)&(!class_rogue)&(!paragon_feybeguiler)&(!class_wizard)&(!class_other)&(!frb_eastrift)){document.form1.train_dungeoneering.checked=false; }
 if ((!class_avenger)&(!class_barbarian)&(!class_druid)&(!class_invoker)&(!class_shaman)&(!class_sorcerer)&(!class_warden)&(!frb_narfell)&(!class_barbarian)&(!class_fighter)&(!class_paladin)&(!class_ranger)&(!class_warlord)&(!class_swordmage)&(!class_other)){document.form1.train_endurance.checked=false; }
 if ((!class_avenger)&(!class_barbarian)&(!class_bard)&(!class_druid)&(!class_shaman)&(!class_warden)&(!class_cleric)&(!class_barbarian)&(!class_fighter)&(!class_paladin)&(!class_ranger)&(!class_warlord)&(!class_other)){document.form1.train_heal.checked=false; }

 if ((!class_bard)&(!class_druid)&(!class_invoker)&(!frb_netheril)&(!class_cleric)&(!class_paladin)&(!paragon_feybeguiler)&(!class_rogue)&(!class_warlock)&(!class_warlord)&(!paragon_feybeguiler)&(!class_wizard)&(!class_swordmage)&(!class_other)){document.form1.train_history.checked=false; }
 if ((!class_bard)&(!class_druid)&(!class_invoker)&(!class_shaman)&(!class_sorcerer)&(!class_cleric)&(!class_paladin)&(!paragon_feybeguiler)&(!class_rogue)&(!class_warlock)&(!paragon_feybeguiler)&(!class_wizard)&(!class_swordmage)&(!class_other)&(!frb_cormyr)){document.form1.train_insight.checked=false; }
 if ((!class_avenger)&(!class_barbarian)&(!class_bard)&(!class_invoker)&(!class_sorcerer)&(!class_warden)&(!class_fighter)&(!class_barbarian)&(!class_paladin)&(!paragon_feybeguiler)&(!class_rogue)&(!class_warlock)&(!class_warlord)&(!class_swordmage)&(!class_other)){document.form1.train_intimidate.checked=false; }
 if ((!class_barbarian)&(!class_bard)&(!class_sorcerer)&(!class_warden)&(!class_shaman)&(!class_druid)&(!frb_greatdale)&(!class_barbarian)&(!frb_grayvale)&(!frb_elfharrow)&(!class_ranger)&(!paragon_feybeguiler)&(!class_wizard)&(!class_other)){document.form1.train_nature.checked=false; }

 if ((!class_avenger)&(!class_barbarian)&(!class_bard)&(!class_druid)&(!class_shaman)&(!class_warden)&(!class_ranger)&(!class_barbarian)&(!paragon_feybeguiler)&(!class_rogue)&(!class_other)&(!frb_aglarond)){document.form1.train_perception.checked=false; }
 if ((!class_bard)&(!class_shaman)&(!class_avenger)&(!class_invoker)&(!class_cleric)&(!class_paladin)&(!class_warlock)&(!paragon_feybeguiler)&(!class_wizard)&(!class_other)){document.form1.train_religion.checked=false; }
 if ((!class_avenger)&(!frb_luskan)&(!class_ranger)&(!paragon_feybeguiler)&(!class_rogue)&(!class_other)){document.form1.train_stealth.checked=false; }
 if ((!class_avenger)&(!class_bard)&(!frb_baldursgate)&(!frb_amn)&(!class_fighter)&(!paragon_feybeguiler)&(!class_rogue)&(!class_warlock)&(!class_other)&(!frb_baldursgate)){document.form1.train_streetwise.checked=false; }

 if ((!frb_wheloon)&(!frb_luskan)&(!frb_amn)&(!paragon_feybeguiler)&(!class_rogue)&(!class_warlock)&(!class_other)){document.form1.train_thievery.checked=false; }



 if ((!multi_barbarian_berserkersfury)&(!multi_bard_bardicdilettante)&(!multi_ranger_warriorofthewild)&(!multi_ranger_twobladewarrior)){document.form1.train_multiclass[0].checked=false; }
 if ((!multi_bard_bardicdilettante)&(!multi_wizard_learnedspellcaster)&(!multi_sorcerer_arcaneprodigy)&(!multi_cleric_initiateofthefaith)&(!multi_warlock_pactinitiate)&(!multi_wizard_arcaneinitiate)&(!multi_swordmage_bladeinitiate)&(!multi_bard_bardicritualist)){document.form1.train_multiclass[1].checked=false; }
 if ((!multi_warden_defenderofthewild)&(!multi_swordmage_heartoftheblade)&(!multi_barbarian_berserkersfury)&(!multi_bard_bardicdilettante)&(!multi_fighter_studentofthesword)&(!multi_fighter_battleawareness)&(!multi_ranger_warriorofthewild)&(!multi_ranger_twobladewarrior)&(!multi_warlord_studentofbattle)&(!multi_warlord_inspiringleader)&(!multi_warlord_tacticalleader)){document.form1.train_multiclass[2].checked=false; }
 if ((!multi_bard_bardicdilettante)&(!multi_rogue_slydodge)&(!multi_warlock_pactinitiate)){document.form1.train_multiclass[3].checked=false; }

 if ((!multi_bard_bardicdilettante)&(!multi_cleric_initiateofthefaith)&(!multi_paladin_soldierofthefaith)&(!multi_warlord_studentofbattle)&(!multi_warlord_inspiringleader)&(!multi_warlord_tacticalleader)&(!multi_wizard_arcaneinitiate)&(!multi_bard_bardicritualist)){document.form1.train_multiclass[4].checked=false; }
 if ((!multi_warden_defenderofthewild)&(!multi_bard_bardicdilettante)&(!multi_ranger_warriorofthewild)&(!multi_ranger_twobladewarrior)&(!multi_wizard_arcaneinitiate)&(!multi_bard_bardicritualist)){document.form1.train_multiclass[5].checked=false; }
 if ((!multi_warden_defenderofthewild)&(!multi_barbarian_berserkersfury)&(!multi_swordmage_heartoftheblade)&(!multi_fighter_studentofthesword)&(!multi_fighter_battleawareness)&(!multi_paladin_soldierofthefaith)&(!multi_ranger_warriorofthewild)&(!multi_ranger_twobladewarrior)&(!multi_warlord_studentofbattle)&(!multi_warlord_inspiringleader)&(!multi_warlord_tacticalleader)){document.form1.train_multiclass[6].checked=false; }
 if ((!multi_warden_defenderofthewild)&(!multi_barbarian_berserkersfury)&(!multi_bard_bardicdilettante)&(!multi_cleric_initiateofthefaith)&(!multi_fighter_studentofthesword)&(!multi_fighter_battleawareness)&(!multi_paladin_soldierofthefaith)&(!multi_ranger_warriorofthewild)&(!multi_ranger_twobladewarrior)&(!multi_warlord_studentofbattle)&(!multi_warlord_inspiringleader)&(!multi_warlord_tacticalleader)){document.form1.train_multiclass[7].checked=false; }

 if ((!multi_bard_bardicdilettante)&(!multi_cleric_initiateofthefaith)&(!multi_paladin_soldierofthefaith)&(!multi_warlock_pactinitiate)&(!multi_warlord_studentofbattle)&(!multi_warlord_inspiringleader)&(!multi_warlord_tacticalleader)&(!multi_wizard_arcaneinitiate)){document.form1.train_multiclass[8].checked=false; }
 if ((!multi_bard_bardicdilettante)&(!multi_cleric_initiateofthefaith)&(!multi_paladin_soldierofthefaith)&(!multi_warlock_pactinitiate)&(!multi_wizard_arcaneinitiate)){document.form1.train_multiclass[9].checked=false; }
 if ((!multi_warden_defenderofthewild)&(!multi_barbarian_berserkersfury)&(!multi_bard_bardicdilettante)&(!multi_fighter_studentofthesword)&(!multi_fighter_battleawareness)&(!multi_paladin_soldierofthefaith)&(!multi_warlock_pactinitiate)&(!multi_warlord_studentofbattle)&(!multi_warlord_inspiringleader)&(!multi_warlord_tacticalleader)&(!multi_rogue_slydodge)){document.form1.train_multiclass[10].checked=false; }
 if ((!multi_warden_defenderofthewild)&(!multi_wizard_learnedspellcaster)&(!multi_barbarian_berserkersfury)&(!multi_bard_bardicdilettante)&(!multi_shaman_spirittalker)&(!multi_druid_initiateoftheoldfaith)&(!multi_ranger_warriorofthewild)&(!multi_ranger_twobladewarrior)&(!multi_wizard_arcaneinitiate)){document.form1.train_multiclass[11].checked=false; }

 if ((!multi_warden_defenderofthewild)&(!multi_barbarian_berserkersfury)&(!multi_bard_bardicdilettante)&(!multi_ranger_warriorofthewild)&(!multi_ranger_twobladewarrior)){document.form1.train_multiclass[12].checked=false; }
 if ((!multi_bard_bardicdilettante)&(!multi_wizard_learnedspellcaster)&(!multi_avenger_discipleofdivinewrath)&(!multi_invoker_acolyteofdivinesecrets)&(!multi_cleric_initiateofthefaith)&(!multi_paladin_soldierofthefaith)&(!multi_warlock_pactinitiate)&(!multi_wizard_arcaneinitiate)){document.form1.train_multiclass[13].checked=false; }
 if ((!multi_ranger_warriorofthewild)&(!multi_ranger_twobladewarrior)&(!multi_rogue_ruthlessefficiency)){document.form1.train_multiclass[14].checked=false; }
 if ((!multi_bard_bardicdilettante)&(!multi_fighter_studentofthesword)&(!multi_fighter_battleawareness)&(!multi_warlock_pactinitiate)){document.form1.train_multiclass[15].checked=false; }

 if ((!multi_rogue_sneakofshadows)&(!multi_warlock_pactinitiate)){document.form1.train_multiclass[16].checked=false; }
 if (eladrin_acrobatics){document.form1.train_acrobatics.checked=false; document.form1.train_multiclass[0].checked=false; }
 if (eladrin_arcana){document.form1.train_arcana.checked=false; document.form1.train_multiclass[1].checked=false; }
 if (eladrin_athletics){document.form1.train_athletics.checked=false; document.form1.train_multiclass[2].checked=false; }
 if (eladrin_bluff){document.form1.train_bluff.checked=false; document.form1.train_multiclass[3].checked=false; }
 if (eladrin_diplomacy){document.form1.train_diplomacy.checked=false; document.form1.train_multiclass[4].checked=false; }
 if (eladrin_dungeoneering){document.form1.train_dungeoneering.checked=false; document.form1.train_multiclass[5].checked=false; }
 if (eladrin_endurance){document.form1.train_endurance.checked=false; document.form1.train_multiclass[6].checked=false; }
 if (eladrin_heal){document.form1.train_heal.checked=false; document.form1.train_multiclass[7].checked=false; }
 if (eladrin_history){document.form1.train_history.checked=false; document.form1.train_multiclass[8].checked=false; }
 if (eladrin_insight){document.form1.train_insight.checked=false; document.form1.train_multiclass[9].checked=false; }
 if (eladrin_intimidate){document.form1.train_intimidate.checked=false; document.form1.train_multiclass[10].checked=false; }
 if (eladrin_nature){document.form1.train_nature.checked=false; document.form1.train_multiclass[11].checked=false; }
 if (eladrin_perception){document.form1.train_perception.checked=false; document.form1.train_multiclass[12].checked=false; }
 if (eladrin_religion){document.form1.train_religion.checked=false; document.form1.train_multiclass[13].checked=false; }
 if (eladrin_stealth){document.form1.train_stealth.checked=false; document.form1.train_multiclass[14].checked=false; }
 if (eladrin_streetwise){document.form1.train_streetwise.checked=false; document.form1.train_multiclass[15].checked=false; }
 if (eladrin_thievery){document.form1.train_thievery.checked=false; document.form1.train_multiclass[16].checked=false;}
 if ((document.form1.train_acrobatics.checked) | (eladrin_acrobatics)){document.form1.train_multiclass[0].checked=false; }
 if ((document.form1.train_arcana.checked) | (eladrin_arcana)){document.form1.train_multiclass[1].checked=false; }
 if ((document.form1.train_athletics.checked) | (eladrin_athletics)){document.form1.train_multiclass[2].checked=false; }
 if ((document.form1.train_bluff.checked) | (eladrin_bluff)){document.form1.train_multiclass[3].checked=false; }
 if ((document.form1.train_diplomacy.checked) | (eladrin_diplomacy)){document.form1.train_multiclass[4].checked=false; }
 if ((document.form1.train_dungeoneering.checked) | (eladrin_dungeoneering)){document.form1.train_multiclass[5].checked=false; }
 if ((document.form1.train_endurance.checked) | (eladrin_endurance)){document.form1.train_multiclass[6].checked=false; }
 if ((document.form1.train_heal.checked) | (eladrin_heal)){document.form1.train_multiclass[7].checked=false; }
 if ((document.form1.train_history.checked) | (eladrin_history)){document.form1.train_multiclass[8].checked=false; }
 if ((document.form1.train_insight.checked) | (eladrin_insight)){document.form1.train_multiclass[9].checked=false; }
 if ((document.form1.train_intimidate.checked) | (eladrin_intimidate)){document.form1.train_multiclass[10].checked=false; }
 if ((document.form1.train_nature.checked) | (eladrin_nature)){document.form1.train_multiclass[11].checked=false; }
 if ((document.form1.train_perception.checked) | (eladrin_perception)){document.form1.train_multiclass[12].checked=false; }
 if ((document.form1.train_religion.checked) | (eladrin_religion)){document.form1.train_multiclass[13].checked=false; }
 if ((document.form1.train_stealth.checked) | (eladrin_stealth)){document.form1.train_multiclass[14].checked=false; }
 if ((document.form1.train_streetwise.checked) | (eladrin_streetwise)){document.form1.train_multiclass[15].checked=false; }
 if ((document.form1.train_thievery.checked) | (eladrin_thievery)){document.form1.train_multiclass[16].checked=false;}

 if (document.form1.train_multiclass[0].checked){document.form1.train_acrobatics.checked=false; }
 if (document.form1.train_multiclass[1].checked){document.form1.train_arcana.checked=false; }
 if (document.form1.train_multiclass[2].checked){document.form1.train_athletics.checked=false; }
 if (document.form1.train_multiclass[3].checked){document.form1.train_bluff.checked=false; }
 if (document.form1.train_multiclass[4].checked){document.form1.train_diplomacy.checked=false; }
 if (document.form1.train_multiclass[5].checked){document.form1.train_dungeoneering.checked=false; }
 if (document.form1.train_multiclass[6].checked){document.form1.train_endurance.checked=false; }
 if (document.form1.train_multiclass[7].checked){document.form1.train_heal.checked=false; }
 if (document.form1.train_multiclass[8].checked){document.form1.train_history.checked=false; }
 if (document.form1.train_multiclass[9].checked){document.form1.train_insight.checked=false; }
 if (document.form1.train_multiclass[10].checked){document.form1.train_intimidate.checked=false; }
 if (document.form1.train_multiclass[11].checked){document.form1.train_nature.checked=false; }
 if (document.form1.train_multiclass[12].checked){document.form1.train_perception.checked=false; }
 if (document.form1.train_multiclass[13].checked){document.form1.train_religion.checked=false; }
 if (document.form1.train_multiclass[14].checked){document.form1.train_stealth.checked=false; }
 if (document.form1.train_multiclass[15].checked){document.form1.train_streetwise.checked=false; }
 if (document.form1.train_multiclass[16].checked){document.form1.train_thievery.checked=false; }
 LightSkillStars(); 
 ArrowShow(); 
 }


function MultiSkillOkay(){
  if
   (
   (!multi_fighter_studentofthesword)&
   (!multi_paladin_soldierofthefaith)&
   (!multi_ranger_warriorofthewild)&
   (!multi_warlock_pactinitiate)&
   (!multi_warlord_studentofbattle)&
   (!multi_fighter_battleawareness)&
   (!multi_warlord_inspiringleader)&
   (!multi_rogue_slydodge)&
   (!multi_warlord_tacticalleader)&
   (!multi_ranger_twobladewarrior)&
   (!multi_bard_bardicdilettante)&
   (!multi_barbarian_berserkersfury)&
   (!multi_warden_defenderofthewild)&
   (!multi_swordmage_heartoftheblade)&
   (!multi_wizard_learnedspellcaster)
  
   )
  {return true; }
  if ((document.form1.train_multiclass[0].checked==true)
     | (document.form1.train_multiclass[1].checked==true)
     | (document.form1.train_multiclass[2].checked==true)
     | (document.form1.train_multiclass[3].checked==true)
     | (document.form1.train_multiclass[4].checked==true)
     | (document.form1.train_multiclass[5].checked==true)
     | (document.form1.train_multiclass[6].checked==true)
     | (document.form1.train_multiclass[7].checked==true)
     | (document.form1.train_multiclass[8].checked==true)
     | (document.form1.train_multiclass[9].checked==true)
     | (document.form1.train_multiclass[10].checked==true)
     | (document.form1.train_multiclass[11].checked==true)
     | (document.form1.train_multiclass[12].checked==true)
     | (document.form1.train_multiclass[13].checked==true)
     | (document.form1.train_multiclass[14].checked==true)
     | (document.form1.train_multiclass[15].checked==true)
     | (document.form1.train_multiclass[16].checked==true))
     {return true; }
     return false; 
 }

function SkillSetOkay(){
 z=0; 
 if (document.form1.train_acrobatics.checked==true){z++; }
 if (document.form1.train_arcana.checked==true){z++; }
 if (document.form1.train_athletics.checked==true){z++; }
 if (document.form1.train_bluff.checked==true){z++; }
 if (document.form1.train_diplomacy.checked==true){z++; }
 if (document.form1.train_dungeoneering.checked==true){z++; }
 if (document.form1.train_endurance.checked==true){z++; }
 if (document.form1.train_heal.checked==true){z++; }
 if (document.form1.train_history.checked==true){z++; }
 if (document.form1.train_insight.checked==true){z++; }
 if (document.form1.train_intimidate.checked==true){z++; }
 if (document.form1.train_nature.checked==true){z++; }
 if (document.form1.train_perception.checked==true){z++; }
 if (document.form1.train_religion.checked==true){z++; }
 if (document.form1.train_stealth.checked==true){z++; }
 if (document.form1.train_streetwise.checked==true){z++; }
 if (document.form1.train_thievery.checked==true){z++; }
 if (race_human){z--; }
 if ((class_cleric)&(z==4)){return true; }
 if ((class_fighter)&(z==3)){return true; }
 if ((class_paladin)&(z==4)){return true; }
 if ((class_ranger)&(z==5)&((document.form1.train_dungeoneering.checked==true) | (document.form1.train_nature.checked==true))){return true; }
 if ((class_rogue)&(z==6)){return true; }
 if ((class_warlock)&(z==4)){return true; }
 if ((class_warlord)&(z==4)){return true; }
 if ((class_wizard)&(z==4)){return true; }
 if ((class_swordmage)&(z==4)){return true; }
 if ((class_avenger)&(z==4)){return true; }
 if ((class_barbarian)&(z==3)){return true; }
 if ((class_bard)&(z==5)){return true; }
 if ((class_druid)&(z==4)){return true; }
 if ((class_invoker)&(z==4)){return true; }
 if ((class_shaman)&(z==4)){return true; }
 if ((class_sorcerer)&(z==4)){return true; }
 if ((class_warden)&(z==4)){return true; }
 if (class_other){if ((z>=3)&(z<=6)){return true; }}
 return false; 
 }


function initial_startup(){
 alert("Loading Javascript...");
 document.form1.methods_list.selectedIndex=0;
 test_mode=false;
 if (test_mode){alert("Test Mode");}
 startup();
 document.form1.other_race_name.value="Other Race"; 
 document.form1.other_class_name.value="Other Class"; 
 alert("Thanks, fellow-gamers for all your kind words! Keep those error reports coming! scalpel_blade@yahoo.com"); 
 }

function startup(){
npcother_class_name="NPC-Other Class"; 

  document.form1.want_another_character.src="not_another_character.jpg"; 

  my_character_is_done=false; 
 document.form1.stat1_list.selectedIndex=0; 
 document.form1.stat2_list.selectedIndex=0; 
 document.form1.stat3_list.selectedIndex=0; 
 document.form1.stat4_list.selectedIndex=0; 
 document.form1.stat5_list.selectedIndex=0; 
 document.form1.stat6_list.selectedIndex=0; 
 stat1=0; 
 stat2=0; 
 stat3=0; 
 stat4=0; 
 stat5=0; 
 stat6=0; 
 clearall(); 

 total_levels=0; 
// alert("screwing with total levels"); total_levels=50; 
 ClearAllAbilityAssignments()
 }



function NegateAbilityRaisesEtcEtc(){
    raise_str_01=false; 
    raise_dex_01=false; 
    raise_con_01=false; 
    raise_int_01=false; 
    raise_wis_01=false; 
    raise_chr_01=false; 
    raise_str_04=false; 
    raise_dex_04=false; 
    raise_con_04=false; 
    raise_int_04=false; 
    raise_wis_04=false; 
    raise_chr_04=false; 
    raise_str_08=false; 
    raise_dex_08=false; 
    raise_con_08=false; 
    raise_int_08=false; 
    raise_wis_08=false; 
    raise_chr_08=false; 
    raise_str_14=false; 
    raise_dex_14=false; 
    raise_con_14=false; 
    raise_int_14=false; 
    raise_wis_14=false; 
    raise_chr_14=false; 
    raise_str_18=false; 
    raise_dex_18=false; 
    raise_con_18=false; 
    raise_int_18=false; 
    raise_wis_18=false; 
    raise_chr_18=false; 
    raise_str_24=false; 
    raise_dex_24=false; 
    raise_con_24=false; 
    raise_int_24=false; 
    raise_wis_24=false; 
    raise_chr_24=false; 
    raise_str_28=false; 
    raise_dex_28=false; 
    raise_con_28=false; 
    raise_int_28=false; 
    raise_wis_28=false; 
    raise_chr_28=false; 
    raise_str_21=false; 
    raise_dex_21=false; 
    raise_con_21=false; 
    raise_int_21=false; 
    raise_wis_21=false; 
    raise_chr_21=false; 
    raise_str_otherepic=false; 
    raise_dex_otherepic=false; 
    raise_con_otherepic=false; 
    raise_int_otherepic=false; 
    raise_wis_otherepic=false; 
    raise_chr_otherepic=false; 
    raise_str_other_race_stat=false; 
    raise_dex_other_race_stat=false; 
    raise_con_other_race_stat=false; 
    raise_int_other_race_stat=false; 
    raise_wis_other_race_stat=false; 
    raise_chr_other_race_stat=false; 


    eladrin_acrobatics=false; 
    eladrin_arcana=false; 
    eladrin_athletics=false; 
    eladrin_bluff=false; 
    eladrin_diplomacy=false; 
    eladrin_dungeoneering=false; 
    eladrin_endurance=false; 
    eladrin_heal=false; 
    eladrin_history=false; 
    eladrin_insight=false; 
    eladrin_intimidate=false; 
    eladrin_nature=false; 
    eladrin_perception=false; 
    eladrin_religion=false; 
    eladrin_stealth=false; 
    eladrin_streetwise=false; 
    eladrin_thievery=false; 

    otherrace_acrobatics=false; 
    otherrace_arcana=false; 
    otherrace_athletics=false; 
    otherrace_bluff=false; 
    otherrace_diplomacy=false; 
    otherrace_dungeoneering=false; 
    otherrace_endurance=false; 
    otherrace_heal=false; 
    otherrace_history=false; 
    otherrace_insight=false; 
    otherrace_intimidate=false; 
    otherrace_nature=false; 
    otherrace_perception=false; 
    otherrace_religion=false; 
    otherrace_stealth=false; 
    otherrace_streetwise=false; 
    otherrace_thievery=false; 


    dragonbreath_acid=false; 
    dragonbreath_cold=false; 
    dragonbreath_fire=false; 
    dragonbreath_lightning=false; 
    dragonbreath_poison=false; 
    dragonbreath_strength=false; 
    dragonbreath_dexterity=false; 
    dragonbreath_constitution=false; 

    genasi_earthsoul=false; 
    genasi_firesoul=false; 
    genasi_stormsoul=false; 
    genasi_watersoul=false; 
    genasi_windsoul=false; 

    dilettante_lanceoffaith=false; 
    dilettante_priestsshield=false; 
    dilettante_righteousbrand=false; 
    dilettante_sacredflame=false; 
    dilettante_cleave=false; 
    dilettante_reapingstrike=false; 
    dilettante_surestrike=false; 
    dilettante_tideofiron=false; 
//    dilettante_divinechallenge=false; 
//    dilettante_layonhands=false; 
    dilettante_bolsteringstrike=false; 
    dilettante_enfeeblingstrike=false; 
    dilettante_holystrike=false; 
    dilettante_valiantstrike=false; 
    dilettante_carefulattack=false; 
    dilettante_hitandrun=false; 
    dilettante_nimblestrike=false; 
    dilettante_twinstrike=false; 
    dilettante_deftstrike=false; 
    dilettante_piercingstrike=false; 
    dilettante_ripostestrike=false; 
    dilettante_slyflourish=false; 
    dilettante_direradiance=false; 
    dilettante_eldritchblast=false; 
    dilettante_eyebite=false; 
    dilettante_hellishrebuke=false; 
    dilettante_commandersstrike=false; 
    dilettante_furioussmash=false; 
    dilettante_vipersstrike=false; 
    dilettante_wolfpacktactics=false; 
//    dilettante_ghostsound=false; 
//    dilettante_light=false; 
//    dilettante_magehand=false; 
//    dilettante_prestidigitation=false; 
    dilettante_cloudofdaggers=false; 
    dilettante_magicmissile=false; 
    dilettante_rayoffrost=false; 
    dilettante_scorchingburst=false; 
    dilettante_thunderwave=false; 
    dilettante_other=false; 

//    cleric_start_animalmessenger=false; 
//    cleric_start_comprehendlanguage=false; 
//    cleric_start_magicmouth=false; 
//    cleric_start_makewhole=false; 
//    cleric_start_secretpage=false; 
//    cleric_start_silence=false; 
//    cleric_start_tensersfloatingdisk=false; 

    fighter_onehand=false; 
    fighter_twohand=false; 
    fighter_battlerager=false; 
    fighter_tempesttechnique=false;
    studentofthesword_onehand=false;
    studentofthesword_twohand=false;
    ranger_archer=false; 
    ranger_beastmaster=false; 
    ranger_twoblade=false; 
    rogue_artfuldodger=false; 
    rogue_brutalscoundrel=false; 
    rogue_ruthlessruffian=false; 
    warlock_fey=false; 
    warlock_infernal=false; 
    warlock_star=false;
    warlock_dark=false;
    warlock_vestige=false;
    warlock_other=false; 
    warlord_inspiring=false; 
    warlord_resourceful=false; 
    warlord_bravura=false; 
    warlord_tactical=false; 
    orbofimposition=false; 
    staffofdefense=false; 
    wandofaccuracy=false;
    orbofdeception=false;
    tomeofbinding=false;
    tomeofreadiness=false;



    swordmage_assault=false;
    swordmage_shielding=false; 
    barbarian_rageblood=false;
    barbarian_thaneborn=false;


    avenger_pursuit=false; 
    avenger_retribution=false; 
    bard_cunning=false; 
    bard_valor=false; 
    bard_prescience=false; 
    druid_guardian=false; 
    druid_predator=false; 
    invoker_preservation=false; 
    invoker_wrath=false; 
    shaman_protector=false; 
    shaman_stalker=false; 
    sorcerer_dragonsoul=false; 
    sorcerer_wildmagic=false; 
    sorcerer_stormmagic=false; 
    sorcerer_cosmicmagic=false; 
    warden_earthstrength=false; 
    warden_wildblood=false; 


    otherrace_normalvision=false;
    otherrace_lowlight=false; 
    otherrace_darkvision=false; 
    otherrace_small=false; 
    otherrace_medium=false; 
    otherclass_bonus_to_defense=0; 
    otherclass_hitpoints=0; 
    otherclass_surges=0; 



 }

function clearall(){
 stringy=""; 
 total_levels=0; 
NegateRaces(); ClearRaceButtons(); NegateFamiliars();
NegateClasses(); ClearClassButtons(); ClearMultiButtons(); NegateMultis();
MakeArcaneInitiateList(); MakeSoulOfSorceryList();
NegateParagons(); ClearParagonButtons(); TurnOffParagonStars();
NegateEpicDestinies(); ClearEpicDestinyButtons(); 
NegateAbilityRaisesEtcEtc(); ClearAllAbilityBoxesEtcEtc(); 
SkillsAreAssigned=false; NegateSkillsTraining(); ClearSkillBoxes(); 
NegateFeats(); remember_feats(); 
UnLightSkillStars(); 
TurnOffPowerStars(); 
VoidRitualBoxes();
VoidAlchemyBoxes();
uncheck_powers_boxes(); 
UnLightFeatStars(); 
NotFromForgottenRealms(); 
document.form1.hair_color[0].checked=true; document.form1.hair_color[0].checked=false; 
document.form1.skin_color[0].checked=true; document.form1.skin_color[0].checked=false; 
document.form1.eye_color[0].checked=true; document.form1.eye_color[0].checked=false; 
document.form1.hair_type[0].checked=true; document.form1.hair_type[0].checked=false; 
document.form1.beard_type[0].checked=true; document.form1.beard_type[0].checked=false; 
document.form1.eyeshairskin_textarea.value=""; 
document.form1.moreAbout.value=""; 
document.form1.additionalEquipment.value=""; 
document.form1.moniker.value=""; 
NegateTheBottomStuff(); 
ChooseBestDarkfireStat(); 
ChooseBestEarthshockStat(); 
ChooseBestFirepulseStat(); 
ChooseBestRazorswarmStat(); 

 ClearAllAbilityAssignments(); 
 ClearSkillBoxes(); 
 NegateTheBottomStuff(); 
 strength_attack_string_1=""; 
 strength_attack_string_2=""; 
 strength_attack_base=0; 
 dexterity_attack_string_1=""; 
 dexterity_attack_string_2=""; 
 dexterity_attack_base=0; 
 constitution_attack_string_1=""; 
 constitution_attack_string_2=""; 
 constitution_attack_base=0; 
 intelligence_attack_string_1=""; 
 intelligence_attack_string_2=""; 
 intelligence_attack_base=0; 
 wisdom_attack_string_1=""; 
 wisdom_attack_string_2=""; 
 wisdom_attack_base=0; 
 charisma_attack_string_1=""; 
 charisma_attack_string_2=""; 
 charisma_attack_base=0; 


 mental_attack_string_1=""; 
 mental_attack_string_2=""; 
 mental_attack_base=0; 
 physical_attack_string_1=""; 
 physical_attack_string_2=""; 
 physical_attack_base=0;

 best_physical_attack="";
 best_mental_attack="";

  acrobatics_string_1=""; 
  acrobatics_string_2=""; 
  arcana_string_1=""; 
  arcana_string_2=""; 
  athletics_string_1=""; 
  athletics_string_2=""; 
  bluff_string_1=""; 
  bluff_string_2=""; 
  diplomacy_string_1=""; 
  diplomacy_string_2=""; 
  dungeoneering_string_1=""; 
  dungeoneering_string_2=""; 
  endurance_string_1=""; 
  endurance_string_2=""; 
  heal_string_1=""; 
  heal_string_2=""; 
  history_string_1=""; 
  history_string_2=""; 
  insight_string_1=""; 
  insight_string_2=""; 
  intimidate_string_1=""; 
  intimidate_string_2=""; 
  nature_string_1=""; 
  nature_string_2=""; 
  perception_string_1=""; 
  perception_string_2=""; 
  religion_string_1=""; 
  religion_string_2=""; 
  stealth_string_1=""; 
  stealth_string_2=""; 
  streetwise_string_1=""; 
  streetwise_string_2=""; 
  thievery_string_1=""; 
  thievery_string_2=""; 



    already_knows_club=false; 
    already_knows_dagger=false; 
    already_knows_javelin=false; 
    already_knows_mace=false; 
    already_knows_sickle=false; 
    already_knows_spear=false; 
    already_knows_othersimplemeleeweapons=false; 
    already_knows_othermilitarymeleeweapons=false; 
    already_knows_othersuperiormeleeweapons=false; 
    already_knows_othersimplerangedweapons=false; 
    already_knows_othersuperiorrangedweapons=false; 
    already_knows_greatclub=false; 
    already_knows_morningstar=false; 
    already_knows_quarterstaff=false; 
    already_knows_scythe=false; 
    already_knows_battleaxe=false; 
    already_knows_flail=false; 
    already_knows_handaxe=false; 
    already_knows_longsword=false; 
    already_knows_scimitar=false; 
    already_knows_shortsword=false; 
    already_knows_throwinghammer=false; 
    already_knows_warhammer=false; 
    already_knows_warpick=false; 
    already_knows_falchion=false; 
    already_knows_glaive=false; 
    already_knows_greataxe=false; 
    already_knows_greatsword=false; 
    already_knows_halberd=false; 
    already_knows_heavyflail=false; 
    already_knows_longspear=false; 
    already_knows_maul=false; 
    already_knows_bastardsword=false; 
    already_knows_katar=false; 
    already_knows_rapier=false; 
    already_knows_spikedchain=false; 
    already_knows_handcrossbow=false; 
    already_knows_sling=false; 
    already_knows_crossbow=false; 
    already_knows_longbow=false; 
    already_knows_shortbow=false; 
    already_knows_shuriken=false; 
      already_knows_leather=false; 
      already_knows_hide=false; 
      already_knows_chainmail=false; 
      already_knows_scale=false; 
      already_knows_plate=false; 
      already_knows_lightshield=false; 
      already_knows_heavyshield=false; 

    MilitaryStars(); 
  document.form1.club_box.checked=false; 
  document.form1.dagger_list.selectedIndex=0; 
  document.form1.javelin_list.selectedIndex=0; 
  document.form1.handaxe_list.selectedIndex=0; 
  document.form1.throwinghammer_list.selectedIndex=0; 
  document.form1.shuriken_list.selectedIndex=0; 
  document.form1.mace_box.checked=false; 
  document.form1.sickle_box.checked=false; 
  document.form1.spear_box.checked=false; 
  document.form1.spikedgauntlet_box.checked=false; 
  document.form1.greatclub_box.checked=false; 
  document.form1.morningstar_box.checked=false; 
  document.form1.quarterstaff_box.checked=false; 
  document.form1.scythe_box.checked=false; 
  document.form1.battleaxe_box.checked=false; 
  document.form1.broadsword_box.checked=false; 
  document.form1.trident_box.checked=false; 
  document.form1.khopesh_box.checked=false; 
  document.form1.lightwarpick_box.checked=false; 
  document.form1.scourge_box.checked=false; 
  document.form1.flail_box.checked=false; 
  document.form1.longsword_box.checked=false; 
  document.form1.scimitar_box.checked=false; 
  document.form1.shortsword_box.checked=false; 
  document.form1.warhammer_box.checked=false; 
  document.form1.warpick_box.checked=false; 
  document.form1.falchion_box.checked=false; 
  document.form1.glaive_box.checked=false; 
  document.form1.greataxe_box.checked=false; 
  document.form1.greatsword_box.checked=false; 
  document.form1.halberd_box.checked=false; 
  document.form1.heavyflail_box.checked=false; 
  document.form1.longspear_box.checked=false; 
  document.form1.maul_box.checked=false; 
  document.form1.heavywarpick_box.checked=false; 
  document.form1.bastardsword_box.checked=false; 
  document.form1.katar_box.checked=false; 
  document.form1.rapier_box.checked=false; 
  document.form1.spikedchain_box.checked=false; 
  document.form1.craghammer_box.checked=false; 
  document.form1.kukri_box.checked=false; 
  document.form1.parryingdagger_box.checked=false; 
  document.form1.spikedshield_box.checked=false; 
  document.form1.tratnyr_box.checked=false; 
  document.form1.tripleheadedflail_box.checked=false; 
  document.form1.waraxe_box.checked=false; 
  document.form1.executionaxe_box.checked=false; 
  document.form1.fullblade_box.checked=false; 
  document.form1.greatspear_box.checked=false; 
  document.form1.mordenkrad_box.checked=false; 
  document.form1.doubleaxe_box.checked=false; 
  document.form1.doubleflail_box.checked=false; 
  document.form1.doublesword_box.checked=false; 
  document.form1.urgrosh_box.checked=false; 
  document.form1.handcrossbow_box.checked=false; 
  document.form1.sling_box.checked=false; 
  document.form1.crossbow_box.checked=false; 
  document.form1.repeatingcrossbow_box.checked=false; 
  document.form1.greatbow_box.checked=false; 
  document.form1.superiorcrossbow_box.checked=false; 
  document.form1.longbow_box.checked=false; 
  document.form1.shortbow_box.checked=false; 




 rangercombattrack=0; 
 can_read=false; 
 flurry_of_blows_string=""
 fortitude_string_1=""
 will_string_1=""
 reflex_string_1=""
 fear_save=0; 
 horror_save=0; 
 madness_save=0; 
 fear_string_1=""; 
 horror_string_1=""; 
 madness_string_1=""; 
 fear_string_2=""; 
 horror_string_2=""; 
 madness_string_2=""; 

 initiative_string_1=""
 fortitude_string_2=""
 will_string_2=""
 reflex_string_2=""
 initiative_string_2=""




 FeatsAreLocked=false; 
 fortitude_save=0; 
 reflex_save=0; 
 will_save=0; 
 initiative_modifier=0; 

 z=0; 
 total_skill_points=0; 
 stringy=""
class_string=""
genderandrace_string=""; 
small=false; 
total_hit_points=0; 
bloodied_hit_points=0; 
surge_hit_points=0; 
surges_per_day=0; 
total_armor_class=10; 
speed_string=""; 
size_string=""; 
vision_string=""; 
shield_string=""; 
armor_class_string=""; 
dexterity_bonus_in_this_armor=0; 
document.form1.feat.value="This will monitor your feat selection."


 document.form1.firststatistic.value=""
 document.form1.secondstatistic.value=""
 document.form1.thirdstatistic.value=""
 document.form1.fourthstatistic.value=""
 document.form1.fifthstatistic.value=""
 document.form1.sixthstatistic.value=""
 document.form1.first_comment_box.value="Press the Start bar"
 if (document.form1.methods_list.selectedIndex==1)
  {document.form1.first_comment_box.value="Standard point buy.  "; RollSomeDice(); }
 if (document.form1.methods_list.selectedIndex==3+2)
  {document.form1.first_comment_box.value="3.5 point buy.  "; RollSomeDice(); }
 if (document.form1.methods_list.selectedIndex==2+2)
  {document.form1.first_comment_box.value="3.5 elite array.  "; RollSomeDice(); }
 if (document.form1.methods_list.selectedIndex==4+2)
  {document.form1.first_comment_box.value="3.5 non-elite array.  "; RollSomeDice(); }
 if (document.form1.methods_list.selectedIndex==6+2)
  {document.form1.first_comment_box.value="Simple entry.  "; RollSomeDice(); }
 document.form1.second_comment_box.value=""
 document.form1.third_comment_box.value=""
 document.form1.fourth_comment_box.value=""
 document.form1.fifth_comment_box.value=""
 document.form1.sixth_comment_box.value="Keep working"

 document.form1.level_01a_comment_box.value=""; 
 document.form1.level_01e_comment_box.value=""; 
 document.form1.level_01d_comment_box.value=""; 
 document.form1.level_02u_comment_box.value=""; 
 document.form1.level_03e_comment_box.value=""; 
 document.form1.level_05d_comment_box.value=""; 
 document.form1.level_06u_comment_box.value=""; 
 document.form1.level_07e_comment_box.value=""; 
 document.form1.level_09d_comment_box.value=""; 
 document.form1.level_10u_comment_box.value=""; 
 document.form1.level_13e_comment_box.value=""; 
 document.form1.level_15d_comment_box.value=""; 
 document.form1.level_16u_comment_box.value=""; 
 document.form1.level_17e_comment_box.value=""; 
 document.form1.level_19d_comment_box.value=""; 
 document.form1.level_22u_comment_box.value=""; 
 document.form1.level_23e_comment_box.value=""; 
 document.form1.level_25d_comment_box.value=""; 
 document.form1.level_27e_comment_box.value=""; 
 document.form1.level_29d_comment_box.value=""; 


 document.form1.how_tall.selectedIndex=0; 
 document.form1.how_heavy.selectedIndex=0; 
 alignment=0; 
 total_levels=0; 
 gender=0; 
 z=0; while (z<21)
 {
 strength=0; 
 wisdom=0; 
 dexterity=0; 
 intelligence=0; 
 charisma=0; 
 constitution=0; 
 z++ ; }
 intelligence01=0; 
 intelligence04=0; 
 intelligence08=0; 
 intelligence12=0; 
 intelligence16=0; 
 intelligence20=0; 
 newHP01=0; 
 newHP02=0; 
 newHP03=0; 
 newHP04=0; 
 newHP05=0; 
 newHP06=0; 
 newHP07=0; 
 newHP08=0; 
 newHP09=0; 
 newHP10=0; 
 newHP11=0; 
 newHP12=0; 
 newHP13=0; 
 newHP14=0; 
 newHP15=0; 
 newHP16=0; 
 newHP17=0; 
 newHP18=0; 
 newHP19=0; 
 newHP20=0; 



 ClassesHaveBeenEstablished=false; 
 CharacterTypeHasBeenEstablished=false; 
 AbilitiesHaveBeenEstablished=false; 
 AbilitiesAreProperlyAssigned=false; 
 DiceHaveBeenRolled=false; 
 AbilityIncreasesAreLocked=false; 
 FighterFeatsEtcFrozen=false; 
 FeatsAreLocked=false; 
 ClearRaceButtons()
 ClearGenderButtons()
 ClearAlignmentButtons()
 ClearLevelButtons()
 PointBuyIsEightsOrBetter();
 raise_otherepic();
 }



function ChooseBestDarkfireStat(){
 if (!race_drow){ClearDarkfireStats(); return; }
 document.form1.darkfirestat[0].checked=true; 
 if (wisdom>intelligence){document.form1.darkfirestat[1].checked=true; }
 if ((charisma>intelligence)&(charisma>wisdom)){document.form1.darkfirestat[2].checked=true; }
 }

function ChooseBestEarthshockStat(){
 if (!genasi_earthsoul){ClearEarthshockStats(); return; }
 document.form1.earthshockstat[0].checked=true; 
 if (constitution>strength){document.form1.earthshockstat[1].checked=true; }
 if ((dexterity>strength)&(dexterity>constitution)){document.form1.earthshockstat[2].checked=true; }
 }

function ChooseBestFirepulseStat(){
 if (!genasi_firesoul){ClearFirepulseStats(); return; }
 document.form1.firepulsestat[0].checked=true; 
 if (constitution>strength){document.form1.firepulsestat[1].checked=true; }
 if ((dexterity>strength)&(dexterity>constitution)){document.form1.firepulsestat[2].checked=true; }
 }

function ChooseBestRazorswarmStat(){
 if (!race_bladeling){ClearRazorswarmStats(); return; }
 document.form1.razorswarmstat[0].checked=true; 
 if (constitution>strength){document.form1.razorswarmstat[1].checked=true; }
 if ((dexterity>strength)&(dexterity>constitution)){document.form1.razorswarmstat[2].checked=true; }
 }

function AlreadyKnowsSimpleMeleeWeapons(){
    already_knows_club=true; 
    already_knows_dagger=true; 
    already_knows_javelin=true; 
    already_knows_mace=true; 
    already_knows_sickle=true; 
    already_knows_spear=true;                    
    already_knows_othersimplemeleeweapons=true;
    if (!small)
    {
    already_knows_greatclub=true; 
    already_knows_morningstar=true; 
    already_knows_quarterstaff=true; 
    already_knows_scythe=true; 
    }
 }

function AlreadyKnowsMilitaryMeleeWeapons(){
    already_knows_battleaxe=true; 
    already_knows_flail=true; 
    already_knows_handaxe=true; 
    already_knows_longsword=true; 
    already_knows_scimitar=true; 
    already_knows_shortsword=true; 
    already_knows_throwinghammer=true; 
    already_knows_warhammer=true; 
    already_knows_warpick=true; 
    already_knows_othermilitarymeleeweapons=true; 
    if (!small)
    {
    already_knows_falchion=true; 
    already_knows_glaive=true; 
    already_knows_greataxe=true; 
    already_knows_greatsword=true; 
    already_knows_halberd=true; 
    already_knows_heavyflail=true; 
    already_knows_longspear=true; 
    already_knows_maul=true; 
    }
 }

function AlreadyKnowsSimpleRangedWeapons(){
    already_knows_handcrossbow=true; 
    already_knows_sling=true; 
    already_knows_othersimplerangedweapons=true; 
    if (!small)
    {
    already_knows_crossbow=true; 
    }
 }

function AlreadyKnowsMilitaryRangedWeapons(){
    if (!small){already_knows_longbow=true; }
    already_knows_shortbow=true; 
 }





function UncheckLanguageBoxes(){
 document.form1.common_box.checked=false; 
 document.form1.deepspeech_box.checked=false; 
 document.form1.draconic_box.checked=false; 
 document.form1.dwarven_box.checked=false; 
 document.form1.elven_box.checked=false; 
 document.form1.giant_box.checked=false; 
 document.form1.goblin_box.checked=false; 
 document.form1.primordial_box.checked=false; 
 document.form1.chondathan_box.checked=false; 
 document.form1.damaran_box.checked=false; 
 document.form1.netherese_box.checked=false; 
 document.form1.shou_box.checked=false; 
 document.form1.thayan_box.checked=false; 
 document.form1.tuigan_box.checked=false; 
 document.form1.untheric_box.checked=false; 
 document.form1.supernal_box.checked=false; 
 document.form1.abyssal_box.checked=false; 
 document.form1.other01_box.checked=false; 
 document.form1.other02_box.checked=false; 
 document.form1.other03_box.checked=false; 
 }


function NegateTheBottomStuff(){
  document.form1.armor_radio[0].checked=true; 
  document.form1.shield_radio[0].checked=true; 
  document.form1.hair_color[0].checked=true; document.form1.hair_color[0].checked=false; 
  document.form1.skin_color[0].checked=true; document.form1.skin_color[0].checked=false; 
  document.form1.eye_color[0].checked=true; document.form1.eye_color[0].checked=false; 
  document.form1.hair_type[0].checked=true; document.form1.hair_type[0].checked=false; 
  document.form1.beard_type[0].checked=true; document.form1.beard_type[0].checked=false; 


  UncheckLanguageBoxes(); 
  document.form1.backpack.checked=false; 
  document.form1.barrel.checked=false; 
  document.form1.basket.checked=false; 
  document.form1.bedroll.checked=false; 
  document.form1.bell.checked=false; 
  document.form1.blockandtackle.checked=false; 
  document.form1.bottle.checked=false; 
  document.form1.bucket.checked=false; 
  document.form1.caltrops.checked=false; 
  document.form1.candle.checked=false; 
  document.form1.canvas.checked=false; 
  document.form1.casemaporscroll.checked=false; 

  document.form1.chalk.checked=false; 
  document.form1.chest.checked=false; 
  document.form1.crowbar.checked=false; 
  document.form1.everburningtorch.checked=false; 
  document.form1.fishhook.checked=false; 
  document.form1.fishingnet.checked=false; 
  document.form1.flintandsteel.checked=false; 
  document.form1.grapplinghook.checked=false; 
  document.form1.hammer.checked=false; 
  document.form1.inkvial.checked=false; 
  document.form1.inkpen.checked=false; 
  document.form1.jugclay.checked=false; 
  document.form1.ladder.checked=false; 
  document.form1.lampcommon.checked=false; 
  document.form1.lanternbullseye.checked=false; 
  document.form1.lanternhooded.checked=false; 
  document.form1.mirror.checked=false; 
  document.form1.mug.checked=false; 
  document.form1.pick.checked=false; 
  document.form1.pitcher.checked=false; 
  document.form1.pole.checked=false; 
  document.form1.pot.checked=false; 
  document.form1.ram.checked=false; 
  document.form1.sealingwax.checked=false; 
  document.form1.sewingneedle.checked=false; 
  document.form1.signalwhistle.checked=false; 
  document.form1.signetring.checked=false; 
  document.form1.sledge.checked=false; 
  document.form1.soap.checked=false; 
  document.form1.spadeorshovel.checked=false; 
  document.form1.spyglass.checked=false; 
  document.form1.tent.checked=false; 
  document.form1.whetstone.checked=false; 
  document.form1.alchemistlab.checked=false; 
  document.form1.artisantools.checked=false; 
  document.form1.disguisekit.checked=false; 
  document.form1.healerkit.checked=false; 
  document.form1.hollyandmistletoe.checked=false; 
  document.form1.holysymbolwooden.checked=false; 

  document.form1.holysymbolsilver.checked=false; 
  document.form1.hourglass.checked=false; 
  document.form1.magnifyingglass.checked=false; 
  document.form1.musicalinstrument.checked=false; 
  document.form1.scale.checked=false; 

  document.form1.spellcomponentpouch.checked=false; 
  document.form1.thievestools.checked=false; 
  document.form1.orb_box.checked=false; 
  document.form1.wand_box.checked=false; 
  document.form1.rod_box.checked=false; 
  document.form1.blanketwinter_list.selectedIndex=0; 
  document.form1.chain.selectedIndex=0; 
  document.form1.firewood.selectedIndex=0; 
  document.form1.flask.selectedIndex=0; 
  document.form1.lock.selectedIndex=0; 
  document.form1.lanternoil.selectedIndex=0; 
  document.form1.manacles.selectedIndex=0; 
  document.form1.oilflask.selectedIndex=0; 
  document.form1.paper.selectedIndex=0; 
  document.form1.parchment.selectedIndex=0; 
  document.form1.pitons.selectedIndex=0; 
  document.form1.journeybread.selectedIndex=0; 
  document.form1.beltpouch.selectedIndex=0; 
  document.form1.rations.selectedIndex=0; 
  document.form1.ropehempen.selectedIndex=0; 
  document.form1.ropesilk.selectedIndex=0; 
  document.form1.sack.selectedIndex=0; 
  document.form1.vialinkorpotion.selectedIndex=0; 
  document.form1.torch.selectedIndex=0; 
  document.form1.waterskin.selectedIndex=0; 
  document.form1.spellbook.selectedIndex=0; 
  document.form1.ritualbook.selectedIndex=0; 
  document.form1.tool.selectedIndex=0; 
  document.form1.arrows.selectedIndex=0; 
  document.form1.sunrods.selectedIndex=0; 
  document.form1.slingbullets.selectedIndex=0; 
  document.form1.crossbowbolts.selectedIndex=0; 

 }

function Arms(){
 }

function lock_skills(){
 if (SkillsAreAssigned==true){document.form1.fifth_comment_box.value="Sorry... no going back."}
 else if (!FighterFeatsEtcFrozen){document.form1.fifth_comment_box.value="Not ready yet."}
 else if (!SkillSetOkay())
  {
   document.form1.fifth_comment_box.value="Keep working on your skills.  "
   if ((class_ranger)&(!document.form1.train_dungeoneering.checked)&(!document.form1.train_nature.checked))
    {document.form1.fifth_comment_box.value+="A ranger must train here in either dungeoneering or nature."; }  
  }
 else if (!MultiSkillOkay())
  {
   document.form1.fifth_comment_box.value="You need your multiclass skill.  "
  }
 else
  {
   SkillsAreAssigned=true; 
//   alert("Skills are assigned!"); 
   document.form1.fifth_comment_box.value="Skills are assigned."
   RecordSkills(); 
   GetTotalFeatEntitlement(); 
   AdjustFeatMenus();  
   NegateFeats(); 
   MandatoryFeatsForParagons();
   consider_arcanefamiliar();



   ArrowShow(); 

   if (total_feat_entitlement==1)
    {
     if ((multi_cleric()) | (multi_fighter()) | (multi_paladin()) | (multi_ranger()) | (multi_rogue()) | (multi_warlock()) | (multi_warlord()) | (multi_wizard()) | (multi_swordmage()) | (multi_spellscarred)
     |(multi_bard())|(multi_invoker())|(multi_druid())|(multi_avenger())|(multi_sorcerer())|(multi_warden())|(multi_shaman())|(multi_barbarian()))
      {document.form1.feat.value="Your multiclass is your one feat for now. "; }
     else
     document.form1.feat.value="Choose one feat. "; 
    }
   else if ((multi_cleric()) | (multi_fighter()) | (multi_paladin()) | (multi_ranger()) | (multi_rogue()) | (multi_warlock) | (multi_warlord()) | (multi_wizard()) | (multi_swordmage())| (multi_spellscarred)
   |(multi_avenger()) |(multi_bard()) |(multi_barbarian()) |(multi_invoker()) |(multi_shaman()) |(multi_sorcerer()) |(multi_invoker()) |(multi_warden()) 
   )
    {
    if (paragon_multiclass==true)
     {
     document.form1.feat.value="Your multiclass paragon is your first four feats. "; 
     if (total_feat_entitlement==5){document.form1.feat.value+="  Choose one additional feat. "; }
     else {document.form1.feat.value+=" Choose "+(total_feat_entitlement-4)+" additional feats.  "; }
     }
    else
     {
     document.form1.feat.value="Your multiclass is your first feat. "; 
     if (total_feat_entitlement==2){document.form1.feat.value+="  Choose one additional feat. "; }
     else {document.form1.feat.value+=" Choose "+(total_feat_entitlement-1)+" additional feats.  "; }
     }
    }
   else {document.form1.feat.value="Choose "+total_feat_entitlement+" feats.  "; }
   if (above_heroic_feat_maximum>0){document.form1.feat.value+="Take a maximum of "+above_heroic_feat_maximum+" above the heroic level.  "; }
   if (above_paragon_feat_maximum>0){document.form1.feat.value+="Take a maximum of "+above_paragon_feat_maximum+" above the paragon level.  "; }
  }
 }

 function MandatoryFeatsForParagons(){
   if ((paragon_wizardofthespiraltower)&(!already_knows_longsword)){document.form1.weaponproficiencylongsword_box.checked=true; }
   if ((paragon_drowwanderer)&(!trained_dungeoneering)&(!multi_trained_dungeoneering)){document.form1.skilltrainingdungeoneering_box.checked=true;}
   GatecrasherArcaneTraining();
   }


function goodsave(levello){
 if (levello== 1){return 2} else
 if (levello== 2){return 3} else
 if (levello== 3){return 3} else
 if (levello== 4){return 4} else
 if (levello== 5){return 4} else
 if (levello== 6){return 5} else
 if (levello== 7){return 5} else
 if (levello== 8){return 6} else
 if (levello== 9){return 6} else
 if (levello==10){return 7} else
 if (levello==11){return 7} else
 if (levello==12){return 8} else
 if (levello==13){return 8} else
 if (levello==14){return 9} else
 if (levello==15){return 9} else
 if (levello==16){return 10} else
 if (levello==17){return 10} else
 if (levello==18){return 11} else
 if (levello==19){return 11} else
 if (levello==20){return 12} else
 return 0; 
 }


function poorsave(levello){
 if (levello== 1){return 0} else
 if (levello== 2){return 0} else
 if (levello== 3){return 1} else
 if (levello== 4){return 1} else
 if (levello== 5){return 1} else
 if (levello== 6){return 2} else
 if (levello== 7){return 2} else
 if (levello== 8){return 2} else
 if (levello== 9){return 3} else
 if (levello==10){return 3} else
 if (levello==11){return 3} else
 if (levello==12){return 4} else
 if (levello==13){return 4} else
 if (levello==14){return 4} else
 if (levello==15){return 5} else
 if (levello==16){return 5} else
 if (levello==17){return 5} else
 if (levello==18){return 6} else
 if (levello==19){return 6} else
 if (levello==20){return 6} else
 return 0; 
 }

function goodattack(levello){return levello}

function averageattack(levello){
 if (levello== 1){return 0} else
 if (levello== 2){return 1} else
 if (levello== 3){return 2} else
 if (levello== 4){return 3} else
 if (levello== 5){return 3} else
 if (levello== 6){return 4} else
 if (levello== 7){return 5} else
 if (levello== 8){return 6} else
 if (levello== 9){return 6} else
 if (levello==10){return 7} else
 if (levello==11){return 8} else
 if (levello==12){return 9} else
 if (levello==13){return 9} else
 if (levello==14){return 10} else
 if (levello==15){return 11} else
 if (levello==16){return 12} else
 if (levello==17){return 12} else
 if (levello==18){return 13} else
 if (levello==19){return 14} else
 if (levello==20){return 15} else
 return 0; 
 }


function poorattack(levello){
 if (levello== 1){return 0} else
 if (levello== 2){return 1} else
 if (levello== 3){return 1} else
 if (levello== 4){return 2} else
 if (levello== 5){return 2} else
 if (levello== 6){return 3} else
 if (levello== 7){return 3} else
 if (levello== 8){return 4} else
 if (levello== 9){return 4} else
 if (levello==10){return 5} else
 if (levello==11){return 5} else
 if (levello==12){return 6} else
 if (levello==13){return 6} else
 if (levello==14){return 7} else
 if (levello==15){return 7} else
 if (levello==16){return 8} else
 if (levello==17){return 8} else
 if (levello==18){return 9} else
 if (levello==19){return 9} else
 if (levello==20){return 10} else
 return 0; 
 }





function produceCharacterSheet(){
 SecondWindow=open("","secondWindow","toolbar=yes,location=yes,directories=yes,status=yes,menubar=yes,scrollbars=yes,resizable=yes,width=500,height=500"); 
 if (SecondWindow!=null){
  WriteTextForCharacterSheet()
// SecondWindow.scrollbars.visible=true; 
  }
 }



function raise_01(){
 if ((!race_human) | (ClassesHaveBeenEstablished==false)){ClearAbilityBoxes01(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_breathtype(){
 if ((!race_dragonborn) | (ClassesHaveBeenEstablished==false)){ClearBreathTypes(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_genasisoultype(){
 if ((!race_genasi) | (ClassesHaveBeenEstablished==false)){ClearGenasiSoulTypes(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_breathstat(){
 if ((!race_dragonborn) | (ClassesHaveBeenEstablished==false)){ClearBreathStats(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_darkfirestat(){
 if ((!race_drow) | (!FeatsAreLocked)){ClearDarkfireStats(); }
 }

function choose_earthshockstat(){
 if ((!genasi_earthsoul) | (!FeatsAreLocked)){ClearEarthshockStats(); }
 }

function choose_firepulsestat(){
 if ((!genasi_firesoul) | (!FeatsAreLocked)){ClearFirepulseStats(); }
 }

function choose_razorswarmstat(){
 if ((!race_bladeling) | (!FeatsAreLocked)){ClearRazorswarmStats(); }
 }

function choose_eladrin_education(){

 if ((!race_eladrin) | (ClassesHaveBeenEstablished==false)){ClearEladrinEducation(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }

   if ((class_cleric) |(class_invoker) |(class_avenger) |(multi_avenger_discipleofdivinewrath)|(multi_invoker_acolyteofdivinesecrets)| (multi_cleric_initiateofthefaith) | (class_paladin))
    {if (document.form1.eladrin_education[13].checked){document.form1.eladrin_education[13].checked=false; alert("You already have training in religion.  Choose another.");  ClearEladrinEducation();}}
   if ((class_rogue)|(multi_rogue_ruthlessefficiency))
    {if (document.form1.eladrin_education[14].checked){document.form1.eladrin_education[14].checked=false; alert("You already have training in stealth.  Choose another.");  ClearEladrinEducation();}}
   if ((class_rogue) | (multi_rogue_sneakofshadows))
    {if (document.form1.eladrin_education[16].checked){document.form1.eladrin_education[16].checked=false; alert("You already have training in thievery.  Choose another.");  ClearEladrinEducation();}}
   if ((class_wizard) | (class_swordmage)| (class_bard)| (class_sorcerer) | (multi_wizard_arcaneinitiate)|(multi_sorcerer_arcaneprodigy)| (multi_swordmage_bladeinitiate)|(multi_bard_bardicritualist))
    {if (document.form1.eladrin_education[1].checked){document.form1.eladrin_education[16].checked=false; alert("You already have training in arcana.  Choose another."); ClearEladrinEducation();}}
   if ((class_druid) | (class_shaman)| (class_warden)|(multi_druid_initiateoftheoldfaith)|(multi_shaman_spirittalker) )
    {if (document.form1.eladrin_education[11].checked){document.form1.eladrin_education[16].checked=false; alert("You already have training in nature.  Choose another."); ClearEladrinEducation();}}
   ArrowShow(); 
 }

function choose_dilettante(){
 if ((!race_halfelf) | (ClassesHaveBeenEstablished==false)){ClearDilettanteChoices(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
  if (class_cleric)
   {
    document.form1.dilettantechoice[0].checked=false; 
    document.form1.dilettantechoice[1].checked=false; 
    document.form1.dilettantechoice[2].checked=false; 
    document.form1.dilettantechoice[3].checked=false; 
   }
  if (class_fighter)
   {
    document.form1.dilettantechoice[4].checked=false; 
    document.form1.dilettantechoice[5].checked=false; 
    document.form1.dilettantechoice[6].checked=false; 
    document.form1.dilettantechoice[7].checked=false; 
   }
  if (class_paladin)
   {
    document.form1.dilettantechoice[8].checked=false; 
    document.form1.dilettantechoice[9].checked=false; 
    document.form1.dilettantechoice[10].checked=false; 
    document.form1.dilettantechoice[11].checked=false; 
   }
  if (class_ranger)
   {
    document.form1.dilettantechoice[12].checked=false; 
    document.form1.dilettantechoice[13].checked=false; 
    document.form1.dilettantechoice[14].checked=false; 
    document.form1.dilettantechoice[15].checked=false; 
   }
  if (class_rogue)
   {
    document.form1.dilettantechoice[16].checked=false; 
    document.form1.dilettantechoice[17].checked=false; 
    document.form1.dilettantechoice[18].checked=false; 
    document.form1.dilettantechoice[19].checked=false; 
   }
  if (class_warlock)
   {
    document.form1.dilettantechoice[20].checked=false; 
    document.form1.dilettantechoice[21].checked=false; 
    document.form1.dilettantechoice[22].checked=false; 
    document.form1.dilettantechoice[23].checked=false; 
   }
  if (class_warlord)
   {
    document.form1.dilettantechoice[24].checked=false; 
    document.form1.dilettantechoice[25].checked=false; 
    document.form1.dilettantechoice[26].checked=false; 
    document.form1.dilettantechoice[27].checked=false; 
   }
  if (class_wizard)
   {
    document.form1.dilettantechoice[28].checked=false; 
    document.form1.dilettantechoice[29].checked=false; 
    document.form1.dilettantechoice[30].checked=false; 
    document.form1.dilettantechoice[31].checked=false; 
    document.form1.dilettantechoice[32].checked=false; 
   }
   ArrowShow(); 
 }

//function choose_clericstartingritual(){
// if ((!class_cleric) | (ClassesHaveBeenEstablished==false)){ClearClericStartingRituals(); }
// else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
//   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
//   ArrowShow(); 
// }

function choose_fighterstyle(){
 if (((!class_fighter)&(!multi_fighter_studentofthesword)) | (ClassesHaveBeenEstablished==false)){ClearFighterStyles(); }
 else if ((multi_fighter_studentofthesword)&((document.form1.fighterstyle[2].checked)|(document.form1.fighterstyle[3].checked)))
  {
   alert("Please choose either One-Handed or Two-Handed."); ClearFighterStyles(); 
  }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_rangerstyle(){
 if ((!class_ranger) | (ClassesHaveBeenEstablished==false)){ClearRangerStyles(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryRangerStyle(); 
   am_i_beastmaster(); // this includes arrowshow();
 }

function choose_roguestyle(){
 if ((!class_rogue) | (ClassesHaveBeenEstablished==false)){ClearRogueStyles(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function MandatoryWarlockPact(){
  if (paragon_doomsayer){document.form1.warlockpact[2].checked=true; return true; }
  if (paragon_feytouched){document.form1.warlockpact[0].checked=true; return true; }
  if (paragon_lifestealer){document.form1.warlockpact[1].checked=true; return true; }
  if (paragon_darkwalker){document.form1.warlockpact[3].checked=true; return true; }
  return false; 
 }

function MandatoryRangerStyle(){
  if (paragon_battlefieldarcher){document.form1.rangerstyle[0].checked=true; return true; }
  if (paragon_highforestscout){document.form1.rangerstyle[0].checked=true; return true; }
  if (paragon_beaststalker){document.form1.rangerstyle[0].checked=true; return true; }
  if (paragon_pathfinder){document.form1.rangerstyle[1].checked=true; return true; }
  if (paragon_stormwarden){document.form1.rangerstyle[1].checked=true; return true; }
  if (paragon_impilturandemonslayer){document.form1.rangerstyle[1].checked=true; return true; }
  if (paragon_feralspirit){document.form1.rangerstyle[2].checked=true; return true; }
  if (paragon_packrunner){document.form1.rangerstyle[2].checked=true; return true; }
  if (paragon_wildcatstalker){document.form1.rangerstyle[2].checked=true; return true; }
  if (epic_beastlord){document.form1.rangerstyle[2].checked=true; return true; }
  return false; 
 }

function MandatoryRangerBeast(){
  if (paragon_packrunner){document.form1.beast[7].checked=true; return true; }
  if (paragon_wildcatstalker){document.form1.beast[2].checked=true; return true; }
  return false; 
 }

function MandatoryGensaiExpression(){
 if (paragon_whirlwindgenasi){document.form1.genasisoultype[4].checked=true; return true;}
 if (paragon_wildfiregenasi){document.form1.genasisoultype[1].checked=true; return true;}
 }

function choose_warlockpact(){
 if (((!class_warlock)&(!multi_warlock_pactinitiate)) | (ClassesHaveBeenEstablished==false)){ClearWarlockPacts(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryWarlockPact(); 
   ArrowShow(); 
 }

function choose_warlordpresence(){
 if ((!class_warlord) | (ClassesHaveBeenEstablished==false)){ClearWarlordPresences(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_otherracesight(){
 if ((!race_other) | (ClassesHaveBeenEstablished==false)){ClearOtherRaceSight(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_otherracesize(){
 if ((!race_other) | (ClassesHaveBeenEstablished==false)){ClearOtherRaceSize(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_otherclassdefense(){
 if ((!class_other) | (ClassesHaveBeenEstablished==false)){ClearOtherClassDefense(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_otherclasshitpoints(){
 if ((!class_other) | (ClassesHaveBeenEstablished==false)){ClearOtherClassHitPoints(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_otherclasssurges(){
 if ((!class_other) | (ClassesHaveBeenEstablished==false)){ClearOtherClassSurges(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function choose_wizardimplement(){
 if ((!class_wizard) | (ClassesHaveBeenEstablished==false)){ClearWizardImplements(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }


function choose_swordmageaegis(){
 if ((!class_swordmage) | (ClassesHaveBeenEstablished==false)){ClearSwordmageAegis(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatorySwordmageAegis();
   ArrowShow(); 
 }

function choose_avengercensure(){
 if ((!class_avenger) | (ClassesHaveBeenEstablished==false)){ClearAvengerCensure(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryAvengerCensure();
   ArrowShow(); 
 }

function choose_barbarianferal(){
 if ((!class_barbarian) | (ClassesHaveBeenEstablished==false)){ClearBarbarianFeral(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryBarbarianFeral();
   ArrowShow(); 
 }

function choose_bardvirtue(){
 if ((!class_bard) | (ClassesHaveBeenEstablished==false)){ClearBardVirtue(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryBardVirtue();
   ArrowShow(); 
 }

function choose_druidprimal(){
 if ((!class_druid) | (ClassesHaveBeenEstablished==false)){ClearDruidPrimal(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryDruidPrimal();
   ArrowShow(); 
 }

function choose_invokercovenant(){
 if ((!class_invoker) | (ClassesHaveBeenEstablished==false)){ClearInvokerCovenant(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryInvokerCovenant();
   ArrowShow(); 
 }

function choose_shamanspirit(){
 if ((!class_shaman) | (ClassesHaveBeenEstablished==false)){ClearShamanSpirit(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryShamanSpirit();
   ArrowShow(); 
 }

function choose_sorcerermagic(){
 if ((!class_sorcerer) | (ClassesHaveBeenEstablished==false)){ClearSorcererMagic(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatorySorcererMagic();
   ArrowShow(); 
 }

function choose_wardenmight(){
 if ((!class_warden) | (ClassesHaveBeenEstablished==false)){ClearWardenMight(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   MandatoryWardenMight();
   ArrowShow(); 
 }

function MandatorySwordmageAegis(){
   if (paragon_anarchofshyr){document.form1.swordmageaegis[0].checked=true;return true;}
   return false;
 }

function MandatoryBarbarianFeral(){
   return false;
 }

function MandatoryAvengerCensure(){
   return false;
 }

function MandatoryBardVirtue(){
  if (paragon_summerrhymer){document.form1.bardvirtue[0].checked=true; return true; }
  if (paragon_warchanter){document.form1.bardvirtue[1].checked=true; return true; }
   return false;
 }

function MandatoryDruidPrimal(){
   return false;
 }

function MandatoryInvokerCovenant(){
   return false;
 }

function MandatoryShamanSpirit(){
   return false;
 }

function MandatorySorcererMagic(){
  if (paragon_dragonsoulheir){document.form1.sorcerermagic[0].checked=true; return true; }
  if (paragon_wildmage){document.form1.sorcerermagic[1].checked=true; return true; }
   return false;
 }

function MandatoryWardenMight(){
   return false;
 }

function raise_04(){
 if ((total_levels<4) | (ClassesHaveBeenEstablished==false)){ClearAbilityBoxes04(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function raise_08(){
 if ((total_levels<8) | (ClassesHaveBeenEstablished==false)){ClearAbilityBoxes08(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function raise_14(){
 if ((total_levels<14) | (ClassesHaveBeenEstablished==false)){ClearAbilityBoxes14(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function raise_18(){
 if ((total_levels<18) | (ClassesHaveBeenEstablished==false)){ClearAbilityBoxes18(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function raise_24(){
 if ((total_levels<24) | (ClassesHaveBeenEstablished==false)){ClearAbilityBoxes24(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function raise_28(){
 if ((total_levels<28) | (ClassesHaveBeenEstablished==false)){ClearAbilityBoxes28(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function raise_21(){
 if (((!epic_demigod)&(!epic_chosen)) | (ClassesHaveBeenEstablished==false)){ClearAbilityBoxes21(); }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }


function raise_other_race_stat(){
 if ((!race_other) | (ClassesHaveBeenEstablished==false))
  {
   ClearAbilityBoxesOtherRace(); 
   ClearSkillBoxesOtherRace(); 
  }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
   ArrowShow(); 
 }

function fr_background(){
 if ((ClassesHaveBeenEstablished==false)){NotFromForgottenRealms(); return; }
 else if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }


 if (document.form1.fr_background_list.selectedIndex==0){frb_none=true;} else {frb_none=false;}
 if (document.form1.fr_background_list.selectedIndex==1){frb_aglarond=true; } else {frb_aglarond=false;}
 if (document.form1.fr_background_list.selectedIndex==2){frb_akanul=true;} else {frb_akanul=false;}
 if (document.form1.fr_background_list.selectedIndex==3){frb_amn=true;} else {frb_amn=false;}
 if (document.form1.fr_background_list.selectedIndex==4){frb_baldursgate=true;} else {frb_baldursgate=false;}
 if (document.form1.fr_background_list.selectedIndex==5){frb_calimshan=true;} else {frb_calimshan=false;}
 if (document.form1.fr_background_list.selectedIndex==6){frb_chessenta=true;} else {frb_chessenta=false;}
 if (document.form1.fr_background_list.selectedIndex==7){frb_cormyr=true; } else {frb_cormyr=false;}
 if (document.form1.fr_background_list.selectedIndex==8){frb_dalelands=true; } else {frb_dalelands=false;}
 if (document.form1.fr_background_list.selectedIndex==9){frb_dragoncoast=true;} else {frb_dragoncoast=false;}
 if (document.form1.fr_background_list.selectedIndex==10){frb_durpar=true;} else {frb_durpar=false;}
 if (document.form1.fr_background_list.selectedIndex==11){frb_eastrift=true;} else {frb_eastrift=false;}
 if (document.form1.fr_background_list.selectedIndex==12){frb_elfharrow=true;} else {frb_elfharrow=false;}
 if (document.form1.fr_background_list.selectedIndex==13){frb_grayvale=true;} else {frb_grayvale=false;}
 if (document.form1.fr_background_list.selectedIndex==14){frb_greatdale=true;} else {frb_greatdale=false;}
 if (document.form1.fr_background_list.selectedIndex==15){frb_highimaskar=true;} else {frb_highimaskar=false;}
 if (document.form1.fr_background_list.selectedIndex==16){frb_impiltur=true; } else {frb_impiltur=false;}
 if (document.form1.fr_background_list.selectedIndex==17){frb_luruar=true;} else {frb_luruar=false;}
 if (document.form1.fr_background_list.selectedIndex==18){frb_luskan=true;} else {frb_luskan=false;}
 if (document.form1.fr_background_list.selectedIndex==19){frb_moonshaeisles=true;} else {frb_moonshaeisles=false;}
 if (document.form1.fr_background_list.selectedIndex==20){frb_mythdrannor=true;} else {frb_mythdrannor=false;}
 if (document.form1.fr_background_list.selectedIndex==21){frb_narfell=true;} else {frb_narfell=false;}
 if (document.form1.fr_background_list.selectedIndex==22){frb_nelantherisles=true;} else {frb_nelantherisles=false;}
 if (document.form1.fr_background_list.selectedIndex==23){frb_netheril=true;} else {frb_netheril=false;}
 if (document.form1.fr_background_list.selectedIndex==24){frb_thay=true;} else {frb_thay=false;}
 if (document.form1.fr_background_list.selectedIndex==25){frb_tymanther=true;} else {frb_tymanther=false;}
 if (document.form1.fr_background_list.selectedIndex==26){frb_vilhonwilds=true;} else {frb_vilhonwilds=false;}
 if (document.form1.fr_background_list.selectedIndex==27){frb_waterdeep=true; } else {frb_waterdeep=false;}
 if (document.form1.fr_background_list.selectedIndex==28){frb_wheloon=true; } else {frb_wheloon=false;}

 }



function ClearAllAbilityBoxesEtcEtc(){
 ClearAbilityBoxes01(); 
 ClearAbilityBoxes04(); 
 ClearAbilityBoxes08(); 
 ClearAbilityBoxes14(); 
 ClearAbilityBoxes18(); 
 ClearAbilityBoxes24(); 
 ClearAbilityBoxes28(); 
 b_ClearAbilityBoxes04(); 
 b_ClearAbilityBoxes08(); 
 b_ClearAbilityBoxes14(); 
 b_ClearAbilityBoxes18(); 
 b_ClearAbilityBoxes24(); 
 b_ClearAbilityBoxes28(); 
 ClearAbilityBoxes28(); 
 ClearAbilityBoxes21(); 
 ClearAbilityBoxesOtherRace(); 
 ClearSkillBoxesOtherRace(); 
 ClearBreathTypes(); 
 ClearBreathStats();
 ClearBeastChoice();
 ClearFamiliarChoice();
 ClearEladrinEducation(); 
 ClearDilettanteChoices(); 
// ClearClericStartingRituals(); 
 ClearGenasiSoulTypes(); 
 ClearFighterStyles(); 
 ClearRangerStyles(); 
 ClearRogueStyles(); 
 ClearWarlockPacts(); 
 ClearWarlordPresences(); 
 ClearWizardImplements(); 
 ClearSwordmageAegis(); 
 ClearAvengerCensure(); 
 ClearBarbarianFeral(); 
 ClearBardVirtue(); 
 ClearDruidPrimal(); 
 ClearInvokerCovenant(); 
 ClearShamanSpirit(); 
 ClearSorcererMagic(); 
 ClearWardenMight(); 
 ClearOtherRaceSight(); 
 ClearOtherRaceSize(); 
 ClearOtherClassDefense(); 
 ClearOtherClassHitPoints(); 
 ClearOtherClassSurges(); 
 }


function ClearAbilityBoxes01(){
 document.form1.upat01[0].checked=true; 
 document.form1.upat01[0].checked=false; 
 }

function ClearBreathTypes(){
 document.form1.breathtype[0].checked=true; 
 document.form1.breathtype[0].checked=false; 
 }

function ClearGenasiSoulTypes(){
 document.form1.genasisoultype[0].checked=true; 
 document.form1.genasisoultype[0].checked=false; 
 }

function ClearBreathStats(){
 document.form1.breathstat[0].checked=true; 
 document.form1.breathstat[0].checked=false; 
 }

function ClearBeastChoice(){
 document.form1.beast[0].checked=true; 
 document.form1.beast[0].checked=false; 
 }

function ClearFamiliarChoice(){
 document.form1.fam[0].checked=true; 
 document.form1.fam[0].checked=false; 
 }

function ClearDarkfireStats(){
 document.form1.darkfirestat[0].checked=true; 
 document.form1.darkfirestat[0].checked=false; 
 }

function ClearEarthshockStats(){
 document.form1.earthshockstat[0].checked=true; 
 document.form1.earthshockstat[0].checked=false; 
 }

function ClearFirepulseStats(){
 document.form1.firepulsestat[0].checked=true; 
 document.form1.firepulsestat[0].checked=false; 
 }

function ClearRazorswarmStats(){
 document.form1.razorswarmstat[0].checked=true; 
 document.form1.razorswarmstat[0].checked=false; 
 }

function ClearEladrinEducation(){
 document.form1.eladrin_education[0].checked=true; 
 document.form1.eladrin_education[0].checked=false; 
 }

function ClearDilettanteChoices(){
 document.form1.dilettantechoice[0].checked=true; 
 document.form1.dilettantechoice[0].checked=false; 
 }

//function ClearClericStartingRituals(){
// document.form1.clericstartingritual[0].checked=true; 
// document.form1.clericstartingritual[0].checked=false; 
// }

function ClearFighterStyles(){
 document.form1.fighterstyle[0].checked=true; 
 document.form1.fighterstyle[0].checked=false; 
 }

function ClearRangerStyles(){
 document.form1.rangerstyle[0].checked=true; 
 document.form1.rangerstyle[0].checked=false; 
 }

function ClearRogueStyles(){
 document.form1.roguestyle[0].checked=true; 
 document.form1.roguestyle[0].checked=false; 
 }

function ClearWarlockPacts(){
 document.form1.warlockpact[0].checked=true; 
 document.form1.warlockpact[0].checked=false; 
 }

function ClearWarlordPresences(){
 document.form1.warlordpresence[0].checked=true; 
 document.form1.warlordpresence[0].checked=false; 
 }

function ClearWizardImplements(){
 document.form1.wizardimplement[0].checked=true; 
 document.form1.wizardimplement[0].checked=false; 
 }


function ClearSwordmageAegis(){
 document.form1.swordmageaegis[0].checked=true; 
 document.form1.swordmageaegis[0].checked=false; 
 }

function ClearAvengerCensure(){
 document.form1.avengercensure[0].checked=true; 
 document.form1.avengercensure[0].checked=false; 
 }


function ClearBarbarianFeral(){
 document.form1.barbarianferal[0].checked=true; 
 document.form1.barbarianferal[0].checked=false; 
 }


function ClearBardVirtue(){
 document.form1.bardvirtue[0].checked=true; 
 document.form1.bardvirtue[0].checked=false; 
 }


function ClearDruidPrimal(){
 document.form1.druidprimal[0].checked=true; 
 document.form1.druidprimal[0].checked=false; 
 }


function ClearInvokerCovenant(){
 document.form1.invokercovenant[0].checked=true; 
 document.form1.invokercovenant[0].checked=false; 
 }


function ClearShamanSpirit(){
 document.form1.shamanspirit[0].checked=true; 
 document.form1.shamanspirit[0].checked=false; 
 }


function ClearSorcererMagic(){
 document.form1.sorcerermagic[0].checked=true; 
 document.form1.sorcerermagic[0].checked=false; 
 }


function ClearWardenMight(){
 document.form1.wardenmight[0].checked=true; 
 document.form1.wardenmight[0].checked=false; 
 }


function ClearOtherRaceSight(){
 document.form1.otherracesight[0].checked=true; 
 document.form1.otherracesight[0].checked=false; 
 }

function ClearOtherRaceSize(){
 document.form1.otherracesize[0].checked=true; 
 document.form1.otherracesize[0].checked=false; 
 }

function ClearOtherClassDefense(){
 document.form1.otherclassdefense[0].checked=true; 
 document.form1.otherclassdefense[0].checked=false; 
 }

function ClearOtherClassHitPoints(){
 document.form1.otherclasshitpoints[0].checked=true; 
 document.form1.otherclasshitpoints[0].checked=false; 
 }

function ClearOtherClassSurges(){
 document.form1.otherclasssurges[0].checked=true; 
 document.form1.otherclasssurges[0].checked=false; 
 }

function ClearAbilityBoxes04(){
 document.form1.str_04_box.checked=false; 
 document.form1.dex_04_box.checked=false; 
 document.form1.con_04_box.checked=false; 
 document.form1.int_04_box.checked=false; 
 document.form1.wis_04_box.checked=false; 
 document.form1.chr_04_box.checked=false; 
 }

function ClearAbilityBoxes08(){
 document.form1.str_08_box.checked=false; 
 document.form1.dex_08_box.checked=false; 
 document.form1.con_08_box.checked=false; 
 document.form1.int_08_box.checked=false; 
 document.form1.wis_08_box.checked=false; 
 document.form1.chr_08_box.checked=false; 
 }

function ClearAbilityBoxes14(){
 document.form1.str_14_box.checked=false; 
 document.form1.dex_14_box.checked=false; 
 document.form1.con_14_box.checked=false; 
 document.form1.int_14_box.checked=false; 
 document.form1.wis_14_box.checked=false; 
 document.form1.chr_14_box.checked=false; 
 }

function ClearAbilityBoxes18(){
 document.form1.str_18_box.checked=false; 
 document.form1.dex_18_box.checked=false; 
 document.form1.con_18_box.checked=false; 
 document.form1.int_18_box.checked=false; 
 document.form1.wis_18_box.checked=false; 
 document.form1.chr_18_box.checked=false; 
 }

function ClearAbilityBoxes24(){
 document.form1.str_24_box.checked=false; 
 document.form1.dex_24_box.checked=false; 
 document.form1.con_24_box.checked=false; 
 document.form1.int_24_box.checked=false; 
 document.form1.wis_24_box.checked=false; 
 document.form1.chr_24_box.checked=false; 
 }

function ClearAbilityBoxes28(){
 document.form1.str_28_box.checked=false; 
 document.form1.dex_28_box.checked=false; 
 document.form1.con_28_box.checked=false; 
 document.form1.int_28_box.checked=false; 
 document.form1.wis_28_box.checked=false; 
 document.form1.chr_28_box.checked=false; 
 }

 
function b_ClearAbilityBoxes04(){
 document.form1.b_str_04_box.checked=false; 
 document.form1.b_dex_04_box.checked=false; 
 document.form1.b_con_04_box.checked=false; 
 document.form1.b_int_04_box.checked=false; 
 document.form1.b_wis_04_box.checked=false; 
 document.form1.b_chr_04_box.checked=false; 
 }

function b_ClearAbilityBoxes08(){
 document.form1.b_str_08_box.checked=false; 
 document.form1.b_dex_08_box.checked=false; 
 document.form1.b_con_08_box.checked=false; 
 document.form1.b_int_08_box.checked=false; 
 document.form1.b_wis_08_box.checked=false; 
 document.form1.b_chr_08_box.checked=false; 
 }

function b_ClearAbilityBoxes14(){
 document.form1.b_str_14_box.checked=false; 
 document.form1.b_dex_14_box.checked=false; 
 document.form1.b_con_14_box.checked=false; 
 document.form1.b_int_14_box.checked=false; 
 document.form1.b_wis_14_box.checked=false; 
 document.form1.b_chr_14_box.checked=false; 
 }

function b_ClearAbilityBoxes18(){
 document.form1.b_str_18_box.checked=false; 
 document.form1.b_dex_18_box.checked=false; 
 document.form1.b_con_18_box.checked=false; 
 document.form1.b_int_18_box.checked=false; 
 document.form1.b_wis_18_box.checked=false; 
 document.form1.b_chr_18_box.checked=false; 
 }

function b_ClearAbilityBoxes24(){
 document.form1.b_str_24_box.checked=false; 
 document.form1.b_dex_24_box.checked=false; 
 document.form1.b_con_24_box.checked=false; 
 document.form1.b_int_24_box.checked=false; 
 document.form1.b_wis_24_box.checked=false; 
 document.form1.b_chr_24_box.checked=false; 
 }

function b_ClearAbilityBoxes28(){
 document.form1.b_str_28_box.checked=false; 
 document.form1.b_dex_28_box.checked=false; 
 document.form1.b_con_28_box.checked=false; 
 document.form1.b_int_28_box.checked=false; 
 document.form1.b_wis_28_box.checked=false; 
 document.form1.b_chr_28_box.checked=false; 
 }

 
function ClearAbilityBoxes21(){
 document.form1.str_21_box.checked=false; 
 document.form1.dex_21_box.checked=false; 
 document.form1.con_21_box.checked=false; 
 document.form1.int_21_box.checked=false; 
 document.form1.wis_21_box.checked=false; 
 document.form1.chr_21_box.checked=false; 
 }

 
function ClearAbilityBoxesOtherRace(){
 document.form1.str_other_race_stat_box.checked=false; 
 document.form1.dex_other_race_stat_box.checked=false; 
 document.form1.con_other_race_stat_box.checked=false; 
 document.form1.int_other_race_stat_box.checked=false; 
 document.form1.wis_other_race_stat_box.checked=false; 
 document.form1.chr_other_race_stat_box.checked=false; 
 }

 
function ClearSkillBoxesOtherRace(){
 document.form1.acrobatics_other_race_box.checked=false; 
 document.form1.arcana_other_race_box.checked=false; 
 document.form1.athletics_other_race_box.checked=false; 
 document.form1.bluff_other_race_box.checked=false; 
 document.form1.diplomacy_other_race_box.checked=false; 
 document.form1.dungeoneering_other_race_box.checked=false; 
 document.form1.endurance_other_race_box.checked=false; 
 document.form1.heal_other_race_box.checked=false; 
 document.form1.history_other_race_box.checked=false; 
 document.form1.insight_other_race_box.checked=false; 
 document.form1.intimidate_other_race_box.checked=false; 
 document.form1.nature_other_race_box.checked=false; 
 document.form1.perception_other_race_box.checked=false; 
 document.form1.religion_other_race_box.checked=false; 
 document.form1.stealth_other_race_box.checked=false; 
 document.form1.streetwise_other_race_box.checked=false; 
 document.form1.thievery_other_race_box.checked=false; 
 }

 

 
function AbilitiesWellIncreased(){
 if (!Raise01Okay()){return false; }
 if (!Raise04Okay()){return false; }
 if (!Raise08Okay()){return false; }
 if (!Raise14Okay()){return false; }
 if (!Raise18Okay()){return false; }
 if (!Raise24Okay()){return false; }
 if (!Raise28Okay()){return false; }
 if (!Raise21Okay()){return false; }
 if (!RaiseOtherRaceStatsOkay){return false; }
 if (!RaiseOtherRaceSkillsOkay){return false; }
 return true; 
 }

function b_AbilitiesWellIncreased(){
 if (!document.form1.rangerstyle[2].checked){return true;}
 if (!b_Raise04Okay()){return false; }
 if (!b_Raise08Okay()){return false; }
 if (!b_Raise14Okay()){return false; }
 if (!b_Raise18Okay()){return false; }
 if (!b_Raise24Okay()){return false; }
 if (!b_Raise28Okay()){return false; }
 return true; 
 }

function BreathTypeChosen(){
 if (!race_dragonborn){return true; }
 if (document.form1.breathtype[0].checked==true){return true; }
 if (document.form1.breathtype[1].checked==true){return true; }
 if (document.form1.breathtype[2].checked==true){return true; }
 if (document.form1.breathtype[3].checked==true){return true; }
 if (document.form1.breathtype[4].checked==true){return true; }
 return false; 
 }

function GenasiSoulTypeChosen(){
 if (!race_genasi){return true; }
 if (document.form1.genasisoultype[0].checked==true){return true; }
 if (document.form1.genasisoultype[1].checked==true){return true; }
 if (document.form1.genasisoultype[2].checked==true){return true; }
 if (document.form1.genasisoultype[3].checked==true){return true; }
 if (document.form1.genasisoultype[4].checked==true){return true; }
 return false; 
 }

function BreathStatChosen(){
 if (!race_dragonborn){return true; }
 if (document.form1.breathstat[0].checked==true){return true; }
 if (document.form1.breathstat[1].checked==true){return true; }
 if (document.form1.breathstat[2].checked==true){return true; }
 return false; 
 }

function EladrinEducationChosen(){
 if (!race_eladrin){return true; }
 if (document.form1.eladrin_education[0].checked==true){return true; }
 if (document.form1.eladrin_education[1].checked==true){return true; }
 if (document.form1.eladrin_education[2].checked==true){return true; }
 if (document.form1.eladrin_education[3].checked==true){return true; }
 if (document.form1.eladrin_education[4].checked==true){return true; }
 if (document.form1.eladrin_education[5].checked==true){return true; }
 if (document.form1.eladrin_education[6].checked==true){return true; }
 if (document.form1.eladrin_education[7].checked==true){return true; }
 if (document.form1.eladrin_education[8].checked==true){return true; }
 if (document.form1.eladrin_education[9].checked==true){return true; }
 if (document.form1.eladrin_education[10].checked==true){return true; }
 if (document.form1.eladrin_education[11].checked==true){return true; }
 if (document.form1.eladrin_education[12].checked==true){return true; }
 if (document.form1.eladrin_education[13].checked==true){return true; }
 if (document.form1.eladrin_education[14].checked==true){return true; }
 if (document.form1.eladrin_education[15].checked==true){return true; }
 if (document.form1.eladrin_education[16].checked==true){return true; }
 return false; 
 }

function DilettanteChoiceMade(){
 if (!race_halfelf){return true; }
 if (document.form1.dilettantechoice[0].checked==true){return true; }
 if (document.form1.dilettantechoice[1].checked==true){return true; }
 if (document.form1.dilettantechoice[2].checked==true){return true; }
 if (document.form1.dilettantechoice[3].checked==true){return true; }
 if (document.form1.dilettantechoice[4].checked==true){return true; }
 if (document.form1.dilettantechoice[5].checked==true){return true; }
 if (document.form1.dilettantechoice[6].checked==true){return true; }
 if (document.form1.dilettantechoice[7].checked==true){return true; }
 if (document.form1.dilettantechoice[8].checked==true){return true; }
 if (document.form1.dilettantechoice[9].checked==true){return true; }
 if (document.form1.dilettantechoice[10].checked==true){return true; }
 if (document.form1.dilettantechoice[11].checked==true){return true; }
 if (document.form1.dilettantechoice[12].checked==true){return true; }
 if (document.form1.dilettantechoice[13].checked==true){return true; }
 if (document.form1.dilettantechoice[14].checked==true){return true; }
 if (document.form1.dilettantechoice[15].checked==true){return true; }
 if (document.form1.dilettantechoice[16].checked==true){return true; }
 if (document.form1.dilettantechoice[17].checked==true){return true; }
 if (document.form1.dilettantechoice[18].checked==true){return true; }
 if (document.form1.dilettantechoice[19].checked==true){return true; }
 if (document.form1.dilettantechoice[20].checked==true){return true; }
 if (document.form1.dilettantechoice[21].checked==true){return true; }
 if (document.form1.dilettantechoice[22].checked==true){return true; }
 if (document.form1.dilettantechoice[23].checked==true){return true; }
 if (document.form1.dilettantechoice[24].checked==true){return true; }
 if (document.form1.dilettantechoice[25].checked==true){return true; }
 if (document.form1.dilettantechoice[26].checked==true){return true; }
 if (document.form1.dilettantechoice[27].checked==true){return true; }
 if (document.form1.dilettantechoice[28].checked==true){return true; }
 if (document.form1.dilettantechoice[29].checked==true){return true; }
 if (document.form1.dilettantechoice[30].checked==true){return true; }
 if (document.form1.dilettantechoice[31].checked==true){return true; }
 if (document.form1.dilettantechoice[32].checked==true){return true; }
 if (document.form1.dilettantechoice[33].checked==true){return true; }
 return false;                       
 }

//function ClericStartingRitualChosen(){
// if (!class_cleric){return true; }
// if (document.form1.clericstartingritual[0].checked==true){return true; }
// if (document.form1.clericstartingritual[1].checked==true){return true; }
// if (document.form1.clericstartingritual[2].checked==true){return true; }
// if (document.form1.clericstartingritual[3].checked==true){return true; }
// if (document.form1.clericstartingritual[4].checked==true){return true; }
// if (document.form1.clericstartingritual[5].checked==true){return true; }
// if (document.form1.clericstartingritual[6].checked==true){return true; }
// return false; 
// }

function FighterStyleChosen(){
 if ((!class_fighter)&(!multi_fighter_studentofthesword)){return true;}
 if (document.form1.fighterstyle[0].checked==true){return true; }
 if (document.form1.fighterstyle[1].checked==true){return true; }
 if (document.form1.fighterstyle[2].checked==true){return true; }
 if (document.form1.fighterstyle[3].checked==true){return true; }
 return false; 
 }

function RangerStyleChosen(){
 if (!class_ranger){return true; }
 if (document.form1.rangerstyle[0].checked==true){return true; }
 if (document.form1.rangerstyle[1].checked==true){return true; }
 if (document.form1.rangerstyle[2].checked==true){return true; }
 return false; 
 }

function RogueStyleChosen(){
 if (!class_rogue){return true; }
 if (document.form1.roguestyle[0].checked==true){return true; }
 if (document.form1.roguestyle[1].checked==true){return true; }
 if (document.form1.roguestyle[2].checked==true){return true; }
 return false; 
 }

function WarlockPactChosen(){
 if (!warlockclass_with_pact()){return true; }
 if (document.form1.warlockpact[0].checked==true){return true; }
 if (document.form1.warlockpact[1].checked==true){return true; }
 if (document.form1.warlockpact[2].checked==true){return true; }
 if (document.form1.warlockpact[3].checked==true){return true; }
 if (document.form1.warlockpact[4].checked==true){return true; }
 if (document.form1.warlockpact[5].checked==true){return true; }
 return false; 
 }




function WarlordPresenceChosen(){
 if (!class_warlord){return true; }
 if (document.form1.warlordpresence[0].checked==true){return true; }
 if (document.form1.warlordpresence[1].checked==true){return true; }
 if (document.form1.warlordpresence[2].checked==true){return true; }
 if (document.form1.warlordpresence[3].checked==true){return true; }
 return false; 
 }

function WizardImplementChosen(){
 if (!class_wizard){return true; }
 if (document.form1.wizardimplement[0].checked==true){return true; }
 if (document.form1.wizardimplement[1].checked==true){return true; }
 if (document.form1.wizardimplement[2].checked==true){return true; }
 if (document.form1.wizardimplement[3].checked==true){return true; }
 if (document.form1.wizardimplement[4].checked==true){return true; }
 if (document.form1.wizardimplement[5].checked==true){return true; }
 return false; 
 }


function SwordmageAegisChosen(){
 if (!class_swordmage){return true; }
 if (document.form1.swordmageaegis[0].checked==true){return true; }
 if (document.form1.swordmageaegis[1].checked==true){return true; }
 if (document.form1.swordmageaegis[2].checked==true){return true; }
 return false; 
 }

function AvengerCensureChosen(){
 if (!class_avenger){return true; }
 if (document.form1.avengercensure[0].checked==true){return true; }
 if (document.form1.avengercensure[1].checked==true){return true; }
 return false; 
 }



function BarbarianFeralChosen(){
 if (!class_barbarian){return true; }
 if (document.form1.barbarianferal[0].checked==true){return true; }
 if (document.form1.barbarianferal[1].checked==true){return true; }
 return false; 
 }



function BardVirtueChosen(){
 if (!class_bard){return true; }
 if (document.form1.bardvirtue[0].checked==true){return true; }
 if (document.form1.bardvirtue[1].checked==true){return true; }
 if (document.form1.bardvirtue[2].checked==true){return true; }
 return false; 
 }



function DruidPrimalChosen(){
 if (!class_druid){return true; }
 if (document.form1.druidprimal[0].checked==true){return true; }
 if (document.form1.druidprimal[1].checked==true){return true; }
 return false; 
 }



function InvokerCovenantChosen(){
 if (!class_invoker){return true; }
 if (document.form1.invokercovenant[0].checked==true){return true; }
 if (document.form1.invokercovenant[1].checked==true){return true; }
 return false; 
 }



function ShamanSpiritChosen(){
 if (!class_shaman){return true; }
 if (document.form1.shamanspirit[0].checked==true){return true; }
 if (document.form1.shamanspirit[1].checked==true){return true; }
 return false; 
 }



function SorcererMagicChosen(){
 if (!class_sorcerer){return true; }
 if (document.form1.sorcerermagic[0].checked==true){return true; }
 if (document.form1.sorcerermagic[1].checked==true){return true; }
 if (document.form1.sorcerermagic[2].checked==true){return true; }
 if (document.form1.sorcerermagic[3].checked==true){return true; }
 return false; 
 }



function WardenMightChosen(){
 if (!class_warden){return true; }
 if (document.form1.wardenmight[0].checked==true){return true; }
 if (document.form1.wardenmight[1].checked==true){return true; }
 return false; 
 }



function FreezeFighterFeatsEtc(){
// alert("Entering FreezeFighterFeatsEtc()"); 
 if (FighterFeatsEtcFrozen==true){document.form1.fourth_comment_box.value="We are done here."}
 else if (ClassesHaveBeenEstablished==false){document.form1.fourth_comment_box.value="Not ready for this yet."}


 else if (AbilitiesWellIncreased()==false)
  {document.form1.fourth_comment_box.value="Need to raise abilities."}

 else if (BreathTypeChosen()==false)
  {document.form1.fourth_comment_box.value="Dragonborn breath type?"}

 else if (BreathStatChosen()==false)
  {document.form1.fourth_comment_box.value="Which ability for your breath weapon?"}

 else if (EladrinEducationChosen()==false)
  {document.form1.fourth_comment_box.value="Which bonus skill will your eladrin train?"}

 else if (DilettanteChoiceMade()==false)
  {document.form1.fourth_comment_box.value="Choose your free at-will from another class."}

// else if (ClericStartingRitualChosen()==false)
//  {document.form1.fourth_comment_box.value="Choose your clerical starting ritual."}

 else if (GenasiSoulTypeChosen()==false)
  {document.form1.fourth_comment_box.value="Genasi soul type?"}

 else if (FighterStyleChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your fighter style."}

 else if (RangerStyleChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your ranger style."}

 else if (RogueStyleChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your rogue style."}

 else if (WarlockPactChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your pact."}

 else if (WarlordPresenceChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your presence."}

 else if (WizardImplementChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your favorite implement."}

 else if (SwordmageAegisChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your aegis."}

 else if (AvengerCensureChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your avenger censure."}

 else if (BarbarianFeralChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your barbarian feral."}

 else if (BardVirtueChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your bard virtue."}

 else if (DruidPrimalChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your druid primal."}

 else if (InvokerCovenantChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your invoker covenant."}

 else if (ShamanSpiritChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your shaman spirit."}

 else if (SorcererMagicChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your sorcerer magic."}

 else if (WardenMightChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your warden might."}

 else if (!RaiseOtherRaceStatsOkay())
  {document.form1.fourth_comment_box.value="Raise 1-2 ability statistics for your new race."}

 else if (!RaiseOtherRaceSkillsOkay())
  {document.form1.fourth_comment_box.value="Choose a bonus for 1-2 skills for your new race."}


 else if (OtherRaceSightChosen()==false)
  {document.form1.fourth_comment_box.value="Choose the form of vision for your new race."}

 else if (OtherRaceSizeChosen()==false)
  {document.form1.fourth_comment_box.value="Choose the size for your new race."}

 else if (OtherClassDefenseChosen()==false)
  {document.form1.fourth_comment_box.value="Choose the defense bonuses for your new class."}

 else if (OtherClassHitPointsChosen()==false)
  {document.form1.fourth_comment_box.value="Choose the hit point formula for your new class."}

 else if (OtherClassSurgesChosen()==false)
  {document.form1.fourth_comment_box.value="Choose the number of daily healing surges for your new class."}

 else if (BeastChosen()==false)
  {document.form1.fourth_comment_box.value="Choose your beast companion!"}

 else if (b_AbilitiesWellIncreased()==false)
  {document.form1.fourth_comment_box.value="Need to raise your beast companion's abilities."}

 else
  {


   DoAbilityIncreasesEtcEtc(); 
   if (rogue_ruthlessruffian){already_knows_club=true;already_knows_mace=true;}

   z=4; 
   if (class_fighter){z=3; }
   if (class_barbarian){z=3; }
   if (class_ranger){z=5; }
   if (class_bard){z=5; }
   if (class_rogue){z=6; }
   if (class_swordmage){z=3; }
   if (class_barbarian){z=3; }
   if (race_human){z++; }
   if (paragon_feybeguiler){z++; }
   document.form1.fourth_comment_box.value="Now train in "+z+" main-class skills.  "
   if (class_other)
    {
     if (race_human) {document.form1.fourth_comment_box.value="Now train in 4-7 main-class skills.  "}
     else {document.form1.fourth_comment_box.value="Now train in 3-6 main-class skills.  "}
    }
   if (paragon_feybeguiler){document.form1.fourth_comment_box.value=document.form1.fourth_comment_box.value+"This includes your Fey Beguiler bonus skill.  " }
   MandatoryClassSkills(); 
   RecordPastOtherRace(); 
   RecordPastOtherClass(); 
   LanguageEntitlements();
   if (class_cleric){document.form1.fourth_comment_box.value+="Clerics must choose religion, and may choose among arcana, diplomacy, heal, history, and insight.\r"; }
   if (class_fighter){document.form1.fourth_comment_box.value+="Fighters must choose among athletics, endurance, heal, intimidate, and streetwise.\r"; }
   if (class_paladin){document.form1.fourth_comment_box.value+="Paladins must choose religion, and may choose among diplomacy, endurance, heal, history, insight, and intimidate.\r"; }
   if (class_ranger){document.form1.fourth_comment_box.value+="Rangers must choose dungeoneering and/or nature, and may choose among acrobatics, athletics, endurance, heal, perception, and stealth.\r"; }
   if (class_rogue){document.form1.fourth_comment_box.value+="Rogues must choose both stealth and thievery, and may choose among acrobatics, athletics, bluff, dungeoneering, insight, intimidate, perception, and streetwise.\r"; }
   if (class_warlock){document.form1.fourth_comment_box.value+="Warlocks may choose among arcana, bluff, history, insight, intimidate, religion, streetwise, and thievery.\r"; }
   if (class_warlord){document.form1.fourth_comment_box.value+="Warlords may choose among athletics, diplomacy, endurance, heal, history, and intimidate.\r"; }
   if (class_wizard){document.form1.fourth_comment_box.value+="Wizards must choose arcana, and may choose among diplomacy, dungeoneering, history, insight, nature, and religion.\r"; }
   if (class_swordmage){document.form1.fourth_comment_box.value+="Swordmages must choose arcana, and may choose among athletics, diplomacy, endurance, history, insight, and intimidate.\r"; }
   if (class_avenger){document.form1.fourth_comment_box.value+="Avengers must choosereligion, and may choose among acrobatics, athletics, endurance, heal, intimidate, perception, stealth, and streetwise.\r"; }
   if (class_barbarian){document.form1.fourth_comment_box.value+="Barbarians may choose among acrobatics, athletics, endurance, heal, intimidate, nature, and perception.\r"; }
   if (class_bard){document.form1.fourth_comment_box.value+="Bards must choose arcana, and may choose among acrobatics, athletics, bluff, diplomacy, dungeoneering, heal, history, insight, intimidate, nature, perception, religion, and streetwise.\r"; }
   if (class_druid){document.form1.fourth_comment_box.value+="Druids must choose nature, and may choose among arcana, athletics, diplomacy, endurance, heal, history, insight, and perception.\r"; }
   if (class_invoker){document.form1.fourth_comment_box.value+="Invokers must choose religion, and may choose among arcana, diplomacy, endurance, history, insight, and intimidate.\r"; }
   if (class_shaman){document.form1.fourth_comment_box.value+="Shamans must choose nature, and may choose among arcana, athletics, endurance, heal, history, insight, perception, and religion.\r"; }
   if (class_sorcerer){document.form1.fourth_comment_box.value+="Sorcerers must choose arcana, and may choose among athletics, bluff, diplomacy, dungeoneering, endurance, history, insight, intimidate, and nature.\r"; }
   if (class_warden){document.form1.fourth_comment_box.value+="Wardens must choose nature, and may choose among athletics, dungeoneering, endurance, heal, intimidate, and perception.\r"; }
   if (multi_cleric_initiateofthefaith){document.form1.fourth_comment_box.value+="Initiate of the Faith multi-class clerics get free training in religion.\r"; }
   if (multi_fighter_studentofthesword)
    {
     document.form1.fourth_comment_box.value+="Student of the Sword multi-class fighters  choose athletics, endurance, heal, intimidate, or streetwise.\r";
    }
   if (multi_paladin_soldierofthefaith){document.form1.fourth_comment_box.value+="Soldier of the Faith multi-class paladins choose diplomacy, endurance, heal, history, insight, or intimidate, or religion.\r"; }
   if (multi_ranger_warriorofthewild){document.form1.fourth_comment_box.value+="Warrior of the Wild multi-class rangers  choose acrobatics, athletics, dungeoneering, endurance, heal, nature, perception, or stealth.\r"; }
   if (multi_rogue_sneakofshadows){document.form1.fourth_comment_box.value+="Sneak of Shadows multi-class rogues get free training in thievery.\r"; }
   if (multi_warlock_pactinitiate){document.form1.fourth_comment_box.value+="Pact initiate multi-class warlocks choose arcana, bluff, history, insight, intimidate, religion, streetwise, or thievery.\r"; }
   if (multi_warlord_studentofbattle){document.form1.fourth_comment_box.value+="Student of Battle multi-class warlords choose athletics, diplomacy, endurance, heal, history, and intimidate.\r"; }
   if (multi_wizard_arcaneinitiate){document.form1.fourth_comment_box.value+="Arcane Initiate multi-class wizards get free training in arcana.\r"; }
   if (multi_swordmage_bladeinitiate){document.form1.fourth_comment_box.value+="Blade Initiate multi-class swordmages get free training in arcana.\r"; }
   if (multi_fighter_battleawareness){document.form1.fourth_comment_box.value+="Battle Awareness multi-class fighters  choose athletics, endurance, heal, intimidate, or streetwise.\r"; }
   if (multi_warlord_inspiringleader){document.form1.fourth_comment_box.value+="Inspiring Leader multi-class warlords choose athletics, diplomacy, endurance, heal, history, and intimidate.\r"; }
   if (multi_rogue_ruthlessefficiency){document.form1.fourth_comment_box.value+="Ruthless Efficiency multi-class rogues get free training in stealth.\r"; }
   if (multi_rogue_slydodge){document.form1.fourth_comment_box.value+="Sly Dodge multi-class rogues get free training in bluff or intimidate.\r"; }
   if (multi_warlord_tacticalleader){document.form1.fourth_comment_box.value+="Tactical Leader multi-class warlords choose athletics, diplomacy, endurance, heal, history, and intimidate.\r"; }
   if (multi_ranger_twobladewarrior){document.form1.fourth_comment_box.value+="Two-Blade Warrior multi-class rangers choose acrobatics, athletics, dungeoneering, endurance, heal, nature, perception, or stealth.\r"; }
   if (multi_invoker_acolyteofdivinesecrets){document.form1.fourth_comment_box.value+="Acolyte of Divine Secrets multi-class invokers choose religion.\r"; }
   if (multi_sorcerer_arcaneprodigy){document.form1.fourth_comment_box.value+="Arcane Prodigy multi-class sorcerers choose arcana.\r"; }
   if (multi_bard_bardicdilettante){document.form1.fourth_comment_box.value+="Bardic Dilettante multi-class bards choose acrobatics, arcana, athletics, bluff, diplomacy, dungeoneering, heal, history, insight, intimidate, nature, perception, religion, or streetwise.\r"; }
   if (multi_barbarian_berserkersfury){document.form1.fourth_comment_box.value+="Berserker's Fury multi-class barbarians choose acrobatics, athletics, endurance, heal, intimidate, nature, or perception.\r"; }
   if (multi_warden_defenderofthewild){document.form1.fourth_comment_box.value+="Defender of the Wild multi-class wardens choose athletics, dungeoneering, endurance, heal, intimidate, nature, or perception.\r"; }
   if (multi_avenger_discipleofdivinewrath){document.form1.fourth_comment_box.value+="Disciple of Divine Wrath multi-class avengers choose religion.\r"; }
   if (multi_druid_initiateoftheoldfaith){document.form1.fourth_comment_box.value+="Initiate of the Old Faith multi-class druids choose nature.\r"; }
   if (multi_shaman_spirittalker){document.form1.fourth_comment_box.value+="Spirit Talker multi-class shamans choose nature.\r"; }
   if (multi_bard_bardicritualist){document.form1.fourth_comment_box.value+="Bardic Ritualist multi-class bards get free training in arcana.\r"; }
   if (multi_swordmage_heartoftheblade){document.form1.fourth_comment_box.value+="Heart of the Blade multi-class swordmages choose athletics or endurance.\r"; }
   if (multi_wizard_learnedspellcaster){document.form1.fourth_comment_box.value+="Learned Spellcaster multi-class wizards choose arcana, nature, or religion.\r"; }


   NegateSkillsTraining(); ClearSkillBoxes(); LightSkillStars(); 
   MandatoryClassSkills(); 
   FighterFeatsEtcFrozen=true; 
   ArrowShow(); 
   }

 }


function DoAbilityIncreasesEtcEtc(){
// alert("Entering DoAbilityIncreasesEtcEtc()"); 
 if ((AbilityIncreasesAreLocked==true) | (FighterFeatsEtcFrozen==true))
   {RememberWhichAbilitiesYouRaisedEtcEtc(); }
  else
   {

     raise_str_01=document.form1.upat01[0].checked; 
     raise_dex_01=document.form1.upat01[1].checked; 
     raise_con_01=document.form1.upat01[2].checked; 
     raise_int_01=document.form1.upat01[3].checked; 
     raise_wis_01=document.form1.upat01[4].checked; 
     raise_chr_01=document.form1.upat01[5].checked; 
     raise_str_04=document.form1.str_04_box.checked; 
     raise_dex_04=document.form1.dex_04_box.checked; 
     raise_con_04=document.form1.con_04_box.checked; 
     raise_int_04=document.form1.int_04_box.checked; 
     raise_wis_04=document.form1.wis_04_box.checked; 
     raise_chr_04=document.form1.chr_04_box.checked; 
     raise_str_08=document.form1.str_08_box.checked; 
     raise_dex_08=document.form1.dex_08_box.checked; 
     raise_con_08=document.form1.con_08_box.checked; 
     raise_int_08=document.form1.int_08_box.checked; 
     raise_wis_08=document.form1.wis_08_box.checked; 
     raise_chr_08=document.form1.chr_08_box.checked; 
     raise_str_14=document.form1.str_14_box.checked; 
     raise_dex_14=document.form1.dex_14_box.checked; 
     raise_con_14=document.form1.con_14_box.checked; 
     raise_int_14=document.form1.int_14_box.checked; 
     raise_wis_14=document.form1.wis_14_box.checked; 
     raise_chr_14=document.form1.chr_14_box.checked; 
     raise_str_18=document.form1.str_18_box.checked; 
     raise_dex_18=document.form1.dex_18_box.checked; 
     raise_con_18=document.form1.con_18_box.checked; 
     raise_int_18=document.form1.int_18_box.checked; 
     raise_wis_18=document.form1.wis_18_box.checked; 
     raise_chr_18=document.form1.chr_18_box.checked; 
     raise_str_24=document.form1.str_24_box.checked; 
     raise_dex_24=document.form1.dex_24_box.checked; 
     raise_con_24=document.form1.con_24_box.checked; 
     raise_int_24=document.form1.int_24_box.checked; 
     raise_wis_24=document.form1.wis_24_box.checked; 
     raise_chr_24=document.form1.chr_24_box.checked; 
     raise_str_28=document.form1.str_28_box.checked; 
     raise_dex_28=document.form1.dex_28_box.checked; 
     raise_con_28=document.form1.con_28_box.checked; 
     raise_int_28=document.form1.int_28_box.checked; 
     raise_wis_28=document.form1.wis_28_box.checked; 
     raise_chr_28=document.form1.chr_28_box.checked; 


     beast_bear=document.form1.beast[0].checked;;
     beast_boar=document.form1.beast[1].checked;;
     beast_cat=document.form1.beast[2].checked;;
     beast_lizard=document.form1.beast[3].checked;;
     beast_raptor=document.form1.beast[4].checked;;
     beast_serpent=document.form1.beast[5].checked;;
     beast_spider=document.form1.beast[6].checked;;
     beast_wolf=document.form1.beast[7].checked;;


    fam_bat=document.form1.fam[1].checked;
    fam_bookimp=document.form1.fam[2].checked;
    fam_bounddemon=document.form1.fam[3].checked;
    fam_cat=document.form1.fam[4].checked;
    fam_crafterhomunculus=document.form1.fam[5].checked;
    fam_dragonling=document.form1.fam[6].checked;
    fam_falcon=document.form1.fam[7].checked;
    fam_owl=document.form1.fam[8].checked;
    fam_rat=document.form1.fam[9].checked;
    fam_raven=document.form1.fam[10].checked;
    fam_serpent=document.form1.fam[11].checked;
    fam_spider=document.form1.fam[12].checked;
      fam_arcaneeye=document.form1.fam[13].checked;
      fam_badger=document.form1.fam[14].checked;
      fam_canineconstruct=document.form1.fam[15].checked;
      fam_disembodiedhand=document.form1.fam[16].checked;
      fam_firelizard=document.form1.fam[17].checked;
      fam_lightninglizard=document.form1.fam[18].checked;
      fam_ooze=document.form1.fam[19].checked;
      fam_parrot=document.form1.fam[20].checked;
      fam_rootling=document.form1.fam[21].checked;
      fam_scouthomunculus=document.form1.fam[22].checked;
      fam_skull=document.form1.fam[23].checked;
      fam_toad=document.form1.fam[24].checked;
      fam_weasel=document.form1.fam[25].checked;
      fam_airmephit=document.form1.fam[26].checked;
      fam_arcanewisp=document.form1.fam[27].checked;
      fam_beholderkin=document.form1.fam[28].checked;
      fam_blackspawndarkling=document.form1.fam[29].checked;
      fam_bluespawnnimblespark=document.form1.fam[30].checked;
      fam_earthmephit=document.form1.fam[31].checked;
      fam_firemephit=document.form1.fam[32].checked;
      fam_grayspawnshortfang=document.form1.fam[33].checked;
      fam_greenspawnbanespike=document.form1.fam[34].checked;
      fam_icemephit=document.form1.fam[35].checked;
      fam_rakshasaclaw=document.form1.fam[36].checked;
      fam_redspawnspitfire=document.form1.fam[37].checked;
      fam_stonefowl=document.form1.fam[38].checked;
      fam_whitespawnsnowstepper=document.form1.fam[39].checked;
      fam_blazingskull=document.form1.fam[40].checked;
      fam_chaosshard=document.form1.fam[41].checked;
      fam_gibberingpet=document.form1.fam[42].checked;
      fam_shadowincarnate=document.form1.fam[43].checked;
                                               


     b_raise_str_04=document.form1.b_str_04_box.checked; 
     b_raise_dex_04=document.form1.b_dex_04_box.checked; 
     b_raise_con_04=document.form1.b_con_04_box.checked; 
     b_raise_int_04=document.form1.b_int_04_box.checked; 
     b_raise_wis_04=document.form1.b_wis_04_box.checked; 
     b_raise_chr_04=document.form1.b_chr_04_box.checked; 
     b_raise_str_08=document.form1.b_str_08_box.checked; 
     b_raise_dex_08=document.form1.b_dex_08_box.checked; 
     b_raise_con_08=document.form1.b_con_08_box.checked; 
     b_raise_int_08=document.form1.b_int_08_box.checked; 
     b_raise_wis_08=document.form1.b_wis_08_box.checked; 
     b_raise_chr_08=document.form1.b_chr_08_box.checked; 
     b_raise_str_14=document.form1.b_str_14_box.checked; 
     b_raise_dex_14=document.form1.b_dex_14_box.checked; 
     b_raise_con_14=document.form1.b_con_14_box.checked; 
     b_raise_int_14=document.form1.b_int_14_box.checked; 
     b_raise_wis_14=document.form1.b_wis_14_box.checked; 
     b_raise_chr_14=document.form1.b_chr_14_box.checked; 
     b_raise_str_18=document.form1.b_str_18_box.checked; 
     b_raise_dex_18=document.form1.b_dex_18_box.checked; 
     b_raise_con_18=document.form1.b_con_18_box.checked; 
     b_raise_int_18=document.form1.b_int_18_box.checked; 
     b_raise_wis_18=document.form1.b_wis_18_box.checked; 
     b_raise_chr_18=document.form1.b_chr_18_box.checked; 
     b_raise_str_24=document.form1.b_str_24_box.checked; 
     b_raise_dex_24=document.form1.b_dex_24_box.checked; 
     b_raise_con_24=document.form1.b_con_24_box.checked; 
     b_raise_int_24=document.form1.b_int_24_box.checked; 
     b_raise_wis_24=document.form1.b_wis_24_box.checked; 
     b_raise_chr_24=document.form1.b_chr_24_box.checked; 
     b_raise_str_28=document.form1.b_str_28_box.checked; 
     b_raise_dex_28=document.form1.b_dex_28_box.checked; 
     b_raise_con_28=document.form1.b_con_28_box.checked; 
     b_raise_int_28=document.form1.b_int_28_box.checked; 
     b_raise_wis_28=document.form1.b_wis_28_box.checked; 
     b_raise_chr_28=document.form1.b_chr_28_box.checked; 




     raise_str_21=document.form1.str_21_box.checked;
     raise_dex_21=document.form1.dex_21_box.checked; 
     raise_con_21=document.form1.con_21_box.checked; 
     raise_int_21=document.form1.int_21_box.checked; 
     raise_wis_21=document.form1.wis_21_box.checked; 
     raise_chr_21=document.form1.chr_21_box.checked;


    raise_str_otherepic=document.form1.epic21[1].checked;
    raise_dex_otherepic=document.form1.epic21[2].checked; 
    raise_con_otherepic=document.form1.epic21[3].checked;
    raise_int_otherepic=document.form1.epic21[4].checked;
    raise_wis_otherepic=document.form1.epic21[5].checked;
    raise_chr_otherepic=document.form1.epic21[6].checked;



     raise_str_other_race_stat=document.form1.str_other_race_stat_box.checked; 
     raise_dex_other_race_stat=document.form1.dex_other_race_stat_box.checked; 
     raise_con_other_race_stat=document.form1.con_other_race_stat_box.checked; 
     raise_int_other_race_stat=document.form1.int_other_race_stat_box.checked; 
     raise_wis_other_race_stat=document.form1.wis_other_race_stat_box.checked; 
     raise_chr_other_race_stat=document.form1.chr_other_race_stat_box.checked; 
     otherrace_acrobatics=document.form1.acrobatics_other_race_box.checked
     otherrace_arcana=document.form1.arcana_other_race_box.checked
     otherrace_athletics=document.form1.athletics_other_race_box.checked
     otherrace_bluff=document.form1.bluff_other_race_box.checked
     otherrace_diplomacy=document.form1.diplomacy_other_race_box.checked
     otherrace_dungeoneering=document.form1.dungeoneering_other_race_box.checked
     otherrace_endurance=document.form1.endurance_other_race_box.checked
     otherrace_heal=document.form1.heal_other_race_box.checked
     otherrace_history=document.form1.history_other_race_box.checked
     otherrace_insight=document.form1.insight_other_race_box.checked
     otherrace_intimidate=document.form1.intimidate_other_race_box.checked
     otherrace_nature=document.form1.nature_other_race_box.checked
     otherrace_perception=document.form1.perception_other_race_box.checked
     otherrace_religion=document.form1.religion_other_race_box.checked
     otherrace_stealth=document.form1.stealth_other_race_box.checked
     otherrace_streetwise=document.form1.streetwise_other_race_box.checked
     otherrace_thievery=document.form1.thievery_other_race_box.checked
    AbilityIncreasesAreLocked=true; 
//    alert("I just locked my ability increases"); 
     if (document.form1.upat01[0].checked){strength+=2; }
     if (document.form1.upat01[1].checked){constitution+=2; }
     if (document.form1.upat01[2].checked){dexterity+=2; }
     if (document.form1.upat01[3].checked){intelligence+=2; }
     if (document.form1.upat01[4].checked){wisdom+=2; }
     if (document.form1.upat01[5].checked){charisma+=2; }
     if (document.form1.str_04_box.checked){strength++; }
     if (document.form1.con_04_box.checked){constitution++; }
     if (document.form1.dex_04_box.checked){dexterity++; }
     if (document.form1.int_04_box.checked){intelligence++; }
     if (document.form1.wis_04_box.checked){wisdom++; }
     if (document.form1.chr_04_box.checked){charisma++; }
     if (document.form1.str_08_box.checked){strength++; }
     if (document.form1.con_08_box.checked){constitution++; }
     if (document.form1.dex_08_box.checked){dexterity++; }
     if (document.form1.int_08_box.checked){intelligence++; }
     if (document.form1.wis_08_box.checked){wisdom++; }
     if (document.form1.chr_08_box.checked){charisma++; }
     if (total_levels>10)
      {
       strength++; constitution++; dexterity++; 
       intelligence++; wisdom++; charisma++; 
      }
     if (document.form1.str_14_box.checked){strength++; }
     if (document.form1.con_14_box.checked){constitution++; }
     if (document.form1.dex_14_box.checked){dexterity++; }
     if (document.form1.int_14_box.checked){intelligence++; }
     if (document.form1.wis_14_box.checked){wisdom++; }
     if (document.form1.chr_14_box.checked){charisma++; }
     if (document.form1.str_18_box.checked){strength++; }
     if (document.form1.dex_18_box.checked){dexterity++; }
     if (document.form1.con_18_box.checked){constitution++; }
     if (document.form1.int_18_box.checked){intelligence++; }
     if (document.form1.wis_18_box.checked){wisdom++; }
     if (document.form1.chr_18_box.checked){charisma++; }
     if (total_levels>20)
      {
       strength++; constitution++; dexterity++; 
       intelligence++; wisdom++; charisma++; 
      }
     if (document.form1.str_24_box.checked){strength++; }
     if (document.form1.con_24_box.checked){constitution++; }
     if (document.form1.dex_24_box.checked){dexterity++; }
     if (document.form1.int_24_box.checked){intelligence++; }
     if (document.form1.wis_24_box.checked){wisdom++; }
     if (document.form1.chr_24_box.checked){charisma++; }
     if (document.form1.str_28_box.checked){strength++; }
     if (document.form1.con_28_box.checked){constitution++; }
     if (document.form1.dex_28_box.checked){dexterity++; }
     if (document.form1.int_28_box.checked){intelligence++; }
     if (document.form1.wis_28_box.checked){wisdom++; }
     if (document.form1.chr_28_box.checked){charisma++; }


     if (document.form1.str_21_box.checked){strength+=2; }
     if (document.form1.con_21_box.checked){constitution+=2; }
     if (document.form1.dex_21_box.checked){dexterity+=2; }
     if (document.form1.int_21_box.checked){intelligence+=2; }
     if (document.form1.wis_21_box.checked){wisdom+=2; }
     if (document.form1.chr_21_box.checked){charisma+=2; }

     if (document.form1.epic21[1].checked){strength+=2;}
     if (document.form1.epic21[2].checked){constitution+=2;}
     if (document.form1.epic21[3].checked){dexterity+=2;}
     if (document.form1.epic21[4].checked){intelligence+=2;}
     if (document.form1.epic21[5].checked){wisdom+=2;}
     if (document.form1.epic21[6].checked){charisma+=2;}

     if (document.form1.str_other_race_stat_box.checked){strength+=2; }
     if (document.form1.con_other_race_stat_box.checked){constitution+=2; }
     if (document.form1.dex_other_race_stat_box.checked){dexterity+=2; }
     if (document.form1.int_other_race_stat_box.checked){intelligence+=2; }
     if (document.form1.wis_other_race_stat_box.checked){wisdom+=2; }
     if (document.form1.chr_other_race_stat_box.checked){charisma+=2; }


     if (epic_eternaldefender){strength+=2;}

    eladrin_acrobatics=document.form1.eladrin_education[0].checked;
    eladrin_arcana=document.form1.eladrin_education[1].checked; 
    eladrin_athletics=document.form1.eladrin_education[2].checked; 
    eladrin_bluff=document.form1.eladrin_education[3].checked; 
    eladrin_diplomacy=document.form1.eladrin_education[4].checked; 
    eladrin_dungeoneering=document.form1.eladrin_education[5].checked; 
    eladrin_endurance=document.form1.eladrin_education[6].checked; 
    eladrin_heal=document.form1.eladrin_education[7].checked; 
    eladrin_history=document.form1.eladrin_education[8].checked; 
    eladrin_insight=document.form1.eladrin_education[9].checked; 
    eladrin_intimidate=document.form1.eladrin_education[10].checked; 
    eladrin_nature=document.form1.eladrin_education[11].checked; 
    eladrin_perception=document.form1.eladrin_education[12].checked; 
    eladrin_religion=document.form1.eladrin_education[13].checked; 
    eladrin_stealth=document.form1.eladrin_education[14].checked; 
    eladrin_streetwise=document.form1.eladrin_education[15].checked; 
    eladrin_thievery=document.form1.eladrin_education[16].checked; 
     
    otherrace_acrobatics=document.form1.acrobatics_other_race_box.checked; 
    otherrace_arcana=document.form1.arcana_other_race_box.checked; 
    otherrace_athletics=document.form1.athletics_other_race_box.checked; 
    otherrace_bluff=document.form1.bluff_other_race_box.checked; 
    otherrace_diplomacy=document.form1.diplomacy_other_race_box.checked; 
    otherrace_dungeoneering=document.form1.dungeoneering_other_race_box.checked; 
    otherrace_endurance=document.form1.endurance_other_race_box.checked; 
    otherrace_heal=document.form1.heal_other_race_box.checked; 
    otherrace_history=document.form1.history_other_race_box.checked; 
    otherrace_insight=document.form1.insight_other_race_box.checked; 
    otherrace_intimidate=document.form1.intimidate_other_race_box.checked; 
    otherrace_nature=document.form1.nature_other_race_box.checked; 
    otherrace_perception=document.form1.perception_other_race_box.checked; 
    otherrace_religion=document.form1.religion_other_race_box.checked; 
    otherrace_stealth=document.form1.stealth_other_race_box.checked; 
    otherrace_streetwise=document.form1.streetwise_other_race_box.checked; 
    otherrace_thievery=document.form1.thievery_other_race_box.checked; 

     dragonbreath_acid=document.form1.breathtype[0].checked; 
     dragonbreath_cold=document.form1.breathtype[1].checked; 
     dragonbreath_fire=document.form1.breathtype[2].checked; 
     dragonbreath_lightning=document.form1.breathtype[3].checked; 
     dragonbreath_poison=document.form1.breathtype[4].checked; 
     dragonbreath_strength=document.form1.breathstat[0].checked; 
     dragonbreath_constitution=document.form1.breathstat[1].checked; 
     dragonbreath_dexterity=document.form1.breathstat[2].checked; 


     genasi_earthsoul=document.form1.genasisoultype[0].checked; 
     genasi_firesoul=document.form1.genasisoultype[1].checked; 
     genasi_stormsoul=document.form1.genasisoultype[2].checked; 
     genasi_watersoul=document.form1.genasisoultype[3].checked; 
     genasi_windsoul=document.form1.genasisoultype[4].checked; 

    dilettante_lanceoffaith=document.form1.dilettantechoice[0].checked; 
    dilettante_priestsshield=document.form1.dilettantechoice[1].checked; 
    dilettante_righteousbrand=document.form1.dilettantechoice[2].checked; 
    dilettante_sacredflame=document.form1.dilettantechoice[3].checked; 
    dilettante_cleave=document.form1.dilettantechoice[4].checked; 
    dilettante_reapingstrike=document.form1.dilettantechoice[5].checked; 
    dilettante_surestrike=document.form1.dilettantechoice[6].checked; 
    dilettante_tideofiron=document.form1.dilettantechoice[7].checked; 
    dilettante_bolsteringstrike=document.form1.dilettantechoice[8].checked; 
    dilettante_enfeeblingstrike=document.form1.dilettantechoice[9].checked; 
    dilettante_holystrike=document.form1.dilettantechoice[10].checked; 
    dilettante_valiantstrike=document.form1.dilettantechoice[11].checked; 
    dilettante_carefulattack=document.form1.dilettantechoice[12].checked; 
    dilettante_hitandrun=document.form1.dilettantechoice[13].checked; 
    dilettante_nimblestrike=document.form1.dilettantechoice[14].checked; 
    dilettante_twinstrike=document.form1.dilettantechoice[15].checked; 
    dilettante_deftstrike=document.form1.dilettantechoice[16].checked; 
    dilettante_piercingstrike=document.form1.dilettantechoice[17].checked; 
    dilettante_ripostestrike=document.form1.dilettantechoice[18].checked; 
    dilettante_slyflourish=document.form1.dilettantechoice[19].checked; 
    dilettante_direradiance=document.form1.dilettantechoice[20].checked; 
    dilettante_eldritchblast=document.form1.dilettantechoice[21].checked; 
    dilettante_eyebite=document.form1.dilettantechoice[22].checked; 
    dilettante_hellishrebuke=document.form1.dilettantechoice[23].checked; 
    dilettante_commandersstrike=document.form1.dilettantechoice[24].checked; 
    dilettante_furioussmash=document.form1.dilettantechoice[25].checked; 
    dilettante_vipersstrike=document.form1.dilettantechoice[26].checked; 
    dilettante_wolfpacktactics=document.form1.dilettantechoice[27].checked; 
    dilettante_cloudofdaggers=document.form1.dilettantechoice[28].checked; 
    dilettante_magicmissile=document.form1.dilettantechoice[29].checked; 
    dilettante_rayoffrost=document.form1.dilettantechoice[30].checked; 
    dilettante_scorchingburst=document.form1.dilettantechoice[31].checked; 
    dilettante_thunderwave=document.form1.dilettantechoice[32].checked; 
    dilettante_other=document.form1.dilettantechoice[33].checked; 


//    dilettante_divinechallenge=document.form1.dilettantechoice[8].checked; 
//    dilettante_layonhands=document.form1.dilettantechoice[9].checked; 
//    dilettante_ghostsound=document.form1.dilettantechoice[30].checked; 
//    dilettante_light=document.form1.dilettantechoice[31].checked; 
//    dilettante_magehand=document.form1.dilettantechoice[32].checked; 
//    dilettante_prestidigitation=document.form1.dilettantechoice[33].checked; 


//    cleric_start_animalmessenger=document.form1.clericstartingritual[0].checked; 
//    cleric_start_comprehendlanguage=document.form1.clericstartingritual[1].checked; 
//    cleric_start_magicmouth=document.form1.clericstartingritual[2].checked; 
//    cleric_start_makewhole=document.form1.clericstartingritual[3].checked; 
//    cleric_start_secretpage=document.form1.clericstartingritual[4].checked; 
//    cleric_start_silence=document.form1.clericstartingritual[5].checked; 
//    cleric_start_tensersfloatingdisk=document.form1.clericstartingritual[6].checked; 

    fighter_onehand=document.form1.fighterstyle[0].checked; 
    fighter_twohand=document.form1.fighterstyle[1].checked;
    if (multi_fighter_studentofthesword)
     {
      studentofthesword_onehand=fighter_onehand;
      studentofthesword_twohand=fighter_twohand;
      fighter_onehand=false;
      fighter_twohand=false;
     }
    fighter_battlerager=document.form1.fighterstyle[2].checked; 
    fighter_tempesttechnique=document.form1.fighterstyle[3].checked; 
    ranger_archer=document.form1.rangerstyle[0].checked; 
    ranger_twoblade=document.form1.rangerstyle[1].checked; 
    ranger_beastmaster=document.form1.rangerstyle[2].checked; 
    rogue_artfuldodger=document.form1.roguestyle[0].checked; 
    rogue_brutalscoundrel=document.form1.roguestyle[1].checked; 
    rogue_ruthlessruffian=document.form1.roguestyle[2].checked; 
    warlock_fey=document.form1.warlockpact[0].checked; 
    warlock_infernal=document.form1.warlockpact[1].checked; 
    warlock_star=document.form1.warlockpact[2].checked; 
    warlock_dark=document.form1.warlockpact[3].checked; 
    warlock_vestige=document.form1.warlockpact[4].checked; 
    warlock_other=document.form1.warlockpact[5].checked; 
    warlord_inspiring=document.form1.warlordpresence[0].checked; 
    warlord_tactical=document.form1.warlordpresence[1].checked; 
    warlord_bravura=document.form1.warlordpresence[2].checked; 
    warlord_resourceful=document.form1.warlordpresence[3].checked; 
    orbofimposition=document.form1.wizardimplement[0].checked; 
    staffofdefense=document.form1.wizardimplement[1].checked; 
    wandofaccuracy=document.form1.wizardimplement[2].checked; 
    orbofdeception=document.form1.wizardimplement[3].checked; 
    tomeofbinding=document.form1.wizardimplement[4].checked; 
    tomeofreadiness=document.form1.wizardimplement[5].checked; 

    swordmage_assault=document.form1.swordmageaegis[0].checked; 
    swordmage_shielding=document.form1.swordmageaegis[1].checked; 
    swordmage_ensnarement=document.form1.swordmageaegis[2].checked; 

    barbarian_rageblood=document.form1.barbarianferal[0].checked; 
    barbarian_thaneborn=document.form1.barbarianferal[1].checked; 


   avenger_pursuit=document.form1.avengercensure[0].checked; 
   avenger_retribution=document.form1.avengercensure[1].checked; 
   bard_cunning=document.form1.bardvirtue[0].checked; 
   bard_valor=document.form1.bardvirtue[1].checked; 
   bard_prescience=document.form1.bardvirtue[2].checked; 
   druid_guardian=document.form1.druidprimal[0].checked; 
   druid_predator=document.form1.druidprimal[1].checked; 
   invoker_preservation=document.form1.invokercovenant[0].checked; 
   invoker_wrath=document.form1.invokercovenant[1].checked; 
   shaman_protector=document.form1.shamanspirit[0].checked; 
   shaman_stalker=document.form1.shamanspirit[1].checked; 
   sorcerer_dragonsoul=document.form1.sorcerermagic[0].checked; 
   sorcerer_wildmagic=document.form1.sorcerermagic[1].checked; 
   sorcerer_stormmagic=document.form1.sorcerermagic[2].checked; 
   sorcerer_cosmicmagic=document.form1.sorcerermagic[3].checked; 
   warden_earthstrength=document.form1.wardenmight[0].checked; 
   warden_wildblood=document.form1.wardenmight[1].checked; 


    otherrace_normalvision=document.form1.otherracesight[0].checked; 
    otherrace_lowlight=document.form1.otherracesight[1].checked; 
    otherrace_darkvision=document.form1.otherracesight[2].checked; 
    otherrace_small=document.form1.otherracesize[0].checked; 
    otherrace_medium=document.form1.otherracesize[1].checked; 
//alert("DETERMINING otherrace_small="+otherrace_small+" otherrace_medium="+otherrace_medium); 

    if (otherrace_small){small=true; }
    if (otherrace_medium){small=false; }
    if (document.form1.otherclassdefense[0].checked){otherclass_bonus_to_defense=0; }
    if (document.form1.otherclassdefense[1].checked){otherclass_bonus_to_defense=1; }
    if (document.form1.otherclassdefense[2].checked){otherclass_bonus_to_defense=2; }
    if (document.form1.otherclassdefense[3].checked){otherclass_bonus_to_defense=3; }
    if (document.form1.otherclassdefense[4].checked){otherclass_bonus_to_defense=4; }
    if (document.form1.otherclassdefense[5].checked){otherclass_bonus_to_defense=5; }
    if (document.form1.otherclassdefense[6].checked){otherclass_bonus_to_defense=6; }
    if (document.form1.otherclasshitpoints[0].checked){otherclass_hitpoints=10; }
    if (document.form1.otherclasshitpoints[1].checked){otherclass_hitpoints=12; }
    if (document.form1.otherclasshitpoints[2].checked){otherclass_hitpoints=15; }
    if (document.form1.otherclasssurges[0].checked){otherclass_surges=6; }
    if (document.form1.otherclasssurges[1].checked){otherclass_surges=7; }
    if (document.form1.otherclasssurges[2].checked){otherclass_surges=8; }
    if (document.form1.otherclasssurges[3].checked){otherclass_surges=9; }
    if (document.form1.otherclasssurges[4].checked){otherclass_surges=10; }
   }
  }


function RememberWhichAbilitiesYouRaisedEtcEtc(){
// alert("Entering RememberWhichAbilitiesYouRaisedEtcEtc"); 
 document.form1.upat01[0].checked=raise_str_01; 
 document.form1.upat01[1].checked=raise_dex_01; 
 document.form1.upat01[2].checked=raise_con_01; 
 document.form1.upat01[3].checked=raise_int_01; 
 document.form1.upat01[4].checked=raise_wis_01; 
 document.form1.upat01[5].checked=raise_chr_01; 
 document.form1.str_04_box.checked=raise_str_04; 
 document.form1.dex_04_box.checked=raise_dex_04; 
 document.form1.con_04_box.checked=raise_con_04; 
 document.form1.int_04_box.checked=raise_int_04; 
 document.form1.wis_04_box.checked=raise_wis_04; 
 document.form1.chr_04_box.checked=raise_chr_04; 
 document.form1.str_08_box.checked=raise_str_08; 
 document.form1.dex_08_box.checked=raise_dex_08; 
 document.form1.con_08_box.checked=raise_con_08; 
 document.form1.int_08_box.checked=raise_int_08; 
 document.form1.wis_08_box.checked=raise_wis_08; 
 document.form1.chr_08_box.checked=raise_chr_08; 
 document.form1.str_14_box.checked=raise_str_14; 
 document.form1.dex_14_box.checked=raise_dex_14; 
 document.form1.con_14_box.checked=raise_con_14; 
 document.form1.int_14_box.checked=raise_int_14; 
 document.form1.wis_14_box.checked=raise_wis_14; 
 document.form1.chr_14_box.checked=raise_chr_14; 
 document.form1.str_18_box.checked=raise_str_18; 
 document.form1.dex_18_box.checked=raise_dex_18; 
 document.form1.con_18_box.checked=raise_con_18; 
 document.form1.int_18_box.checked=raise_int_18; 
 document.form1.wis_18_box.checked=raise_wis_18; 
 document.form1.chr_18_box.checked=raise_chr_18; 
 document.form1.str_24_box.checked=raise_str_24; 
 document.form1.dex_24_box.checked=raise_dex_24; 
 document.form1.con_24_box.checked=raise_con_24; 
 document.form1.int_24_box.checked=raise_int_24; 
 document.form1.wis_24_box.checked=raise_wis_24; 
 document.form1.chr_24_box.checked=raise_chr_24; 
 document.form1.str_28_box.checked=raise_str_28; 
 document.form1.dex_28_box.checked=raise_dex_28; 
 document.form1.con_28_box.checked=raise_con_28; 
 document.form1.int_28_box.checked=raise_int_28; 
 document.form1.wis_28_box.checked=raise_wis_28; 
 document.form1.chr_28_box.checked=raise_chr_28; 


 document.form1.beast[0].checked=beast_bear;
 document.form1.beast[1].checked=beast_boar;
 document.form1.beast[2].checked=beast_cat;
 document.form1.beast[3].checked=beast_lizard;
 document.form1.beast[4].checked=beast_raptor;
 document.form1.beast[5].checked=beast_serpent;
 document.form1.beast[6].checked=beast_spider;
 document.form1.beast[7].checked=beast_wolf;


   document.form1.fam[1].checked=fam_bat;
   document.form1.fam[2].checked=fam_bookimp;
   document.form1.fam[3].checked=fam_bounddemon;
   document.form1.fam[4].checked=fam_cat;
   document.form1.fam[5].checked=fam_crafterhomunculus;
   document.form1.fam[6].checked=fam_dragonling;
   document.form1.fam[7].checked=fam_falcon;
   document.form1.fam[8].checked=fam_owl;
   document.form1.fam[9].checked=fam_rat;
   document.form1.fam[10].checked=fam_raven;
   document.form1.fam[11].checked=fam_serpent;
   document.form1.fam[12].checked=fam_spider;


      document.form1.fam[1+12].checked=fam_arcaneeye;
      document.form1.fam[2+12].checked=fam_badger;
      document.form1.fam[3+12].checked=fam_canineconstruct;
      document.form1.fam[4+12].checked=fam_disembodiedhand;
      document.form1.fam[5+12].checked=fam_firelizard;
      document.form1.fam[6+12].checked=fam_lightninglizard;
      document.form1.fam[7+12].checked=fam_ooze;
      document.form1.fam[8+12].checked=fam_parrot;
      document.form1.fam[9+12].checked=fam_rootling;
      document.form1.fam[10+12].checked=fam_scouthomunculus;
      document.form1.fam[11+12].checked=fam_skull;
      document.form1.fam[12+12].checked=fam_toad;
      document.form1.fam[13+12].checked=fam_weasel;
      document.form1.fam[14+12].checked=fam_airmephit;
      document.form1.fam[15+12].checked=fam_arcanewisp;
      document.form1.fam[16+12].checked=fam_beholderkin;
      document.form1.fam[17+12].checked=fam_blackspawndarkling;
      document.form1.fam[18+12].checked=fam_bluespawnnimblespark;
      document.form1.fam[19+12].checked=fam_earthmephit;
      document.form1.fam[20+12].checked=fam_firemephit;
      document.form1.fam[21+12].checked=fam_grayspawnshortfang;
      document.form1.fam[22+12].checked=fam_greenspawnbanespike;
      document.form1.fam[23+12].checked=fam_icemephit;
      document.form1.fam[24+12].checked=fam_rakshasaclaw;
      document.form1.fam[25+12].checked=fam_redspawnspitfire;
      document.form1.fam[26+12].checked=fam_stonefowl;
      document.form1.fam[27+12].checked=fam_whitespawnsnowstepper;
      document.form1.fam[28+12].checked=fam_blazingskull;
      document.form1.fam[29+12].checked=fam_chaosshard;
      document.form1.fam[30+12].checked=fam_gibberingpet;
      document.form1.fam[31+12].checked=fam_shadowincarnate;



 document.form1.b_str_04_box.checked=b_raise_str_04;
 document.form1.b_dex_04_box.checked=b_raise_dex_04; 
 document.form1.b_con_04_box.checked=b_raise_con_04; 
 document.form1.b_int_04_box.checked=b_raise_int_04; 
 document.form1.b_wis_04_box.checked=b_raise_wis_04; 
 document.form1.b_chr_04_box.checked=b_raise_chr_04; 
 document.form1.b_str_08_box.checked=b_raise_str_08; 
 document.form1.b_dex_08_box.checked=b_raise_dex_08; 
 document.form1.b_con_08_box.checked=b_raise_con_08; 
 document.form1.b_int_08_box.checked=b_raise_int_08; 
 document.form1.b_wis_08_box.checked=b_raise_wis_08; 
 document.form1.b_chr_08_box.checked=b_raise_chr_08; 
 document.form1.b_str_14_box.checked=b_raise_str_14; 
 document.form1.b_dex_14_box.checked=b_raise_dex_14; 
 document.form1.b_con_14_box.checked=b_raise_con_14; 
 document.form1.b_int_14_box.checked=b_raise_int_14; 
 document.form1.b_wis_14_box.checked=b_raise_wis_14; 
 document.form1.b_chr_14_box.checked=b_raise_chr_14; 
 document.form1.b_str_18_box.checked=b_raise_str_18; 
 document.form1.b_dex_18_box.checked=b_raise_dex_18; 
 document.form1.b_con_18_box.checked=b_raise_con_18; 
 document.form1.b_int_18_box.checked=b_raise_int_18; 
 document.form1.b_wis_18_box.checked=b_raise_wis_18; 
 document.form1.b_chr_18_box.checked=b_raise_chr_18; 
 document.form1.b_str_24_box.checked=b_raise_str_24; 
 document.form1.b_dex_24_box.checked=b_raise_dex_24; 
 document.form1.b_con_24_box.checked=b_raise_con_24; 
 document.form1.b_int_24_box.checked=b_raise_int_24; 
 document.form1.b_wis_24_box.checked=b_raise_wis_24; 
 document.form1.b_chr_24_box.checked=b_raise_chr_24; 
 document.form1.b_str_28_box.checked=b_raise_str_28; 
 document.form1.b_dex_28_box.checked=b_raise_dex_28; 
 document.form1.b_con_28_box.checked=b_raise_con_28; 
 document.form1.b_int_28_box.checked=b_raise_int_28; 
 document.form1.b_wis_28_box.checked=b_raise_wis_28; 
 document.form1.b_chr_28_box.checked=b_raise_chr_28; 





 document.form1.str_21_box.checked=raise_str_21;
 document.form1.dex_21_box.checked=raise_dex_21; 
 document.form1.con_21_box.checked=raise_con_21; 
 document.form1.int_21_box.checked=raise_int_21; 
 document.form1.wis_21_box.checked=raise_wis_21; 
 document.form1.chr_21_box.checked=raise_chr_21;



 document.form1.epic21[1].checked=raise_str_otherepic;
 document.form1.epic21[2].checked=raise_con_otherepic;
 document.form1.epic21[3].checked=raise_dex_otherepic;
 document.form1.epic21[4].checked=raise_int_otherepic;
 document.form1.epic21[5].checked=raise_wis_otherepic;
 document.form1.epic21[6].checked=raise_chr_otherepic;


 document.form1.str_other_race_stat_box.checked=raise_str_other_race_stat; 
 document.form1.dex_other_race_stat_box.checked=raise_dex_other_race_stat; 
 document.form1.con_other_race_stat_box.checked=raise_con_other_race_stat; 
 document.form1.int_other_race_stat_box.checked=raise_int_other_race_stat; 
 document.form1.wis_other_race_stat_box.checked=raise_wis_other_race_stat; 
 document.form1.chr_other_race_stat_box.checked=raise_chr_other_race_stat; 

 document.form1.acrobatics_other_race_box.checked=otherrace_acrobatics; 
 document.form1.arcana_other_race_box.checked=otherrace_arcana; 
 document.form1.athletics_other_race_box.checked=otherrace_athletics; 
 document.form1.bluff_other_race_box.checked=otherrace_bluff; 
 document.form1.diplomacy_other_race_box.checked=otherrace_diplomacy; 
 document.form1.dungeoneering_other_race_box.checked=otherrace_dungeoneering; 
 document.form1.endurance_other_race_box.checked=otherrace_endurance; 
 document.form1.heal_other_race_box.checked=otherrace_heal; 
 document.form1.history_other_race_box.checked=otherrace_history; 
 document.form1.insight_other_race_box.checked=otherrace_insight; 
 document.form1.intimidate_other_race_box.checked=otherrace_intimidate; 
 document.form1.nature_other_race_box.checked=otherrace_nature; 
 document.form1.perception_other_race_box.checked=otherrace_perception; 
 document.form1.religion_other_race_box.checked=otherrace_religion; 
 document.form1.stealth_other_race_box.checked=otherrace_stealth; 
 document.form1.streetwise_other_race_box.checked=otherrace_streetwise; 
 document.form1.thievery_other_race_box.checked=otherrace_thievery; 
 document.form1.breathtype[0].checked=dragonbreath_acid; 
 document.form1.breathtype[1].checked=dragonbreath_cold; 
 document.form1.breathtype[2].checked=dragonbreath_fire; 
 document.form1.breathtype[3].checked=dragonbreath_lightning; 
 document.form1.breathtype[4].checked=dragonbreath_poison; 
 document.form1.breathstat[0].checked=dragonbreath_strength; 
 document.form1.breathstat[1].checked=dragonbreath_constitution; 
 document.form1.breathstat[2].checked=dragonbreath_dexterity; 


  document.form1.genasisoultype[0].checked=genasi_earthsoul; 
  document.form1.genasisoultype[1].checked=genasi_firesoul; 
  document.form1.genasisoultype[2].checked=genasi_stormsoul; 
  document.form1.genasisoultype[3].checked=genasi_watersoul; 
  document.form1.genasisoultype[4].checked=genasi_windsoul; 

    document.form1.eladrin_education[0].checked=eladrin_acrobatics; 
    document.form1.eladrin_education[1].checked=eladrin_arcana; 
    document.form1.eladrin_education[2].checked=eladrin_athletics; 
    document.form1.eladrin_education[3].checked=eladrin_bluff; 
    document.form1.eladrin_education[4].checked=eladrin_diplomacy; 
    document.form1.eladrin_education[5].checked=eladrin_dungeoneering; 
    document.form1.eladrin_education[6].checked=eladrin_endurance; 
    document.form1.eladrin_education[7].checked=eladrin_heal; 
    document.form1.eladrin_education[8].checked=eladrin_history; 
    document.form1.eladrin_education[9].checked=eladrin_insight; 
    document.form1.eladrin_education[10].checked=eladrin_intimidate; 
    document.form1.eladrin_education[11].checked=eladrin_nature; 
    document.form1.eladrin_education[12].checked=eladrin_perception; 
    document.form1.eladrin_education[13].checked=eladrin_religion; 
    document.form1.eladrin_education[14].checked=eladrin_stealth; 
    document.form1.eladrin_education[15].checked=eladrin_streetwise; 
    document.form1.eladrin_education[16].checked=eladrin_thievery; 

    document.form1.acrobatics_other_race_box.checked=otherrace_acrobatics; 
    document.form1.arcana_other_race_box.checked=otherrace_arcana; 
    document.form1.athletics_other_race_box.checked=otherrace_athletics; 
    document.form1.bluff_other_race_box.checked=otherrace_bluff; 
    document.form1.diplomacy_other_race_box.checked=otherrace_diplomacy; 
    document.form1.dungeoneering_other_race_box.checked=otherrace_dungeoneering; 
    document.form1.endurance_other_race_box.checked=otherrace_endurance; 
    document.form1.heal_other_race_box.checked=otherrace_heal; 
    document.form1.history_other_race_box.checked=otherrace_history; 
    document.form1.insight_other_race_box.checked=otherrace_insight; 
    document.form1.intimidate_other_race_box.checked=otherrace_intimidate; 
    document.form1.nature_other_race_box.checked=otherrace_nature; 
    document.form1.perception_other_race_box.checked=otherrace_perception; 
    document.form1.religion_other_race_box.checked=otherrace_religion; 
    document.form1.stealth_other_race_box.checked=otherrace_stealth; 
    document.form1.thievery_other_race_box.checked=otherrace_thievery; 
 

 document.form1.dilettantechoice[0].checked= dilettante_lanceoffaith; 
 document.form1.dilettantechoice[1].checked= dilettante_priestsshield; 
 document.form1.dilettantechoice[2].checked= dilettante_righteousbrand; 
 document.form1.dilettantechoice[3].checked= dilettante_sacredflame; 
 document.form1.dilettantechoice[4].checked= dilettante_cleave; 
 document.form1.dilettantechoice[5].checked= dilettante_reapingstrike; 
 document.form1.dilettantechoice[6].checked= dilettante_surestrike; 
 document.form1.dilettantechoice[7].checked= dilettante_tideofiron; 
 document.form1.dilettantechoice[8].checked= dilettante_bolsteringstrike; 
 document.form1.dilettantechoice[9].checked= dilettante_enfeeblingstrike; 
 document.form1.dilettantechoice[10].checked= dilettante_holystrike; 
 document.form1.dilettantechoice[11].checked= dilettante_valiantstrike; 
 document.form1.dilettantechoice[12].checked= dilettante_carefulattack; 
 document.form1.dilettantechoice[13].checked= dilettante_hitandrun; 
 document.form1.dilettantechoice[14].checked= dilettante_nimblestrike; 
 document.form1.dilettantechoice[15].checked= dilettante_twinstrike; 
 document.form1.dilettantechoice[16].checked= dilettante_deftstrike; 
 document.form1.dilettantechoice[17].checked= dilettante_piercingstrike; 
 document.form1.dilettantechoice[18].checked= dilettante_ripostestrike; 
 document.form1.dilettantechoice[19].checked= dilettante_slyflourish; 
 document.form1.dilettantechoice[20].checked= dilettante_direradiance; 
 document.form1.dilettantechoice[21].checked= dilettante_eldritchblast; 
 document.form1.dilettantechoice[22].checked= dilettante_eyebite; 
 document.form1.dilettantechoice[23].checked= dilettante_hellishrebuke; 
 document.form1.dilettantechoice[24].checked= dilettante_commandersstrike; 
 document.form1.dilettantechoice[25].checked= dilettante_furioussmash; 
 document.form1.dilettantechoice[26].checked= dilettante_vipersstrike; 
 document.form1.dilettantechoice[27].checked= dilettante_wolfpacktactics; 
 document.form1.dilettantechoice[28].checked= dilettante_cloudofdaggers; 
 document.form1.dilettantechoice[29].checked= dilettante_magicmissile; 
 document.form1.dilettantechoice[30].checked= dilettante_rayoffrost; 
 document.form1.dilettantechoice[31].checked= dilettante_scorchingburst; 
 document.form1.dilettantechoice[32].checked= dilettante_thunderwave; 
 document.form1.dilettantechoice[33].checked= dilettante_other; 


// document.form1.dilettantechoice[8].checked= dilettante_divinechallenge; 
// document.form1.dilettantechoice[9].checked= dilettante_layonhands; 
// document.form1.dilettantechoice[30].checked= dilettante_ghostsound; 
// document.form1.dilettantechoice[31].checked= dilettante_light; 
// document.form1.dilettantechoice[32].checked= dilettante_magehand; 
// document.form1.dilettantechoice[33].checked= dilettante_prestidigitation; 

// document.form1.clericstartingritual[0].checked=cleric_start_animalmessenger; 
// document.form1.clericstartingritual[1].checked=cleric_start_comprehendlanguage; 
// document.form1.clericstartingritual[2].checked=cleric_start_magicmouth; 
// document.form1.clericstartingritual[3].checked=cleric_start_makewhole; 
// document.form1.clericstartingritual[4].checked=cleric_start_secretpage; 
// document.form1.clericstartingritual[5].checked=cleric_start_silence; 
// document.form1.clericstartingritual[6].checked=cleric_start_tensersfloatingdisk; 

   document.form1.fighterstyle[0].checked=fighter_onehand; 
   document.form1.fighterstyle[1].checked=fighter_twohand;
   if (multi_fighter_studentofthesword)
    {
     document.form1.fighterstyle[0].checked=studentofthesword_onehand; 
     document.form1.fighterstyle[1].checked=studentofthesword_twohand;
    }
   document.form1.fighterstyle[2].checked=fighter_battlerager; 
   document.form1.fighterstyle[3].checked=fighter_tempesttechnique; 
   document.form1.rangerstyle[0].checked=ranger_archer; 
   document.form1.rangerstyle[1].checked=ranger_twoblade; 
   document.form1.rangerstyle[2].checked=ranger_beastmaster; 
   document.form1.roguestyle[0].checked=rogue_artfuldodger; 
   document.form1.roguestyle[1].checked=rogue_brutalscoundrel; 
   document.form1.roguestyle[2].checked=rogue_ruthlessruffian; 
   document.form1.warlockpact[0].checked=warlock_fey; 
   document.form1.warlockpact[1].checked=warlock_infernal; 
   document.form1.warlockpact[2].checked=warlock_star; 
   document.form1.warlockpact[3].checked=warlock_dark; 
   document.form1.warlockpact[4].checked=warlock_vestige; 
   document.form1.warlockpact[5].checked=warlock_other; 
   document.form1.warlordpresence[0].checked=warlord_inspiring; 
   document.form1.warlordpresence[1].checked=warlord_tactical; 
   document.form1.warlordpresence[2].checked=warlord_bravura; 
   document.form1.warlordpresence[3].checked=warlord_resourceful; 
   document.form1.wizardimplement[0].checked=orbofimposition; 
   document.form1.wizardimplement[1].checked=staffofdefense; 
   document.form1.wizardimplement[2].checked=wandofaccuracy; 
   document.form1.wizardimplement[3].checked=orbofdeception; 
   document.form1.wizardimplement[4].checked=tomeofbinding; 
   document.form1.wizardimplement[5].checked=tomeofreadiness; 

   document.form1.swordmageaegis[0].checked=swordmage_assault; 
   document.form1.swordmageaegis[1].checked=swordmage_shielding; 
   document.form1.swordmageaegis[2].checked=swordmage_ensnarement; 
   document.form1.barbarianferal[0].checked=barbarian_rageblood; 
   document.form1.barbarianferal[1].checked=barbarian_thaneborn; 

   if (race_other)
   {
    document.form1.otherracesight[0].checked=otherrace_normalvision; 
    document.form1.otherracesight[1].checked=otherrace_lowlight; 
    document.form1.otherracesight[2].checked=otherrace_darkvision; 
    document.form1.otherracesize[0].checked=otherrace_small; 
    document.form1.otherracesize[1].checked=otherrace_medium; 
   }
   if (class_other)
   {
    document.form1.otherclassdefense[otherclass_bonus_to_defense].checked=true; 
    if (otherclass_hitpoints==10){document.form1.otherclasshitpoints[0].checked=true; }
    if (otherclass_hitpoints==12){document.form1.otherclasshitpoints[1].checked=true; }
    if (otherclass_hitpoints==15){document.form1.otherclasshitpoints[2].checked=true; }
    document.form1.otherclasssurges[otherclass_surges-6].checked=true; 
   }


 if (frb_none){document.form1.fr_background_list.selectedIndex=0; }
 if (frb_aglarond){document.form1.fr_background_list.selectedIndex=1; }
 if (frb_akanul){document.form1.fr_background_list.selectedIndex=2; }
 if (frb_amn){document.form1.fr_background_list.selectedIndex=3; }
 if (frb_baldursgate){document.form1.fr_background_list.selectedIndex=4; }
 if (frb_calimshan){document.form1.fr_background_list.selectedIndex=5; }
 if (frb_chessenta){document.form1.fr_background_list.selectedIndex=6; }
 if (frb_cormyr){document.form1.fr_background_list.selectedIndex=7; }
 if (frb_dalelands){document.form1.fr_background_list.selectedIndex=8; }
 if (frb_dragoncoast){document.form1.fr_background_list.selectedIndex=9; }
 if (frb_durpar){document.form1.fr_background_list.selectedIndex=10; }
 if (frb_eastrift){document.form1.fr_background_list.selectedIndex=11; }
 if (frb_elfharrow){document.form1.fr_background_list.selectedIndex=12; }
 if (frb_grayvale){document.form1.fr_background_list.selectedIndex=13; }
 if (frb_greatdale){document.form1.fr_background_list.selectedIndex=14; }
 if (frb_highimaskar){document.form1.fr_background_list.selectedIndex=15; }
 if (frb_impiltur){document.form1.fr_background_list.selectedIndex=16; }
 if (frb_luruar){document.form1.fr_background_list.selectedIndex=17; }
 if (frb_luskan){document.form1.fr_background_list.selectedIndex=18; }
 if (frb_moonshaeisles){document.form1.fr_background_list.selectedIndex=19; }
 if (frb_mythdrannor){document.form1.fr_background_list.selectedIndex=20; }
 if (frb_narfell){document.form1.fr_background_list.selectedIndex=21; }
 if (frb_nelantherisles){document.form1.fr_background_list.selectedIndex=22; }
 if (frb_netheril){document.form1.fr_background_list.selectedIndex=23; }
 if (frb_thay){document.form1.fr_background_list.selectedIndex=24; }
 if (frb_tymanther){document.form1.fr_background_list.selectedIndex=25; }
 if (frb_vilhonwilds){document.form1.fr_background_list.selectedIndex=26; }
 if (frb_waterdeep){document.form1.fr_background_list.selectedIndex=27; }
 if (frb_wheloon){document.form1.fr_background_list.selectedIndex=28; }


 }





function lock_identity(){

 if (CharacterTypeHasBeenEstablished==true){}
 else if (DiceHaveBeenRolled==false){document.form1.second_comment_box.value="You haven't even rolled your dice."} 
 else if (AbilitiesAreProperlyAssigned==false){document.form1.second_comment_box.value="Please finish assigning your abilities."} 
 else if (AbilitiesHaveBeenEstablished==false){document.form1.second_comment_box.value="Please accept your ability assignments first."} 
 else if (RaceAssigned()==false){document.form1.second_comment_box.value="Please choose your race."}
 else if ((gender==0)&(!race_warforged)){document.form1.second_comment_box.value="Please choose your gender."} 
 else if (alignment==0){document.form1.second_comment_box.value="Please choose your alignment."} 
 else if (total_levels==0){document.form1.second_comment_box.value="Please choose your total levels."} 
  else {
   document.form1.second_comment_box.value="You chose a "; 
   if (alignment==1){document.form1.second_comment_box.value +="Lawful Good" }
   if (alignment==2){document.form1.second_comment_box.value +="Good" }
   if (alignment==3){document.form1.second_comment_box.value +="Good (Chaotic)" }
   if (alignment==4){document.form1.second_comment_box.value +="Unaligned (Lawful)" }
   if (alignment==5){document.form1.second_comment_box.value +="Unaligned" }
   if (alignment==6){document.form1.second_comment_box.value +="Unaligned (Chaotic)" }
   if (alignment==7){document.form1.second_comment_box.value +="Evil (Lawful)" }
   if (alignment==8){document.form1.second_comment_box.value +="Evil" }
   if (alignment==9){document.form1.second_comment_box.value +="Chaotic Evil" }
   document.form1.second_comment_box.value +=", Level " + total_levels + " "

   if (gender==1){document.form1.second_comment_box.value +="Male ";  }
   if (gender==2){document.form1.second_comment_box.value +="Female "; }
   if (race_human){document.form1.second_comment_box.value +="Human.";  }
   if (race_dragonborn){document.form1.second_comment_box.value +="Dragonborn.";  }
   if (race_dwarf){document.form1.second_comment_box.value +="Dwarf.";  }
   if (race_eladrin){document.form1.second_comment_box.value +="Eladrin.";  }
   if (race_elf){document.form1.second_comment_box.value +="Elf.";  }
   if (race_halfelf){document.form1.second_comment_box.value +="Half-Elf.";  }
   if (race_halfling){document.form1.second_comment_box.value +="Halfling.";  }
   if (race_tiefling){document.form1.second_comment_box.value +="Tiefling.";  }
   if (race_bugbear){document.form1.second_comment_box.value+="Bugbear."; }
   if (race_bladeling){document.form1.second_comment_box.value+="Bladeling."; }
   if (race_deva){document.form1.second_comment_box.value+="Deva."; }
   if (race_halforc){document.form1.second_comment_box.value+="Half-Orc."; }
   if (race_goliath){document.form1.second_comment_box.value+="Goliath."; }
   if (race_doppelganger){document.form1.second_comment_box.value+="Doppelganger."; }
   if (race_drow){document.form1.second_comment_box.value+="Drow."; }
   if (race_genasi){document.form1.second_comment_box.value+="Genasi."; }
   if (race_githyanki){document.form1.second_comment_box.value+="Githyanki."; }
   if (race_githzerai){document.form1.second_comment_box.value+="Githzerai."; }
   if (race_gnoll){document.form1.second_comment_box.value+="Gnoll."; }
   if (race_gnome){document.form1.second_comment_box.value+="Gnome."; }
   if (race_goblin){document.form1.second_comment_box.value+="Goblin."; }
   if (race_hobgoblin){document.form1.second_comment_box.value+="Hobgoblin."; }
   if (race_kobold){document.form1.second_comment_box.value+="Kobold."; }
   if (race_minotaur){document.form1.second_comment_box.value+="Minotaur."; }
   if (race_orc){document.form1.second_comment_box.value+="Orc."; }
   if (race_shadarkai){document.form1.second_comment_box.value+="Shadar-kai."; }
   if (race_shifterlongtooth){document.form1.second_comment_box.value+="Longtooth Shifter."; }
   if (race_shifterrazorclaw){document.form1.second_comment_box.value+="Razorclaw Shifter."; }
   if (race_warforged){document.form1.second_comment_box.value+="Warforged."; }
   if (race_other){document.form1.second_comment_box.value+=document.form1.other_race_name.value+"."; }
   CharacterTypeHasBeenEstablished=true; 
   if ((race_halfling) | (race_goblin) | (race_kobold) | (race_gnome)) {small=true; } else {small=false; }
   LanguageEntitlements();

   if (race_human==true)
    {
     document.form1.second_comment_box.value +="  As a human, you will add +2 to one of your ability scores in a moment."
    }
   if (race_dragonborn==true)
    {
     strength+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value +="  Dragonborn receive +2 on strength and charisma."
    }
   if (race_dwarf==true)
    {
     constitution+=2; 
     wisdom+=2; 
     document.form1.second_comment_box.value +="  Dwarves receive +2 on constitution and wisdom."
    }
   if (race_eladrin==true)
    {
     dexterity+=2; 
     intelligence+=2; 
     document.form1.second_comment_box.value +="  Eladrin receive +2 on dexterity and intelligence."
    }
   if (race_elf==true)
    {
     dexterity+=2; 
     wisdom+=2; 
     document.form1.second_comment_box.value +="  Elves receive +2 on dexterity and wisdom."
    }
   if (race_halfelf==true)
    {
     constitution+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value +="  Half-Elves receive +2 on constitution and charisma."
    }
   if (race_halfling==true)
    {
     dexterity+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value +="  Halflings receive +2 on dexterity and charisma."
    }
   if (race_tiefling==true)
    {
     intelligence+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value +="  Tieflings receive +2 on intelligence and charisma."
    }

   if (race_bugbear)
    {
     strength+=2; 
     dexterity+=2; 
     document.form1.second_comment_box.value+="  Bugbears receive +2 on strength and dexterity."
    }

   if (race_doppelganger)
    {
     intelligence+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value+="  Doppelgangers receive +2 on intelligence and charisma."
    }

   if (race_drow)
    {
     dexterity+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value+="  Drow receive +2 on dexterity and charisma."
    }

   if (race_genasi)
    {
     strength+=2; 
     intelligence+=2; 
     document.form1.second_comment_box.value+="  Genasi receive +2 on strength and intelligence."
    }
   if (race_bladeling)
    {
     dexterity+=2; 
     wisdom+=2; 
     document.form1.second_comment_box.value+="  Bladelings receive +2 on dexterity and wisdom."
    }

   if (race_deva)
    {
     intelligence+=2; 
     wisdom+=2; 
     document.form1.second_comment_box.value+="  Devas receive +2 on intelligence and wisdom."
    }
   if (race_goliath)
    {
     strength+=2; 
     constitution+=2; 
     document.form1.second_comment_box.value+="  Goliaths receive +2 on strength and constitution."
    }
   if (race_halforc)
    {
     dexterity+=2; 
     strength+=2; 
     document.form1.second_comment_box.value+="  Half-orcs receive +2 on strength and dexterity."
    }

   if (race_githyanki)
    {
     constitution+=2; 
     intelligence+=2; 
     document.form1.second_comment_box.value+="  Githyanki receive +2 on constitution and intelligence."
    }

   if (race_githzerai)
    {
     dexterity+=2; 
     wisdom+=2; 
     document.form1.second_comment_box.value+="  Githzerai receive +2 on dexterity and wisdom."
    }

   if (race_gnoll)
    {
     constitution+=2; 
     dexterity+=2; 
     document.form1.second_comment_box.value+="  Gnolls receive +2 on constitution and dexterity."
    }

   if (race_gnome)
    {
     intelligence+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value+="  Gnomes receive +2 on intelligence and charisma."
    }

   if (race_goblin)
    {
     dexterity+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value+="  Goblins receive +2 on dexterity and charisma."
    }

   if (race_hobgoblin)
    {
     constitution+=2; 
     charisma+=2; 
     document.form1.second_comment_box.value+="  Hobgoblins receive +2 on constitution and charisma."
    }

   if (race_kobold)
    {
     constitution+=2; 
     dexterity+=2; 
     document.form1.second_comment_box.value+="  Kobolds receive +2 on constitution and dexterity."
    }

   if (race_minotaur)
    {
     strength+=2; 
     constitution+=2; 
     document.form1.second_comment_box.value+="  Minotaurs receive +2 on strength and constitution."
    }

   if (race_orc)
    {
     strength+=2; 
     constitution+=2; 
     document.form1.second_comment_box.value+="  Orcs receive +2 on strength and constitution."
    }

   if (race_shadarkai)
    {
     dexterity+=2; 
     intelligence+=2; 
     document.form1.second_comment_box.value+="  Shadar-kai receive +2 on dexterity and intelligence."
    }

   if (race_shifterlongtooth)
    {
     strength+=2; 
     wisdom+=2; 
     document.form1.second_comment_box.value+="  Longtooth shifters receive +2 on strength and wisdom."
    }

   if (race_shifterrazorclaw)
    {
     dexterity+=2; 
     wisdom+=2; 
     document.form1.second_comment_box.value+="  Razorclaw shifters receive +2 on dexterity and wisdom."
    }

   if (race_warforged)
    {
     strength+=2; 
     constitution+=2; 
     document.form1.second_comment_box.value+="  Warforged receive +2 on strength and constitution."
    }
   if (race_other)
    {
     document.form1.second_comment_box.value+="  You'll choose ability and skill bonuses below."
    }


    if (strength<3){strength=3; }
    if (dexterity<3){dexterity=3; }
    if (constitution<3){constitution=3; }
    if (intelligence<3){intelligence=3; }
    if (wisdom<3){wisdom=3; }
    if (charisma<3){charisma=3; }
     document.form1.second_comment_box.value +="\rNow choose your class.  Recommended: "
     x=1; 
     if ((dexterity>strength)){x=2; }
     if ((constitution>dexterity)&(constitution>strength)){x=3; }
     if ((intelligence>dexterity)&(intelligence>constitution)&(intelligence>strength)){x=4; }
     if ((wisdom>intelligence)&(wisdom>dexterity)&(wisdom>constitution)&(wisdom>strength)){x=5; }
     if ((charisma>wisdom)&(charisma>intelligence)&(charisma>dexterity)&(charisma>constitution)&(charisma>strength)){x=6; }
     top_ability_score=x; 
     if ((x==1)&(strength<11)){strength=11; }
     if ((x==2)&(dexterity<11)){dexterity=11; }
     if ((x==3)&(constitution<11)){constitution=11; }
     if ((x==4)&(intelligence<11)){intelligence=11; }
     if ((x==5)&(wisdom<11)){wisdom=11; }
     if ((x==6)&(charisma<11)){charisma=11; }
//     z=0; if (x!=1){z=1; }
//     if ((dexterity>strength)&(x!=2)){z=2; }
//     if ((constitution>dexterity)&(constitution>strength)&(x!=3)){z=3; }
//     if ((intelligence>dexterity)&(intelligence>constitution)&(intelligence>strength)&(x!=4)){z=4; }
//     if ((wisdom>intelligence)&(wisdom>dexterity)&(wisdom>constitution)&(wisdom>strength)&(x!=5)){z=5; }
//     if ((charisma>wisdom)&(charisma>intelligence)&(charisma>dexterity)&(charisma>constitution)&(charisma>strength)&(x!=6)){z=6; }

     if ((x==5) | ((wisdom>=14)&((strength>=12) | (charisma>=12)))){document.form1.second_comment_box.value +=" Cleric "; }
     if ((x==1) | ((strength>14)&((dexterity>12) | (constitution>12)))){document.form1.second_comment_box.value +=" Fighter "; }
     if (((x==1)&(charisma>=12)) | ((x==6)&(strength>=12))){document.form1.second_comment_box.value +=" Paladin "; }
     if (((x==1)&(dexterity>=12)) | ((x==2)&(strength>=10))){document.form1.second_comment_box.value +=" Ranger "; }
     if ((x==2) | ((dexterity>=14)&((strength>=12) | (charisma>=12)))){document.form1.second_comment_box.value +=" Rogue "; }
     if ((x==3) | (x==6) | ((constitution>12)&((intelligence>12) | (charisma>12)))){document.form1.second_comment_box.value +=" Warlock "; }
     if ((strength>=14)&((intelligence>=12) | (charisma>=12))){document.form1.second_comment_box.value +=" Warlord "; }
     if ((x==4) | (intelligence>=14)){document.form1.second_comment_box.value +=" Wizard"; }
     if ((x==5) & ((dexterity>=14)|(intelligence>=14))){document.form1.second_comment_box.value +=" Avenger "; }
     if (((x==1)|(strength>=14)) & ((constitution>=14)|(charisma>=14))){document.form1.second_comment_box.value +=" Barbarian "; }
     if (((x==6)|(charisma>=14)) & ((constitution>=14)|(intelligence>=14))){document.form1.second_comment_box.value +=" Bard "; }
     if (((x==5)|(wisdom>=14)) & ((constitution>=14)|(dexterity>=14))){document.form1.second_comment_box.value +=" Druid "; }
     if (((x==5)|(wisdom>=14)) & ((constitution>=14)|(intelligence>=14))){document.form1.second_comment_box.value +=" Invoker "; }
     if (((x==5)|(wisdom>=14)) & ((constitution>=14)|(intelligence>=14))){document.form1.second_comment_box.value +=" Shaman "; }
     if (((x==6)|(charisma>=14)) & ((dexterity>=14)|(strength>=14))){document.form1.second_comment_box.value +=" Sorcerer "; }
     if (((x==1)|(strength>=14)) & ((constitution>=14)|(wisdom>=14))){document.form1.second_comment_box.value +=" Warden "; }

     if ((x==4) & ((strength>=14)|(constitution>=14))){document.form1.second_comment_box.value +=" Swordmage "; }
     document.form1.second_comment_box.value +="\rIf you want to multiclass, you qualify at level 1 for: "; 
     if (wisdom>=13){document.form1.second_comment_box.value +="Cleric "; }
     if (strength>=13){document.form1.second_comment_box.value +="Fighter "; }
     if ((strength>=13)&(charisma>=13)){document.form1.second_comment_box.value +="Paladin "; }
     if ((strength>=13) | (dexterity>=13)){document.form1.second_comment_box.value +="Ranger "; }
     if (dexterity>=13){document.form1.second_comment_box.value +="Rogue "; }
     if (charisma>=13){document.form1.second_comment_box.value +="Warlock "; }
     if (strength>=13){document.form1.second_comment_box.value +="Warlord "; }
     if (intelligence>=13){document.form1.second_comment_box.value +="Wizard "; }
     if (wisdom>=13){document.form1.second_comment_box.value +="Avenger "; }
     if (charisma>=13){document.form1.second_comment_box.value +="Bard "; }
     if ((strength>=13)&(constitution>13)){document.form1.second_comment_box.value +="Barbarian "; }
     if (wisdom>=13){document.form1.second_comment_box.value +="Druid "; }
     if (wisdom>=13){document.form1.second_comment_box.value +="Invoker "; }
     if (wisdom>=13){document.form1.second_comment_box.value +="Shaman "; }
     if (charisma>=13){document.form1.second_comment_box.value +="Sorcerer "; }
     if (strength>=13){document.form1.second_comment_box.value +="Warden "; }
     if (intelligence>=13){document.form1.second_comment_box.value +="Swordmage "; }


  }
   ArrowShow(); 

 }

function LanguageEntitlements(){
//greenwood

   if ((race_human) | (race_halfelf) | (race_tiefling) | (race_halfling)){extra_language_entitlement=1; } else {extra_language_entitlement=0; }
   if ((race_dragonborn)|(frb_tymanther) | (race_kobold) | (fam_dragonling)| (fam_whitespawnsnowstepper)| (fam_redspawnspitfire)| (fam_greenspawnbanespike)| (fam_grayspawnshortfang)| (fam_blackspawndarkling)| (fam_bluespawnnimblespark)){draconic_nativespeaker=true; } else {draconic_nativespeaker=false; }
   if ((race_dwarf)|(frb_eastrift)){dwarven_nativespeaker=true; } else {dwarven_nativespeaker=false; }
   if (race_gnoll){abyssal_nativespeaker=true; } else {abyssal_nativespeaker=false; }
   if ((race_elf)|(frb_mythdrannor) | (race_halfelf) | (race_eladrin) | (race_drow) | (race_gnome) | (frb_aglarond) | (frb_moonshaeisles)|(frb_elfharrow)){elven_nativespeaker=true; } else {elven_nativespeaker=false; }
   if ((race_bugbear) | (race_goblin) | (race_hobgoblin)){goblin_nativespeaker=true; } else {goblin_nativespeaker=false; }
   if ((race_githyanki)|(frb_highimaskar) | (race_githzerai)| (fam_beholderkin) | (frb_eastrift)){deepspeech_nativespeaker=true; } else {deepspeech_nativespeaker=false; }
   if ((race_orc)|(race_halforc)){giant_nativespeaker=true; } else {giant_nativespeaker=false; }
   supernal_nativespeaker=false; 
   if ((race_genasi)|(fam_earthmephit)|(fam_firemephit)|(fam_icemephit)|(frb_akanul)|(frb_calimshan)){primordial_nativespeaker=true; } else {primordial_nativespeaker=false; }
   if ((frb_aglarond)|(frb_amn)|(frb_luruar)|(frb_baldursgate)|(frb_moonshaeisles)|(frb_waterdeep)
    |(frb_cormyr)|(frb_wheloon)|(frb_dalelands)|(frb_dragoncoast)|(frb_nelantherisles)|(frb_waterdeep))
    {chondathan_nativespeaker=true; } else {chondathan_nativespeaker=false; }
//    alert("chondathan_nativespeaker="+chondathan_nativespeaker);
   if ((frb_greatdale)|(frb_impiltur)|(frb_narfell)){damaran_nativespeaker=true; } else {damaran_nativespeaker=false; }
   if ((frb_netheril)){netherese_nativespeaker=true; } else {netherese_nativespeaker=false; }
//   if ((frb_xxx)){shou_nativespeaker=true; } else {shou_nativespeaker=false; }
   if ((frb_thay)){thayan_nativespeaker=true; } else {thayan_nativespeaker=false; }
//   if ((frb_xxx)){tuigan_nativespeaker=true; } else {tuigan_nativespeaker=false; }
   if ((frb_chessenta)|(frb_durpar)){untheric_nativespeaker=true; } else {untheric_nativespeaker=false; }
   other01_nativespeaker=false; 
   other02_nativespeaker=false; 
   other03_nativespeaker=false; 

 }

function lock_abilities(){
 if (DiceHaveBeenRolled==false){document.form1.first_comment_box.value="Roll dice / assign all numbers first."}
 else if (AbilitiesAreProperlyAssigned==false)
  {
   document.form1.first_comment_box.value="Finish assigning your statistics."
   TellAboutPointBuy()
  }
 else {
     AbilitiesHaveBeenEstablished=true; 
     z=0; while (z<6){
     if (document.form1.firststat[z].checked==true){firststatwentto=z; }
     if (document.form1.secondstat[z].checked==true){secondstatwentto=z; }
     if (document.form1.thirdstat[z].checked==true){thirdstatwentto=z; }
     if (document.form1.fourthstat[z].checked==true){fourthstatwentto=z; }
     if (document.form1.fifthstat[z].checked==true){fifthstatwentto=z; }
     if (document.form1.sixthstat[z].checked==true){sixthstatwentto=z; }
     z++ ; }
     document.form1.first_comment_box.value="Scores accepted.  Now choose your character type."; 
     if (firststatwentto==0){strength=stat1; }
     if (firststatwentto==1){constitution=stat1; }
     if (firststatwentto==2){dexterity=stat1; }
     if (firststatwentto==3){intelligence=stat1; }
     if (firststatwentto==4){wisdom=stat1; }
     if (firststatwentto==5){charisma=stat1; }
     if (secondstatwentto==0){strength=stat2; }
     if (secondstatwentto==1){constitution=stat2; }
     if (secondstatwentto==2){dexterity=stat2; }
     if (secondstatwentto==3){intelligence=stat2; }
     if (secondstatwentto==4){wisdom=stat2; }
     if (secondstatwentto==5){charisma=stat2; }
     if (thirdstatwentto==0){strength=stat3; }
     if (thirdstatwentto==1){constitution=stat3; }
     if (thirdstatwentto==2){dexterity=stat3; }
     if (thirdstatwentto==3){intelligence=stat3; }
     if (thirdstatwentto==4){wisdom=stat3; }
     if (thirdstatwentto==5){charisma=stat3; }
     if (fourthstatwentto==0){strength=stat4; }
     if (fourthstatwentto==1){constitution=stat4; }
     if (fourthstatwentto==2){dexterity=stat4; }
     if (fourthstatwentto==3){intelligence=stat4; }
     if (fourthstatwentto==4){wisdom=stat4; }
     if (fourthstatwentto==5){charisma=stat4; }
     if (fifthstatwentto==0){strength=stat5; }
     if (fifthstatwentto==1){constitution=stat5; }
     if (fifthstatwentto==2){dexterity=stat5; }
     if (fifthstatwentto==3){intelligence=stat5; }
     if (fifthstatwentto==4){wisdom=stat5; }
     if (fifthstatwentto==5){charisma=stat5; }
     if (sixthstatwentto==0){strength=stat6; }
     if (sixthstatwentto==1){constitution=stat6; }
     if (sixthstatwentto==2){dexterity=stat6; }
     if (sixthstatwentto==3){intelligence=stat6; }
     if (sixthstatwentto==4){wisdom=stat6; }
     if (sixthstatwentto==5){charisma=stat6; }
   ArrowShow(); 
  }
 }

function HaveISixStats(){
 AbilitiesAreProperlyAssigned=false; 
 if
   (
    (stat1>=3)&(stat2>=3)&(stat3>=3)&(stat4>=3)&(stat5>=3)&(stat6>=3)&
    (
     (document.form1.firststat[0].checked==true) |
     (document.form1.firststat[1].checked==true) |
     (document.form1.firststat[2].checked==true) |
     (document.form1.firststat[3].checked==true) |
     (document.form1.firststat[4].checked==true) |
     (document.form1.firststat[5].checked==true)
    )&
    (
     (document.form1.secondstat[0].checked==true) |
     (document.form1.secondstat[1].checked==true) |
     (document.form1.secondstat[2].checked==true) |
     (document.form1.secondstat[3].checked==true) |
     (document.form1.secondstat[4].checked==true) |
     (document.form1.secondstat[5].checked==true)
    )&
    (
     (document.form1.thirdstat[0].checked==true) |
     (document.form1.thirdstat[1].checked==true) |
     (document.form1.thirdstat[2].checked==true) |
     (document.form1.thirdstat[3].checked==true) |
     (document.form1.thirdstat[4].checked==true) |
     (document.form1.thirdstat[5].checked==true)
    )&
    (
     (document.form1.fourthstat[0].checked==true) |
     (document.form1.fourthstat[1].checked==true) |
     (document.form1.fourthstat[2].checked==true) |
     (document.form1.fourthstat[3].checked==true) |
     (document.form1.fourthstat[4].checked==true) |
     (document.form1.fourthstat[5].checked==true)
    )&
    (
     (document.form1.fifthstat[0].checked==true) |
     (document.form1.fifthstat[1].checked==true) |
     (document.form1.fifthstat[2].checked==true) |
     (document.form1.fifthstat[3].checked==true) |
     (document.form1.fifthstat[4].checked==true) |
     (document.form1.fifthstat[5].checked==true)
    )&
    (
     (document.form1.sixthstat[0].checked==true) |
     (document.form1.sixthstat[1].checked==true) |
     (document.form1.sixthstat[2].checked==true) |
     (document.form1.sixthstat[3].checked==true) |
     (document.form1.sixthstat[4].checked==true) |
     (document.form1.sixthstat[5].checked==true)
    )
   )
   {
    AbilitiesAreProperlyAssigned=true; }


  if (document.form1.methods_list.selectedIndex==1)
   {
       if (pointbuy8(stat6) + pointbuy10(stat2) + pointbuy10(stat3) + pointbuy10(stat4) + pointbuy10(stat5) + pointbuy10(stat1)!=22)
        {AbilitiesAreProperlyAssigned=false; }
   }

   if (AbilitiesAreProperlyAssigned==false)
    {
     if ((document.form1.methods_list.selectedIndex==3+2)
      | (document.form1.methods_list.selectedIndex==6+2)
      | (document.form1.methods_list.selectedIndex==1)
      )
      {
        TellAboutPointBuy()
      }
     else
      {
       document.form1.first_comment_box.value="Now assign your abilities."; 
       TellAboutPointBuy(); 
      }
    }
  if (AbilitiesAreProperlyAssigned==true)
    {
     document.form1.first_comment_box.value="You can accept these."; 
     TellAboutPointBuy(); 
    }

 }

function NotBelowTen(i){
 if (i<8){alert("Standard point buy allows no abilities below 8; "); return; }
 alert("If you want an 8, please use the bottom line.  Thanks."); 
 }

function PointBuyIsEightsOrBetter(){
 if (document.form1.methods_list.selectedIndex==1)
  {
   if (stat6<8){stat6=8; alert("Standard point buy allows no abilities below 8.  Sorry."); document.form1.stat6_list.selectedIndex=5; }
   if (stat2<9){NotBelowTen(stat2); stat2=9; document.form1.stat2_list.selectedIndex=6; }
   if (stat3<9){NotBelowTen(stat3); stat3=9; document.form1.stat3_list.selectedIndex=6; }
   if (stat4<9){NotBelowTen(stat4); stat4=9; document.form1.stat4_list.selectedIndex=6; }
   if (stat5<9){NotBelowTen(stat5); stat5=9; document.form1.stat5_list.selectedIndex=6; }
   if (stat1<9){NotBelowTen(stat1); stat1=9; document.form1.stat1_list.selectedIndex=6; }
   DiceHaveBeenRolled=true; 
   DisplayTrueStatistics(); 
   TellAboutPointBuy(); 
  }
 if (document.form1.methods_list.selectedIndex==3+2)
  {
   if (stat1<8){stat1=8; document.form1.stat1_list.selectedIndex=5; }
   if (stat2<8){stat2=8; document.form1.stat2_list.selectedIndex=5; }
   if (stat3<8){stat3=8; document.form1.stat3_list.selectedIndex=5; }
   if (stat4<8){stat4=8; document.form1.stat4_list.selectedIndex=5; }
   if (stat5<8){stat5=8; document.form1.stat5_list.selectedIndex=5; }
   if (stat6<8){stat6=8; document.form1.stat6_list.selectedIndex=5; }
   DiceHaveBeenRolled=true; 
   DisplayTrueStatistics(); 
   TellAboutPointBuy(); 
  }
 if (document.form1.methods_list.selectedIndex==6+2)
  {
   DiceHaveBeenRolled=true; 
   DisplayTrueStatistics(); 
   TellAboutPointBuy(); 
  }
 }

function assign_stat(numbur){
 if (RaceAssigned()){clearall()}
 AbilitiesHaveBeenEstablished=false; 
 if (numbur==1){stat1=3 + document.form1.stat1_list.selectedIndex; }
 if (numbur==2){stat2=3 + document.form1.stat2_list.selectedIndex; }
 if (numbur==3){stat3=3 + document.form1.stat3_list.selectedIndex; }
 if (numbur==4){stat4=3 + document.form1.stat4_list.selectedIndex; }
 if (numbur==5){stat5=3 + document.form1.stat5_list.selectedIndex; }
 if (numbur==6){stat6=3 + document.form1.stat6_list.selectedIndex; }

 PointBuyIsEightsOrBetter()

 DisplayTrueStatistics()
 if ((stat1>=3)&(stat2>=3)&(stat3>=3)&(stat4>=3)&(stat5>=3)&(stat6>=3))
  {
   DiceHaveBeenRolled=true; HaveISixStats(); 
  }
  else {document.form1.first_comment_box.value="Assign all six."; }
   ArrowShow(); 
 }

function assignstat(whichstat,whichability){
 my_character_is_done=false; 
  
 if (AbilitiesHaveBeenEstablished==true){RewriteLockedAbilityAssignments(); }
 else if (DiceHaveBeenRolled==false){document.form1.first_comment_box.value="Please press the Start bar first.";  ClearAllAbilityAssignments(); }
 else {
 z=1; while (z<7){
 if ((whichstat!=1)&(whichability==z)&(document.form1.firststat[z-1].checked==true)){document.form1.firststat[z-1].checked=false; }
 if ((whichstat!=2)&(whichability==z)&(document.form1.secondstat[z-1].checked==true)){document.form1.secondstat[z-1].checked=false; }
 if ((whichstat!=3)&(whichability==z)&(document.form1.thirdstat[z-1].checked==true)){document.form1.thirdstat[z-1].checked=false; }
 if ((whichstat!=4)&(whichability==z)&(document.form1.fourthstat[z-1].checked==true)){document.form1.fourthstat[z-1].checked=false; }
 if ((whichstat!=5)&(whichability==z)&(document.form1.fifthstat[z-1].checked==true)){document.form1.fifthstat[z-1].checked=false; }
 if ((whichstat!=6)&(whichability==z)&(document.form1.sixthstat[z-1].checked==true)){document.form1.sixthstat[z-1].checked=false; }
 z++ ; }

 if (whichstat==1){x=stat1; }
 if (whichstat==2){x=stat2; }
 if (whichstat==3){x=stat3; }
 if (whichstat==4){x=stat4; }
 if (whichstat==5){x=stat5; }
 if (whichstat==6){x=stat6; }
 if (whichability==1){strength=x; }
 if (whichability==2){constitution=x; }
 if (whichability==3){dexterity=x; }
 if (whichability==4){intelligence=x; }
 if (whichability==5){wisdom=x; }
 if (whichability==6){charisma=x; }
 HaveISixStats(); 
  }
   ArrowShow(); 

 }

function DisplayTrueStatistics(){
 document.form1.firststatistic.value=stat1; 
 document.form1.secondstatistic.value=stat2; 
 document.form1.thirdstatistic.value=stat3; 
 document.form1.fourthstatistic.value=stat4; 
 document.form1.fifthstatistic.value=stat5; 
 document.form1.sixthstatistic.value=stat6; 
 }





function modifier_number(skillo){
 if (skillo<2){return -5}
 else if (skillo<4){return -4}
 else if (skillo<6){return -3}
 else if (skillo<8){return -2}
 else if (skillo<10){return -1}
 else {return Math.floor((skillo-10)/2); }
 }

function modifier_string(skillo){
 if (skillo<2){return "-5"}
 else if (skillo<4){return "-4"}
 else if (skillo<6){return "-3"}
 else if (skillo<8){return "-2"}
 else if (skillo<10){return "-1"}
 else {return "+"+(Math.floor(skillo/2)-5); }
 }






function NumberToAbility(numb){
 if (numb==1){return "strength"; } else
 if (numb==2){return "dexterity"; } else
 if (numb==3){return "constitution"; } else
 if (numb==4){return "intelligence"; } else
 if (numb==5){return "wisdom"; } else
 if (numb==6){return "charisma"; } else return "???"; 
 }





function GenerateClassString(){
   class_string=""; 

   if (class_cleric){class_string+="Cleric"; }; 
   if (class_fighter){class_string+="Fighter"; }; 
   if (class_paladin){class_string+="Paladin"; }; 
   if (class_ranger){class_string+="Ranger"; }; 
   if (class_rogue){class_string+="Rogue"; }; 
   if (class_warlock){class_string+="Warlock"; }; 
   if (class_warlord){class_string+="Warlord"; }; 
   if (class_wizard){class_string+="Wizard"; }; 
   if (class_swordmage){class_string+="Swordmage"; }; 
   if (class_avenger){class_string+="Avenger"; }; 
   if (class_barbarian){class_string+="Barbarian"; }; 
   if (class_bard){class_string+="Bard"; }; 
   if (class_druid){class_string+="Druid"; }; 
   if (class_invoker){class_string+="Invoker"; }; 
   if (class_shaman){class_string+="Shaman"; }; 
   if (class_sorcerer){class_string+="Sorcerer"; }; 
   if (class_warden){class_string+="Warden"; }; 
   if (class_other){class_string+=document.form1.other_class_name.value; }; 

   if (multi_cleric()){class_string+=" / Cleric"; };
   if (multi_fighter()){class_string+=" / Fighter"; }; 
   if (multi_paladin()){class_string+=" / Paladin"; }; 
   if (multi_ranger()){class_string+=" / Ranger"; }; 
   if (multi_rogue()){class_string+=" / Rogue"; }; 
   if (multi_warlock()){class_string+=" / Warlock"; }; 
   if (multi_warlord()){class_string+=" / Warlord"; }; 
   if (multi_wizard()){class_string+=" / Wizard"; }; 
   if (multi_swordmage()){class_string+=" / Swordmage"; }; 
   if (multi_avenger()){class_string+=" / Avenger"; }; 
   if (multi_barbarian()){class_string+=" / Barbarian"; }; 
   if (multi_bard()){class_string+=" / Bard"; }; 
   if (multi_druid()){class_string+=" / Druid"; }; 
   if (multi_invoker()){class_string+=" / Invoker"; }; 
   if (multi_shaman()){class_string+=" / Shaman"; }; 
   if (multi_sorcerer()){class_string+=" / Sorcerer"; }; 
   if (multi_warden()){class_string+=" / Warden"; }; 
   if (multi_spellscarred){class_string+=" / Spellscarred"; }; 


   if (paragon_angelicavenger){class_string+=" / Angelic avenger"; }; 
   if (paragon_divineoracle){class_string+=" / Divine oracle"; }; 
   if (paragon_radiantservant){class_string+=" / Radiant servant"; }; 
   if (paragon_warpriest){class_string+=" / War priest"; }; 
   if (paragon_ironvanguard){class_string+=" / Iron vanguard"; }; 
   if (paragon_kensei){class_string+=" / Kensei"; }; 
   if (paragon_pitfighter){class_string+=" / Pit fighter"; }; 
   if (paragon_swordmaster){class_string+=" / Sword master"; }; 
   if (paragon_astralweapon){class_string+=" / Astral weapon"; }; 
   if (paragon_championoforder){class_string+=" / Champion of order"; }; 
   if (paragon_hospitaler){class_string+=" / Hospitaler"; }; 
   if (paragon_justiciar){class_string+=" / Justiciar"; }; 
   if (paragon_battlefieldarcher){class_string+=" / Battlefield archer"; }; 
   if (paragon_beaststalker){class_string+=" / Beast stalker"; }; 
   if (paragon_pathfinder){class_string+=" / Pathfinder"; }; 
   if (paragon_stormwarden){class_string+=" / Storm warden"; }; 
   if (paragon_catburglar){class_string+=" / Cat burglar"; }; 
   if (paragon_daggermaster){class_string+=" / Dagger master"; }; 
   if (paragon_masterinfiltrator){class_string+=" / Master infiltrator"; }; 
   if (paragon_shadowassassin){class_string+=" / Shadow assassin"; }; 
   if (paragon_doomsayer){class_string+=" / Doomsayer"; }; 
   if (paragon_feytouched){class_string+=" / Feytouched"; }; 
   if (paragon_lifestealer){class_string+=" / Life-stealer"; }; 
   if (paragon_battlecaptain){class_string+=" / Battle captain"; }; 
   if (paragon_combatveteran){class_string+=" / Combat veteran"; }; 
   if (paragon_knightcommander){class_string+=" / Knight commander"; }; 
   if (paragon_swordmarshal){class_string+=" / Sword marshal"; }; 
   if (paragon_battlemage){class_string+=" / Battle mage"; }; 
   if (paragon_bloodmage){class_string+=" / Blood mage"; }; 
   if (paragon_spellstormmage){class_string+=" / Spellstorm mage"; }; 
   if (paragon_wizardofthespiraltower){class_string+=" / Wizard of the Spiral Tower"; }; 
   if (paragon_other){class_string+=" / "+document.form1.otherparagonpath.value}; 
   if (paragon_multiclass){class_string+=" / Multiclass Paragon"; }; 
   if (paragon_anarchofshyr){class_string+=" / Anarch of Shyr"; };
   if (paragon_coronalguard){class_string+=" / Coronal Guard"; };
   if (paragon_darkwalker){class_string+=" / Darkwalker"; };
   if (paragon_doomguide){class_string+=" / Doomguide"; };
   if (paragon_drowwanderer){class_string+=" / Drow Wanderer"; };
   if (paragon_eartheartdefender){class_string+=" / Eartheart Defener"; };
   if (paragon_elementaltempest){class_string+=" / Elemental Tempest"; };
   if (paragon_evermeetwarlock){class_string+=" / Evermeet Warlock"; };
    if (paragon_ghostofeventide){class_string+=" / Ghost of Eventide"; };
    if (paragon_heartwarder){class_string+=" / Heart Warder"; };
    if (paragon_highforestscout){class_string+=" / High Forest Scout"; };
    if (paragon_impilturandemonslayer){class_string+=" / Impilturan Demonslayer"; };
    if (paragon_morninglord){class_string+=" / Morninglord"; };
    if (paragon_purpledragonknight){class_string+=" / Purple Dragon Knight"; };
    if (paragon_silverstar){class_string+=" / Silverstar"; };
    if (paragon_simbarchofaglarond){class_string+=" / Simbarch of Aglarond"; };
    if (paragon_spellguardwizard){class_string+=" / Spellguard Wizard"; };
    if (paragon_spellscarredsavant){class_string+=" / Spellscarred Savant"; };
    if (paragon_steelskyliberator){class_string+=" / Steelsky Liberator"; };
    if (paragon_swordcoastcorsair){class_string+=" / Sword Coast Corsair"; };
    if (paragon_umbriri){class_string+=" / Umbriri"; };
    if (paragon_wanderingswordmage){class_string+=" / Wandering Swordmage"; };
    if (paragon_warwizardofcormyr){class_string+=" / War Wizard of Cormyr"; };
    if (paragon_whirlwindgenasi){class_string+=" / Whirlwind Genasi"; };
    if (paragon_wildfiregenasi){class_string+=" / Wildfire Genasi"; };
    if (paragon_feralspirit){class_string+=" / Feral Spirit"; };
    if (paragon_packrunner){class_string+=" / Pack Runner"; };
    if (paragon_wildcatstalker){class_string+=" / Wildcat Stalker"; };

    if (paragon_bladeofcendriane){class_string+=" / Blade of Cendriane"; };
    if (paragon_doomguardmarauder){class_string+=" / Doomguard Marauder"; };
    if (paragon_gatecrasher){class_string+=" / Gatecrasher"; };
    if (paragon_knightofcelestia){class_string+=" / Knight of Celestia"; };
    if (paragon_maleckethjanissary){class_string+=" / Malec-Keth Janissary"; };
    if (paragon_planeshifter){class_string+=" / Planeshifter"; };
    if (paragon_shadowcaptain){class_string+=" / Shadow Captain"; };
    if (paragon_soulguide){class_string+=" / Soul Guide"; };
  if (paragon_adroitexplorer){class_string+=" / Adroit Explorer";};
  if (paragon_ancestralincarnate){class_string+=" / Ancestral Incarnate";};
  if (paragon_bloodfurysavage){class_string+=" / Blood Fury Savage";};
  if (paragon_feybeguiler){class_string+=" / Fey Beguiler";};
  if (paragon_firstbornofmoradin){class_string+=" / Firstborn of Moradin";};
  if (paragon_halflingscoundrel){class_string+=" / Halfling Scoundrel";};
  if (paragon_moonstalker){class_string+=" / Moonstalker";};
  if (paragon_scionofarkhosia){class_string+=" / Scion of Arkhosia";};
  if (paragon_shiereknight){class_string+=" / Shiere Knight";};
  if (paragon_stoneblessed){class_string+=" / Stoneblessed";};
  if (paragon_turathihighborn){class_string+=" / Turathi Highborn";};
  if (paragon_twilightguardian){class_string+=" / Twilight Guardian";};
  if (paragon_hammerofjudgment){class_string+=" / Hammer of Judgment";};
  if (paragon_oathsworn){class_string+=" / Oathsworn";};
  if (paragon_unveiledvisage){class_string+=" / Unveiled Visage";};
  if (paragon_zealousassassin){class_string+=" / Zealous Assassin";};
  if (paragon_bearwarrior){class_string+=" / Bear Warrior";};
  if (paragon_fearbringerthane){class_string+=" / Fearbringer Thane";};
  if (paragon_frenziedberserker){class_string+=" / Frenzied Berserker";};
  if (paragon_wildrunner){class_string+=" / Wildrunner";};
  if (paragon_studentoftheseven){class_string+=" / Student of the Seven";};
  if (paragon_summerrhymer){class_string+=" / Summer Rhymer";};
  if (paragon_voiceofthunder){class_string+=" / Voice of Thunder";};
  if (paragon_warchanter){class_string+=" / War Chanter";};
  if (paragon_bloodmoonstalker){class_string+=" / Bloodmoon Stalker";};
  if (paragon_guardianofthelivinggate){class_string+=" / Guardian of the Living Gate";};
  if (paragon_keeperofthehiddenflame){class_string+=" / Keeper of the Hidden Flame";};
  if (paragon_skyhunter){class_string+=" / Sky Hunter";};
  if (paragon_angelicaspect){class_string+=" / Angelic Aspect";};
  if (paragon_blightspeaker){class_string+=" / Blight Speaker";};
  if (paragon_flameofhope){class_string+=" / Flame of Hope";};
  if (paragon_hammerofvengeance){class_string+=" / Hammer of Vengeance";};
  if (paragon_discipleoftheworldserpent){class_string+=" / Disciple of the World Serpent";};
  if (paragon_ghostpanther){class_string+=" / Ghost Panther";};
  if (paragon_greatbearshaman){class_string+=" / Great Bear Shaman";};
  if (paragon_spirittempest){class_string+=" / Spirit Tempest";};
  if (paragon_arcanewellspring){class_string+=" / Arcane Wellspring";};
  if (paragon_demonskinadept){class_string+=" / Demonskin Adept";};
  if (paragon_dragonsoulheir){class_string+=" / Dragonsoul Heir";};
  if (paragon_wildmage){class_string+=" / Wild Mage";};
  if (paragon_bloodwrathguardian){class_string+=" / Bloodwrath Guardian";};
  if (paragon_hornedchampion){class_string+=" / Horned Champion";};
  if (paragon_stormsentinel){class_string+=" / Storm Sentinel";};
  if (paragon_verdantlord){class_string+=" / Verdant Lord";};

   // kurwa

   if (epic_archmage){class_string+=" / Archmage"; }; 
   if (epic_deadlytrickster){class_string+=" / Deadly trickster"; }; 
   if (epic_demigod){class_string+=" / Demigod"; }; 
   if (epic_chosen){class_string+=" / Chosen"; }; 
   if (epic_eternalseeker){class_string+=" / Eternal seeker"; }; 
   if (epic_other){class_string+=" / "+document.form1.otherepicdestiny.value; }; 
   if (epic_adamantinesoldier){class_string+=" / Adamantine Soldier"; }; 
   if (epic_beastlord){class_string+=" / Beastlord"; }; 
   if (epic_darkwanderer){class_string+=" / Dark Wanderer"; }; 
   if (epic_eternaldefender){class_string+=" / Eternal Defender"; }; 
   if (epic_godhunter){class_string+=" / Godhunter"; }; 
   if (epic_legendarygeneral){class_string+=" / Legendary General"; }; 
   if (epic_martialarchetype){class_string+=" / Martial Archetype"; }; 
   if (epic_perfectassassin){class_string+=" / Perfect Assassin"; }; 
   if (epic_undyingwarrior){class_string+=" / Undying Warrior"; }; 
   if (epic_warmaster){class_string+=" / Warmaster"; }; 
    if (epic_fatesinger){class_string+=" / Fatesinger";};
    if (epic_gloriousspirit){class_string+=" / Glorious Spirit";};
    if (epic_harbingerofdoom){class_string+=" / Harbinger of Doom";};
    if (epic_lorekeeper){class_string+=" / Lorekeeper";};
    if (epic_primalavatar){class_string+=" / Primal Avatar";};
    if (epic_reveredone){class_string+=" / Revered One";};

 }


 function DoHPAndOtherClassStuff(){}

 function SuggestFRLocale(){
  if (paragon_impilturandemonslayer){document.form1.fr_background_list.selectedIndex=16;}
  if (paragon_purpledragonknight){document.form1.fr_background_list.selectedIndex=7;}
  if (paragon_simbarchofaglarond){document.form1.fr_background_list.selectedIndex=1;}
  if (paragon_umbriri){document.form1.fr_background_list.selectedIndex=23;}
  if (paragon_warwizardofcormyr){document.form1.fr_background_list.selectedIndex=7;}
  }

 function lock_classes(){
  if (AllClassStuffAssigned()==false){document.form1.third_comment_box.value="Not yet"}
   else
    {
     GenerateClassString();
     ClassesHaveBeenEstablished=true;
     TurnOffParagonStars();

     document.form1.third_comment_box.value="You chose a " + class_string + ".\r"
     SuggestFRLocale();
//     document.form1.third_comment_box.value +=stringy + "\r"
     if (stringy!=""){document.form1.third_comment_box.value+=stringy+"\r"}

     document.form1.third_comment_box.value +="Now complete the following as applicable.\r"
     if (class_ranger)
      {
       if (dexterity>strength){document.form1.third_comment_box.value +="You probably want to be an archer.\r"}
       if (dexterity<strength){document.form1.third_comment_box.value +="You probably want to be a two-blade ranger.\r"}
      }
      if (class_rogue)
      {
       if (dexterity>strength){document.form1.third_comment_box.value +="You probably want to be an artful dodger.\r"}
       if (dexterity<strength){document.form1.third_comment_box.value +="You probably want to be a brutal scoundrel.\r"}
      }
      if (class_warlord)
      {
       if (intelligence>charisma){document.form1.third_comment_box.value +="You probably want to be a tactical warlord.\r"}
       if (intelligence<charisma){document.form1.third_comment_box.value +="You probably want to be an inspiring warlord.\r"}
      }

      if (class_wizard)
      {
       if ((wisdom>constitution)&(wisdom>dexterity)){document.form1.third_comment_box.value +="You probably want to choose Orb of Imposition.\r"} else
       if ((wisdom==constitution)&(wisdom>dexterity)){document.form1.third_comment_box.value +="You probably want to use an orb or staff.\r"} else
       if ((constitution>wisdom)&(constitution>dexterity)){document.form1.third_comment_box.value +="You probably want to choose Staff of Defense.\r"} else
       if ((constitution==dexterity)&(wisdom<dexterity)){document.form1.third_comment_box.value +="You probably want to use a staff or wand.\r"} else
       if ((dexterity>constitution)&(dexterity>wisdom)){document.form1.third_comment_box.value +="You probably want to choose Wand of Accuracy.\r"} else
       if ((wisdom==dexterity)&(constitution<dexterity)){document.form1.third_comment_box.value +="You probably want to use an orb or wand.\r"} 
      }
     if (class_avenger)
      {
       if (dexterity>intelligence){document.form1.third_comment_box.value +="You probably want to choose censure of Pursuit.\r"}
       if (intelligence>dexterity){document.form1.third_comment_box.value +="You probably want to choose censure of Retribution.\r"}
      }
     if (class_barbarian)
      {
       if (constitution>charisma){document.form1.third_comment_box.value +="You probably want to choose Rageblood Vigor.\r"}
       if (charisma>constitution){document.form1.third_comment_box.value +="You probably want to choose Thaneborn Triumph.\r"}
      }
     if (class_bard)
      {
       if ((intelligence>constitution)&(intelligence>wisdom)){document.form1.third_comment_box.value +="You probably want to choose virtue of Cunning.\r"}
       if ((constitution>intelligence)&(constitution>wisdom)){document.form1.third_comment_box.value +="You probably want to choose virtue of Valor.\r"}
       if ((wisdom>intelligence)&(wisdom>constitution)){document.form1.third_comment_box.value +="You probably want to choose virtue of Prescience.\r"}
      }
     if (class_druid)
      {
       if (constitution>dexterity){document.form1.third_comment_box.value +="You probably want to choose Guardian primal.\r"}
       if (dexterity>constitution){document.form1.third_comment_box.value +="You probably want to choose Predator primal.\r"}
      }
     if (class_invoker)
      {
       if (intelligence>constitution){document.form1.third_comment_box.value +="You probably want to choose the covenant of Preservation.\r"}
       if (constitution>intelligence){document.form1.third_comment_box.value +="You probably want to choose the covenant of Wrath.\r"}
      }
     if (class_shaman)
      {
       if (constitution>intelligence){document.form1.third_comment_box.value +="You probably want to choose Protector Spirit.\r"}
       if (intelligence>constitution){document.form1.third_comment_box.value +="You probably want to choose Stalker Spirit.\r"}
      }
     if (class_sorcerer)
      {
       if (strength>dexterity){document.form1.third_comment_box.value +="You probably want to choose Dragon or Cosmic Magic.\r"}
       if (dexterity>strength){document.form1.third_comment_box.value +="You probably want to choose Wild or Storm Magic.\r"}
      }
     if (class_warden)
      {
       if (constitution>wisdom){document.form1.third_comment_box.value +="You probably want to choose Earthstrength.\r"}
       if (wisdom>constitution){document.form1.third_comment_box.value +="You probably want to choose Wildblood.\r"}
      }
     if ((race_human)|(total_levels>=4))
     {
      if (class_fighter)
      {
       document.form1.third_comment_box.value +="Consider increasing your strength.  ";
       if (constitution<12){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (dexterity<12){document.form1.third_comment_box.value +="Consider increasing your dexterity.  ";}
       if (wisdom<12){document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";}
      }
      if (class_paladin)
      {
       if (strength<12){document.form1.third_comment_box.value +="Consider increasing your strength.  ";}
       if (charisma<12){document.form1.third_comment_box.value +="Consider increasing your charisma.  ";}
       if (wisdom<12){document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";}
      }
      if (class_ranger)
      {
       document.form1.third_comment_box.value +="Consider increasing your dexterity.  ";
       if (strength<12){document.form1.third_comment_box.value +="Consider increasing your strength.  ";}
       if (wisdom<12){document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";}
      }
      if (class_rogue)
      {
       document.form1.third_comment_box.value +="Consider increasing your dexterity.  ";
       if (intelligence<12){document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";}
       if (charisma<12){document.form1.third_comment_box.value +="Consider increasing your charisma.  ";}
      }
      if (class_cleric)
      {
       document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";
       if (strength<12){document.form1.third_comment_box.value +="Consider increasing your strength.  ";}
       if (charisma<12){document.form1.third_comment_box.value +="Consider increasing your charisma.  ";}
      }
      if (class_warlock)
      {
       if (constitution<12){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (charisma<12){document.form1.third_comment_box.value +="Consider increasing your charisma.  ";}
       if (intelligence<12){document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";}
      }
      if (class_warlord)
      {
       if (strength<12){document.form1.third_comment_box.value +="Consider increasing your strength.  ";}
       if (intelligence<12){document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";}
       if (charisma<12){document.form1.third_comment_box.value +="Consider increasing your charisma.  ";}
      }
      if (class_wizard)
      {
       document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";
       if (constitution<12){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (dexterity<12){document.form1.third_comment_box.value +="Consider increasing your dexterity.  ";}
      }
      if (class_swordmage)
      {
       document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";
       if (constitution<12){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (strength<12){document.form1.third_comment_box.value +="Consider increasing your strength.  ";}
      }
      if (class_avenger)
      {
       document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";
       if (dexterity>intelligence){document.form1.third_comment_box.value +="Consider increasing your dexterity.  ";}
       if (intelligence>dexterity){document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";}
       if (dexterity==intelligence){document.form1.third_comment_box.value +="Consider increasing your dexterity or intelligence.  ";}
      }
      if (class_barbarian)
      {
       document.form1.third_comment_box.value +="Consider increasing your strength.  ";
       if (constitution>charisma){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (charisma>constitution){document.form1.third_comment_box.value +="Consider increasing your charisma.  ";}
       if (charisma==constitution){document.form1.third_comment_box.value +="Consider increasing your constitution or charisma.  ";}
      }
      if (class_bard)
      {
       document.form1.third_comment_box.value +="Consider increasing your charisma.  ";
       if ((intelligence>constitution)&(intelligence>wisdom)){document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";}
       if ((constitution>intelligence)&(constitution>wisdom)){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if ((wisdom>intelligence)&(wisdom>constitution)){document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";}
      }
      if (class_druid)
      {
       document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";
       if (dexterity>constitution){document.form1.third_comment_box.value +="Consider increasing your dexterity.  ";}
       if (constitution>dexterity){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (dexterity==constitution){document.form1.third_comment_box.value +="Consider increasing your dexterity or constitution.  ";}
      }
      if (class_invoker)
      {
       document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";
       if (constitution>intelligence){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (intelligence>constitution){document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";}
       if (intelligence==constitution){document.form1.third_comment_box.value +="Consider increasing your constitution or intelligence.  ";}
      }
      if (class_shaman)
      {
       document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";
       if (constitution>intelligence){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (intelligence>constitution){document.form1.third_comment_box.value +="Consider increasing your intelligence.  ";}
       if (constitution==intelligence){document.form1.third_comment_box.value +="Consider increasing your constitution or intelligence.  ";}
      }
      if (class_sorcerer)
      {
       document.form1.third_comment_box.value +="Consider increasing your charisma.  ";
       if (dexterity>strength){document.form1.third_comment_box.value +="Consider increasing your dexterity.  ";}
       if (strength>dexterity){document.form1.third_comment_box.value +="Consider increasing your strength.  ";}
       if (strength==dexterity){document.form1.third_comment_box.value +="Consider increasing your strength or dexterity.  ";}
      }
      if (class_warden)
      {
       document.form1.third_comment_box.value +="Consider increasing your strength.  ";
       if (constitution>wisdom){document.form1.third_comment_box.value +="Consider increasing your constitution.  ";}
       if (wisdom>constitution){document.form1.third_comment_box.value +="Consider increasing your wisdom.  ";}
       if (wisdom==constitution){document.form1.third_comment_box.value +="Consider increasing your wisdom or constitution.  ";}
      }
//      alert("DO CONSIDERINCREASING");
     }
     GetTotalFeatEntitlement(); 
     DoHPAndOtherClassStuff();
     MakeArcaneInitiateList();
     MakeSoulOfSorceryList();
     if (class_cleric){AlreadyKnowsSimpleMeleeWeapons(); AlreadyKnowsSimpleRangedWeapons(); 
      already_knows_leather=true; already_knows_hide=true; already_knows_chainmail=true; }
     if ((class_fighter) | (class_other)){AlreadyKnowsSimpleMeleeWeapons(); AlreadyKnowsMilitaryMeleeWeapons(); AlreadyKnowsSimpleRangedWeapons(); AlreadyKnowsMilitaryRangedWeapons(); 
      already_knows_leather=true; already_knows_hide=true; already_knows_chainmail=true; already_knows_scale=true; already_knows_lightshield=true; already_knows_heavyshield=true; }
     if ((class_paladin) | (class_other)){AlreadyKnowsSimpleMeleeWeapons(); AlreadyKnowsMilitaryMeleeWeapons(); AlreadyKnowsSimpleRangedWeapons(); 
      already_knows_leather=true; already_knows_hide=true; already_knows_chainmail=true; already_knows_scale=true; already_knows_plate=true; already_knows_lightshield=true; already_knows_heavyshield=true; }
     if (class_ranger){AlreadyKnowsSimpleMeleeWeapons(); AlreadyKnowsMilitaryMeleeWeapons(); AlreadyKnowsSimpleRangedWeapons(); AlreadyKnowsMilitaryRangedWeapons(); 
      already_knows_leather=true; already_knows_hide=true; }
     if (class_rogue){already_knows_dagger=true; already_knows_handcrossbow=true; already_knows_shuriken=true; already_knows_sling=true; already_knows_shortsword=true; 
      already_knows_leather=true; }
     if (class_warlock){AlreadyKnowsSimpleMeleeWeapons(); AlreadyKnowsSimpleRangedWeapons(); 
      already_knows_leather=true; }
     if (class_warlord){AlreadyKnowsSimpleMeleeWeapons(); AlreadyKnowsMilitaryMeleeWeapons(); AlreadyKnowsSimpleRangedWeapons(); 
      already_knows_leather=true; already_knows_hide=true; already_knows_chainmail=true; already_knows_lightshield=true; }
     if (class_wizard)
      {
      // alert("gave wizard dagger"); 
       already_knows_dagger=true; 
       if (!small){already_knows_quarterstaff=true; }
      }
     if (class_swordmage)
      {
       AlreadyKnowsSimpleMeleeWeapons(); 
       AlreadyKnowsSimpleRangedWeapons(); 
       already_knows_longsword=true; 
       already_knows_shortsword=true; 
       already_knows_scimitar=true; 
       already_knows_falchion=true; 
       already_knows_glaive=true; 
       already_knows_leather=true; 
      }
     if (class_barbarian)
      {
       AlreadyKnowsSimpleMeleeWeapons(); 
       AlreadyKnowsMilitaryMeleeWeapons();
       already_knows_leather=true;
       already_knows_hide=true;
      }
     if (class_avenger)
     {
      AlreadyKnowsSimpleMeleeWeapons();
      AlreadyKnowsMilitaryMeleeWeapons();
      AlreadyKnowsSimpleRangedWeapons();
     }
     if (class_bard)
     {
      AlreadyKnowsSimpleMeleeWeapons();
      already_knows_longsword=true;
      already_knows_scimitar=true;
      already_knows_shortsword=true;
      AlreadyKnowsSimpleRangedWeapons();
      AlreadyKnowsMilitaryRangedWeapons();
      already_knows_leather=true;
      already_knows_hide=true;
      already_knows_chainmail=true;
      already_knows_lightshield=true;
     }
     if (class_druid)
     {
      AlreadyKnowsSimpleMeleeWeapons();
      AlreadyKnowsSimpleRangedWeapons();
      already_knows_leather=true;
      already_knows_hide=true;
     }
     if (class_invoker)
     {
      AlreadyKnowsSimpleMeleeWeapons();
      AlreadyKnowsSimpleRangedWeapons();
      already_knows_leather=true;
      already_knows_hide=true;
      already_knows_chainmail=true;
     }
     if (class_shaman)
     {
      AlreadyKnowsSimpleMeleeWeapons();
      already_knows_longspear=true;
      already_knows_leather=true;
     }
     if (class_sorcerer)
     {
      AlreadyKnowsSimpleMeleeWeapons();
      AlreadyKnowsSimpleRangedWeapons();
     }
     if (class_warden)
     {
      AlreadyKnowsSimpleMeleeWeapons();
      AlreadyKnowsSimpleRangedWeapons();
      AlreadyKnowsMilitaryMeleeWeapons();
      already_knows_leather=true;
      already_knows_hide=true;
      already_knows_lightshield=true;
      already_knows_heavyshield=true;
     }
     if (race_dwarf){already_knows_throwinghammer=true; already_knows_warhammer=true; }
     if (race_eladrin){already_knows_longsword=true; }
     if (race_elf){already_knows_longbow=true; already_knows_shortbow=true; }
     if (paragon_angelicavenger){already_knows_scythe=true; already_knows_longsword=true; already_knows_scimitar=true; already_knows_falchion=true; already_knows_glaive=true; already_knows_greatsword=true; already_knows_bastardsword=true; }
     if (epic_other){document.form1.epic21[0].checked=true;}
     MandatoryWarlockPact(); 
     MandatoryRangerStyle();
     MandatoryAvengerCensure();
     MandatoryBarbarianFeral();
     MandatoryBardVirtue();
     MandatoryDruidPrimal();
     MandatoryInvokerCovenant();
     MandatoryShamanSpirit();
     MandatorySorcererMagic();
     MandatoryWardenMight();
     RecallPastOtherRace(); 
     RecallPastOtherClass();
     document.form1.fam[0].checked=true;get_fam(-1);
     ArrowShow(); 
   }
  }

 function assignclass(whatclass){
  if (ClassesHaveBeenEstablished==true){ShowHowWeChoseClasses(); ArrowShow(); return;}
  if (CharacterTypeHasBeenEstablished==false){ClearClassButtons(); ClearMultiButtons(); ClearParagonButtons(); ClearEpicDestinyButtons(); ArrowShow(); return;}
    NegateClasses();
    NegateMultis();
    ClearMultiButtons();
    NegateEpicDestinies(); 
    ClearEpicDestinyButtons();
    ClearParagonButtons();
    NegateParagons();
    if (whatclass==1){class_cleric=true; }
    if (whatclass==2){class_fighter=true; }
    if (whatclass==3){class_paladin=true; }
    if (whatclass==4){class_ranger=true; }
    if (whatclass==5){class_rogue=true; }
    if (whatclass==6){class_warlock=true; }
    if (whatclass==7){class_warlord=true; }
    if (whatclass==8){class_wizard=true; } else {document.form1.choose_epic_destiny[0].checked=false; }
    if (whatclass==9){class_avenger=true; }
    if (whatclass==10){class_barbarian=true; }
    if (whatclass==11){class_bard=true; }
    if (whatclass==12){class_druid=true; }
    if (whatclass==13){class_invoker=true; }
    if (whatclass==14){class_shaman=true; }
    if (whatclass==15){class_sorcerer=true; }
    if (whatclass==16){class_warden=true; }
    if (whatclass==17){class_swordmage=true; }
    if (whatclass==100){class_other=true; document.form1.otherparagonpath_box.checked=true; paragon_other=true; }
    NoMultiMatch(); 
    ShowHowWeChoseClasses();
    TurnOnParagonStars();
   ArrowShow(); 
  }


 function NoMultiMatch()
  {
   if (class_invoker){document.form1.choose_multi[17].checked=false;multi_invoker_acolyteofdivinesecrets=false;}
   if (class_sorcerer)
    {
     document.form1.choose_multi[18].checked=false;multi_sorcerer_arcaneprodigy=false;
     document.form1.choose_multi[28].checked=false; multi_sorcerer_soulofsorcery=false;
    }
   if (class_bard)
    {
     document.form1.choose_multi[19].checked=false;multi_bard_bardicdilettante=false;
     document.form1.choose_multi[25].checked=false;multi_bard_bardicritualist=false;
    }
   if (class_barbarian){document.form1.choose_multi[20].checked=false;multi_barbarian_berserkersfury=false;}
   if (class_warden){document.form1.choose_multi[21].checked=false;multi_warden_defenderofthewild=false;}
   if (class_avenger){document.form1.choose_multi[22].checked=false;multi_avenger_discipleofdivinewrath=false;}
   if (class_druid){document.form1.choose_multi[23].checked=false;multi_druid_initiateoftheoldfaith=false;}
   if (class_shaman){document.form1.choose_multi[24].checked=false;multi_shaman_spirittalker=false;}
   if (class_cleric)
    {
     document.form1.choose_multi[1].checked=false; multi_cleric_initiateofthefaith=false;
    }
   if (class_fighter)
    {
     document.form1.choose_multi[2].checked=false; multi_fighter_studentofthesword=false;
     document.form1.choose_multi[11].checked=false; multi_fighter_battleawareness=false;
    }
   if (class_paladin)
    {
     document.form1.choose_multi[3].checked=false; multi_paladin_soldierofthefaith=false;
    }
   if (class_ranger)
    {
     document.form1.choose_multi[4].checked=false; multi_ranger_warriorofthewild=false;
     document.form1.choose_multi[16].checked=false; multi_ranger_twobladewarrior=false;
    }
   if (class_rogue)
    {
     document.form1.choose_multi[5].checked=false; multi_rogue_sneakofshadows=false;
     document.form1.choose_multi[13].checked=false; multi_rogue_ruthlessefficiency=false;
     document.form1.choose_multi[14].checked=false; multi_rogue_slydodge=false;
    }
   if (class_warlock)
    {
     document.form1.choose_multi[6].checked=false; multi_warlock_pactinitiate=false;
     document.form1.choose_multi[29].checked=false; multi_warlock_studentofmalediction=false;
    }
   if (class_warlord)
    {
     document.form1.choose_multi[7].checked=false; multi_warlord_studentofbattle=false;
     document.form1.choose_multi[12].checked=false; multi_warlord_inspiringleader=false;
     document.form1.choose_multi[15].checked=false; multi_warlord_tacticalleader=false;
    }
   if ((class_wizard)|(class_swordmage))
    {
     document.form1.choose_multi[8].checked=false; multi_wizard_initiate=false;
     document.form1.choose_multi[9].checked=false; multi_swordmage_bladeinitiate=false;
     document.form1.choose_multi[27].checked=false; multi_wizard_learnedspellcaster=false;
     document.form1.choose_multi[26].checked=false; multi_swordmage_heartoftheblade=false;
    }
  }

 function NegateMultis(){
     multi_cleric_initiateofthefaith=false; 
     multi_fighter_studentofthesword=false; 
     multi_paladin_soldierofthefaith=false; 
     multi_ranger_warriorofthewild=false; 
     multi_rogue_sneakofshadows=false; 
     multi_warlock_pactinitiate=false; 
     multi_warlord_studentofbattle=false; 
     multi_wizard_arcaneinitiate=false;
     multi_swordmage_bladeinitiate=false;
     multi_fighter_battleawareness=false;
     multi_warlord_inspiringleader=false;
     multi_rogue_ruthlessefficiency=false;
     multi_rogue_slydodge=false;
     multi_warlord_tacticalleader=false;
     multi_ranger_twobladewarrior=false;
     multi_spellscarred=false;

    multi_invoker_acolyteofdivinesecrets=false;
    multi_sorcerer_arcaneprodigy=false;
    multi_bard_bardicdilettante=false;
    multi_barbarian_berserkersfury=false;
    multi_warden_defenderofthewild=false;
    multi_avenger_discipleofdivinewrath=false;
    multi_druid_initiateoftheoldfaith=false;
    multi_shaman_spirittalker=false;
     multi_bard_bardicritualist=false;
     multi_swordmage_heartoftheblade=false;
     multi_wizard_learnedspellcaster=false;
     multi_sorcerer_soulofsorcery=false;
     multi_warlock_studentofmalediction=false; 



  }

 function freegain()
  {
   if (total_levels>=21){return 2;}
   if (total_levels>=11){return 1;}
   return 0;
  }

 function maybegain()
  {
   if (total_levels>=28){x=6;}
   if (total_levels>=24){x=5;}
   if (total_levels>=18){x=4;}
   if (total_levels>=14){x=3;}
   if (total_levels>= 8){x=2;}
   if (total_levels>= 4){x=1;}
   x=0;
   if (race_human){x+=2;}
   return x;
  }

 function assignmulti(whatmulti){
  if (ClassesHaveBeenEstablished==true){ShowHowWeChoseClasses(); ArrowShow(); return;}
  if (CharacterTypeHasBeenEstablished==false){ClearClassButtons(); ClearMultiButtons(); ClearParagonButtons(); ClearEpicDestinyButtons(); ArrowShow(); return;}
  document.form1.choose_paragon[31].checked=false;
   paragon_multiclass=false;
    NegateMultis(); 
    if ((class_cleric)&(whatmulti==1)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_fighter)&(whatmulti==2)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_paladin)&(whatmulti==3)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_ranger)&(whatmulti==4)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_rogue)&(whatmulti==5)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_warlock)&(whatmulti==6)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_warlord)&(whatmulti==7)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_wizard)&(whatmulti==8)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_swordmage)&(whatmulti==9)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_fighter)&(whatmulti==11)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_warlord)&(whatmulti==12)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_rogue)&(whatmulti==13)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_rogue)&(whatmulti==14)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_warlord)&(whatmulti==15)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_ranger)&(whatmulti==16)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_invoker)&(whatmulti==17)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_sorcerer)&(whatmulti==18)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_bard)&(whatmulti==19)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_barbarian)&(whatmulti==20)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_warden)&(whatmulti==21)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_avenger)&(whatmulti==22)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_druid)&(whatmulti==23)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_shaman)&(whatmulti==24)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_bard)&(whatmulti==25)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_swordmage)&(whatmulti==26)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_wizard)&(whatmulti==27)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_sorcerer)&(whatmulti==28)){document.form1.choose_multi[0].checked=true; return; }
    if ((class_warlock)&(whatmulti==29)){document.form1.choose_multi[0].checked=true; return; }
    if (whatmulti==1)
     {
      if (wisdomwaytoolow(13)){return;}
      if (document.form1.choose_class[2].checked)
       {
        alert("Sorry.  My program can't handle a paladin sideclassed as an Initiate of the Faith.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[8].checked)
       {
        alert("Sorry.  My program can't handle an avenger sideclassed as an Initiate of the Faith.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[12].checked)
       {
        alert("Sorry.  My program can't handle an invoker sideclassed as an Initiate of the Faith.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      wisdomalert(13);
     }
    if (whatmulti==2)
     {
      if (strengthwaytoolow(13)){return;}
      strengthalert(13);
     }
    if (whatmulti==3)
     {
      if (strengthwaytoolow(13)){return;}
      if (charismawaytoolow(13)){return;}
      strengthalert(13);
      charismaalert(13);
     }
    if ((whatmulti==4)&(strength>=dexterity)&(strength<13))
     {
      if (strengthwaytoolow(13)){return;}
      strengthalert(13);
     }
    if ((whatmulti==4)&(strength<=dexterity))
     {
      if (dexteritywaytoolow(13)){return;}
      dexterityalert(13);
     } else
    if ((whatmulti==4)&(strength>=dexterity))
     {
      if (strengthwaytoolow(13)){return;}
      strengthalert(13);
     } 
    if (whatmulti==5)
     {
      if (dexteritywaytoolow(13)){return;}

      dexterityalert(13);
     }
    if (whatmulti==6)
     {
     
      if (charismawaytoolow(13)){return;}

      charismaalert(13);
     }
    if (whatmulti==7)
     {
      if (strengthwaytoolow(13)){return;}
      strengthalert(13);
     }
    if (whatmulti==8)
     {
      if (intelligencewaytoolow(13)){return;}
      if (document.form1.choose_class[16].checked)
       {
        alert("Sorry.  My program can't handle a swordmage sideclassed as an Arcane Initiate.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[10].checked)
       {
        alert("Sorry.  My program can't handle a wizard sideclassed as an Arcane Initiate.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[14].checked)
       {
        alert("Sorry.  My program can't handle a sorcerer sideclassed as an Arcane Initiate.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      intelligencealert(13);
     }
    if (whatmulti==9)
     {
      if (intelligencewaytoolow(13)){return;}
      if (document.form1.choose_class[7].checked)
       {
        alert("Sorry.  My program can't handle a wizard sideclassed as a Blade Initiate.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[10].checked)
       {
        alert("Sorry.  My program can't handle a bard sideclassed as a Blade Initiate.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[14].checked)
       {
        alert("Sorry.  My program can't handle a sorcerer sideclassed as a Blade Initiate.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      intelligencealert(13);
     }
    if (whatmulti==11)
     {
      if (strengthwaytoolow(13)){return;}
      if (wisdomwaytoolow(13)){return;}
      strengthalert(13);
      wisdomalert(13);
     }
    if (whatmulti==12)
     {
      if (strengthwaytoolow(13)){return;}
      if (charismawaytoolow(13)){return;}
      strengthalert(13);
      charismaalert(13);
     }
    if (whatmulti==13)
     {
      if (strengthwaytoolow(13)){return;}
      if (dexteritywaytoolow(13)){return;}
      strengthalert(13);
      dexterityalert(13);
     }
    if (whatmulti==14)
     {
      if (dexteritywaytoolow(13)){return;}
      if (charismawaytoolow(13)){return;}
      dexterityalert(13);
      charismaalert(13);
     }
    if (whatmulti==15)
     {
      if (strengthwaytoolow(13)){return;}
      if (intelligencewaytoolow(13)){return;}
      strengthalert(13);
      intelligencealert(13);
     }
    if (whatmulti==16)
     {
      if (strengthwaytoolow(13)){return;}
      if (dexteritywaytoolow(13)){return;}
      strengthalert(13);
      dexterityalert(13);
     }
    if (whatmulti==17)
     {
      if (wisdomwaytoolow(13)){return;}
      if (document.form1.choose_class[0].checked)
       {
        alert("Sorry.  My program can't handle a cleric sideclassed as an Acolyte of Divine Secrets.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[8].checked)
       {
        alert("Sorry.  My program can't handle an avenger sideclassed as an Acolyte of Divine Secrets.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      wisdomalert(13);
     }
    if (whatmulti==18)
     {
      if (charismawaytoolow(13)){return;}
      if (document.form1.choose_class[7].checked)
       {
        alert("Sorry.  My program can't handle a wizard sideclassed as an Arcane Prodigy.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[10].checked)
       {
        alert("Sorry.  My program can't handle a bard sideclassed as an Arcane Prodigy.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[16].checked)
       {
        alert("Sorry.  My program can't handle a swordmage sideclassed as an Arcane Prodigy.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      charismaalert(13);
     }
    if (whatmulti==19)
     {
      if (charismawaytoolow(13)){return;}
      charismaalert(13);
     }
    if (whatmulti==20)
     {
      if (strengthwaytoolow(13)){return;}
      if (constitutionwaytoolow(13)){return;}
      strengthalert(13);
      charismaalert(13);
     }
    if (whatmulti==21)
     {
      if (strengthwaytoolow(13)){return;}
      strengthalert(13);
     }
    if (whatmulti==22)
     {
      if (wisdomwaytoolow(13)){return;}
      if (document.form1.choose_class[0].checked)
       {
        alert("Sorry.  My program can't handle a cleric sideclassed as a Disciple of Divine Wrath.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[12].checked)
       {
        alert("Sorry.  My program can't handle an invoker sideclassed as a Disciple of Divine Wrath.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      wisdomalert(13);
     }
    if (whatmulti==23)
     {
      if (wisdomwaytoolow(13)){return;}
      if (document.form1.choose_class[13].checked)
       {
        alert("Sorry.  My program can't handle a shaman sideclassed as an Initiate of the Old Faith.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[15].checked)
       {
        alert("Sorry.  My program can't handle a warden sideclassed as an Initiate of the Old Faith.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      wisdomalert(13);
     }
    if (whatmulti==24)
     {
      if (wisdomwaytoolow(13)){return;}
      if (document.form1.choose_class[11].checked)
       {
        alert("Sorry.  My program can't handle a druid sideclassed as a Spirit Talker.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[15].checked)
       {
        alert("Sorry.  My program can't handle a warden sideclassed as a Spirit Talker.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      wisdomalert(13);
     }
    if (whatmulti==25)
     {
      if (intelligencewaytoolow(13)){return;}
      if (charismawaytoolow(13)){return;}
      if (document.form1.choose_class[16].checked)
       {
        alert("Sorry.  My program can't handle a swordmage sideclassed as a Bardic Ritualist.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[10].checked)
       {
        alert("Sorry.  My program can't handle a wizard sideclassed as a Bardic Ritualist.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      if (document.form1.choose_class[14].checked)
       {
        alert("Sorry.  My program can't handle a sorcerer sideclassed as a Bardic Ritualist.  Please make another choice");
        document.form1.choose_multi[0].checked=true; return;
       }
      intelligencealert(13);
      charismaalert(13);
     }
    if (whatmulti==26)
     {
      if (intelligencewaytoolow(13)){return;}
      if (constitutionwaytoolow(13)){return;}
      intelligencealert(13);
      constitutionalert(13);
     }
    if (whatmulti==27)
     {
      if (intelligencewaytoolow(13)){return;}
      if (wisdomwaytoolow(13)){return;}
      intelligencealert(13);
      wisdomalert(13);
     }
    if (whatmulti==28)
     {
      if (charismawaytoolow(13)){return;}
      if (strengthwaytoolow(13)){return;}
      charismaalert(13);
      strengthalert(13);
     }
    if (whatmulti==29)
     {
      if (charismawaytoolow(13)){return;}
      if (constitutionwaytoolow(13)){return;}
      charismaalert(13);
      constitutionalert(13);
     }
    if (whatmulti==1){multi_cleric_initiateofthefaith=true; }
    if (whatmulti==2){multi_fighter_studentofthesword=true; }
    if (whatmulti==3){multi_paladin_soldierofthefaith=true; }
    if (whatmulti==4){multi_ranger_warriorofthewild=true; }
    if (whatmulti==5){multi_rogue_sneakofshadows=true; }
    if (whatmulti==6){multi_warlock_pactinitiate=true; }
    if (whatmulti==7){multi_warlord_studentofbattle=true; }
    if (whatmulti==8){multi_wizard_arcaneinitiate=true; }
    if (whatmulti==9){multi_swordmage_bladeinitiate=true; }
    if (whatmulti==10){multi_spellscarred=true; }
    if (whatmulti==11){multi_fighter_battleawareness=true; }
    if (whatmulti==12){multi_warlord_inspiringleader=true; }
    if (whatmulti==13){multi_rogue_ruthlessefficiency=true; }
    if (whatmulti==14){multi_rogue_slydodge=true; }
    if (whatmulti==15){multi_warlord_tacticalleader=true; }
    if (whatmulti==16){multi_ranger_twobladewarrior=true; }
    if (whatmulti==17){multi_invoker_acolyteofdivinesecrets=true;}
    if (whatmulti==18){multi_sorcerer_arcaneprodigy=true;}
    if (whatmulti==19){multi_bard_bardicdilettante=true;}
    if (whatmulti==20){multi_barbarian_berserkersfury=true;}
    if (whatmulti==21){multi_warden_defenderofthewild=true;}
    if (whatmulti==22){multi_avenger_discipleofdivinewrath=true;}
    if (whatmulti==23){multi_druid_initiateoftheoldfaith=true;}
    if (whatmulti==24){multi_shaman_spirittalker=true;}
    if (whatmulti==25){multi_bard_bardicritualist=true;}
    if (whatmulti==26){multi_swordmage_heartoftheblade=true;}
    if (whatmulti==27){multi_wizard_learnedspellcaster=true;}
    if (whatmulti==28){multi_sorcerer_soulofsorcery=true;}
    if (whatmulti==29){multi_warlock_studentofmalediction=true;}

    ShowHowWeChoseClasses();
    TurnOnParagonStars();
   ArrowShow(); 
  }


function FindClassSpot(i){
 if (i==14){return 11; }
 return i-1; 
 }




function ShowHowWeChoseClasses()
 {
// alert("Entering ShowHowWeChoseClasses");
  ClearClassButtons(); 
  document.form1.choose_class[0].checked=class_cleric; 
  document.form1.choose_class[1].checked=class_fighter; 
  document.form1.choose_class[2].checked=class_paladin; 
  document.form1.choose_class[3].checked=class_ranger; 
  document.form1.choose_class[4].checked=class_rogue; 
  document.form1.choose_class[5].checked=class_warlock; 
  document.form1.choose_class[6].checked=class_warlord; 
  document.form1.choose_class[7].checked=class_wizard; 
  document.form1.choose_class[8].checked=class_avenger; 
  document.form1.choose_class[9].checked=class_barbarian; 
  document.form1.choose_class[10].checked=class_bard; 
  document.form1.choose_class[11].checked=class_druid; 
  document.form1.choose_class[12].checked=class_invoker; 
  document.form1.choose_class[13].checked=class_shaman; 
  document.form1.choose_class[14].checked=class_sorcerer; 
  document.form1.choose_class[15].checked=class_warden; 
  document.form1.choose_class[16].checked=class_swordmage; 
  document.form1.choose_class[17].checked=class_other; 

  ClearMultiButtons();
  document.form1.choose_multi[0].checked=true;
  document.form1.choose_multi[1].checked=multi_cleric_initiateofthefaith;  
  document.form1.choose_multi[2].checked=multi_fighter_studentofthesword;  
  document.form1.choose_multi[3].checked=multi_paladin_soldierofthefaith;  
  document.form1.choose_multi[4].checked=multi_ranger_warriorofthewild;
  document.form1.choose_multi[5].checked=multi_rogue_sneakofshadows;  
  document.form1.choose_multi[6].checked=multi_warlock_pactinitiate;   
  document.form1.choose_multi[7].checked=multi_warlord_studentofbattle;  
  document.form1.choose_multi[8].checked=multi_wizard_arcaneinitiate; 
  document.form1.choose_multi[9].checked=multi_swordmage_bladeinitiate; 
  document.form1.choose_multi[10].checked=multi_spellscarred; 
  document.form1.choose_multi[11].checked=multi_fighter_battleawareness;  
  document.form1.choose_multi[12].checked=multi_warlord_inspiringleader;  
  document.form1.choose_multi[13].checked=multi_rogue_ruthlessefficiency;  
  document.form1.choose_multi[14].checked=multi_rogue_slydodge;  
  document.form1.choose_multi[15].checked=multi_warlord_tacticalleader;  
  document.form1.choose_multi[16].checked=multi_ranger_twobladewarrior;  


    document.form1.choose_multi[17].checked=multi_invoker_acolyteofdivinesecrets    
    document.form1.choose_multi[18].checked=multi_sorcerer_arcaneprodigy    
    document.form1.choose_multi[19].checked=multi_bard_bardicdilettante    
    document.form1.choose_multi[20].checked=multi_barbarian_berserkersfury    
    document.form1.choose_multi[21].checked=multi_warden_defenderofthewild    
    document.form1.choose_multi[22].checked=multi_avenger_discipleofdivinewrath    
    document.form1.choose_multi[23].checked=multi_druid_initiateoftheoldfaith    
    document.form1.choose_multi[24].checked=multi_shaman_spirittalker    
    document.form1.choose_multi[25].checked=multi_bard_bardicritualist    
    document.form1.choose_multi[26].checked=multi_swordmage_heartoftheblade    
    document.form1.choose_multi[27].checked=multi_wizard_learnedspellcaster    
    document.form1.choose_multi[28].checked=multi_sorcerer_soulofsorcery    
    document.form1.choose_multi[29].checked=multi_warlock_studentofmalediction    


  document.form1.choose_paragon[0].checked=paragon_angelicavenger;
  document.form1.choose_paragon[1].checked=paragon_divineoracle; 
  document.form1.choose_paragon[2].checked=paragon_radiantservant; 
  document.form1.choose_paragon[3].checked=paragon_warpriest; 
  document.form1.choose_paragon[4].checked=paragon_ironvanguard; 
  document.form1.choose_paragon[5].checked=paragon_kensei; 
  document.form1.choose_paragon[6].checked=paragon_pitfighter; 
  document.form1.choose_paragon[7].checked=paragon_swordmaster; 
  document.form1.choose_paragon[8].checked=paragon_astralweapon; 
  document.form1.choose_paragon[9].checked=paragon_championoforder; 
  document.form1.choose_paragon[10].checked=paragon_hospitaler; 
  document.form1.choose_paragon[11].checked=paragon_justiciar; 
  document.form1.choose_paragon[12].checked=paragon_battlefieldarcher; 
  document.form1.choose_paragon[13].checked=paragon_beaststalker; 
  document.form1.choose_paragon[14].checked=paragon_pathfinder; 
  document.form1.choose_paragon[15].checked=paragon_stormwarden; 
  document.form1.choose_paragon[16].checked=paragon_catburglar; 
  document.form1.choose_paragon[17].checked=paragon_daggermaster; 
  document.form1.choose_paragon[18].checked=paragon_masterinfiltrator; 
  document.form1.choose_paragon[19].checked=paragon_shadowassassin; 
  document.form1.choose_paragon[20].checked=paragon_doomsayer; 
  document.form1.choose_paragon[21].checked=paragon_feytouched; 
  document.form1.choose_paragon[22].checked=paragon_lifestealer; 
  document.form1.choose_paragon[23].checked=paragon_battlecaptain; 
  document.form1.choose_paragon[24].checked=paragon_combatveteran; 
  document.form1.choose_paragon[25].checked=paragon_knightcommander; 
  document.form1.choose_paragon[26].checked=paragon_swordmarshal; 
  document.form1.choose_paragon[27].checked=paragon_battlemage; 
  document.form1.choose_paragon[28].checked=paragon_bloodmage; 
  document.form1.choose_paragon[29].checked=paragon_spellstormmage; 
  document.form1.choose_paragon[30].checked=paragon_wizardofthespiraltower; 
  document.form1.choose_paragon[31].checked=paragon_multiclass; 
  document.form1.choose_paragon[32].checked=paragon_other; 
  document.form1.choose_paragon[33].checked=paragon_anarchofshyr;
  document.form1.choose_paragon[34].checked=paragon_coronalguard;
  document.form1.choose_paragon[35].checked=paragon_darkwalker;
  document.form1.choose_paragon[36].checked=paragon_doomguide;
  document.form1.choose_paragon[37].checked=paragon_drowwanderer;
  document.form1.choose_paragon[38].checked=paragon_eartheartdefender;
  document.form1.choose_paragon[39].checked=paragon_elementaltempest;
  document.form1.choose_paragon[40].checked=paragon_evermeetwarlock;

   document.form1.choose_paragon[41].checked=paragon_ghostofeventide;
   document.form1.choose_paragon[42].checked=paragon_heartwarder;
   document.form1.choose_paragon[43].checked=paragon_highforestscout;
   document.form1.choose_paragon[44].checked=paragon_impilturandemonslayer;
   document.form1.choose_paragon[45].checked=paragon_morninglord;
   document.form1.choose_paragon[46].checked=paragon_purpledragonknight;
   document.form1.choose_paragon[47].checked=paragon_silverstar;
   document.form1.choose_paragon[48].checked=paragon_simbarchofaglarond;
   document.form1.choose_paragon[49].checked=paragon_spellguardwizard;
   document.form1.choose_paragon[50].checked=paragon_spellscarredsavant;
   document.form1.choose_paragon[51].checked=paragon_steelskyliberator;
   document.form1.choose_paragon[52].checked=paragon_swordcoastcorsair;
   document.form1.choose_paragon[53].checked=paragon_umbriri;
   document.form1.choose_paragon[54].checked=paragon_wanderingswordmage;
   document.form1.choose_paragon[55].checked=paragon_warwizardofcormyr;
   document.form1.choose_paragon[56].checked=paragon_whirlwindgenasi;
   document.form1.choose_paragon[57].checked=paragon_wildfiregenasi;
   document.form1.choose_paragon[58].checked=paragon_feralspirit;
   document.form1.choose_paragon[59].checked=paragon_packrunner;
   document.form1.choose_paragon[60].checked=paragon_wildcatstalker;
   document.form1.choose_paragon[61].checked=paragon_bladeofcendriane;
   document.form1.choose_paragon[62].checked=paragon_doomguardmarauder;
   document.form1.choose_paragon[63].checked=paragon_gatecrasher;
   document.form1.choose_paragon[64].checked=paragon_knightofcelestia;
   document.form1.choose_paragon[65].checked=paragon_maleckethjanissary;
   document.form1.choose_paragon[66].checked=paragon_planeshifter;
   document.form1.choose_paragon[67].checked=paragon_shadowcaptain;
   document.form1.choose_paragon[68].checked=paragon_soulguide;
  document.form1.choose_paragon[69].checked=paragon_adroitexplorer;
  document.form1.choose_paragon[70].checked=paragon_ancestralincarnate;
  document.form1.choose_paragon[71].checked=paragon_bloodfurysavage;
  document.form1.choose_paragon[72].checked=paragon_feybeguiler;
  document.form1.choose_paragon[73].checked=paragon_firstbornofmoradin;
  document.form1.choose_paragon[74].checked=paragon_halflingscoundrel;
  document.form1.choose_paragon[75].checked=paragon_moonstalker;
  document.form1.choose_paragon[76].checked=paragon_scionofarkhosia;
  document.form1.choose_paragon[77].checked=paragon_shiereknight;
  document.form1.choose_paragon[78].checked=paragon_stoneblessed;
  document.form1.choose_paragon[79].checked=paragon_turathihighborn;
  document.form1.choose_paragon[80].checked=paragon_twilightguardian;
  document.form1.choose_paragon[81].checked=paragon_hammerofjudgment;
  document.form1.choose_paragon[82].checked=paragon_oathsworn;
  document.form1.choose_paragon[83].checked=paragon_unveiledvisage;
  document.form1.choose_paragon[84].checked=paragon_zealousassassin;
  document.form1.choose_paragon[85].checked=paragon_bearwarrior;
  document.form1.choose_paragon[86].checked=paragon_fearbringerthane;
  document.form1.choose_paragon[87].checked=paragon_frenziedberserker;
  document.form1.choose_paragon[88].checked=paragon_wildrunner;
  document.form1.choose_paragon[89].checked=paragon_studentoftheseven;
  document.form1.choose_paragon[90].checked=paragon_summerrhymer;
  document.form1.choose_paragon[91].checked=paragon_voiceofthunder;
  document.form1.choose_paragon[92].checked=paragon_warchanter;
  document.form1.choose_paragon[93].checked=paragon_bloodmoonstalker;
  document.form1.choose_paragon[94].checked=paragon_guardianofthelivinggate;
  document.form1.choose_paragon[95].checked=paragon_keeperofthehiddenflame;
  document.form1.choose_paragon[96].checked=paragon_skyhunter;
  document.form1.choose_paragon[97].checked=paragon_angelicaspect;
  document.form1.choose_paragon[98].checked=paragon_blightspeaker;
  document.form1.choose_paragon[99].checked=paragon_flameofhope;
  document.form1.choose_paragon[100].checked=paragon_hammerofvengeance;
  document.form1.choose_paragon[101].checked=paragon_discipleoftheworldserpent;
  document.form1.choose_paragon[102].checked=paragon_ghostpanther;
  document.form1.choose_paragon[103].checked=paragon_greatbearshaman;
  document.form1.choose_paragon[104].checked=paragon_spirittempest;
  document.form1.choose_paragon[105].checked=paragon_arcanewellspring;
  document.form1.choose_paragon[106].checked=paragon_demonskinadept;
  document.form1.choose_paragon[107].checked=paragon_dragonsoulheir;
  document.form1.choose_paragon[108].checked=paragon_wildmage;
  document.form1.choose_paragon[109].checked=paragon_bloodwrathguardian;
  document.form1.choose_paragon[110].checked=paragon_hornedchampion;
  document.form1.choose_paragon[111].checked=paragon_stormsentinel;
  document.form1.choose_paragon[112].checked=paragon_verdantlord;
                                  
                                   
  // kurwa
  document.form1.choose_epic_destiny[0].checked=epic_archmage; 
  document.form1.choose_epic_destiny[1].checked=epic_deadlytrickster; 
  document.form1.choose_epic_destiny[2].checked=epic_demigod; 
  document.form1.choose_epic_destiny[3].checked=epic_eternalseeker; 
  document.form1.choose_epic_destiny[4].checked=epic_other; 
  document.form1.choose_epic_destiny[5].checked=epic_chosen; 
  document.form1.choose_epic_destiny[6].checked=epic_adamantinesoldier;
  document.form1.choose_epic_destiny[7].checked=epic_beastlord; 
  document.form1.choose_epic_destiny[8].checked=epic_darkwanderer; 
  document.form1.choose_epic_destiny[9].checked=epic_eternaldefender; 
  document.form1.choose_epic_destiny[10].checked=epic_godhunter; 
  document.form1.choose_epic_destiny[11].checked=epic_legendarygeneral; 
  document.form1.choose_epic_destiny[12].checked=epic_martialarchetype; 
  document.form1.choose_epic_destiny[13].checked=epic_perfectassassin; 
  document.form1.choose_epic_destiny[14].checked=epic_undyingwarrior; 
  document.form1.choose_epic_destiny[15].checked=epic_warmaster;
  document.form1.choose_epic_destiny[16].checked=epic_fatesinger;
  document.form1.choose_epic_destiny[17].checked=epic_gloriousspirit;
  document.form1.choose_epic_destiny[18].checked=epic_harbingerofdoom;
  document.form1.choose_epic_destiny[19].checked=epic_lorekeeper;
  document.form1.choose_epic_destiny[20].checked=epic_primalavatar;
  document.form1.choose_epic_destiny[21].checked=epic_reveredone;
  document.form1.third_comment_box.value=""; 
 } 


function ClearClassButtons(){
  document.form1.choose_class[0].checked=true; 
  document.form1.choose_class[0].checked=false; 
 }

function ClearMultiButtons(){
  document.form1.choose_multi[0].checked=true; 
  document.form1.choose_multi[0].checked=false; 
 }

function ClearLevelButtons(){
  document.form1.totallevels[0].checked=true; 
  document.form1.totallevels[0].checked=false; 
  }

function ClearRaceButtons(){
  document.form1.racechoice[0].checked=true; 
  document.form1.racechoice[0].checked=false; 
 }

function ClearGenderButtons(){
 z=0; while (z<2){
  document.form1.sexchoice[z].checked=false; 
  z++ ; 
  }
 }

function ClearAlignmentButtons(){
 z=0; while (z<9){
  document.form1.alignments[z].checked=false; 
  z++ ; 
  }
 }

function ClearAllAbilityAssignments(){
 z=0; while (z<6){
  document.form1.firststat[z].checked=false; 
  document.form1.secondstat[z].checked=false; 
  document.form1.thirdstat[z].checked=false; 
  document.form1.fourthstat[z].checked=false; 
  document.form1.fifthstat[z].checked=false; 
  document.form1.sixthstat[z].checked=false; 
 z++ ; }
 }

function roll4d6(){
 d1=Math.floor (6*Math.random() + 1); 
 d2=Math.floor (6*Math.random() + 1); 
 d3=Math.floor (6*Math.random() + 1); 
 d4=Math.floor (6*Math.random() + 1); 
 if ((d4<=d3)&(d4<=d2)&(d4<=d1)){return d1 + d2 + d3; }
 else if ((d3<=d4)&(d3<=d2)&(d3<=d1)){return d1 + d2 + d4; }
 else if ((d2<=d4)&(d2<=d2)&(d2<=d1)){return d1 + d3 + d4; }
 else {return d2 + d3 + d4; }
 }

function roll5d6(){

 d1=Math.floor (6*Math.random() + 1); 
 d2=Math.floor (6*Math.random() + 1); 
 d3=Math.floor (6*Math.random() + 1); 
 d4=Math.floor (6*Math.random() + 1); 
 d5=Math.floor (6*Math.random() + 1); 
 if (d2>d1){x=d2; d2=d1; d1=x; }
 if (d3>d2){x=d3; d3=d2; d2=x; }
 if (d4>d3){x=d4; d4=d3; d3=x; }
 if (d5>d4){x=d5; d5=d4; d4=x; }
 if (d2>d1){x=d2; d2=d1; d1=x; }
 if (d3>d2){x=d3; d3=d2; d2=x; }
 if (d4>d3){x=d4; d4=d3; d3=x; }
 if (d5>d4){x=d5; d5=d4; d4=x; }
 if (d2>d1){x=d2; d2=d1; d1=x; }
 if (d3>d2){x=d3; d3=d2; d2=x; }
 if (d4>d3){x=d4; d4=d3; d3=x; }
 if (d5>d4){x=d5; d5=d4; d4=x; }
 if (d2>d1){x=d2; d2=d1; d1=x; }
 if (d3>d2){x=d3; d3=d2; d2=x; }
 if (d4>d3){x=d4; d4=d3; d3=x; }
 if (d5>d4){x=d5; d5=d4; d4=x; }

 return (d1 + d2 + d3); 
 }

function roll3d6(){
 d1=Math.floor (6*Math.random() + 1); 
 d2=Math.floor (6*Math.random() + 1); 
 d3=Math.floor (6*Math.random() + 1); 
 return d1 + d2 + d3; 
 }

function RollTheDice(){
 stat1=roll4d6(); 
 stat2=roll4d6(); 
 stat3=roll4d6(); 
 stat4=roll4d6(); 
 stat5=roll4d6(); 
 stat6=roll4d6(); 
 AdjustIfTooLow4(); 
 if (document.form1.methods_list.selectedIndex==1+2)
  {
   stat1=roll5d6(); 
   stat2=roll5d6(); 
   stat3=roll5d6(); 
   stat4=roll5d6(); 
   stat5=roll5d6(); 
   stat6=roll5d6(); 
   AdjustIfTooLow5(); 
  }
 if (document.form1.methods_list.selectedIndex==5+2)
  {
   stat1=roll3d6(); 
   stat2=roll3d6(); 
   stat3=roll3d6(); 
   stat4=roll3d6(); 
   stat5=roll3d6(); 
   stat6=roll3d6(); 
   AdjustIfTooLow3(); 
  }
 if (document.form1.methods_list.selectedIndex==0)
  {
   stat1=16; 
   stat2=15; 
   stat3=14; 
   stat4=13; 
   stat5=12; 
   stat6=10; 
  }
 if (document.form1.methods_list.selectedIndex==4+2)
  {
   stat1=13; 
   stat2=12; 
   stat3=11; 
   stat4=10; 
   stat5=9; 
   stat6=8; 
  }
 if (document.form1.methods_list.selectedIndex==2+2)
  {
   stat1=15; 
   stat2=14; 
   stat3=13; 
   stat4=12; 
   stat5=10; 
   stat6=8; 
  }
  if (document.form1.methods_list.selectedIndex==6+2)
  {
   stat1=3; 
   stat2=3; 
   stat3=3; 
   stat4=3; 
   stat5=3; 
   stat6=3; 
   document.form1.stat1_list.selectedIndex=0; 
   document.form1.stat2_list.selectedIndex=0; 
   document.form1.stat3_list.selectedIndex=0; 
   document.form1.stat4_list.selectedIndex=0; 
   document.form1.stat5_list.selectedIndex=0; 
   document.form1.stat6_list.selectedIndex=0; 
   DiceHaveBeenRolled=true; 
   DisplayTrueStatistics(); 
  }
 if (document.form1.methods_list.selectedIndex==3+2)
  {
   stat1=8; 
   stat2=8; 
   stat3=8; 
   stat4=8; 
   stat5=8; 
   stat6=8; 
   document.form1.stat1_list.selectedIndex=5; 
   document.form1.stat2_list.selectedIndex=5; 
   document.form1.stat3_list.selectedIndex=5; 
   document.form1.stat4_list.selectedIndex=5; 
   document.form1.stat5_list.selectedIndex=5; 
   document.form1.stat6_list.selectedIndex=5; 
   DiceHaveBeenRolled=true; 
   DisplayTrueStatistics(); 
  }
 if (document.form1.methods_list.selectedIndex==1)
  {
   stat1=8; 
   stat2=10; 
   stat3=10; 
   stat4=10; 
   stat5=10; 
   stat6=10; 
   document.form1.stat1_list.selectedIndex=5; 
   document.form1.stat2_list.selectedIndex=7; 
   document.form1.stat3_list.selectedIndex=7; 
   document.form1.stat4_list.selectedIndex=7; 
   document.form1.stat5_list.selectedIndex=7; 
   document.form1.stat6_list.selectedIndex=7; 
   DiceHaveBeenRolled=true; 
   DisplayTrueStatistics(); 
  }


 }


function assignlevel(i){
  if (CharacterTypeHasBeenEstablished==true)
   {
    ClearLevelButtons(); 
    document.form1.totallevels[total_levels-1].checked=true; 
   }
  else if (AbilitiesHaveBeenEstablished==false){ClearLevelButtons(); } 
  else {total_levels=i; ThisTakesAMoment(); }
   ArrowShow(); 
  }

 function assigngender(i){
  if (CharacterTypeHasBeenEstablished==true)
   {
    ClearGenderButtons(); 
    document.form1.sexchoice[2-gender].checked=true; 
   }

  else if (AbilitiesHaveBeenEstablished==false){ClearGenderButtons(); } else
  {gender=i; ThisTakesAMoment(); ArrowShow(); }
  }

 function assignrace(i){
  if (CharacterTypeHasBeenEstablished==true)
   {
    if (race_human){document.form1.racechoice[0].checked=true; }
    if (race_dragonborn){document.form1.racechoice[1].checked=true; }
    if (race_dwarf){document.form1.racechoice[2].checked=true; }
    if (race_eladrin){document.form1.racechoice[3].checked=true; }
    if (race_elf){document.form1.racechoice[4].checked=true; }
    if (race_halfelf){document.form1.racechoice[5].checked=true; }
    if (race_halfling){document.form1.racechoice[6].checked=true; }
    if (race_tiefling){document.form1.racechoice[7].checked=true; }
    if (race_bladeling){document.form1.racechoice[8].checked=true; }
    if (race_bugbear){document.form1.racechoice[9].checked=true; }
    if (race_deva){document.form1.racechoice[10].checked=true; }
    if (race_doppelganger){document.form1.racechoice[11].checked=true; }
    if (race_drow){document.form1.racechoice[12].checked=true; }
    if (race_genasi){document.form1.racechoice[13].checked=true; }
    if (race_githyanki){document.form1.racechoice[14].checked=true; }
    if (race_githzerai){document.form1.racechoice[15].checked=true; }
    if (race_gnoll){document.form1.racechoice[16].checked=true; }
    if (race_gnome){document.form1.racechoice[17].checked=true; }
    if (race_goblin){document.form1.racechoice[18].checked=true; }
    if (race_goliath){document.form1.racechoice[19].checked=true; }
    if (race_halforc){document.form1.racechoice[20].checked=true; }
    if (race_hobgoblin){document.form1.racechoice[21].checked=true; }
    if (race_kobold){document.form1.racechoice[22].checked=true; }
    if (race_minotaur){document.form1.racechoice[23].checked=true; }
    if (race_orc){document.form1.racechoice[24].checked=true; }
    if (race_shadarkai){document.form1.racechoice[25].checked=true; }
    if (race_shifterlongtooth){document.form1.racechoice[26].checked=true; }
    if (race_shifterrazorclaw){document.form1.racechoice[27].checked=true; }
    if (race_warforged){document.form1.racechoice[28].checked=true; }
    if (race_other){document.form1.racechoice[29].checked=true; }
//    alert("remember race"); 
   }

  else if (AbilitiesHaveBeenEstablished==false){ClearRaceButtons(); } else
  {
   NegateRaces()
   if (i==1){race_human=true; }
   if (i==2){race_dragonborn=true; }
   if (i==3){race_dwarf=true; }
   if (i==4){race_eladrin=true; }
   if (i==5){race_elf=true; }
   if (i==6){race_halfelf=true; }
   if (i==7){race_halfling=true; }
   if (i==8){race_tiefling=true; }
    if (i==9){race_bladeling=true; }
    if (i==10){race_bugbear=true; }
    if (i==11){race_deva=true; }
    if (i==12){race_doppelganger=true; }
    if (i==13){race_drow=true; }
    if (i==14){ race_genasi=true; }
    if (i==15){race_githyanki=true; }
    if (i==16){race_githzerai=true; }
    if (i==17){race_gnoll=true; }
    if (i==18){race_gnome=true; }
    if (i==19){race_goblin=true; }
    if (i==20){race_goliath=true; }
    if (i==21){race_halforc=true; }
    if (i==22){race_hobgoblin=true; }
    if (i==23){race_kobold=true; }
    if (i==24){race_minotaur=true; }
    if (i==25){race_orc=true; }
    if (i==26){race_shadarkai=true; }
    if (i==27){race_shifterlongtooth=true; }
    if (i==28){race_shifterrazorclaw=true; }
    if (i==29){race_warforged=true; }
    if (i==100){race_other=true; }
   ThisTakesAMoment(); ArrowShow(); }
  }

function ClearEpicDestinyButtons(){
 document.form1.choose_epic_destiny[0].checked=true; 
 document.form1.choose_epic_destiny[0].checked=false; 
 }

function ClearParagonButtons(){
 document.form1.choose_paragon[0].checked=true; 
 document.form1.choose_paragon[0].checked=false; 
 }

//<input onclick=assignrogueparagon(1) type=radio value=1 name=choose_rogue_paragon>Cat burglar&nbsp; &nbsp; <br>


 function assignepicdestiny(i){
//  alert("entering assignepicdestiny i="+i); 
  if (ClassesHaveBeenEstablished==true){ShowHowWeChoseClasses(); ArrowShow(); return;}
  if (CharacterTypeHasBeenEstablished==false){ClearClassButtons(); ClearMultiButtons(); ClearParagonButtons(); ClearEpicDestinyButtons(); ArrowShow(); return;}
    NegateEpicDestinies(); 
//  alert("in assignepicdestiny i="+i); 
    if (total_levels<21){ClearEpicDestinyButtons(); ArrowShow(); return; }  
    if (i==1)
     {
      if ((!class_wizard)&(!multi_wizard())){alert("Only wizards can be archmages."); ClearEpicDestinyButtons(); ArrowShow(); return; }  
      epic_archmage=true; 
     }
    if (i==2){epic_deadlytrickster=true; }
    if (i==3){epic_demigod=true; }
    if (i==4){epic_eternalseeker=true; }
    if (i==5){epic_other=true; }
    if (i==6){epic_chosen=true; }
    if (i==7)
     {
      if ((!warlordclass())&(!fighterclass())){alert("Only fighters and warlords can be adamantine soldiers."); ClearEpicDestinyButtons(); ArrowShow(); return; }  
      epic_adamantinesoldier=true;
     }
    if (i==8)
     {
      if ((!class_ranger)|(paragon_battlefieldarcher)|(paragon_highforestscout)|(paragon_beaststalker)|(paragon_pathfinder)|(paragon_stormwarden)|(paragon_impilturandemonslayer)){alert("Only rangers qualified as beastmasters can take this epic destiny."); ClearEpicDestinyButtons(); ArrowShow(); return; }  
      epic_beastlord=true;
     }
    if (i==9)
     {
      if ((!rangerclass())&(!rogueclass())){alert("Only rangers and rogues can be dark wanderers."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_darkwanderer=true;
     }
    if (i==10)
     {
      if (!fighterclass()){alert("Only fighters can be eternal defenders."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_eternaldefender=true;
     }
    if (i==11)
     {
      if ((!rangerclass())&(!rogueclass())){alert("Only rangers and rogues can be godhunters."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_godhunter=true;
     }
    if (i==12)
     {
      if (!warlordclass()){alert("Only warlords can be legendary generals."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_legendarygeneral=true;
     }
    if (i==13)
     {
      if ((!AnyMartialClass())|((!multi_fighter())&(!multi_rogue())&(!multi_ranger())&(!multi_warlord()))|(!paragon_multiclass))
       {alert("Martial Archetypes must be martial-classed characters, multiclassing in a second martial class, and taking paragon multiclass.")
       ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_martialarchetype=true;
     }
    if (i==14)
     {
      if (!rogueclass()){alert("Only rogues can be perfect assassins."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_perfectassassin=true;
     }
    if (i==15)
     {
      if (!fighterclass()){alert("Only fighters can be undying warriors."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_undyingwarrior=true;
     }
    if (i==16)
     {
      if (!warlordclass()){alert("Only warlords can be warmasters."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_warmaster=true;
     }
    if (i==17)
     {
      if (!bardclass()){alert("Only bards can be fatesingers."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_fatesinger=true;
     }
    if (i==18)
     {
      if (
         (!barbarianclass())
         &
         (!druidclass())
         &
         (!shamanclass())
         &
         (!wardenclass())
         )
         {alert("Only primal class characters can be glorious spirits."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_gloriousspirit=true;
     }
    if (i==19)
     {
      epic_harbingerofdoom=true;
     }
    if (i==20)
     {
      if ((wisdom<16)&(intelligence<16)){alert("You will have trouble raising wisdom / intelligence to 21 as required for lorekeepers."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_lorekeeper=true;
     }
    if (i==21)
     {
      if (
         (!barbarianclass())
         &
         (!druidclass())
         &
         (!shamanclass())
         &
         (!wardenclass())
         )
         {alert("Only primal class characters can be primal avatars."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_primalavatar=true;
     }
    if (i==22)
     {
      if (
         (!paladinclass())
         &
         (!clericclass())
         &
         (!avengerclass())
         &
         (!invokerclass())
         ){alert("Only divine-class characters can be revered ones."); ClearEpicDestinyButtons(); ArrowShow(); return; }
      epic_reveredone=true;
     }
    ShowHowWeChoseClasses(); 
   ArrowShow(); 
  }






function qualified_cleric(){
 if (class_cleric){return true; }
 if (multi_cleric()){return true; }
 return false; 
 }

function qualified_fighter(){
 if (class_fighter){return true; }
 if (multi_fighter()){return true; }
 return false; 
 }

function qualified_paladin(){
 if (class_paladin){return true; }
 if (multi_paladin()){return true; }
 return false; 
 }

function qualified_ranger(){
 if (class_ranger){return true; }
 if (multi_ranger()){return true; }
 return false; 
 }

function qualified_rogue(){
 if (class_rogue){return true; }
 if (multi_rogue()){return true; }
 return false; 
 }

function qualified_warlock(){
 if (class_warlock){return true; }
 if (multi_warlock()){return true; }
 return false; 
 }

function qualified_warlord(){
 if (class_warlord){return true; }
 if (multi_warlord()){return true; }
 return false; 
 }

function qualified_wizard(){
 if (class_wizard){return true; }
 if (multi_wizard()){return true; }
 return false; 
 }

function qualified_swordmage(){
 if (class_swordmage){return true; }
 if (multi_swordmage()){return true; }
 return false; 
 }

function qualified_barbarian(){
 if (class_barbarian){return true; }
 if (multi_barbarian()){return true; }
 return false; 
 }

function qualified_avenger(){
 if (class_avenger){return true; }
 if (multi_avenger()){return true; }
 return false; 
 }

function qualified_bard(){
 if (class_bard){return true; }
 if (multi_bard()){return true; }
 return false; 
 }

function qualified_druid(){
 if (class_druid){return true; }
 if (multi_druid()){return true; }
 return false; 
 }

function qualified_invoker(){
 if (class_invoker){return true; }
 if (multi_invoker()){return true; }
 return false; 
 }

function qualified_shaman(){
 if (class_shaman){return true; }
 if (multi_shaman()){return true; }
 return false; 
 }

function qualified_sorcerer(){
 if (class_sorcerer){return true; }
 if (multi_sorcerer()){return true; }
 return false; 
 }

function qualified_warden(){
 if (class_warden){return true; }
 if (multi_warden()){return true; }
 return false; 
 }

function qualified_spellscarred(){
 if (multi_spellscarred){return true; }
 return false; 
 }

function NegateEpicDestinies(){
 epic_archmage=false; 
 epic_deadlytrickster=false; 
 epic_demigod=false; 
 epic_chosen=false; 
 epic_eternalseeker=false; 
 epic_other=false; 
 epic_adamantinesoldier=false; 
 epic_beastlord=false; 
 epic_darkwanderer=false; 
 epic_eternaldefender=false; 
 epic_godhunter=false; 
 epic_legendarygeneral=false; 
 epic_martialarchetype=false; 
 epic_perfectassassin=false; 
 epic_undyingwarrior=false; 
 epic_warmaster=false;
 epic_fatesinger=false;
 epic_gloriousspirit=false;
 epic_harbingerofdoom=false;
 epic_lorekeeper=false;
 epic_primalavatar=false;
 epic_reveredone=false;

 document.form1.choose_epic_destiny[0].checked=true;
 document.form1.choose_epic_destiny[0].checked=false;
 }


function NegateParagons(){
//   alert("entering negateparagons");
    paragon_angelicavenger=false; 
    paragon_divineoracle=false; 
    paragon_radiantservant=false; 
    paragon_warpriest=false; 
    paragon_ironvanguard=false; 
    paragon_kensei=false; 
    paragon_pitfighter=false; 
    paragon_swordmaster=false; 
    paragon_astralweapon=false; 
    paragon_championoforder=false; 
    paragon_hospitaler=false; 
    paragon_justiciar=false; 
    paragon_battlefieldarcher=false; 
    paragon_beaststalker=false; 
    paragon_pathfinder=false; 
    paragon_stormarden=false; 
    paragon_catburglar=false; 
    paragon_daggermaster=false; 
    paragon_masterinfiltrator=false; 
    paragon_shadowassassin=false; 
    paragon_doomsayer=false; 
    paragon_feytouched=false; 
    paragon_lifestealer=false; 
    paragon_battlecaptain=false; 
    paragon_combatveteran=false; 
    paragon_knightcommander=false; 
    paragon_swordmarshal=false; 
    paragon_battlemage=false; 
    paragon_bloodmage=false; 
    paragon_spellstormmage=false; 
    paragon_wizardofthespiraltower=false; 
    paragon_other=false; 
    paragon_multiclass=false;
    paragon_anarchofshyr=false;
    paragon_coronalguard=false;
    paragon_darkwalker=false;
    paragon_doomguide=false;
    paragon_drowwanderer=false;
    paragon_eartheartdefender=false;
    paragon_elementaltempest=false;
    paragon_evermeetwarlock=false;
    paragon_ghostofeventide=false;
    paragon_heartwarder=false;
    paragon_highforestscout=false;
    paragon_impilturandemonslayer=false;
    paragon_morninglord=false;
    paragon_purpledragonknight=false;
    paragon_silverstar=false;
    paragon_simbarchofaglarond=false;
    paragon_spellguardwizard=false;
    paragon_spellscarredsavant=false;
    paragon_steelskyliberator=false;
    paragon_swordcoastcorsair=false;
    paragon_umbriri=false;
    paragon_wanderingswordmage=false;
    paragon_warwizardofcormyr=false;
    paragon_whirlwindgenasi=false;
    paragon_wildfiregenasi=false;
    paragon_feralspirit=false;
    paragon_packrunner=false;
    paragon_wildcatstalker=false;
    paragon_bladeofcendriane=false;
    paragon_doomguardmarauder=false;
    paragon_gatecrasher=false;
    paragon_knightofcelestia=false;
    paragon_maleckethjanissary=false;
    paragon_planeshifter=false;
    paragon_shadowcaptain=false;
    paragon_soulguide=false;

    paragon_adroitexplorer=false;
    paragon_ancestralincarnate=false;
    paragon_bloodfurysavage=false;
    paragon_feybeguiler=false;
    paragon_firstbornofmoradin=false;
    paragon_halflingscoundrel=false;
    paragon_moonstalker=false;
    paragon_scionofarkhosia=false;
    paragon_shiereknight=false;
    paragon_stoneblessed=false;
    paragon_turathihighborn=false;
    paragon_twilightguardian=false;
    paragon_hammerofjudgment=false;
    paragon_oathsworn=false;
    paragon_unveiledvisage=false;
    paragon_zealousassassin=false;
    paragon_bearwarrior=false;
    paragon_fearbringerthane=false;
    paragon_frenziedberserker=false;
    paragon_wildrunner=false;
    paragon_studentoftheseven=false;
    paragon_summerrhymer=false;
    paragon_voiceofthunder=false;
    paragon_warchanter=false;
    paragon_bloodmoonstalker=false;
    paragon_guardianofthelivinggate=false;
    paragon_keeperofthehiddenflame=false;
    paragon_skyhunter=false;
    paragon_angelicaspect=false;
    paragon_blightspeaker=false;
    paragon_flameofhope=false;
    paragon_hammerofvengeance=false;
    paragon_discipleoftheworldserpent=false;
    paragon_ghostpanther=false;
    paragon_greatbearshaman=false;
    paragon_spirittempest=false;
    paragon_arcanewellspring=false;
    paragon_demonskinadept=false;
    paragon_dragonsoulheir=false;
    paragon_wildmage=false;
    paragon_bloodwrathguardian=false;
    paragon_hornedchampion=false;
    paragon_stormsentinel=false;
    paragon_verdantlord=false;

//    alert("negated wildfiregenasi="+paragon_wildfiregenasi);
    //kurwa
 }

function NegateRaces(){

 race_human=false; 
 race_dragonborn=false; 
 race_dwarf=false; 
 race_eladrin=false; 
 race_elf=false; 
 race_halfelf=false; 
 race_halfling=false; 
 race_tiefling=false; 
 race_bugbear=false; 
 race_doppelganger=false; 
 race_drow=false; 
 race_genasi=false; 
 race_bladeling=false; 
 race_deva=false; 
 race_halforc=false; 
 race_goliath=false; 
 race_githyanki=false; 
 race_githzerai=false; 
 race_gnoll=false; 
 race_gnome=false; 
 race_goblin=false; 
 race_hobgoblin=false; 
 race_kobold=false; 
 race_minotaur=false; 
 race_orc=false; 
 race_shadarkai=false; 
 race_shifterlongtooth=false; 
 race_shifterrazorclaw=false; 
 race_warforged=false; 
 race_other=false; 

 }

function NegateClasses(){
 NegateParagons(); ClearParagonButtons(); 
 NegateEpicDestinies(); ClearEpicDestinyButtons(); 
 class_cleric=false; 
 class_fighter=false; 
 class_paladin=false; 
 class_ranger=false; 
 class_rogue=false; 
 class_warlock=false; 
 class_warlord=false; 
 class_wizard=false; 
 class_swordmage=false; 
 class_avenger=false; 
 class_barbarian=false; 
 class_bard=false; 
 class_invoker=false; 
 class_druid=false; 
 class_shaman=false; 
 class_sorcerer=false; 
 class_warden=false; 
 class_other=false; 
 
 }

function BasicClassAssigned(){
 if (class_cleric){return true; }
 if (class_fighter){return true; }
 if (class_paladin){return true; }
 if (class_ranger){return true; }
 if (class_rogue){return true; }
 if (class_warlock){return true; }
 if (class_warlord){return true; }
 if (class_wizard){return true; }
 if (class_swordmage){return true; }
 if (class_avenger){return true; }
 if (class_barbarian){return true; }
 if (class_bard){return true; }
 if (class_druid){return true; }
 if (class_invoker){return true; }
 if (class_shaman){return true; }
 if (class_sorcerer){return true; }
 if (class_warden){return true; }
 if (class_other){return true; }
 return false; 
 }

function AllClassStuffAssigned(){
 if (BasicClassAssigned()==false){return false; }
 if (total_levels<11){return true; }
 if (ParagonPathAssigned()==false){return false; }
 if (total_levels<21){return true; }
 if (EpicDestinyAssigned()==false){return false; }
 return true; 
 }

function EpicDestinyAssigned(){
 if (!BasicClassAssigned()){return false; }
 if (epic_archmage==true){return true; }
 if (epic_deadlytrickster==true){return true; }
 if (epic_demigod==true){return true; }
 if (epic_chosen==true){return true; }
 if (epic_eternalseeker==true){return true; }
 if (epic_other==true){return true; }
 if (epic_adamantinesoldier){return true;} 
 if (epic_beastlord){return true;} 
 if (epic_darkwanderer){return true;} 
 if (epic_eternaldefender){return true;} 
 if (epic_godhunter){return true;} 
 if (epic_legendarygeneral){return true;} 
 if (epic_martialarchetype){return true;} 
 if (epic_perfectassassin){return true;} 
 if (epic_undyingwarrior){return true;} 
 if (epic_warmaster){return true;}
 if (epic_fatesinger){return true;}
 if (epic_gloriousspirit){return true;}
 if (epic_harbingerofdoom){return true;}
 if (epic_lorekeeper){return true;}
 if (epic_primalavatar){return true;}
 if (epic_reveredone){return true;}
 return false; 
 }

function ParagonPathAssigned(){
// alert("Entering ParagonPathAssigned()");
  if (paragon_angelicavenger==true){return true; }
  if (paragon_divineoracle==true){return true; }
  if (paragon_radiantservant==true){return true; }
  if (paragon_warpriest==true){return true; }
  if (paragon_ironvanguard==true){return true; }
  if (paragon_kensei==true){return true; }
  if (paragon_pitfighter==true){return true; }
  if (paragon_swordmaster==true){return true; }
  if (paragon_astralweapon==true){return true; }
  if (paragon_championoforder==true){return true; }
  if (paragon_hospitaler==true){return true; }
  if (paragon_justiciar==true){return true; }
  if (paragon_battlefieldarcher==true){return true; }
  if (paragon_beaststalker==true){return true; }
  if (paragon_pathfinder==true){return true; }
  if (paragon_stormwarden==true){return true; }
  if (paragon_catburglar==true){return true; }
  if (paragon_daggermaster==true){return true; }
  if (paragon_masterinfiltrator==true){return true; }
  if (paragon_shadowassassin==true){return true; }
  if (paragon_doomsayer==true){return true; }
  if (paragon_feytouched==true){return true; }
  if (paragon_lifestealer==true){return true; }
  if (paragon_battlecaptain==true){return true; }
  if (paragon_combatveteran==true){return true; }
  if (paragon_knightcommander==true){return true; }
  if (paragon_swordmarshal==true){return true; }
  if (paragon_battlemage==true){return true; }
  if (paragon_bloodmage==true){return true; }
  if (paragon_spellstormmage==true){return true; }
  if (paragon_wizardofthespiraltower==true){return true; }
  if (paragon_other==true){return true; }
  if (paragon_multiclass==true){return true; }
  if (paragon_anarchofshyr==true){return true; }
  if (paragon_coronalguard==true){return true;}
  if (paragon_darkwalker==true){return true;}
  if (paragon_doomguide==true){return true;}
  if (paragon_drowwanderer==true){return true;}
  if (paragon_eartheartdefender==true){return true;}
  if (paragon_elementaltempest==true){return true;}
  if (paragon_evermeetwarlock==true){return true;}
  if (paragon_ghostofeventide==true){return true;};
  if (paragon_heartwarder==true){return true;};
  if (paragon_highforestscout==true){return true;};
  if (paragon_impilturandemonslayer==true){return true;};
  if (paragon_morninglord==true){return true;};
  if (paragon_purpledragonknight==true){return true;};
  if (paragon_silverstar==true){return true;};
  if (paragon_simbarchofaglarond==true){return true;};
  if (paragon_spellguardwizard==true){return true;};
  if (paragon_spellscarredsavant==true){return true;};
  if (paragon_steelskyliberator==true){return true;};
  if (paragon_swordcoastcorsair==true){return true;};
  if (paragon_umbriri==true){return true;};
  if (paragon_wanderingswordmage==true){return true;};
  if (paragon_warwizardofcormyr==true){return true;};
  if (paragon_whirlwindgenasi==true){return true;};
  if (paragon_wildfiregenasi==true){return true;};
  if (paragon_feralspirit==true){return true;};
  if (paragon_packrunner==true){return true;};
  if (paragon_wildcatstalker==true){return true;};
  if (paragon_bladeofcendriane==true){return true;};
  if (paragon_doomguardmarauder==true){return true;};
  if (paragon_gatecrasher==true){return true;};
  if (paragon_knightofcelestia==true){return true;};
  if (paragon_maleckethjanissary==true){return true;};
  if (paragon_planeshifter==true){return true;};
  if (paragon_shadowcaptain==true){return true;};
  if (paragon_soulguide==true){return true;};



  if (paragon_adroitexplorer==true){return true;}
  if (paragon_ancestralincarnate==true){return true;}
  if (paragon_bloodfurysavage==true){return true;}
  if (paragon_feybeguiler==true){return true;}
  if (paragon_firstbornofmoradin==true){return true;}
  if (paragon_halflingscoundrel==true){return true;}
  if (paragon_moonstalker==true){return true;}
  if (paragon_scionofarkhosia==true){return true;}
  if (paragon_shiereknight==true){return true;}
  if (paragon_stoneblessed==true){return true;}
  if (paragon_turathihighborn==true){return true;}
  if (paragon_twilightguardian==true){return true;}
  if (paragon_hammerofjudgment==true){return true;}
  if (paragon_oathsworn==true){return true;}
  if (paragon_unveiledvisage==true){return true;}
  if (paragon_zealousassassin==true){return true;}
  if (paragon_bearwarrior==true){return true;}
  if (paragon_fearbringerthane==true){return true;}
  if (paragon_frenziedberserker==true){return true;}
  if (paragon_wildrunner==true){return true;}
  if (paragon_studentoftheseven==true){return true;}
  if (paragon_summerrhymer==true){return true;}
  if (paragon_voiceofthunder==true){return true;}
  if (paragon_warchanter==true){return true;}
  if (paragon_bloodmoonstalker==true){return true;}
  if (paragon_guardianofthelivinggate==true){return true;}
  if (paragon_keeperofthehiddenflame==true){return true;}
  if (paragon_skyhunter==true){return true;}
  if (paragon_angelicaspect==true){return true;}
  if (paragon_blightspeaker==true){return true;}
  if (paragon_flameofhope==true){return true;}
  if (paragon_hammerofvengeance==true){return true;}
  if (paragon_discipleoftheworldserpent==true){return true;}
  if (paragon_ghostpanther==true){return true;}
  if (paragon_greatbearshaman==true){return true;}
  if (paragon_spirittempest==true){return true;}
  if (paragon_arcanewellspring==true){return true;}
  if (paragon_demonskinadept==true){return true;}
  if (paragon_dragonsoulheir==true){return true;}
  if (paragon_wildmage==true){return true;}
  if (paragon_bloodwrathguardian==true){return true;}
  if (paragon_hornedchampion==true){return true;}
  if (paragon_stormsentinel==true){return true;}
  if (paragon_verdantlord==true){return true;}



  //kurwa

 return false; 
 }

function RaceAssigned(){
 if (race_human){return true; }
 if (race_dragonborn){return true; }
 if (race_dwarf){return true; }
 if (race_eladrin){return true; }
 if (race_halfelf){return true; }
 if (race_halfling){return true; }
 if (race_elf){return true; }
 if (race_tiefling){return true; }
 if (race_bugbear){return true; }
 if (race_doppelganger){return true; }
 if (race_drow){return true; }
 if (race_genasi){return true; }
 if (race_bladeling){return true; }
 if (race_deva){return true; }
 if (race_halforc){return true; }
 if (race_goliath){return true; }
 if (race_githyanki){return true; }
 if (race_githzerai){return true; }
 if (race_gnoll){return true; }
 if (race_gnome){return true; }
 if (race_goblin){return true; }
 if (race_hobgoblin){return true; }
 if (race_kobold){return true; }
 if (race_minotaur){return true; }
 if (race_orc){return true; }
 if (race_shadarkai){return true; }
 if (race_shifterlongtooth){return true; }
 if (race_shifterrazorclaw){return true; }
 if (race_warforged){return true; }
 if (race_other){return true; }
 return false; 
 }


 function assignalignment(i){
  if (CharacterTypeHasBeenEstablished==true)
   {
    ClearAlignmentButtons(); 
    document.form1.alignments[alignment-1].checked=true; 
   }
  else if (AbilitiesHaveBeenEstablished==false){ClearAlignmentButtons(); } else
  {alignment=i; ThisTakesAMoment(); ArrowShow(); }
  }






function WriteTextForCharacterSheet(){
 // this stuff lets you check everything
 if (test_mode)
 {
    fam_bat=true;
    fam_bookimp=true;
    fam_bounddemon=true;
    fam_cat=true;
    fam_crafterhomunculus=true;
    fam_dragonling=true;
    fam_falcon=true;
    fam_owl=true;
    fam_rat=true;
    fam_raven=true;
    fam_serpent=true;
    fam_spider=true;
    fam_arcaneeye=true;
    fam_badger=true;
    fam_canineconstruct=true;
    fam_disembodiedhand=true;
    fam_firelizard=true;
    fam_lightninglizard=true;
    fam_ooze=true;
    fam_parrot=true;
    fam_rootling=true;
    fam_scouthomunculus=true;
    fam_skull=true;
    fam_toad=true;
    fam_weasel=true;
    fam_airmephit=true;
    fam_arcanewisp=true;
    fam_beholderkin=true;
    fam_blackspawndarkling=true;
    fam_bluespawnnimblespark=true;
    fam_earthmephit=true;
    fam_firemephit=true;
    fam_grayspawnshortfang=true;
    fam_greenspawnbanespike=true;
    fam_icemephit=true;
    fam_rakshasaclaw=true;
    fam_redspawnspitfire=true;
    fam_stonefowl=true;
    fam_whitespawnsnowstepper=true;
    fam_blazingskull=true;
    fam_chaosshard=true;
    fam_gibberingpet=true;
    fam_shadowincarnate=true;

    race_human=true;
    race_halfelf=true;
    race_hobgoblin=true;
    race_elf=true;
    race_eladrin=true;
    race_halfelf=true;
    race_halforc=true;
    race_tiefling=true;
    race_dragonborn=true;
    race_goliath=true;
    race_deva=true;
    race_bladeling=true;
    race_genasi=true;
    race_human=true;
    race_human=true;
    race_human=true;
    race_human=true;
    race_human=true;

    class_shaman=true;
    class_sorcerer=true;
    class_barbarian=true;
    class_warlord=true;
    class_warlock=true;
    class_bard=true;
    class_invoker=true;
    class_avenger=true;
    class_druid=true;
    class_warden=true;
    class_sorcerer=true;
    class_sorcerer=true;

    paragon_angelicavenger=true;
    paragon_divineoracle=true; 
    paragon_radiantservant=true; 
    paragon_warpriest=true; 
    paragon_ironvanguard=true; 
    paragon_kensei=true; 
    paragon_pitfighter=true; 
    paragon_swordmaster=true; 
    paragon_astralweapon=true; 
    paragon_championoforder=true; 
    paragon_hospitaler=true; 
    paragon_justiciar=true; 
    paragon_battlefieldarcher=true; 
    paragon_beaststalker=true; 
    paragon_pathfinder=true; 
    paragon_stormwarden=true; 
    paragon_catburglar=true; 
    paragon_daggermaster=true; 
    paragon_masterinfiltrator=true; 
    paragon_shadowassassin=true; 
    paragon_doomsayer=true; 
    paragon_feytouched=true; 
    paragon_lifestealer=true; 
    paragon_battlecaptain=true; 
    paragon_combatveteran=true; 
    paragon_knightcommander=true; 
    paragon_swordmarshal=true; 
    paragon_battlemage=true; 
    paragon_bloodmage=true; 
    paragon_spellstormmage=true; 
    paragon_wizardofthespiraltower=true; 
    paragon_other=true; 
    paragon_multiclass=true;
    paragon_anarchofshyr=true;
    paragon_coronalguard=true;
    paragon_darkwalker=true;
    paragon_doomguide=true;
    paragon_drowwanderer=true;
    paragon_eartheartdefender=true;
    paragon_elementaltempest=true;
    paragon_evermeetwarlock=true;
    paragon_ghostofeventide=true;
    paragon_heartwarder=true;
    paragon_highforestscout=true;
    paragon_impilturandemonslayer=true;
    paragon_morninglord=true;
    paragon_purpledragonknight=true;
    paragon_silverstar=true;
    paragon_simbarchofaglarond=true;
    paragon_spellguardwizard=true;
    paragon_spellscarredsavant=true;
    paragon_steelskyliberator=true;
    paragon_swordcoastcorsair=true;
    paragon_umbriri=true;
    paragon_wanderingswordmage=true;
    paragon_warwizardofcormyr=true;
    paragon_whirlwindgenasi=true;
    paragon_wildfiregenasi=true;
    paragon_feralspirit=true;
    paragon_packrunner=true;
    paragon_wildcatstalker=true;
    paragon_bladeofcendriane=true;
    paragon_doomguardmarauder=true;
    paragon_gatecrasher=true;
    paragon_knightofcelestia=true;
    paragon_maleckethjanissary=true;
    paragon_planeshifter=true;
    paragon_shadowcaptain=true;
    paragon_soulguide=true;

    paragon_adroitexplorer=true;
    paragon_ancestralincarnate=true;
    paragon_bloodfurysavage=true;
    paragon_feybeguiler=true;
    paragon_firstbornofmoradin=true;
    paragon_halflingscoundrel=true;
    paragon_moonstalker=true;
    paragon_scionofarkhosia=true;
    paragon_shiereknight=true;
    paragon_stoneblessed=true;
    paragon_turathihighborn=true;
    paragon_twilightguardian=true;
    paragon_hammerofjudgment=true;
    paragon_oathsworn=true;
    paragon_unveiledvisage=true;
    paragon_zealousassassin=true;
    paragon_bearwarrior=true;
    paragon_fearbringerthane=true;
    paragon_frenziedberserker=true;
    paragon_wildrunner=true;
    paragon_studentoftheseven=true;
    paragon_summerrhymer=true;
    paragon_voiceofthunder=true;
    paragon_warchanter=true;
    paragon_bloodmoonstalker=true;
    paragon_guardianofthelivinggate=true;
    paragon_keeperofthehiddenflame=true;
    paragon_skyhunter=true;
    paragon_angelicaspect=true;
    paragon_blightspeaker=true;
    paragon_flameofhope=true;
    paragon_hammerofvengeance=true;
    paragon_discipleoftheworldserpent=true;
    paragon_ghostpanther=true;
    paragon_greatbearshaman=true;
    paragon_spirittempest=true;
    paragon_arcanewellspring=true;
    paragon_demonskinadept=true;
    paragon_dragonsoulheir=true;
    paragon_wildmage=true;
    paragon_bloodwrathguardian=true;
    paragon_hornedchampion=true;
    paragon_stormsentinel=true;
    paragon_verdantlord=true;
 }

    wt=0; 
   CalculateHitPoints()
   CalculateArmorClass()
   explain_sup_w=false; 
   explain_sup_i=false;
   explain_sup_bf=false;
   explain_sup_v=false;
  genderandrace_string=""; 
   if (gender==1){genderandrace_string +="Male "}
   if (gender==2){genderandrace_string +="Female "}
   if (race_human){genderandrace_string +="Human "}
   if (race_dragonborn){genderandrace_string +="Dragonborn "}
   if (race_dwarf){genderandrace_string +="Dwarf "}
   if (race_halfelf){genderandrace_string +="Half-Elf "}
   if (race_halfling){genderandrace_string +="Halfling "}
   if (race_elf){genderandrace_string +="Elf "}
   if (race_tiefling){genderandrace_string +="Tiefling "}
   if (race_eladrin){genderandrace_string +="Eladrin "}
    if (race_bugbear){genderandrace_string+="Bugbear "}
    if (race_doppelganger){genderandrace_string+="Doppelganger "}
    if (race_drow){genderandrace_string+="Drow "}
    if (race_genasi){genderandrace_string+="Genasi "}
    if (race_bladeling){genderandrace_string+="Bladeling "}
    if (race_deva){genderandrace_string+="Deva "}
    if (race_halforc){genderandrace_string+="Half-Orc "}
    if (race_goliath){genderandrace_string+="Goliath "}
    if (race_githyanki){genderandrace_string+="Githyanki "}
    if (race_githzerai){genderandrace_string+="Githzerai "}
    if (race_gnoll){genderandrace_string+="Gnoll "}
    if (race_gnome){genderandrace_string+="Gnome "}
    if (race_goblin){genderandrace_string+="Goblin "}
    if (race_hobgoblin){genderandrace_string+="Hobgoblin "}
    if (race_kobold){genderandrace_string+="Kobold "}
    if (race_minotaur){genderandrace_string+="Minotaur "}
    if (race_orc){genderandrace_string+="Orc "}
    if (race_shadarkai){genderandrace_string+="Shadar-kai "}
    if (race_shifterlongtooth){genderandrace_string+="Longtooth Shifter "}
    if (race_shifterrazorclaw){genderandrace_string+="Razorclaw Shifter "}
    if (race_warforged){genderandrace_string+="Warforged "}
    if (race_other){genderandrace_string+=document.form1.other_race_name.value+" "; }

   stringy=document.form1.moniker.value; 
   if ((stringy=="")&(genderandrace_string+class_string!="")){stringy="Unnamed "+genderandrace_string+class_string}; 
   if (stringy==""){stringy="Unnamed Character"; }
   SWD="<html><head><title>"+stringy+"</title></head>\r<body><font face=\"Arial\">"


//   SWD="<html><head><title>Character Sheet Window</title></head>\r<body><font face=\"Arial\">"

   if (FeatsAreLocked==false)
    {
     SWD +="<b>Your character is not yet completed.</b><p>"
    }
   else {my_character_is_done=true; ArrowShow(); document.form1.want_another_character.src="another_character.jpg"; }
   SWD +="<center><b><font size=\" + 2\">"
   SWD +=document.form1.moniker.value; 
   SWD +="</font size></b></center><p>\r"
   SWD +=genderandrace_string+class_string + "<br>\r"
   SWD +="Level "+total_levels+"<br>\r"
   if (alignment==1){SWD +="Lawful Good"}
   if (alignment==2){SWD +="Good"}
   if (alignment==3){SWD +="Good (Chaotic)"}
   if (alignment==4){SWD +="Unaligned (Lawful)"}
   if (alignment==5){SWD +="Unaligned"}
   if (alignment==6){SWD +="Unaligned (Chaotic)"}
   if (alignment==7){SWD +="Evil (Lawful)"}
   if (alignment==8){SWD +="Evil"}
   if (alignment==9){SWD +="Chaotic Evil"}
   SWD +="<br>\r"

   if (frb_aglarond){SWD+="From Aglarond<br>\r";}
   if (frb_akanul){SWD+="From Akanul<br>\r";}
   if (frb_amn){SWD+="From Amn<br>\r";}
   if (frb_baldursgate){SWD+="From Baldur's Gate<br>\r";}
   if (frb_calimshan){SWD+="From Calimshan<br>\r";}
   if (frb_chessenta){SWD+="From Chessenta<br>\r";}
   if (frb_cormyr){SWD+="From Cormyr<br>\r";}
   if (frb_dalelands){SWD+="From the Dalelands<br>\r";}
   if (frb_dragoncoast){SWD+="From the Dragon Coast<br>\r";}
   if (frb_durpar){SWD+="From Durpar<br>\r";}
   if (frb_eastrift){SWD+="From the East Rift<br>\r";}
   if (frb_elfharrow){SWD+="From Elfharrow<br>\r";}
   if (frb_grayvale){SWD+="From the Gray Vale<br>\r";}
   if (frb_greatdale){SWD+="From the Great Dale<br>\r";}
   if (frb_highimaskar){SWD+="From High Imaskar<br>\r";}
   if (frb_impiltur){SWD+="From Impiltur<br>\r";}
   if (frb_luruar){SWD+="From Luruar<br>\r";}
   if (frb_luskan){SWD+="From Luskan<br>\r";}
   if (frb_moonshaeisles){SWD+="From the Moonshae Isles<br>\r";}
   if (frb_mythdrannor){SWD+="From Myth Drannor<br>\r";}
   if (frb_narfell){SWD+="From Narfell<br>\r";}
   if (frb_nelantherisles){SWD+="From the Nelanther Isles<br>\r";}
   if (frb_netheril){SWD+="From Netheril<br>\r";}
   if (frb_thay){SWD+="From Thay<br>\r";}
   if (frb_tymanther){SWD+="From Tymanther<br>\r";}
   if (frb_vilhonwilds){SWD+="From the Vilhon Wilds<br>\r";}
   if (frb_waterdeep){SWD+="From Waterdeep<br>\r";}
   if (frb_wheloon){SWD+="From Wheloon (Cormyr's prison colony)<br>\r";}

   if (document.form1.sect.value!=""){SWD +=document.form1.sect.value + "<p>"; }
   if (document.form1.playerName.value!=""){SWD +="Representing " + document.form1.playerName.value; }
   SWD +="<p>\r"



  SWD +="<p><table width=100%><tr width=100%><td width=50%>"


   SWD +="<table><tr> <td><font face=\"Arial\">"
   SWD +="Strength</td> <td align=\"right\"><font face=\"Arial\">" + strength + "</td><td><font face=\"Arial\">(" + modifier_string(strength) + ")</td></tr>\r<tr> <td><font face=\"Arial\">"
   SWD +="Constitution</td> <td align=\"right\"><font face=\"Arial\">" + constitution + "</td><td><font face=\"Arial\">(" + modifier_string(constitution) + ")</td></tr>\r<tr> <td><font face=\"Arial\">"
   SWD +="Dexterity</td> <td align=\"right\"><font face=\"Arial\">" + dexterity + "</td><td><font face=\"Arial\">(" + modifier_string(dexterity) + ")</td></tr>\r<tr> <td><font face=\"Arial\">"
   SWD +="Intelligence</td> <td align=\"right\"><font face=\"Arial\">" + intelligence + "</td><td><font face=\"Arial\">(" + modifier_string(intelligence) + ")</td></tr>\r<tr> <td><font face=\"Arial\">"
   SWD +="Wisdom</td> <td align=\"right\"><font face=\"Arial\">" + wisdom + "</td><td><font face=\"Arial\">(" + modifier_string(wisdom) + ")</td></tr>\r<tr> <td><font face=\"Arial\">"
   SWD +="Charisma</td> <td align=\"right\"><font face=\"Arial\">" + charisma + "</td><td><font face=\"Arial\">(" + modifier_string(charisma) + ")</td></tr>\r</table>\r"

   SWD +="</td><td width=50% valign=\"top\">"


   SWD +="<table>"

//   if (small==false){stringy="Medium"} else {stringy="Small"}
//   SWD +="<tr> <td><font face=\"Arial\">Size:</td> <td><font face=\"Arial\">" + stringy + "</td></tr>\r"
   stringy=""
   switch(document.form1.how_tall.selectedIndex){
    case 0:{stringy="---"; break; }
    case 1:{stringy="2' 8\""; break; }
    case 2:{stringy="2' 9\""; break; }
    case 3:{stringy="2' 10\""; break; }
    case 4:{stringy="2' 11\""; break; }
    case 5:{stringy="3' 0\""; break; }
    case 6:{stringy="3' 1\""; break; }
    case 7:{stringy="3' 2\""; break; }
    case 8:{stringy="3' 3\""; break; }
    case 9:{stringy="3' 4\""; break; }
    case 10:{stringy="3' 5\""; break; }
    case 11:{stringy="3' 6\""; break; }
    case 12:{stringy="3' 7\""; break; }
    case 13:{stringy="3' 8\""; break; }
    case 14:{stringy="3' 9\""; break; }
    case 15:{stringy="3' 10\""; break; }
    case 16:{stringy="3' 11\""; break; }
    case 17:{stringy="4' 0\""; break; }
    case 18:{stringy="4' 1\""; break; }
    case 19:{stringy="4' 2\""; break; }
    case 20:{stringy="4' 3\""; break; }
    case 21:{stringy="4' 4\""; break; }
    case 22:{stringy="4' 5\""; break; }
    case 23:{stringy="4' 6\""; break; }
    case 24:{stringy="4' 7\""; break; }
    case 25:{stringy="4' 8\""; break; }
    case 26:{stringy="4' 9\""; break; }
    case 27:{stringy="4' 10\""; break; }
    case 28:{stringy="4' 11\""; break; }
    case 29:{stringy="5' 0\""; break; }
    case 30:{stringy="5' 1\""; break; }
    case 31:{stringy="5' 2\""; break; }
    case 32:{stringy="5' 3\""; break; }
    case 33:{stringy="5' 4\""; break; }
    case 34:{stringy="5' 5\""; break; }
    case 35:{stringy="5' 6\""; break; }
    case 36:{stringy="5' 7\""; break; }
    case 37:{stringy="5' 8\""; break; }
    case 38:{stringy="5' 9\""; break; }
    case 39:{stringy="5' 10\""; break; }
    case 40:{stringy="5' 11\""; break; }
    case 41:{stringy="6' 0\""; break; }
    case 42:{stringy="6' 1\""; break; }
    case 43:{stringy="6' 2\""; break; }
    case 44:{stringy="6' 3\""; break; }
    case 45:{stringy="6' 4\""; break; }
    case 46:{stringy="6' 5\""; break; }
    case 47:{stringy="6' 6\""; break; }
    case 48:{stringy="6' 7\""; break; }
    case 49:{stringy="6' 8\""; break; }
    case 50:{stringy="6' 9\""; break; }
    case 51:{stringy="6' 10\""; break; }
    case 52:{stringy="6' 11\""; break; }
    case 53:{stringy="7' 0\""; break; }
    case 54:{stringy="7' 1\""; break; }
    case 55:{stringy="7' 2\""; break; }
    case 56:{stringy="7' 3\""; break; }
    case 57:{stringy="7' 4\""; break; }
    case 58:{stringy="7' 5\""; break; }
    case 59:{stringy="7' 6\""; break; }
    case 60:{stringy="7' 7\""; break; }
    case 61:{stringy="7' 8\""; break; }
    case 62:{stringy="7' 9\""; break; }
    case 63:{stringy="7' 10\""; break; }
    case 64:{stringy="7' 11\""; break; }
    case 65:{stringy="8' 0\""; break; }
    }     
   SWD +="<tr> <td><font face=\"Arial\">Height:</td> <td><font face=\"Arial\">" + stringy + "</td></tr>\r"
   stringy=""
   switch(document.form1.how_heavy.selectedIndex){
    case 0:{stringy="--- lb"; break; }
    case 1:{stringy=" 30 lb"; break; }
    case 2:{stringy=" 31 lb"; break; }
    case 3:{stringy=" 32 lb"; break; }
    case 4:{stringy=" 33 lb"; break; }
    case 5:{stringy=" 34 lb"; break; }
    case 6:{stringy=" 35 lb"; break; }
    case 7:{stringy=" 36 lb"; break; }
    case 8:{stringy=" 37 lb"; break; }
    case 9:{stringy=" 38 lb"; break; }
    case 10:{stringy=" 39 lb"; break; }
    case 11:{stringy=" 40 lb"; break; }
    case 12:{stringy=" 41 lb"; break; }
    case 13:{stringy=" 42 lb"; break; }
    case 14:{stringy=" 43 lb"; break; }
    case 15:{stringy=" 44 lb"; break; }
    case 16:{stringy=" 45 lb"; break; }
    case 17:{stringy=" 46 lb"; break; }
    case 18:{stringy=" 47 lb"; break; }
    case 19:{stringy=" 48 lb"; break; }
    case 20:{stringy=" 49 lb"; break; }
    case 21:{stringy=" 50 lb"; break; }
    case 22:{stringy=" 55 lb"; break; }
    case 23:{stringy=" 60 lb"; break; }
    case 24:{stringy=" 65 lb"; break; }
    case 25:{stringy=" 70 lb"; break; }
    case 26:{stringy=" 75 lb"; break; }
    case 27:{stringy=" 80 lb"; break; }
    case 28:{stringy=" 85 lb"; break; }
    case 29:{stringy=" 90 lb"; break; }
    case 30:{stringy=" 95 lb"; break; }
    case 31:{stringy="100 lb"; break; }
    case 32:{stringy="105 lb"; break; }
    case 33:{stringy="110 lb"; break; }
    case 34:{stringy="115 lb"; break; }
    case 35:{stringy="120 lb"; break; }
    case 36:{stringy="125 lb"; break; }
    case 37:{stringy="130 lb"; break; }
    case 38:{stringy="135 lb"; break; }
    case 39:{stringy="140 lb"; break; }
    case 40:{stringy="145 lb"; break; }
    case 41:{stringy="150 lb"; break; }
    case 42:{stringy="155 lb"; break; }
    case 43:{stringy="160 lb"; break; }
    case 44:{stringy="165 lb"; break; }
    case 45:{stringy="170 lb"; break; }
    case 46:{stringy="175 lb"; break; }
    case 47:{stringy="180 lb"; break; }
    case 48:{stringy="185 lb"; break; }
    case 49:{stringy="190 lb"; break; }
    case 50:{stringy="195 lb"; break; }
    case 51:{stringy="200 lb"; break; }
    case 52:{stringy="210 lb"; break; }
    case 53:{stringy="220 lb"; break; }
    case 54:{stringy="230 lb"; break; }
    case 55:{stringy="240 lb"; break; }
    case 56:{stringy="250 lb"; break; }
    case 57:{stringy="260 lb"; break; }
    case 58:{stringy="270 lb"; break; }
    case 59:{stringy="280 lb"; break; }
    case 60:{stringy="290 lb"; break; }
    case 61:{stringy="300 lb"; break; }
    case 62:{stringy="310 lb"; break; }
    case 63:{stringy="320 lb"; break; }
    case 64:{stringy="330 lb"; break; }
    case 65:{stringy="340 lb"; break; }
    case 66:{stringy="350 lb"; break; }
    case 67:{stringy="360 lb"; break; }
    case 68:{stringy="370 lb"; break; }
    case 69:{stringy="380 lb"; break; }
    case 70:{stringy="390 lb"; break; }
    case 71:{stringy="400 lb"; break; }
    case 72:{stringy="410 lb"; break; }
    case 73:{stringy="420 lb"; break; }
    case 74:{stringy="430 lb"; break; }
    case 75:{stringy="440 lb"; break; }
    }    
   SWD +="<tr> <td><font face=\"Arial\">Weight:</td> <td><font face=\"Arial\">" + stringy + "</td></tr>\r"
   stringy=""
   if (document.form1.skin_color[0].checked==true){stringy="Pale"; }
   if (document.form1.skin_color[1].checked==true){stringy="Light"; }
   if (document.form1.skin_color[2].checked==true){stringy="Yellow"; }
   if (document.form1.skin_color[3].checked==true){stringy="Tan"; }
   if (document.form1.skin_color[4].checked==true){stringy="Brown"; }
   if (document.form1.skin_color[5].checked==true){stringy="Black"; }
   if (document.form1.skin_color[6].checked==true){stringy="Silvery"; }
   if (document.form1.skin_color[7].checked==true){stringy="Gray"; }
   if (document.form1.skin_color[8].checked==true){stringy="Green"; }
   if (document.form1.skin_color[9].checked==true){stringy="Blue"; }
   if (document.form1.skin_color[10].checked==true){stringy="Scarlet"; }
   if (document.form1.skin_color[11].checked==true){stringy="Gold"; }
   if (document.form1.skin_color[12].checked==true){stringy="Rust"; }
   if (document.form1.skin_color[13].checked==true){stringy="Ochre"; }
   if (document.form1.skin_color[14].checked==true){stringy="Bronze"; }
if ((race_dragonborn) | (race_kobold)){   SWD+="<tr> <td><font face=\"Arial\">Scales:</td> <td><font face=\"Arial\">" + stringy+"</td></tr>\r"}
if (!race_dragonborn){   SWD+="<tr> <td><font face=\"Arial\">Skin:</td> <td><font face=\"Arial\">" + stringy+"</td></tr>\r"}

   stringy=""
//racialstuff
   if (document.form1.eye_color[0].checked==true){stringy="Red"; }
   if (document.form1.eye_color[1].checked==true){stringy="Green"; }
   if (document.form1.eye_color[2].checked==true){stringy="Blue"; }
   if (document.form1.eye_color[3].checked==true){stringy="Hazel"; }
   if (document.form1.eye_color[4].checked==true){stringy="Light Brown"; }
   if (document.form1.eye_color[5].checked==true){stringy="Dark Brown"; }
   if (document.form1.eye_color[6].checked==true){stringy="Black"; }
   if (document.form1.eye_color[7].checked==true){stringy="Gray"; }
   if (document.form1.eye_color[8].checked==true){stringy="Amber"; }
   if (document.form1.eye_color[9].checked==true){stringy="Violet"; }
   if (document.form1.eye_color[10].checked==true){stringy="Silver"; }
   SWD+="<tr> <td><font face=\"Arial\">Eyes:</td> <td><font face=\"Arial\">" + stringy+"</td></tr>\r"
   stringy=""
   if (document.form1.hair_color[0].checked==true){stringy="White"; }
   if (document.form1.hair_color[1].checked==true)
    {
     if (gender==1){stringy="Blond"; }
     if (gender==2){stringy="Blonde"; }
    }
   if (document.form1.hair_color[2].checked==true){stringy="Red"; }
   if (document.form1.hair_color[3].checked==true){stringy="Light Brown"; }
   if (document.form1.hair_color[4].checked==true){stringy="Dark Brown"; }
   if (document.form1.hair_color[5].checked==true){stringy="Black"; }
   if (document.form1.hair_color[6].checked==true){stringy="Gray"; }
   if (document.form1.hair_color[7].checked==true){stringy="Silver"; }
   if (document.form1.hair_color[8].checked==true){stringy="Gold"; }
   if (document.form1.hair_color[9].checked==true){stringy="Green"; }
   if (document.form1.hair_color[10].checked==true){stringy="Blue"; }
   if (document.form1.hair_color[11].checked==true){stringy="Purple"; }
   if (document.form1.hair_color[12].checked==true){stringy="None"; NoCurlsNoBeard(); }
   if (document.form1.hair_type[0].checked==true){stringy+="; Straight"; }
   if (document.form1.hair_type[1].checked==true){stringy+="; Wavy"; }
   if (document.form1.hair_type[2].checked==true){stringy+="; Curly"; }
   if (document.form1.beard_type[0].checked==true)
    {
     stringy+="; Beardless"; 
     if ((gender==1)&(race_halfling)){stringy+=" [may grow sideburns]"; }
    }
   if (document.form1.beard_type[1].checked==true){stringy+="; Light Beard"; }
   if (document.form1.beard_type[2].checked==true){stringy+="; Average Beard"; }
   if (document.form1.beard_type[3].checked==true){stringy+="; Thick Beard / Hirsute"; }

//   if (rayce==179){SWD+="<tr> <td valign=\"top\"><font face=\"Arial\">Head Feathers:</td> <td><font face=\"Arial\">" + stringy+"</td></tr>\r"} else
   {SWD+="<tr> <td valign=\"top\"><font face=\"Arial\">Hair:</td> <td><font face=\"Arial\">" + stringy+"</td></tr>\r"}



   SWD +="</td></tr>\r</table>\r"
   SWD +="</td></tr>\r</table>\r"


SWD +="<p>\r"

SWD +="\r<p>Maximum Hit Points: " + total_hit_points; 
if ((feat_toughness) | (ranger_twoblade)){SWD +=" [includes toughness] "}
SWD +="<p>\r<ul>"
SWD +="\r<p>Bloodied: " + bloodied_hit_points; 
SWD +="\r<br>Surge Value: " + surge_hit_points; 
if ((race_dragonborn)&(constitution>11)){SWD +=" [includes draconic heritage] "}
SWD +="\r<br>Surges / Day: " + surges_per_day; 
if (modifier_number(constitution)!=0){SWD+=" [includes constitution modifier] "; }
if (feat_durable){SWD+=" [includes durable] "; }
if (paragon_dragonsoulheir){SWD+=" [includes dragonsoul heir] "; }
if (feat_thirstforbattle){SWD+=" [includes thirst for battle] "; }
if (paragon_pathfinder){SWD+=" [includes Battlehoned] "; }
if (paragon_simbarchofaglarond){SWD+=" [includes Sorcerous Vitality] "; }
if (paragon_combatveteran){SWD+=" [includes Tough as Nails] "; }
if ((paragon_spellguardwizard)&(total_levels>=16)){SWD+=" [includes Spellguard Combat Toughness] "; }
SWD +="<br>&nbsp; &nbsp; &nbsp; &nbsp; "; 
x=1; while (x<=surges_per_day)
 {
  SWD+="<img src=box.gif>"; 
  x++; 
 }
SWD +="<br></ul><p>Size: "+size_string+"<br>Speed: " + speed_string + "<br>Vision: "+vision_string+"<p>\r"

SWD +="<p>\r"
SWD +="<table>"

SWD +="<tr><td><font face=\"Arial\">Initiative:</td><td><font face=\"Arial\">" + initiative_string_1 + "</td><td><font face=\"Arial\">" + initiative_string_2 + "</td></tr>\r"
SWD +="<tr><td><font face=\"Arial\">Base Strength Attack:</td><td><font face=\"Arial\">" + strength_attack_string_1 + "</td><td><font face=\"Arial\">" + strength_attack_string_2 + "</td></tr>\r"
SWD +="<tr><td><font face=\"Arial\">Base Dexterity Attack:</td><td><font face=\"Arial\">" + dexterity_attack_string_1 + "</td><td><font face=\"Arial\">" + dexterity_attack_string_2 + "</td></tr>\r"
SWD +="<tr><td><font face=\"Arial\">Base Constitution Attack:</td><td><font face=\"Arial\">" + constitution_attack_string_1 + "</td><td><font face=\"Arial\">" + constitution_attack_string_2 + "</td></tr>\r"
SWD +="<tr><td><font face=\"Arial\">Base Intelligence Attack:</td><td><font face=\"Arial\">" + intelligence_attack_string_1 + "</td><td><font face=\"Arial\">" + intelligence_attack_string_2 + "</td></tr>\r"
SWD +="<tr><td><font face=\"Arial\">Base Wisdom Attack:</td><td><font face=\"Arial\">" + wisdom_attack_string_1 + "</td><td><font face=\"Arial\">" + wisdom_attack_string_2 + "</td></tr>\r"
SWD +="<tr><td><font face=\"Arial\">Base Charisma Attack:</td><td><font face=\"Arial\">" + charisma_attack_string_1 + "</td><td><font face=\"Arial\">" + charisma_attack_string_2 + "</td></tr></table><p><table>\r"


SWD +="<tr><td><font face=\"Arial\">Armor Class:</td><td><font face=\"Arial\">" + total_armor_class +              "</td><td><font face=\"Arial\">" + armor_class_string + "</td></tr>\r"

SWD +="<tr><td><font face=\"Arial\">Fortitude Defense:</td><td><font face=\"Arial\">" + fortitude_string_1 + "</td><td><font face=\"Arial\">" + fortitude_string_2 + "</td></tr>\r"
SWD +="<tr><td><font face=\"Arial\">Reflex Defense:</td><td><font face=\"Arial\">" + reflex_string_1 + "</td><td><font face=\"Arial\">" + reflex_string_2 + "</td></tr>\r"
SWD +="<tr><td><font face=\"Arial\">Will Defense:</td><td><font face=\"Arial\">" + will_string_1 + "</td><td><font face=\"Arial\">" + will_string_2 + "</td></tr>\r"
SWD +="</table><p>\r"

SWD+="Armor: "; 
if (document.form1.armor_radio[0].checked){SWD+="None (street clothes)<br>\r"; }
if (document.form1.armor_radio[1].checked){SWD+="Leather (15 lb)<br>\r"; wt+=15; }
if (document.form1.armor_radio[2].checked){SWD+="Hide (25 lb)<br>\r"; wt+=25; }
if (document.form1.armor_radio[3].checked){SWD+="Chainmail (40 lb)<br>\r"; wt+=40; }
if (document.form1.armor_radio[4].checked){SWD+="Scale (45 lb)<br>\r"; wt+=45; }
if (document.form1.armor_radio[5].checked){SWD+="Plate (50 lb)<br>\r"; wt+=50; }
SWD+="<br>Shield: "; 
if (document.form1.shield_radio[0].checked){SWD+="None<br>\r"; }
if (document.form1.shield_radio[1].checked){SWD+="Small (6 lb)<br>\r"; wt+=6; }
if (document.form1.shield_radio[2].checked){SWD+="Large (15 lb)<br>\r"; wt+=15; }
stringy=""; 
if (feat_weaponfocusunarmed){stringy=" + "+weaponfocus()+" [weapon focus -- unarmed]"; }
if (total_levels>20)
 {
  SWD +="<p>Attacks:<p><ul>Unarmed Melee: "+PlusOrMinus(strength_attack_base)+" [base strength attack] vs AC; damage 2[W]=2d4"+StrengthDamage()+stringy+"<br>\r"
 }
 else
 {
  SWD +="<p>Attacks:<p><ul>Unarmed Melee: "+PlusOrMinus(strength_attack_base)+" [base strength attack] vs AC; damage 1[W]=1d4"+StrengthDamage()+stringy+"<br>\r"
 }


if (document.form1.club_box.checked)
 {
  SWD +="Club: "; 
 if (fighter_onehand)
  {
  if ((already_knows_club) | (feat_weaponproficiencyclub)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+"[+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+"[not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_club) | (feat_weaponproficiencyclub)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+"[+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+"[not proficient]; "}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 3 lb (Mace)<br>\r"; wt+=3; 
  if (feat_weaponfocusmace){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- mace<br>\r"; }
 }
if (document.form1.dagger_list.selectedIndex>0)
 {
 stringy="Dagger: "; 
 if (document.form1.dagger_list.selectedIndex>1){stringy="Daggers (x"+document.form1.dagger_list.selectedIndex+"): "; }
 SWD+=stringy; 
 if (fighter_onehand)
  {
  SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "
  SWD +="damage 1[W]=1d4"+StrengthDamage()+" 1 lb (Light blade); usable off-hand; light throwable <br>"; wt+=1*document.form1.dagger_list.selectedIndex; 
  SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown: range 5/10 "+PlusOrMinus(dexterity_attack_base+3+1)+" vs AC "+DexterityNote()+" [+3 proficient, +1 one-hand talent, damage 1d4"+DexterityDamage()+"<br>\r"; 
  }
  else {if (class_rogue)
  {
  SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 rogue]; "
  SWD +="damage 1[W]=1d4"+StrengthDamage()+" 1 lb (Light blade); usable off-hand; light throwable <br>"; wt+=1*document.form1.dagger_list.selectedIndex; 
  SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown: range 5/10 "+PlusOrMinus(dexterity_attack_base+3+1)+" vs AC "+DexterityNote()+" [+3 proficient, +1 rogue]; damage 1d4"+DexterityDamage()+"; <br>\r"; 
  }
  else
  {
  if ((already_knows_dagger) | (feat_weaponproficiencydagger)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; "}
  SWD +="damage 1[W]=1d4"+StrengthDamage()+" 1 lb (Light blade); usable off-hand; light throwable <br>"; wt+=1*document.form1.dagger_list.selectedIndex; 
  if ((already_knows_dagger) | (feat_weaponproficiencydagger)){SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown: "+PlusOrMinus(dexterity_attack_base+3)+" vs AC "+DexterityNote()+" [+3 proficient, damage 1d4"+DexterityDamage()+"<br>\r"}
    else {SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown: range 5/10 "+dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient, damage 1d4"+DexterityDamage()+"<br>\r"}}
  }
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.javelin_list.selectedIndex>0)
 {
 stringy="Javelin: "; 
 if (document.form1.javelin_list.selectedIndex>1){stringy="Javelins (x"+document.form1.javelin_list.selectedIndex+"): "; }
 SWD+=stringy; 
 if (fighter_onehand)
  {
//  SWD +="Javelin: "//damage 1[W]=1d6"+StrengthDamage()+" range 10/20 2 lb (Spear) Heavy throwable <br>"; wt+=2; 
  if ((already_knows_javelin) | (feat_weaponproficiencyjavelin)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
//  SWD +="Javelin: "//damage 1[W]=1d6"+StrengthDamage()+" range 10/20 2 lb (Spear) Heavy throwable <br>"; wt+=2; 
  if ((already_knows_javelin) | (feat_weaponproficiencyjavelin)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" range 10/20 2 lb (Spear) Heavy throwable <br>"; wt+=2*document.form1.javelin_list.selectedIndex; 
  SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown: Same as melee<br>"; 

  if (feat_weaponfocusspear){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Spear<br>\r"; }
  if (feat_eladrinsoldier){SWD +="&nbsp; &nbsp; Add +2 damage for Eladrin Soldier<br>\r"; }
 }
if (document.form1.mace_box.checked)
 {
  SWD +="Mace"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_mace) | (feat_weaponproficiencymace)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_mace) | (feat_weaponproficiencymace)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 6 lb (Mace) "+Versatile()+" <br>"; wt+=6; 
  if (feat_weaponfocusmace){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Mace<br>\r"; }
 }
if (document.form1.sickle_box.checked)
 {
  SWD +="Sickle: "
 if (fighter_onehand)
  {
  if ((already_knows_sickle) | (feat_weaponproficiencysickle)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_sickle) | (feat_weaponproficiencysickle)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 2 lb (Light blade) Usable Off-hand <br>"; wt+=2; 
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.spear_box.checked)
 {
  SWD +="Spear"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_spear) | (feat_weaponproficiencyspear)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_spear) | (feat_weaponproficiencyspear)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 6 lb (Spear) "+Versatile()+" <br>"; wt+=6; 
  if (feat_weaponfocusspear){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Spear<br>\r"; }
  if (feat_eladrinsoldier){SWD +="&nbsp; &nbsp; Add +2 damage for Eladrin Soldier<br>\r"; }
 }
if (document.form1.spikedgauntlet_box.checked)
 {
  SWD +="Spiked Gauntlet: " 
 if (fighter_onehand)
  {
  if ((already_knows_othersimplemeleeweapons)|(feat_weaponproficiencyothersimplemeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_othersimplemeleeweapons)|(feat_weaponproficiencyothersimplemeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 1 lb (Unarmed) [off-hand] <br>"; wt+=1; 
  if (feat_weaponfocusunarmed){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Unarmed<br>\r"; }
 }
if (document.form1.greatclub_box.checked)
 {
  SWD +="Greatclub: "
 if (fighter_twohand)
  {
  if ((already_knows_greatclub) | (feat_weaponproficiencygreatclub)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_greatclub) | (feat_weaponproficiencygreatclub)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=2d4"+StrengthDamage()+GoliathGreatweapon()+" 10 lb (Mace)  <br>"; wt+=10; 
  if (feat_weaponfocusmace){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Mace<br>\r"; }
 }
if (document.form1.morningstar_box.checked)
 {
  SWD +="Morningstar: "
 if (fighter_twohand)
  {
  if ((already_knows_morningstar) | (feat_weaponproficiencymorningstar)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_morningstar) | (feat_weaponproficiencymorningstar)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+GoliathGreatweapon()+" 8 lb (Mace)  <br>"; wt+=8; 
  if (feat_weaponfocusmace){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Mace<br>\r"; }
 }

if ((document.form1.quarterstaff_box.checked)&(!small))
 {
  SWD +="Quarterstaff: "
 if (fighter_twohand)
  {
  if ((already_knows_quarterstaff) | (feat_weaponproficiencyquarterstaff)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_quarterstaff) | (feat_weaponproficiencyquarterstaff)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+GoliathGreatweapon()+" 4 lb (Staff)  <br>"; wt+=4; 
  if (feat_weaponfocusstaff){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Staff<br>\r"; }
 }
if (document.form1.scythe_box.checked)
 {
  SWD +="Scythe: "
 if (fighter_twohand)
  {
  if ((already_knows_scythe) | (feat_weaponproficiencyscythe)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_scythe) | (feat_weaponproficiencyscythe)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=2d4"+StrengthDamage()+GoliathGreatweapon()+" 10 lb (Heavy blade)  <br>"; wt+=10; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy Blade<br>\r"; }
 }
if (document.form1.battleaxe_box.checked)
 {
  SWD +="Battleaxe"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_battleaxe) | (feat_weaponproficiencybattleaxe)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_battleaxe) | (feat_weaponproficiencybattleaxe)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+" 6 lb (Axe) "+Versatile()+" <br>"; wt+=6; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.flail_box.checked)
 {
  SWD +="Flail"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_flail) | (feat_weaponproficiencyflail)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_flail) | (feat_weaponproficiencyflail)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+" 5 lb (Flail) "+Versatile()+" <br>"; wt+=5; 
  if (feat_weaponfocusflail){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Flail<br>\r"; }
 }
if (document.form1.handaxe_list.selectedIndex>0)
 {
 stringy="Handaxes: "; 
 if (document.form1.handaxe_list.selectedIndex>1){stringy="Handaxes (x"+document.form1.handaxe_list.selectedIndex+"): "; }
 SWD+=stringy; 
 if (fighter_onehand)
  {
  if ((already_knows_handaxe) | (feat_weaponproficiencyhandaxe)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_handaxe) | (feat_weaponproficiencyhandaxe)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 3 lb (Axe); usable off-hand; heavy throwable <br>"; wt+=3*document.form1.handaxe_list.selectedIndex; 
  SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown range 5/10 : Same as melee<br>"; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.longsword_box.checked)
 {
  SWD +="Longsword"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_longsword) | (feat_weaponproficiencylongsword)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_longsword) | (feat_weaponproficiencylongsword)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 4 lb (Heavy blade) "+Versatile()+" <br>"; wt+=4; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy Blade<br>\r"; }
  if (feat_eladrinsoldier){SWD +="&nbsp; &nbsp; Add +2 damage for Eladrin Soldier<br>\r"; }
 }
if (document.form1.scimitar_box.checked)
 {
  SWD +="Scimitar: "
 if (fighter_onehand)
  {
  if ((already_knows_scimitar) | (feat_weaponproficiencyscimitar)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_scimitar) | (feat_weaponproficiencyscimitar)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 4 lb (Heavy blade) High crit <br>"; wt+=4; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy Blade<br>\r"; }
 }
if (document.form1.shortsword_box.checked)
 {
  SWD +="Short sword: "
 if (fighter_onehand)
  {
  if ((already_knows_shortsword) | (feat_weaponproficiencyshortsword)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_shortsword) | (feat_weaponproficiencyshortsword)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 2 lb (Light blade) Usable Off-hand <br>"; wt+=2; 
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.throwinghammer_list.selectedIndex>0)
 {
 stringy="Throwing hammer: "; 
 if (document.form1.throwinghammer_list.selectedIndex>1){stringy="Throwing hammers (x"+document.form1.throwinghammer_list.selectedIndex+"): "; }
 SWD+=stringy; 
 if (fighter_onehand)
  {
  if ((already_knows_throwinghammer) | (feat_weaponproficiencythrowinghammer)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_throwinghammer) | (feat_weaponproficiencythrowinghammer)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 2 lb (Hammer); usable off-hand; heavy throwable <br>"; wt+=2*document.form1.throwinghammer_list.selectedIndex; 
  SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown: range 5/10 Same as melee<br>"; 
  if (feat_weaponfocushammer){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Hammer<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.warhammer_box.checked)
 {
  SWD +="Warhammer"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_warhammer) | (feat_weaponproficiencywarhammer)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_warhammer) | (feat_weaponproficiencywarhammer)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+" 5 lb (Hammer) "+Versatile()+" <br>"; wt+=5; 
  if (feat_weaponfocushammer){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Hammer<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.warpick_box.checked)
 {
  SWD +="War pick"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_warpick) | (feat_weaponproficiencywarpick)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_warpick) | (feat_weaponproficiencywarpick)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 6 lb (Pick) High crit, "+Versatile()+" <br>"; wt+=6; 
  if (feat_weaponfocuspick){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Pick<br>\r"; }
 }

if (document.form1.broadsword_box.checked)
 {
  SWD +="Broadsword [AV]"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_othermilitarymeleeweapons)|(class_swordmage)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_othermilitarymeleeweapons)|(class_swordmage)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+" 5 lb (Heavy blade) "+Versatile()+" <br>"; wt+=5; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy blade<br>\r"; }
 }
if (document.form1.khopesh_box.checked)
 {
  SWD +="Khopesh [AV]"+sup_v()+": "//damage 1[W]=1d10"+StrengthDamage()+" 5 lb (Axe) "+Versatile()+" <br>"; wt+=6; 
 if (fighter_onehand)
  {
  if ((already_knows_othermilitarymeleeweapons)|(class_swordmage)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_othermilitarymeleeweapons)|(class_swordmage)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 8 lb (Axe, Heavy blade) "+Versatile()+" brutal&nbsp;1<br>"; wt+=8; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; } else
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy blade<br>\r"; } 
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.lightwarpick_box.checked)
 {
  SWD +="Light War Pick [AV]: "
 if (fighter_onehand)
  {
  if ((already_knows_othermilitarymeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_othermilitarymeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 4 lb (Pick) high crit, off-hand<br>"; wt+=4; 
  if (feat_weaponfocuspick){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Pick<br>\r"; } 
 }
if (document.form1.scourge_box.checked)
 {
  SWD +="Scourge [AV]: "//damage 1[W]=1d8"+StrengthDamage()+" 5 lb (Flail) off-hand<br>"; wt+=6; 
 if (fighter_onehand)
  {
  if ((already_knows_othermilitarymeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_othermilitarymeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 2 lb (Pick) off-hand<br>"; wt+=2; 
  if (feat_weaponfocusflail){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Flail<br>\r"; } 
 }
if (document.form1.trident_box.checked)
 {
  SWD +="Trident [AV]"+sup_v()+": " 
 if (fighter_onehand)
  {
  if ((already_knows_othermilitarymeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_othermilitarymeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" range 3/6 4 lb (Spear) "+Versatile()+" <br>"; wt+=4; 
  SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown: Same as melee<br>"; 
  if (feat_weaponfocusspear){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Spear<br>\r"; }
 }
if (document.form1.falchion_box.checked)
 {
  SWD +="Falchion: "//damage 1[W]=2d4"+StrengthDamage()+" 7 lb (Heavy blade) High crit <br>"; wt+=7; 
 if (fighter_twohand)
  {
  if ((already_knows_falchion) | (feat_weaponproficiencyfalchion)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_falchion) | (feat_weaponproficiencyfalchion)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=2d4"+StrengthDamage()+GoliathGreatweapon()+" 7 lb (Heavy blade) High crit <br>"; wt+=7; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy Blade<br>\r"; }
 }
if (document.form1.glaive_box.checked)
 {
  SWD +="Glaive: "
 if (fighter_twohand)
  {
  if ((already_knows_glaive) | (feat_weaponproficiencyglaive)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_glaive) | (feat_weaponproficiencyglaive)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=2d4"+StrengthDamage()+GoliathGreatweapon()+" 10 lb (Heavy blade / polearm) Reach <br>"; wt+=10; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy Blade<br>\r"; }
  else if (feat_weaponfocuspolearm){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Polearm<br>\r"; }
 }
if (document.form1.greataxe_box.checked)
 {
  SWD +="Greataxe: "
 if (fighter_twohand)
  {
  if ((already_knows_greataxe) | (feat_weaponproficiencygreataxe)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_greataxe) | (feat_weaponproficiencygreataxe)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d12"+StrengthDamage()+GoliathGreatweapon()+" 12 lb (Axe) High crit <br>"; wt+=12; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.greatsword_box.checked)
 {
  SWD +="Greatsword: "
 if (fighter_twohand)
  {
  if ((already_knows_greatsword) | (feat_weaponproficiencygreatsword)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_greatsword) | (feat_weaponproficiencygreatsword)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+GoliathGreatweapon()+" 8 lb (Heavy blade)  <br>"; wt+=8; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy Blade<br>\r"; }
 }
if (document.form1.halberd_box.checked)
 {
  SWD +="Halberd: "//damage 1[W]=1d10"+StrengthDamage()+GoliathGreatweapon()+" 12 lb (Axe, polearm) Reach <br>"; wt+=12; 
 if (fighter_twohand)
  {
  if ((already_knows_halberd) | (feat_weaponproficiencyhalberd)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_halberd) | (feat_weaponproficiencyhalberd)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+GoliathGreatweapon()+" 12 lb (Axe, polearm) Reach <br>"; wt+=12; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; }
  else if (feat_weaponfocuspolearm){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Polearm<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.heavyflail_box.checked)
 {
  SWD +="Heavy flail: "
 if (fighter_twohand)
  {
  if ((already_knows_heavyflail) | (feat_weaponproficiencyheavyflail)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_heavyflail) | (feat_weaponproficiencyheavyflail)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=2d6"+StrengthDamage()+GoliathGreatweapon()+" 10 lb (Flail)  <br>"; wt+=10; 
  if (feat_weaponfocusflail){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Flail<br>\r"; }
 }
if (document.form1.longspear_box.checked)
 {
  SWD +="Longspear: "
 if (fighter_twohand)
  {
  if ((already_knows_longspear) | (feat_weaponproficiencylongspear)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_longspear) | (feat_weaponproficiencylongspear)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+GoliathGreatweapon()+" 9 lb (Polearm / spear) Reach <br>"; wt+=9; 
  if (feat_weaponfocuspolearm){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Polearm<br>\r"; }
  else if (feat_weaponfocusspear){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Spear<br>\r"; }
  if (feat_eladrinsoldier){SWD +="&nbsp; &nbsp; Add +2 damage for Eladrin Soldier<br>\r"; }
 }
if (document.form1.maul_box.checked)
 {
  SWD +="Maul: "//damage 1[W]=2d6"+StrengthDamage()+GoliathGreatweapon()+" 12 lb (Hammer)  <br>"; wt+=12; 
 if (fighter_twohand)
  {
  if ((already_knows_maul) | (feat_weaponproficiencymaul)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_maul) | (feat_weaponproficiencymaul)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=2d6"+StrengthDamage()+GoliathGreatweapon()+" 12 lb (Hammer)  <br>"; wt+=12; 
  if (feat_weaponfocushammer){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Hammer<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.heavywarpick_box.checked)
 {
  SWD +="Heavy War Pick [AV]: "
 if (fighter_twohand)
  {
  if ((already_knows_othermilitarymeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_othermilitarymeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d12"+StrengthDamage()+GoliathGreatweapon()+" 8 lb (Pick) high&nbsp;crit <br>"; wt+=8; 
  if (feat_weaponfocuspick){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Pick<br>\r"; }
 }
if (document.form1.bastardsword_box.checked)
 {
  SWD +="Bastard sword"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((already_knows_bastardsword) | (feat_weaponproficiencybastardsword)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_bastardsword) | (feat_weaponproficiencybastardsword)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+" 6 lb (Heavy blade) "+Versatile()+" <br>"; wt+=6; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy Blade<br>\r"; }
 }
if (document.form1.katar_box.checked)
 {
  SWD +="Katar: "
 if (fighter_onehand)
  {
  if ((already_knows_katar) | (feat_weaponproficiencykatar)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_katar) | (feat_weaponproficiencykatar)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 1 lb (Light blade); usable off-hand; high crit <br>"; wt+=1; 
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.rapier_box.checked)
 {
  SWD +="Rapier: "
 if (fighter_onehand)
  {
  if ((already_knows_rapier) | (feat_weaponproficiencyrapier)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_rapier) | (feat_weaponproficiencyrapier)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 2 lb (Light blade)  <br>"; wt+=2; 
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.craghammer_box.checked)
 {
  SWD +="Craghammer [AV]"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+" 6 lb (Hammer) brutal&nbsp;2 "+Versatile()+"<br>"; wt+=6;     
  if (feat_weaponfocushammer){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- hammer<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.kukri_box.checked)
 {
  SWD +="Kukri [AV]: "
 if (fighter_onehand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
 else if (class_rogue)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 rogue]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 rogue]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 2 lb (Light blade) brutal&nbsp;1, off-hand <br>"; wt+=2; 
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.parryingdagger_box.checked)
 {
  SWD +="Parrying Dagger [AV]: "
 if (fighter_onehand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
 else if (class_rogue)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 rogue]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d4"+StrengthDamage()+" 1 lb (Light blade)  defensive off-hand <br>"; wt+=1; 
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.spikedshield_box.checked)
 {
  SWD +="Spiked Shield [AV]: "
 if (fighter_onehand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+StrengthDamage()+" 7 lb (Light blade) defensive, off-hand <br>"; wt+=7; 
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.tratnyr_box.checked)
 {
  SWD +="Tratnyr [AV]"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+StrengthDamage()+" 5 lb (Spear) throw range 10/20, heavy-thrown "+Versatile()+" <br>"; wt+=5; 
  SWD +="&nbsp; &nbsp; &nbsp; &nbsp; Thrown: Same as melee<br>"; 
  if (feat_weaponfocusspear){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Spear<br>\r"; }
 }
if (document.form1.tripleheadedflail_box.checked)
 {
  SWD +="Triple-headed Flail [AV]"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+" 6 lb (Flail) "+Versatile()+" <br>"; wt+=6; 
  if (feat_weaponfocusspear){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Spear<br>\r"; }
 }
if (document.form1.waraxe_box.checked)
 {
  SWD +="Waraxe [AV]"+sup_v()+": "
 if (fighter_onehand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d12"+StrengthDamage()+" 10 lb (Axe) "+Versatile()+" <br>"; wt+=10; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.spikedchain_box.checked)
 {
  SWD +="Spiked chain: "
 if (fighter_twohand)
  {
  if ((already_knows_spikedchain) | (feat_weaponproficiencyspikedchain)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_spikedchain) | (feat_weaponproficiencyspikedchain)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=2d4"+StrengthDamage()+" 10 lb (Flail) Reach <br>"; wt+=10; 
  if (feat_weaponfocusflail){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Flail<br>\r"; }
 }

if (document.form1.executionaxe_box.checked)
 {
  SWD +="Execution Axe [AV]: "
 if (fighter_twohand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d12"+StrengthDamage()+" 14 lb (Axe) brutal&nbsp;2, high crit <br>"; wt+=14; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.fullblade_box.checked)
 {
  SWD +="Fullblade [AV]: "
 if (fighter_twohand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d12"+StrengthDamage()+" 10 lb (Heavy blade) high crit <br>"; wt+=10; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy Blade<br>\r"; }
 }
if (document.form1.greatspear_box.checked)
 {
  SWD +="Greatspear [AV]: "
 if (fighter_twohand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+3+1)+" vs AC "+StrengthNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+StrengthDamage()+" 8 lb (Polearm,  Spear) reach <br>"; wt+=8; 
  if (feat_weaponfocusspear){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Spear<br>\r"; }  else
  if (feat_weaponfocuspolearm){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Polearm<br>\r"; } 
 }
if (document.form1.mordenkrad_box.checked)
 {
  SWD +="Mordenkrad [AV]: "
 if (fighter_twohand)
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2+1)+" vs AC "+StrengthNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(strength_attack_base+1)+" vs AC "+StrengthNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=2d6"+StrengthDamage()+" 12 lb (Hammer) brutal&nbsp;2 <br>"; wt+=12; 
  if (feat_weaponfocushammer){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Hammer<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.doubleaxe_box.checked) // double
 {
  SWD +="Double Axe [AV]: "
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  SWD +="damage 1[W]=d10/d10"+StrengthDamage()+" 15 lb (Axe) defensive, off-hand <br>"; wt+=15; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }
if (document.form1.doubleflail_box.checked) // double
 {
  SWD +="Double Flail [AV]: "
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  SWD +="damage 1[W]=d10/d10"+StrengthDamage()+" 11 lb (Flail)  defensive, off-hand  <br>"; wt+=11; 
  if (feat_weaponfocusflail){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Flail<br>\r"; }
 }
if (document.form1.doublesword_box.checked) // double
 {
  SWD +="Double Sword [AV]: "
  if ((feat_weaponproficiencyothersuperiormeleeweapons)){SWD +=PlusOrMinus(strength_attack_base+3)+" vs AC "+StrengthNote()+" [+3 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  SWD +="damage 1[W]=d8/d8"+StrengthDamage()+" 9 lb (Heavy blade / Light blade) defensive, off-hand   <br>"; wt+=9; 
  if (feat_weaponfocusheavyblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Heavy blade<br>\r"; } else
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light blade<br>\r"; }
 }
if (document.form1.urgrosh_box.checked) // double
 {
  SWD +="Urgrosh [AV]: "
  if ((feat_weaponproficiencyothersuperiormeleeweapons)|(feat_dwarvenweapontraining)){SWD +=PlusOrMinus(strength_attack_base+2)+" vs AC "+StrengthNote()+" [+2 proficiency]; "}
    else {SWD +=strength_attack_base+" vs AC "+StrengthNote()+" [not proficient]; \r"}
  SWD +="damage 1[W]=d12/d8"+StrengthDamage()+" 12 lb (Axe, Spear) defensive, off-hand   <br>"; wt+=12; 
  if (feat_weaponfocusaxe){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Axe<br>\r"; } else
  if (feat_weaponfocusspear){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Spear<br>\r"; }
  if (feat_dwarvenweapontraining){SWD +="&nbsp; &nbsp; Add +2 damage for Dwarven Weapon Training<br>\r"; }
 }

if (document.form1.handcrossbow_box.checked)
 {
 if (document.form1.crossbowbolts.selectedIndex==0){document.form1.crossbowbolts.selectedIndex=1; }
  SWD +="Hand crossbow: "
 if (fighter_onehand)
  {
  if ((already_knows_handcrossbow) | (feat_weaponproficiencyhandcrossbow)){SWD +=PlusOrMinus(dexterity_attack_base+2+1)+" vs AC "+DexterityNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_handcrossbow) | (feat_weaponproficiencyhandcrossbow)){SWD +=PlusOrMinus(dexterity_attack_base+2)+" vs AC "+DexterityNote()+" [+2 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+DexterityDamage()+" range 10/20 2 lb (Crossbow) Load free <br>"; wt+=2; 
  if (feat_weaponfocuscrossbow){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Crossbow<br>\r"; }
 }
if (document.form1.sling_box.checked)
 {
 if (document.form1.slingbullets.selectedIndex==0){document.form1.slingbullets.selectedIndex=1; }
  SWD +="Sling: "
 if (fighter_onehand)
  {
  if ((already_knows_sling) | (feat_weaponproficiencysling)){SWD +=PlusOrMinus(dexterity_attack_base+2+1)+" vs AC "+DexterityNote()+" [+2 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 one-hand talent]; "}
  }
  else
  {
  if ((already_knows_sling) | (feat_weaponproficiencysling)){SWD +=PlusOrMinus(dexterity_attack_base+2)+" vs AC "+DexterityNote()+" [+2 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d6"+DexterityDamage()+" range 10/20 0 lb (Sling) Load free <br>"; wt+=0; 
  if (feat_weaponfocussling){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Sling<br>\r"; }
 }
if (document.form1.crossbow_box.checked)
 {
 if (document.form1.crossbowbolts.selectedIndex==0){document.form1.crossbowbolts.selectedIndex=1; }
  SWD +="Crossbow: "
 if (fighter_twohand)
  {
  if ((already_knows_crossbow) | (feat_weaponproficiencycrossbow)){SWD +=PlusOrMinus(dexterity_attack_base+2+1)+" vs AC "+DexterityNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_crossbow) | (feat_weaponproficiencycrossbow)){SWD +=PlusOrMinus(dexterity_attack_base+2)+" vs AC "+DexterityNote()+" [+2 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+DexterityDamage()+" range 15/30 4 lb (Crossbow) Load minor <br>"; wt+=4; 
  if (feat_weaponfocuscrossbow){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Crossbow<br>\r"; }
 }
if (document.form1.repeatingcrossbow_box.checked)
 {
 if (document.form1.crossbowbolts.selectedIndex==0){document.form1.crossbowbolts.selectedIndex=1; }
  SWD +="Repeating Crossbow [with magazine]: "
 if (fighter_twohand)
  {
  if ((already_knows_crossbow) | (feat_weaponproficiencyothersimplerangedweapons)){SWD +=PlusOrMinus(dexterity_attack_base+2+1)+" vs AC "+DexterityNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_crossbow) | (feat_weaponproficiencycrossbow)){SWD +=PlusOrMinus(dexterity_attack_base+2)+" vs AC "+DexterityNote()+" [+2 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+DexterityDamage()+" range 10/20 6 lb + 1 lb magazine (Crossbow) Load free <br>"; wt+=7; 
  if (feat_weaponfocuscrossbow){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Crossbow<br>\r"; }
 }
if (document.form1.longbow_box.checked)
 {
 if (document.form1.arrows.selectedIndex==0){document.form1.arrows.selectedIndex=1; }
  SWD +="Longbow: "
 if (fighter_twohand)
  {
  if ((already_knows_longbow) | (feat_weaponproficiencylongbow)){SWD +=PlusOrMinus(dexterity_attack_base+2+1)+" vs AC "+DexterityNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_longbow) | (feat_weaponproficiencylongbow)){SWD +=PlusOrMinus(dexterity_attack_base+2)+" vs AC "+DexterityNote()+" [+2 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+DexterityDamage()+" range 20/40 3 lb (Bow) Load free <br>"; wt+=3; 
  if (feat_weaponfocusbow){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Bow<br>\r"; }
 }
if (document.form1.shortbow_box.checked)
 {
 if (document.form1.arrows.selectedIndex==0){document.form1.arrows.selectedIndex=1; }
  SWD +="Shortbow: "
 if (fighter_twohand)
  {
  if ((already_knows_shortbow) | (feat_weaponproficiencyshortbow)){SWD +=PlusOrMinus(dexterity_attack_base+2+1)+" vs AC "+DexterityNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ((already_knows_shortbow) | (feat_weaponproficiencyshortbow)){SWD +=PlusOrMinus(dexterity_attack_base+2)+" vs AC "+DexterityNote()+" [+2 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d8"+DexterityDamage()+" range 15/20 2 lb (Bow) Load free, small <br>"; wt+=2; 
  if (feat_weaponfocusbow){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Bow<br>\r"; }
 }
if (document.form1.shuriken_list.selectedIndex>0)
 {
 x=document.form1.shuriken_list.selectedIndex*2; 
 stringy="Shurikens (x"+x+"): "; 
 SWD+=stringy; 
 if (fighter_onehand)
  {
//  SWD +="Shuriken: "//damage 1[W]=1d4"+DexterityDamage()+" range 6/12 1/2 lb (Light blade) Light throwable <br>"; wt+=1; 
  if ((already_knows_shuriken) | (feat_weaponproficiencyshuriken)){SWD +=PlusOrMinus(dexterity_attack_base+3+1)+" vs AC "+DexterityNote()+" [+3 proficiency][+1 one-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 one-hand talent]; "}
  SWD +="damage 1[W]=1d4"+DexterityDamage()+" range 6/12 1/2 lb (Light blade) Light throwable <br>"; wt+=1*document.form1.shuriken_list.selectedIndex; 
  }
  else
  if (class_rogue)
  {
//  SWD +="Shuriken: "//damage 1[W]=1d4"+DexterityDamage()+" range 6/12 1/2 lb (Light blade) Light throwable <br>"; wt+=1; 
  SWD +=PlusOrMinus(dexterity_attack_base+3)+" vs AC "+DexterityNote()+" [+3 proficiency]; "
  SWD +="damage 1[W]=1d6 [rogue] "+DexterityDamage()+" range 6/12 1/2 lb (Light blade) Light throwable <br>"; wt+=1*document.form1.shuriken_list.selectedIndex; 
  }
  else
  {
//  SWD +="Shuriken: "//damage 1[W]=1d4"+DexterityDamage()+" range 6/12 1/2 lb (Light blade) Light throwable <br>"; wt+=1; 
  if ((already_knows_shuriken) | (feat_weaponproficiencyshuriken)){SWD +=PlusOrMinus(dexterity_attack_base+3)+" vs AC "+DexterityNote()+" [+3 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; "}
  SWD +="damage 1[W]=1d4"+DexterityDamage()+" range 6/12 1/2 lb (Light blade) Light throwable <br>\r"; wt+=1*document.form1.shuriken_list.selectedIndex; 
  }
  if (feat_weaponfocuslightblade){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Light Blade<br>\r"; }
 }
if (document.form1.greatbow_box.checked)
 {
 if (document.form1.arrows.selectedIndex==0){document.form1.arrows.selectedIndex=1; }

  SWD +="Greatbow: "
 if (fighter_twohand)
  {
  if ( (feat_weaponproficiencyothersuperiorrangedweapons)){SWD +=PlusOrMinus(dexterity_attack_base+2+1)+" vs AC "+DexterityNote()+" [+2 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ( (feat_weaponproficiencyothersuperiorrangedweapons)){SWD +=PlusOrMinus(dexterity_attack_base+2)+" vs AC "+DexterityNote()+" [+2 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d12"+DexterityDamage()+" range 25/50 5 lb (Bow) Load free <br>"; wt+=5; 
  if (feat_weaponfocusbow){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Crossbow<br>\r"; }
 }
if (document.form1.superiorcrossbow_box.checked)
 {
 if (document.form1.crossbowbolts.selectedIndex==0){document.form1.crossbowbolts.selectedIndex=1; }
  SWD +="Superior Crossbow: "
 if (fighter_twohand)
  {
  if ((feat_weaponproficiencyothersuperiorrangedweapons)){SWD +=PlusOrMinus(dexterity_attack_base+3+1)+" vs AC "+DexterityNote()+" [+3 proficiency][+1 two-hand talent]; "}
    else {SWD +=PlusOrMinus(dexterity_attack_base+1)+" vs AC "+DexterityNote()+" [not proficient][+1 two-hand talent]; "}
  }
  else
  {
  if ( (feat_weaponproficiencyothersuperiorrangedweapons)){SWD +=PlusOrMinus(dexterity_attack_base+3)+" vs AC "+DexterityNote()+" [+3 proficiency]; "}
    else {SWD +=dexterity_attack_base+" vs AC "+DexterityNote()+" [not proficient]; \r"}
  }
  SWD +="damage 1[W]=1d10"+DexterityDamage()+" range 20/40 6 lb (Crossbow) Load minor <br>"; wt+=6; 
  if (feat_weaponfocuscrossbow){SWD +="&nbsp; &nbsp; Add +"+weaponfocus()+" damage for Weapon Focus -- Crossbow<br>\r"; }
 }


x=0;
if (race_dragonborn)
 {
  stringy="1d6"; y=2; 
  if (total_levels>=11){stringy="2d6"; y=4; }
  if (total_levels>=21){stringy="3d6"; y=6; }
  if (feat_empowereddragonbreath)
  {
  stringy="1d10"; 
  if (total_levels>=11){stringy="2d10"; }
  if (total_levels>=21){stringy="3d10"; }
  }
  if (modifier_number(constitution)!=0)
  {
   stringy+=PlusOrMinus(modifier_number(constitution)); 
   stringy+=" [constitution]"; 
  }
  stringy+="&nbsp; &nbsp; "
 }

if (dragonbreath_strength)
 {
  x=strength_attack_base+2; y=2; 
  if (total_levels>=11){x=strength_attack_base+4; y=4; }
  if (total_levels>=21){x=strength_attack_base+6; y=6; }
  SWD +="Dragon Breath "+PlusOrMinus(x)+ " [base strength attack + "+y+"] vs reflex; damage"+stringy+"<br>\r"
 }
if (dragonbreath_constitution)
 {
  x=constitution_attack_base+2; y=2; 
  if (total_levels>=11){x=constitution_attack_base+4; y=4; }
  if (total_levels>=21){x=constitution_attack_base+6; y=6; }
  SWD +="Dragon Breath "+PlusOrMinus(x)+ " [base constitution attack + "+y+"] vs reflex; damage"+stringy+"<br>\r"
 }
if (dragonbreath_dexterity)
 {
  x=dexterity_attack_base+2; y=2; 
  if (total_levels>=11){x=dexterity_attack_base+4; y=4; }
  if (total_levels>=21){x=dexterity_attack_base+6; y=6; }
  SWD +="Dragon Breath "+PlusOrMinus(x)+ " [base dexterity attack + "+y+"] vs reflex; damage"+stringy+"<br>\r"
 }

if (race_drow)
 {
  if (document.form1.darkfirestat[0].checked)
   {
     x=intelligence_attack_base+2; y=2; 
     if (total_levels>=11){x=intelligence_attack_base+4; y=4; }
     if (total_levels>=21){x=intelligence_attack_base+6; y=6; }
     SWD +="Darkfire "+PlusOrMinus(x)+ " [base intelligence attack + "+y+"] vs reflex<br>\r"
   }
  if (document.form1.darkfirestat[1].checked)
   {
     x=wisdom_attack_base+2; y=2; 
     if (total_levels>=11){x=wisdom_attack_base+4; y=4; }
     if (total_levels>=21){x=wisdom_attack_base+6; y=6; }
     SWD +="Darkfire "+PlusOrMinus(x)+ " [base wisdom attack + "+y+"] vs reflex<br>\r"
   }
  if (document.form1.darkfirestat[2].checked)
   {
     x=charisma_attack_base+2; y=2; 
     if (total_levels>=11){x=charisma_attack_base+4; y=4; }
     if (total_levels>=21){x=charisma_attack_base+6; y=6; }
     SWD +="Darkfire "+PlusOrMinus(x)+ " [base charisma attack + "+y+"] vs reflex<br>\r"
   }
 }
if (genasi_earthsoul)
 {
  if (document.form1.earthshockstat[0].checked)
   {
     x=strength_attack_base+2; y=2; 
     if (total_levels>=11){x=strength_attack_base+4; y=4; }
     if (total_levels>=21){x=strength_attack_base+6; y=6; }
     SWD +="Earthshock "+PlusOrMinus(x)+ " [base strength attack + "+y+"] vs reflex<br>\r"
   }
  if (document.form1.earthshockstat[1].checked)
   {
     x=constitution_attack_base+2; y=2; 
     if (total_levels>=11){x=constitution_attack_base+4; y=4; }
     if (total_levels>=21){x=constitution_attack_base+6; y=6; }
     SWD +="Earthshock "+PlusOrMinus(x)+ " [base constitution attack + "+y+"] vs reflex<br>\r"
   }
  if (document.form1.earthshockstat[2].checked)
   {
     x=dexterity_attack_base+2; y=2; 
     if (total_levels>=11){x=dexterity_attack_base+4; y=4; }
     if (total_levels>=21){x=dexterity_attack_base+6; y=6; }
     SWD +="Earthshock "+PlusOrMinus(x)+ " [base dexterity attack + "+y+"] vs reflex<br>\r"
   }
 }
if (genasi_firesoul)
 {
  if (document.form1.firepulsestat[0].checked)
   {
     x=strength_attack_base+2; y=2; 
     if (total_levels>=11){x=strength_attack_base+4; y=4; }
     if (total_levels>=21){x=strength_attack_base+6; y=6; }
     SWD +="Firepulse "+PlusOrMinus(x)+ " [base strength attack + "+y+"] vs reflex<br>\r"
   }
  if (document.form1.firepulsestat[1].checked)
   {
     x=constitution_attack_base+2; y=2; 
     if (total_levels>=11){x=constitution_attack_base+4; y=4; }
     if (total_levels>=21){x=constitution_attack_base+6; y=6; }
     SWD +="Firepulse "+PlusOrMinus(x)+ " [base constitution attack + "+y+"] vs reflex<br>\r"
   }
  if (document.form1.firepulsestat[2].checked)
   {
     x=dexterity_attack_base+2; y=2; 
     if (total_levels>=11){x=dexterity_attack_base+4; y=4; }
     if (total_levels>=21){x=dexterity_attack_base+6; y=6; }
     SWD +="Firepulse "+PlusOrMinus(x)+ " [base dexterity attack + "+y+"] vs reflex<br>\r"
   }
 }
if (race_bladeling)
 {
  if (document.form1.razorswarmstat[0].checked)
   {
     x=strength_attack_base+2; y=2; 
     if (total_levels>=11){x=strength_attack_base+4; y=4; }
     if (total_levels>=21){x=strength_attack_base+6; y=6; }
     SWD +="Razorswarm "+PlusOrMinus(x)+ " [base strength attack + "+y+"] vs reflex<br>\r"
   }
  if (document.form1.razorswarmstat[1].checked)
   {
     x=constitution_attack_base+2; y=2; 
     if (total_levels>=11){x=constitution_attack_base+4; y=4; }
     if (total_levels>=21){x=constitution_attack_base+6; y=6; }
     SWD +="Razorswarm "+PlusOrMinus(x)+ " [base constitution attack + "+y+"] vs reflex<br>\r"
   }
  if (document.form1.razorswarmstat[2].checked)
   {
     x=dexterity_attack_base+2; y=2; 
     if (total_levels>=11){x=dexterity_attack_base+4; y=4; }
     if (total_levels>=21){x=dexterity_attack_base+6; y=6; }
     SWD +="Razorswarm "+PlusOrMinus(x)+ " [base dexterity attack + "+y+"] vs reflex<br>\r"
   }
 }
x=wisdom_attack_base; 
if (class_cleric){SWD+="Turn Undead "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
if (class_avenger){SWD+="Abjure Undead "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
if (class_invoker){SWD+="Rebuke Undead "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
if (shaman_stalker){SWD+="Spirit's Fangs "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
if (shaman_protector){SWD+="Spirit's Shield "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (class_warden){SWD+="Warden's Fury "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude"; 
SWD+="<br>\r"; }

x=wisdom_attack_base; 
if ((document.form1.lanceoffaith_box.checked) | (dilettante_lanceoffaith)){SWD+="Lance of Faith "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.priestsshield_box.checked) | (dilettante_priestsshield)){SWD+="Priest's Shield "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC "; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.righteousbrand_box.checked) | (dilettante_righteousbrand)){SWD+="Righteous Brand "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if ((document.form1.sacredflame_box.checked) | (dilettante_sacredflame)){SWD+="Sacred Flame "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.cleave_box.checked) | (dilettante_cleave)){SWD+="Cleave "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.reapingstrike_box.checked) | (dilettante_reapingstrike)){SWD+="Reaping Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base+2; 
if ((document.form1.surestrike_box.checked) | (dilettante_surestrike)){SWD+="Sure Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack+2] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.tideofiron_box.checked) | (dilettante_tideofiron)){SWD+="Tide of Iron "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.brashstrike_box.checked) ){SWD+="Brash Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.crushingsurge_box.checked) ){SWD+="Crushing Surge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.dualstrike_box.checked) ){SWD+="Dual Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC [invigorating]"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.footworklure_box.checked) ){SWD+="Footwork Lure "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if ((document.form1.bolsteringstrike_box.checked) | (dilettante_bolsteringstrike)){SWD+="Bolstering Strike "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if ((document.form1.enfeeblingstrike_box.checked) | (dilettante_enfeeblingstrike)){SWD+="Enfeebling Strike "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.holystrike_box.checked) | (dilettante_holystrike)){SWD+="Holy Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.valiantstrike_box.checked) | (dilettante_valiantstrike)){SWD+="Valiant Strike + "+PlusOrMinus(x)+sup_w()+" [base strength attack; add # of adjacent foes] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.carefulattack_box.checked) | (dilettante_carefulattack)){SWD+="Careful Attack "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if ((document.form1.carefulattack_box.checked) | (dilettante_carefulattack)){SWD+="Careful Attack "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.hitandrun_box.checked) | (dilettante_hitandrun)){SWD+="Hit and Run "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if ((document.form1.nimblestrike_box.checked) | (dilettante_nimblestrike)){SWD+="Nimble Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.twinstrike_box.checked) | (dilettante_twinstrike)){SWD+="Twin Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if ((document.form1.twinstrike_box.checked) | (dilettante_twinstrike)){SWD+="Twin Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }



x=dexterity_attack_base;
if ((document.form1.deftstrike_box.checked) | (dilettante_deftstrike)){SWD+="Deft Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if ((document.form1.piercingstrike_box.checked) | (dilettante_piercingstrike)){SWD+="Piercing Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if ((document.form1.ripostestrike_box.checked) | (dilettante_ripostestrike)){SWD+="Riposte Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if ((document.form1.slyflourish_box.checked) | (dilettante_slyflourish)){SWD+="Sly Flourish "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if ((document.form1.dishearteningstrike_box.checked) ){SWD+="Disheartening Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC [rattling]"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if ((document.form1.direradiance_box.checked) | (dilettante_direradiance)){SWD+="Dire Radiance "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (constitution_attack_base>x){x=constitution_attack_base; }
if ((document.form1.eldritchblast_box.checked) | (dilettante_eldritchblast)){SWD+="Eldritch Blast "+PlusOrMinus(x)+sup_i()+" (constitution / charisma) vs reflex"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if ((document.form1.eyebite_box.checked) | (dilettante_eyebite)){SWD+="Eyebite "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if ((document.form1.eyesofthevestige_box.checked) ){SWD+="Eyes of the Vestige [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if ((document.form1.hellishrebuke_box.checked) | (dilettante_hellishrebuke)){SWD+="Hellish Rebuke "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex"; 
SWD+="<br>\r"; }

x=charisma_attack_base; 
if ((document.form1.spitefulglamor_box.checked) ){SWD+="Spiteful Glamor "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r"; }

if ((document.form1.commandersstrike_box.checked) | (dilettante_commandersstrike)){SWD+="Commander's Strike (ally adds your intelligence bonus to damage)"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.furioussmash_box.checked) | (dilettante_furioussmash)){SWD+="Furious Smash "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.vipersstrike_box.checked) | (dilettante_vipersstrike)){SWD+="Viper's Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.wolfpacktactics_box.checked) | (dilettante_wolfpacktactics)){SWD+="Wolfpack Tactics "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.brashassault_box.checked) ){SWD+="Brash Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if ((document.form1.openingshove_box.checked) ){SWD+="Opening Shove "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if ((document.form1.cloudofdaggers_box.checked) | (dilettante_cloudofdaggers) | (arcane_initiate_choice()==1)){SWD+="Cloud of Daggers "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if ((document.form1.magicmissile_box.checked) | (dilettante_magicmissile)| (arcane_initiate_choice()==2)){SWD+="Magic Missile "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if ((document.form1.rayoffrost_box.checked) | (dilettante_rayoffrost)| (arcane_initiate_choice()==3)){SWD+="Ray of Frost "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if ((document.form1.scorchingburst_box.checked) | (dilettante_scorchingburst)| (arcane_initiate_choice()==4)){SWD+="Scorching Burst "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if ((document.form1.thunderwave_box.checked) | (dilettante_thunderwave)| (arcane_initiate_choice()==5)){SWD+="Thunderwave "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if ((document.form1.illusoryambush_box.checked)| (arcane_initiate_choice()==6) ){SWD+="Illusory Ambush [AP] "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if ((document.form1.phantombolt_box.checked)| (arcane_initiate_choice()==7) ){SWD+="Phantom Bolt [AP] "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if ((document.form1.stormpillar_box.checked)| (arcane_initiate_choice()==8) ){SWD+="Storm Pillar [AP] "+sup_i()+" [special]"; 
SWD+="<br>\r"; }

if ( (dilettante_other)){SWD+=document.form1.otherdilettante.value+" [hand-edit]<br>\r"; }


x=wisdom_attack_base;
if (document.form1.bondofpursuit_box.checked){SWD+="Bond of Pursuit "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC";
SWD+="<br>\r";}
if (document.form1.bondofretribution_box.checked){SWD+="Bond of Retribution "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC";
SWD+="<br>\r";}
if (document.form1.overwhelmingstrike_box.checked){SWD+="Overwhelming Strike "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC";
SWD+="<br>\r";}
if (document.form1.radiantvengeance_box.checked){SWD+="Radiant Vengeance "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
x=strength_attack_base;
if (document.form1.devastatingstrike_box.checked){SWD+="Devastating Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC";
SWD+="<br>\r";}
if (document.form1.howlingstrike_box.checked){SWD+="Howling Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC";
SWD+="<br>\r";}
if (document.form1.pressingstrike_box.checked){SWD+="Pressing Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC";
SWD+="<br>\r";}
if (document.form1.recuperatingstrike_box.checked){SWD+="Recuperating Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.guidingstrike_box.checked){SWD+="Guiding Strike "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC";
SWD+="<br>\r";}
if (document.form1.misdirectedmark_box.checked){SWD+="Misdirected Mark "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.viciousmockery_box.checked){SWD+="Vicious Mockery "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
if (document.form1.warsongstrike_box.checked){SWD+="War Song Strike "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC";
SWD+="<br>\r";}
if (document.form1.jinxshot_box.checked){SWD+="Jinx Shot "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC";
SWD+="<br>\r";}
x=wisdom_attack_base;
if (document.form1.callofthebeast_box.checked){SWD+="Call of the Beast "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will";
SWD+="<br>\r";}
if (document.form1.chillwind_box.checked){SWD+="Chill Wind "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude";
SWD+="<br>\r";}
if (document.form1.flameseed_box.checked){SWD+="Flame Seed "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.graspingclaws_box.checked){SWD+="Grasping Claws "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.pounce_box.checked){SWD+="Pounce "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.savagerend_box.checked){SWD+="Savage Rend "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.stormspike_box.checked){SWD+="Storm Spike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.thornwhip_box.checked){SWD+="Thorn Whip "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude";
SWD+="<br>\r";}
x=wisdom_attack_base;
if (document.form1.avenginglight_box.checked){SWD+="Avenging Light "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude";
SWD+="<br>\r";}
if (document.form1.divinebolts_box.checked){SWD+="Divine Bolts "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.graspingshards_box.checked){SWD+="Grasping Shards "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude";
SWD+="<br>\r";}
if (document.form1.sunstrike_box.checked){SWD+="Sun Strike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.vanguardslightning_box.checked){SWD+="Vanguard's Lightning "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
x=wisdom_attack_base;
if (document.form1.defendingstrike_box.checked){SWD+="Defending Strike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.hauntingspirits_box.checked){SWD+="Haunting Spirits "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will";
SWD+="<br>\r";}
if (document.form1.protectingstrike_box.checked){SWD+="Protecting Strike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will";
SWD+="<br>\r";}
if (document.form1.stalkersstrike_box.checked){SWD+="Stalker's Strike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude";
SWD+="<br>\r";}
if (document.form1.watchersstrike_box.checked){SWD+="Watcher's Strike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.wrathofwinter_box.checked){SWD+="Wrath of Winter "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.acidorb_box.checked){SWD+="Acid Orb "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.burningspray_box.checked){SWD+="Burning Spray "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.chaosbolt_box.checked){SWD+="Chaos Bolt "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
if (document.form1.dragonfrost_box.checked){SWD+="Dragon Frost "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude";
SWD+="<br>\r";}
if (document.form1.stormwalk_box.checked){SWD+="Storm Walk "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude";
SWD+="<br>\r";}
if (document.form1.blazingstarfall_box.checked){SWD+="Blazing Starfall "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
if (document.form1.lightningstrike_box.checked){SWD+="Lightning Strike "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=strength_attack_base;
if (document.form1.earthshieldstrike_box.checked){SWD+="Earthshield Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC";
SWD+="<br>\r";}
if (document.form1.strengthofstone_box.checked){SWD+="Strength of Stone "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC";
SWD+="<br>\r";}
if (document.form1.thornstrike_box.checked){SWD+="Thorn Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC";
SWD+="<br>\r";}
if (document.form1.weightofearth_box.checked){SWD+="Weight of Earth "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC";
SWD+="<br>\r";}


x=intelligence_attack_base; 
if ((document.form1.boomingblade_box.checked)){SWD+="Booming Blade "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC"; 
SWD+="<br>\r"; }
if ((document.form1.greenflameblade_box.checked)){SWD+="Greenflame Blade "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC"; 
SWD+="<br>\r"; }
if ((document.form1.lightninglure_box.checked)){SWD+="Lightning Lure "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
if ((document.form1.swordburst_box.checked)){SWD+="Sword Burst "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
if ((document.form1.luringstrike_box.checked)){SWD+="Luring Strike "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs AC"; 
SWD+="<br>\r"; }


x=strength_attack_base; 
if ((document.form1.circlingstrike_box.checked) ){SWD+="Circling Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
beast_attack_base=total_levels;
if (beast_bear){beast_attack_base+=2;}
if (beast_boar){beast_attack_base+=4;}
if (beast_cat){beast_attack_base+=4;}
if (beast_lizard){beast_attack_base+=4;}
if (beast_raptor){beast_attack_base+=5;}
if (beast_serpent){beast_attack_base+=4;}
if (beast_spider){beast_attack_base+=4;}
if (beast_wolf){beast_attack_base+=4;}
x=beast_attack_base; 
if ((document.form1.predatorstrike_box.checked) ){SWD+="Predator Strike "+PlusOrMinus(x)+" [beast attack base] vs AC"; 
SWD+="<br>\r"; }



if (document.form1.other01atwill_1_box.checked){SWD+=document.form1.other01atwill_1.value+":<br>\r"; }
if (document.form1.other01atwill_2_box.checked){SWD+=document.form1.other01atwill_2.value+":<br>\r"; }
if (document.form1.other01atwill_3_box.checked){SWD+=document.form1.other01atwill_3.value+":<br>\r"; }


x=wisdom_attack_base; 
if (document.form1.causefear_box.checked){SWD+="Cause Fear "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.divineglow_box.checked){SWD+="Divine Glow "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.healingstrike_box.checked){SWD+="Healing Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.wrathfulthunder_box.checked){SWD+="Wrathful Thunder "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.coveringattack_box.checked){SWD+="Covering Attack "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.passingattack_box.checked){SWD+="Passing Attack "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.spinningsweep_box.checked){SWD+="Spinning Sweep "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.steelserpentstrike_box.checked){SWD+="Steel Serpent Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.fearsomesmite_box.checked){SWD+="Fearsome Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.piercingsmite_box.checked){SWD+="Piercing Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.radiantsmite_box.checked){SWD+="Radiant Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.shieldingsmite_box.checked){SWD+="Shielding Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.direwolverinestrike_box.checked){SWD+="Dire Wolverine Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.evasivestrike_box.checked){SWD+="Evasive Strike (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.evasivestrike_box.checked){SWD+="Evasive Strike (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
if (document.form1.foxscunning_box.checked){SWD+="Fox's Cunning [special]"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.twofangedstrike_box.checked){SWD+="Two Fanged Strike (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.twofangedstrike_box.checked){SWD+="Two Fanged Strike (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.dazingstrike_box.checked){SWD+="Dazing Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.kingscastle_box.checked){SWD+="King's Castle "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.positioningstrike_box.checked){SWD+="Positioning Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.torturousstrike_box.checked){SWD+="Torturous Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.diabolicgrasp_box.checked){SWD+="Diabolic Grasp "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.dreadfulword_box.checked){SWD+="Dreadful Word "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.vampiricembrace_box.checked){SWD+="Vampiric Embrace "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.witchfire_box.checked){SWD+="Witchfire "+PlusOrMinus(x)+sup_i()+" [charism] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.guardingattack_box.checked){SWD+="Guarding Attack "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.hammerandanvil_box.checked){SWD+="Hammer and Anvil "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.leafonthewind_box.checked){SWD+="Leaf on the Wind "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.warlordsfavor_box.checked){SWD+="Warlord's Favor "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.burninghands_box.checked){SWD+="Burning Hands "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.chillstrike_box.checked){SWD+="Chill Strike "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.forceorb_box.checked){SWD+="Force Orb "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.icyterrain_box.checked){SWD+="Icy Terrain "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.rayofenfeeblement_box.checked){SWD+="Ray of Enfeeblement "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }



x=wisdom_attack_base;
if (document.form1.angelicalacrity_box.checked){SWD+="Angelic Alacrity "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (document.form1.avengingecho_box.checked){SWD+="Avenging Echo "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (document.form1.sharedmadness_box.checked){SWD+="Shared Madness "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (document.form1.whirlwindcharge_box.checked){SWD+="Whirlwind Charge "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs AC<br>\r";}
x=strength_attack_base;
if (document.form1.avalanchestrike_box.checked){SWD+="Avalanche Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.bloodletting_box.checked){SWD+="Bloodletting "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.greatcleave_box.checked){SWD+="Great Cleave "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.vaultthefallen_box.checked){SWD+="Vault the Fallen "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
x=charisma_attack_base;
if (document.form1.blunder_box.checked){SWD+="Blunder "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
if (document.form1.fastfriends_box.checked){SWD+="Fast Friends "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
if (document.form1.inspiringrefrain_box.checked){SWD+="Inspiring Refrain "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC<br>\r";}
if (document.form1.shoutoftriumph_box.checked){SWD+="Shout of Triumph "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.culltheherd_box.checked){SWD+="Cull the Herd "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs will<br>\r";}
if (document.form1.dartingbite_box.checked){SWD+="Darting Bite "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.frostflash_box.checked){SWD+="Frost Flash "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
if (document.form1.twistingvines_box.checked){SWD+="Twisting Vines "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.astralterror_box.checked){SWD+="Astral Terror "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (document.form1.bladesofastralfire_box.checked){SWD+="Blades of Astral Fire "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.spearoftheinquisitor_box.checked){SWD+="Spear of the Inquisitor "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.thunderofjudgment_box.checked){SWD+="Thunder of Judgment "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.calltotheancestralwarrior_box.checked){SWD+="Call to the Ancestral Warrior "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.calltotheancientdefender_box.checked){SWD+="Call to the Ancient Defender "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
if (document.form1.thunderbearswarding_box.checked){SWD+="Thunder Bear's Warding "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
if (document.form1.twinpanthers_box.checked){SWD+="Twin Panthers "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
x=charisma_attack_base;
if (document.form1.bedevilingburst_box.checked){SWD+="Bedeviling Burst "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
if (document.form1.explosivepyre_box.checked){SWD+="Explosive Pyre "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (document.form1.frostbind_box.checked){SWD+="Frost Bind "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
if (document.form1.tempestbreath_box.checked){SWD+="Tempest Breath "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (document.form1.thunderslam_box.checked){SWD+="Thunder Slam "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
x=strength_attack_base;
if (document.form1.earthspikes_box.checked){SWD+="Earth Spikes "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.hungryearth_box.checked){SWD+="Hungry Earth "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r";}
if (document.form1.thunderramassault_box.checked){SWD+="Thunder Ram Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.wildbloodfrenzy_box.checked){SWD+="Wildblood Frenzy "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}





x=intelligence_attack_base; 
if (document.form1.chillingblow_box.checked){SWD+="Chilling Blow "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC"; 
SWD+="<br>\r"; }
if (document.form1.flamecyclone_box.checked){SWD+="Flame Cyclone "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }

x=strength_attack_base;
if (document.form1.enclosetheprey_box.checked){SWD+="Enclose the Prey "+PlusOrMinus(x)+sup_w()+" [base strength attak] vs. AC<br>\r";}
x=beast_attack_base;
if (document.form1.synchronizedstrike_box.checked){SWD+="Synchronized Strike "+PlusOrMinus(x)+sup_w()+" [beast attack bonus] vs. AC<br>\r";}


if (document.form1.other01encounter_box.checked){SWD+=document.form1.other01encounter.value+":<br>\r"; }



x=strength_attack_base; 
if (document.form1.avengingflame_box.checked){SWD+="Avenging Flame "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.beaconofhope_box.checked){SWD+="Beacon of Hope "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.cascadeoflight_box.checked){SWD+="Cascade of Light "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.guardianoffaith_box.checked){SWD+="Guardian of Faith "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.brutestrike_box.checked){SWD+="Brute Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.comebackstrike_box.checked){SWD+="Comeback Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.villainsmenace_box.checked){SWD+="Villain's Menace "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.onpainofdeath_box.checked){SWD+="On Pain of Death "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.paladinsjudgment_box.checked){SWD+="Paladin's Judgment "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.radiantdelirium_box.checked){SWD+="Radiant Delirium "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.huntersbeartrap_box.checked){SWD+="Hunter's Beartrap (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs dexterity"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.huntersbeartrap_box.checked){SWD+="Hunter's Beartrap (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.jawsofthewolf_box.checked){SWD+="Jaws of the Wolf "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.splitthetree_box.checked){SWD+="Split the Tree "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.suddenstrike_box.checked){SWD+="Sudden Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.blindingbarrage_box.checked){SWD+="Blinding Barrage "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.easytarget_box.checked){SWD+="Easy Target "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.trickstrike_box.checked){SWD+="Trick Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }

if (document.form1.armorofagathys_box.checked){SWD+="Armor of Agathys [special]"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.curseofthedarkdream_box.checked){SWD+="Curse of the Dark Dream "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.dreadstar_box.checked){SWD+="Dread Star "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.flamesofphlegethos_box.checked){SWD+="Flames of Phlegethos "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.bastionofdefense_box.checked){SWD+="Bastion of Defense "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.leadtheattack_box.checked){SWD+="Lead the Attack "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.pinthefoe_box.checked){SWD+="Pin the Foe "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.whiteravenonslaught_box.checked){SWD+="White Raven Onslaught "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.acidarrow_box.checked){SWD+="Acid Arrow "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.flamingsphere_box.checked){SWD+="Flaming Sphere "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.freezingcloud_box.checked){SWD+="Freezing Cloud "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.sleep_box.checked){SWD+="Sleep "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }


x=wisdom_attack_base;
if (document.form1.aspectofmight_box.checked){SWD+="Aspect of Might "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.oathofthefinaldual_box.checked){SWD+="Oath of the Final Dual "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.renewingstrike_box.checked){SWD+="Renewing Strike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.templeoflight_box.checked){SWD+="Temple of Light "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.bloodhuntrage_box.checked){SWD+="Bloodhunt Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.macetailsrage_box.checked){SWD+="Macetail's Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. reflex<br>\r";}
if (document.form1.ragedrakesfrenzy_box.checked){SWD+="Ragedrake's Frenzy "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.swiftpantherrage_box.checked){SWD+="Swift Panther Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=charisma_attack_base;
if (document.form1.echoesoftheguardian_box.checked){SWD+="Echoes of the Guardian "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
if (document.form1.slayerssong_box.checked){SWD+="Slayer's Song "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
if (document.form1.stirringshout_box.checked){SWD+="Stirring Shout "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.verseoftriumph_box.checked){SWD+="Verse of Triumph "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
x=wisdom_attack_base;
if (document.form1.faeriefire_box.checked){SWD+="Faerie Fire "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.firesoflife_box.checked){SWD+="Fires of Life "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.savagefrenzy_box.checked){SWD+="Savage Frenzy "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.windprison_box.checked){SWD+="Wind Prison "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.angelicechelon_box.checked){SWD+="Angelic Echelon "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.bindinginvocationofchains_box.checked){SWD+="Binding Invocationofchains "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.purgingfire_box.checked){SWD+="Purging Fire "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.summonangeloffire_box.checked){SWD+="Summon Angel of Fire "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.blessingofthesevenwinds_box.checked){SWD+="Blessing of the Seven Winds "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.cleansingwindofthenorth_box.checked){SWD+="Cleansing Wind of the North "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.spiritofthehealingflood_box.checked){SWD+="Spirit of the Healing Flood "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.wrathofthespiritworld_box.checked){SWD+="Wrath of the Spirit World "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=charisma_attack_base;
if (document.form1.chromaticorb_box.checked){SWD+="Chromatic Orb "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.dazzlingray_box.checked){SWD+="Dazzling Ray "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.dragonfangbolt_box.checked){SWD+="Dragonfang Bolt "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.lightningbreath_box.checked){SWD+="Lightning Breath "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
x=strength_attack_base;
if (document.form1.formofthefearsomeram_box.checked){SWD+="Form of the Fearsome Ram "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. fortitude<br>\r";}
if (document.form1.formoftherelentlesspanther_box.checked){SWD+="Form of the Relentless Panther "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. reflex<br>\r";}
if (document.form1.formofthewillowsentinel_box.checked){SWD+="Form of the Willow Sentinel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.formofwintersherald_box.checked){SWD+="Form of Winter's Herald "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}




if (document.form1.burningblade_box.checked){SWD+="Burning Blade "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC"; 
SWD+="<br>\r"; }
if (document.form1.frostbacklash_box.checked){SWD+="Frost Backlash "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }

x=strength_attack_base;
if (document.form1.drivingthequarry_box.checked){SWD+="Driving the Quarry "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=beast_attack_base;
if (document.form1.partneredsavaging_box.checked){SWD+="Partnered Savaging "+PlusOrMinus(x)+" [beast attack bonus] vs. AC<br>\r";}


if (document.form1.other01daily_box.checked){SWD+=document.form1.other01daily.value+":<br>\r"; }

x=strength_attack_base; 
if (document.form1.blazingbeacon_box.checked){SWD+="Blazing Beacon "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.command_box.checked){SWD+="Command "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.dauntinglight_box.checked){SWD+="Daunting Light "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.splitthesky_box.checked){SWD+="Split the Sky "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.armorpiercingthrust_box.checked){SWD+="Armor Piercing Thrust "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.crushingblow_box.checked){SWD+="Crushing Blow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.danceofsteel_box.checked){SWD+="Dance of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base+4; 
if (document.form1.precisestrike_box.checked){SWD+="Precise Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack + 4] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.rainofblows_box.checked){SWD+="Rain of Blows "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.sweepingblow_box.checked){SWD+="Sweeping Blow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.arcingsmite_box.checked){SWD+="Arcing Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.invigoratingsmite_box.checked){SWD+="Invigorating Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.righteoussmite_box.checked){SWD+="Righteous Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.staggeringsmite_box.checked){SWD+="Staggering Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.cutandrun_box.checked){SWD+="Cut and Run (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.cutandrun_box.checked){SWD+="Cut and Run (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.disruptivestrike_box.checked){SWD+="Disruptive Strike (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.disruptivestrike_box.checked){SWD+="Disruptive Strike (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.shadowwaspstrike_box.checked){SWD+="Shadow Wasp Strike (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex, as per revision"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.shadowwaspstrike_box.checked){SWD+="Shadow Wasp Strike (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex, as per revision"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.thundertuskboarstrike_box.checked){SWD+="Thunder Tusk Boar Strike (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.thundertuskboarstrike_box.checked){SWD+="Thunder Tusk Boar Strike (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.baitandswitch_box.checked){SWD+="Bait and Switch "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs will"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.setupstrike_box.checked){SWD+="Set Up Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.toppleover_box.checked){SWD+="Topple Over "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.trickstersblade_box.checked){SWD+="Trickster's Blade "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.eldritchrain_box.checked){SWD+="Eldritch Rain "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.fierybolt_box.checked){SWD+="Fiery Bolt "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.frigiddarkness_box.checked){SWD+="Frigid Darkness "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.otherwindstride_box.checked){SWD+="Other Wind Stride "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.holdtheline_box.checked){SWD+="Hold the Line "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.inspiringwarcry_box.checked){SWD+="Inspiring War Cry "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.steelmonsoon_box.checked){SWD+="Steel Monsoon "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.warlordsstrike_box.checked){SWD+="Warlord's Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.colorspray_box.checked){SWD+="Color Spray "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.fireshroud_box.checked){SWD+="Fire Shroud "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.icyrays_box.checked){SWD+="Icy Rays "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.shocksphere_box.checked){SWD+="Shock Sphere "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }



x=wisdom_attack_base;
if (document.form1.deflectingthunder_box.checked){SWD+="Deflecting Thunder "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (document.form1.enmitysreach_box.checked){SWD+="Enmity Sreach "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
if (document.form1.halooffire_box.checked){SWD+="Halo of Fire "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (document.form1.sequesteringstrike_box.checked){SWD+="Sequestering Strike "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
x=strength_attack_base;
if (document.form1.bladesweep_box.checked){SWD+="Blade Sweep "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.bloodstrike_box.checked){SWD+="Blood Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.daringcharge_box.checked){SWD+="Daring Charge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.hammerfall_box.checked){SWD+="Hammer Fall "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r";}
if (document.form1.shatterbonestrike_box.checked){SWD+="Shatter Bone Strike "+PlusOrMinus(x)+sup_w()+" [base AC attack] vs AC<br>\r";}
x=charisma_attack_base;
if (document.form1.chargerscall_box.checked){SWD+="Charger's Call "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC<br>\r";}
if (document.form1.cunningferocity_box.checked){SWD+="Cunning Ferocity "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs reflex<br>\r";}
if (document.form1.dissonantstrain_box.checked){SWD+="Dissonant Strain "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
if (document.form1.impellingforce_box.checked){SWD+="Impelling Force "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.batteringclaws_box.checked){SWD+="Battering Claws "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.calllightning_box.checked){SWD+="Call Lightning "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.predatorsflurry_box.checked){SWD+="Predator's Flurry "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.tundrawind_box.checked){SWD+="Tundra Wind "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.chainsofcarceri_box.checked){SWD+="Chains of Carceri "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.glyphofimprisonment_box.checked){SWD+="Glyph of Imprisonment "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs will<br>\r";}
if (document.form1.offeringofjustice_box.checked){SWD+="Offering of Justice "+sup_i()+" [no attack roll]<br>\r";}
if (document.form1.sunhammer_box.checked){SWD+="Sun Hammer "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.calltothesavageelder_box.checked){SWD+="Call to the Savage Elder "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.lightningpantherspirit_box.checked){SWD+="Lightning Panther Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.rimefirespirit_box.checked){SWD+="Rimefire Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (document.form1.springrenewalstrike_box.checked){SWD+="Spring Renewal Strike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
x=charisma_attack_base;
if (document.form1.dancinglightning_box.checked){SWD+="Dancing Lightning "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (document.form1.flamespiral_box.checked){SWD+="Flame Spiral "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (document.form1.icedragonsteeth_box.checked){SWD+="Ice Dragon's Teeth "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (document.form1.poisonousexhalation_box.checked){SWD+="Poisonous Exhalation "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
if (document.form1.spectralclaw_box.checked){SWD+="Spectral Claw "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
x=strength_attack_base;
if (document.form1.burstofearthsfury_box.checked){SWD+="Burst of Earth's Fury "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.earthgraspstrike_box.checked){SWD+="Earth Grasp Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.predatoryguardian_box.checked){SWD+="Predatory Guardian "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.thunderingstrike_box.checked){SWD+="Thundering Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}



x=strength_attack_base;
if (document.form1.beastlatch_box.checked){SWD+="Beast Latch "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.pairedpredators_box.checked){SWD+="Paired Predators "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}


if (document.form1.other03encounter_box.checked){SWD+=document.form1.other03encounter.value+":<br>\r"; }



x=strength_attack_base; 
if (document.form1.runeofpeace_box.checked){SWD+="Rune of Peace "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.spiritualweapon_box.checked){SWD+="Spiritual Weapon "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.cracktheshell_box.checked){SWD+="Crack the Shell "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.dizzyingblow_box.checked){SWD+="Dizzying Blow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.hallowedcircle_box.checked){SWD+="Hallowed Circle "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.martyrsretribution_box.checked){SWD+="Martyr's Retribution "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.signofvulnerability_box.checked){SWD+="Sign of Vulnerability "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.excruciatingshot_box.checked){SWD+="Excruciating Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.frenziedskirmish_box.checked){SWD+="Frenzied Skirmish "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.splinteringshot_box.checked){SWD+="Splintering Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.twowolfpounce_box.checked){SWD+="Two Wolf Pounce "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.cleverriposte_box.checked){SWD+="Clever Riposte "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.deepcut_box.checked){SWD+="Deep Cut "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.walkingwounded_box.checked){SWD+="Walking Wounded "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.avernianeruption_box.checked){SWD+="Avernian Eruption "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.crownofmadness_box.checked){SWD+="Crown of Madness "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.curseofthebloodyfangs_box.checked){SWD+="Curse of the Bloody Fangs "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs AC"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.hungerofhadar_box.checked){SWD+="Hunger of Hadar "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude on secondary attack"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.standthefallen_box.checked){SWD+="Stand the Fallen "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.turningpoint_box.checked){SWD+="Turning Point "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.villainsnightmare_box.checked){SWD+="Villain's Nightmare "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.bigbysicygrasp_box.checked){SWD+="Bigby's Icy Grasp "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.fireball_box.checked){SWD+="Fireball "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.stinkingcloud_box.checked){SWD+="Stinking Cloud "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.web_box.checked){SWD+="Web "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }





x=wisdom_attack_base;
if (document.form1.bondofforesight_box.checked){SWD+="Bond of Foresight "+PlusOrMinus(x)+sup_w()+" [wisdom attack bonus] vs AC<br>\r";}
if (document.form1.dawhfiresigil_box.checked){SWD+="Dawn Fire Sigil "+PlusOrMinus(x)+sup_w()+" [wisdom attack bonus] vs fortitude<br>\r";}
if (document.form1.executionerscloak_box.checked){SWD+="Executioner's Cloak "+PlusOrMinus(x)+sup_w()+" [wisdom attack bonus] vs AC<br>\r";}
if (document.form1.oathofconsuminglight_box.checked){SWD+="Oath of Consuming Light "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs AC<br>\r";}
x=strength_attack_base;
if (document.form1.frostwolfrage_box.checked){SWD+="Frost Wolf Rage "+PlusOrMinus(x)+sup_w()+" [strength attack bonus] vs AC<br>\r";}
if (document.form1.silverphoenixrage_box.checked){SWD+="Silver Phoenix Rage "+PlusOrMinus(x)+sup_w()+" [strength attack bonus] vs AC<br>\r";}
if (document.form1.thunderhawkrage_box.checked){SWD+="Thunder Hawk Rage "+PlusOrMinus(x)+sup_w()+" [strength attack bonus] vs AC<br>\r";}
if (document.form1.vengefulstormrage_box.checked){SWD+="Vengeful Storm Rage "+PlusOrMinus(x)+sup_w()+" [strength attack bonus] vs AC<br>\r";}
x=charisma_attack_base;
if (document.form1.satireofbravery_box.checked){SWD+="Satire of Bravery "+PlusOrMinus(x)+sup_i()+" [charisma attack bonus] vs will<br>\r";}
if (document.form1.songofdiscord_box.checked){SWD+="Song of Discord "+PlusOrMinus(x)+sup_i()+" [charisma attack bonus] vs will<br>\r";}
if (document.form1.tuneoficeandwind_box.checked){SWD+="Tune of Ice and Wind "+PlusOrMinus(x)+sup_i()+" [charisma attack bonus] vs will<br>\r";}
if (document.form1.wordofmysticwarding_box.checked){SWD+="Word of Mystic Warding "+PlusOrMinus(x)+sup_w()+" [charisma attack bonus] vs will<br>\r";}
x=wisdom_attack_base;
if (document.form1.hobblingrend_box.checked){SWD+="Hobbling Rend "+PlusOrMinus(x)+sup_i()+sup_bf()+" [wisdom attack bonus] vs reflex<br>\r";}
if (document.form1.primalwolverine_box.checked){SWD+="Primal Wolverine "+PlusOrMinus(x)+sup_i()+sup_bf()+" [wisdom attack bonus] vs reflex<br>\r";}
if (document.form1.roarofterror_box.checked){SWD+="Roar of Terror "+PlusOrMinus(x)+sup_i()+sup_bf()+" [wisdom attack bonus] vs reflex<br>\r";}
if (document.form1.wallofthorns_box.checked){SWD+="Wall of Thorns "+sup_i()+"[special]<br>\r";}
x=wisdom_attack_base;
if (document.form1.bladeofvengeance_box.checked){SWD+="Blade of Vengeance "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs reflex<br>\r";}
if (document.form1.graspingchainsofthejusticiar_box.checked){SWD+="Gasping Chains of the Justiciar "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs reflex<br>\r";}
if (document.form1.iconofterror_box.checked){SWD+="Icon of Terror "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs will<br>\r";}
if (document.form1.searingorb_box.checked){SWD+="Searing Orb "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.earthragespirit_box.checked){SWD+="Earthrage Spirit "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs reflex<br>\r";}
if (document.form1.spiritofthehawkswind_box.checked){SWD+="Spirit of the Hawk's Wind "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs reflex<br>\r";}
if (document.form1.spiritoftheshieldingfire_box.checked){SWD+="Spirit of the Shielding Fire "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs reflex<br>\r";}
if (document.form1.warchieftainsblessing_box.checked){SWD+="War Chieftain's Blessing "+PlusOrMinus(x)+sup_i()+" [wisdom attack bonus] vs will<br>\r";}
x=charisma_attack_base;
if (document.form1.acidicimplanation_box.checked){SWD+="Acidic Implantation "+PlusOrMinus(x)+sup_i()+" [charisma attack bonus] vs fortitude<br>\r";}
if (document.form1.palestflames_box.checked){SWD+="Palest Flames "+PlusOrMinus(x)+sup_i()+" [charisma attack bonus] vs reflex<br>\r";}
if (document.form1.reelingtorment_box.checked){SWD+="Reeling Torment "+PlusOrMinus(x)+sup_i()+" [charisma attack bonus] vs will<br>\r";}
if (document.form1.serpentineblast_box.checked){SWD+="Serpentine Blast "+PlusOrMinus(x)+sup_i()+" [charisma attack bonus] vs reflex<br>\r";}
if (document.form1.thunderleap_box.checked){SWD+="Thunder Leap "+PlusOrMinus(x)+sup_i()+" [charisma attack bonus] vs fortitude<br>\r";}
x=strength_attack_base;
if (document.form1.hailofthorns_box.checked){SWD+="Hail of Thorns "+PlusOrMinus(x)+sup_w()+" [strength attack bonus] vs reflex<br>\r";}
if (document.form1.stormstrike_box.checked){SWD+="Storm Strike "+PlusOrMinus(x)+sup_w()+" [strength attack bonus] vs AC<br>\r";}
if (document.form1.thunderstep_box.checked){SWD+="Thunder Step "+PlusOrMinus(x)+sup_w()+" [strength attack bonus] vs reflex<br>\r";}
if (document.form1.wintersgrip_box.checked){SWD+="Winter's Grip "+PlusOrMinus(x)+sup_w()+" [strength attack bonus] vs fortitude<br>\r";}




x=beast_attack_base;
if (document.form1.bloodiedfrenzy_box.checked){SWD+="Bloodied Frenzy "+PlusOrMinus(x)+" [beast attack bonus] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.laceratingmaul_box.checked){SWD+="Lacerating Maul "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}

if (document.form1.other05daily_box.checked){SWD+=document.form1.other05daily.value+":<br>\r"; }




x=strength_attack_base; 
if (document.form1.awestrike_box.checked){SWD+="Awe Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.breakthespirit_box.checked){SWD+="Break the Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.searinglight_box.checked){SWD+="Searing Light "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.strengthenthefaithful_box.checked){SWD+="Strengthen the Faithful "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.comeandgetit_box.checked){SWD+="Come and Get It "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.griffonswrath_box.checked){SWD+="Griffon's Wrath "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.ironbulwark_box.checked){SWD+="Iron Bulwark "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base-2; 
if (document.form1.recklessstrike_box.checked){SWD+="Reckless Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack - 2] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.suddensurge_box.checked){SWD+="Sudden Surge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.beckonfoe_box.checked){SWD+="Beckon Foe "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.benigntransposition_box.checked){SWD+="Benign Transposition "+PlusOrMinus(x)+sup_w()+" [base charisma attack, special] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.divinereverence_box.checked){SWD+="Divine Reverence "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.thundersmite_box.checked){SWD+="Thunder Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.clawsofthegriffon_box.checked){SWD+="Claws of the Griffon "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.hawktalon_box.checked){SWD+="Hawk Talon (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.hawktalon_box.checked){SWD+="Hawk Talon (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.spikesofthemanticore_box.checked){SWD+="Spikes of the Manticore "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.sweepingwhirlwind_box.checked){SWD+="Sweeping Whirlwind "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.cloudofsteel_box.checked){SWD+="Cloud of Steel "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.imperilingstrike_box.checked){SWD+="Imperiling Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.roguesluck_box.checked){SWD+="Rogue's Luck "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.sandintheeyes_box.checked){SWD+="Sand in the Eyes "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.howlofdoom_box.checked){SWD+="Howl of Doom "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.infernalmooncurse_box.checked){SWD+="Infernal Moon Curse "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.mirethemind_box.checked){SWD+="Mire the Mind "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.signofillomen_box.checked){SWD+="Sign of Ill Omen "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.lionsroar_box.checked){SWD+="Lion's Roar "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.sunderarmor_box.checked){SWD+="Sunder Armor "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.surpriseattack_box.checked){SWD+="Surprise Attack "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.surroundfoe_box.checked){SWD+="Surround Foe "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.fireburst_box.checked){SWD+="Fire Burst "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.lightningbolt_box.checked){SWD+="Lightning Bolt "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.spectralram_box.checked){SWD+="Spectral Ram "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.winterswrath_box.checked){SWD+="Winter's Wrath "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }



x=wisdom_attack_base;
if (document.form1.avengingwinds_box.checked){SWD+="Avenging Winds "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r"};
if (document.form1.bladestep_box.checked){SWD+="Blade Step "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r"};
if (document.form1.inexorablepursuit_box.checked){SWD+="Inexorable Pursuit "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r"};
if (document.form1.slintertheformation_box.checked){SWD+="Splinter the Formation "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r"};
x=strength_attack_base;
if (document.form1.curtainofsteel_box.checked){SWD+="Curtain of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"};
if (document.form1.greatshout_box.checked){SWD+="Great Shout "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"};
if (document.form1.feastofviolence_box.checked){SWD+="Feast of Violence "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"};
if (document.form1.tideofblood_box.checked){SWD+="Tide of Blood "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"};
x=charisma_attack_base;
if (document.form1.deflectattention_box.checked){SWD+="Deflect Attention "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"};
if (document.form1.distractingshout_box.checked){SWD+="Distracting Shout "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"};
if (document.form1.scorpionsclawstrike_box.checked){SWD+="Scorpion's Claw Strike "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs AC<br>\r"};
if (document.form1.unluck_box.checked){SWD+="Unluck "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r"};
x=wisdom_attack_base;
if (document.form1.feastoffury_box.checked){SWD+="Feast of Fury "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex<br>\r"};
if (document.form1.latchon_box.checked){SWD+="Latch On "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex<br>\r"};
if (document.form1.swlrlingwinds_box.checked){SWD+="Swirling Winds "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r"};
if (document.form1.tremor_box.checked){SWD+="Tremor "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r"};
x=wisdom_attack_base;
if (document.form1.balefuleyeofjudgment_box.checked){SWD+="Baleful Eye of Judgment "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r"};
if (document.form1.boltoftherisingsun_box.checked){SWD+="Bolt of the Rising Sun "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r"};
if (document.form1.invokeobedience_box.checked){SWD+="Invoke Obedience "+PlusOrMinus(x+5)+sup_i()+" [base wisdom attack + 5] vs will<br>\r"};
if (document.form1.thunderboldoftheheavens_box.checked){SWD+="Thunderbolt of the Heavens "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r"};
x=wisdom_attack_base;
if (document.form1.calltotheblooddancer_box.checked){SWD+="Call to the Blood Dancer "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r"};
if (document.form1.calltothehowlingstorm_box.checked){SWD+="Call to the Howling Storm "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r"};
if (document.form1.thunderstormspirit_box.checked){SWD+="Thunderstorm Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r"};
if (document.form1.winterwindspirit_box.checked){SWD+="Winter Wind Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r"};
x=charisma_attack_base;
if (document.form1.chaosstorm_box.checked){SWD+="Chaos Storm "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r"};
if (document.form1.crushingsphere_box.checked){SWD+="Crushing Sphere "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r"};
if (document.form1.rimestorm_box.checked){SWD+="Rimestorm "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r"};
if (document.form1.shout_box.checked){SWD+="Shout "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r"};
x=strength_attack_base;
if (document.form1.earthgift_box.checked){SWD+="Earth Gift "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"};
if (document.form1.mountainhammer_box.checked){SWD+="Mountain Hammer "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r"};
if (document.form1.stalkerspositioning_box.checked){SWD+="Stalker's Positioning "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"};
if (document.form1.thornburst_box.checked){SWD+="Thorn Burst "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex<br>\r"};





x=beast_attack_base;
if (document.form1.beastrush_box.checked){SWD+="Beast Rush "+PlusOrMinus(x)+sup_w()+" [beast attack bonus] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.harriedquarry_box.checked){SWD+="Harried Quarry "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}

if (document.form1.other07encounter_box.checked){SWD+=document.form1.other07encounter.value+":<br>\r"; }


x=wisdom_attack_base; 
if (document.form1.astraldefenders_box.checked){SWD+="Astral Defenders "+PlusOrMinus(x)+sup_i()+" [base wisdom attack -- special] vs reflex"; 
SWD+="<br>\r"; }
if (document.form1.bladebarrier_box.checked){SWD+="Blade Barrier [special]"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.divinepower_box.checked){SWD+="Divine Power "+PlusOrMinus(x)+sup_w()+" [strenth] vs fortitude"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.flamestrike_box.checked){SWD+="Flame Strike "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.shiftthebattlefield_box.checked){SWD+="Shift the Battlefield "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.thicketofblades_box.checked){SWD+="Thicket of Blades "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.victorioussurge_box.checked){SWD+="Victorious Surge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.crownofglory_box.checked){SWD+="Crown of Glory "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.onestandsalone_box.checked){SWD+="One Stands Alone "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.radiantpulse_box.checked){SWD+="Radiant Pulse "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.attacksontherun_box.checked){SWD+="Attacks on the Run (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.attacksontherun_box.checked){SWD+="Attacks on the Run (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.closequartersshot_box.checked){SWD+="Close Quarters Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.sprayofarrows_box.checked){SWD+="Spray of Arrows "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.swirlingleavesofsteel_box.checked){SWD+="Swirling Leaves of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.crimsonedge_box.checked){SWD+="Crimson Edge "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.deadlypositioning_box.checked){SWD+="Deadly Positioning "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.knockout_box.checked){SWD+="Knockout "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.curseoftheblackfrost_box.checked){SWD+="Curse of the Black Frost "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.ironspikeofdis_box.checked){SWD+="Iron Spike of Dis "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.summonsofkhirad_box.checked){SWD+="Summons of Khirad "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.thiefoffivefates_box.checked){SWD+="Thief of Five Fates "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.irondragoncharge_box.checked){SWD+="Iron Dragon Charge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.knockthemdown_box.checked){SWD+="Knock Them Down "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.whiteravenstrike_box.checked){SWD+="White Raven Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.icestorm_box.checked){SWD+="Ice Storm "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.lightningserpent_box.checked){SWD+="Lightning Serpent "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.mordenkainenssword_box.checked){SWD+="Mordenkainen's Sword "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex";
SWD+="<br>\r"; }
if (document.form1.walloffire_box.checked){SWD+="Wall of Fire [special]"; 
SWD+="<br>\r"; }


x=wisdom_attack_base;
if (document.form1.aspectofspeed_box.checked){SWD+="Aspect of Speed "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (document.form1.enduringstrike_box.checked){SWD+="Enduring Strike "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (document.form1.oathofpursuit_box.checked){SWD+="Oath of Pursuit "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (document.form1.templeofshadow_box.checked){SWD+="Temple of Shadow "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
x=strength_attack_base;
if (document.form1.blackdragonrage_box.checked){SWD+="Black Dragon Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.oakhammerrage_box.checked){SWD+="Oak Hammer Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.stonebearrage_box.checked){SWD+="Stone Bear Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.whitetigerrage_box.checked){SWD+="White Tiger Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
x=charisma_attack_base;
if (document.form1.forcefulconduit_box.checked){SWD+="Forceful Conduit "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
if (document.form1.hideouslaughter_box.checked){SWD+="Hideous Laughter "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
if (document.form1.hymnofthedaringrescue_box.checked){SWD+="Hymn of the Daring Rescue "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs reflex<br>\r";}
if (document.form1.thunderblade_box.checked){SWD+="Thunder Blade "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC<br>\r";}
x=wisdom_attack_base;
if (document.form1.entangle_box.checked){SWD+="Entangle "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.feralmauling_box.checked){SWD+="Feral Mauling "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.primalwolf_box.checked){SWD+="Primal Wolf "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.sunbeam_box.checked){SWD+="Sunbeam "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
x=wisdom_attack_base;
if (document.form1.ceruleanflames_box.checked){SWD+="Cerulean Flames "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.fourfoldinvocationofdoom_box.checked){SWD+="Fourfold Invocation of Doom "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (document.form1.summonbladeangel_box.checked){SWD+="Summon Blade Angel "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude / reflex<br>\r";}
if (document.form1.visionsofparadise_box.checked){SWD+="Visions of Paradise "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
x=wisdom_attack_base;
if (document.form1.ancientwarlordsinspiration_box.checked){SWD+="Ancient Warlord's Inspiration "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.clevertricksterspirit_box.checked){SWD+="Clever Trickster Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (document.form1.ragingstormspirit_box.checked){SWD+="Raging Storm Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (document.form1.spiritofautumnsreaping_box.checked){SWD+="Spirit of Autumn's Reaping "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
x=charisma_attack_base;
if (document.form1.adamantineecho_box.checked){SWD+="Adamantine Echo "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
if (document.form1.contagiouscurse_box.checked){SWD+="Contagious Curse "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
if (document.form1.primethefire_box.checked){SWD+="Prime the Fire "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
if (document.form1.staggeringblast_box.checked){SWD+="Staggering Blast "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
x=strength_attack_base;
if (document.form1.formoftheoaksentinel_box.checked){SWD+="Form of the Oak Sentinel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.formofthefrenziedwolverine_box.checked){SWD+="Form of the Frenzied Wolverine "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.formofthestonesentinel_box.checked){SWD+="Form of the Stone Sentinel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (document.form1.formofthestormeagle_box.checked){SWD+="Form of the Storm Eagle "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}





x=beast_attack_base;
if (document.form1.menacingcry_box.checked){SWD+="Menacing Cry "+PlusOrMinus(x)+" [beast attack bonus] vs. will<br>\r";}


if (document.form1.other09daily_box.checked){SWD+=document.form1.other09daily.value+":<br>\r"; }




if (paragon_angelicavenger){
x=wisdom_attack_base; 
SWD+="Astral Wave "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs will<br>\r"; }
if (paragon_divineoracle){
SWD+="Prophecy of Doom [special]<br>\r"; }
if (paragon_radiantservant){
x=wisdom_attack_base; 
SWD+="Solar Wrath "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will (implement per errata 7/2/08)<br>\r"; }
if (paragon_warpriest){
x=wisdom_attack_base; 
SWD+="Battle Cry "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs fortitude (weapon as per errata 7/2/08)<br>\r"; }
if (paragon_ironvanguard){
x=strength_attack_base; 
SWD+="Frontline Surge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_kensei){
x=strength_attack_base+2; 
SWD+="Masterstroke "+PlusOrMinus(x)+sup_w()+" [base strength attack + 2] vs AC<br>\r"; }
if (paragon_pitfighter){
x=strength_attack_base; 
SWD+="All Bets Are Off "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_swordmaster){
x=strength_attack_base; 
SWD+="Precision Cut "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs dexterity<br>\r"; }
if (paragon_astralweapon){
x=strength_attack_base; 
SWD+="Carving a Path of Light "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_championoforder){
x=strength_attack_base+4; 
SWD+="Certain Justice "+PlusOrMinus(x)+sup_w()+" [base strength attack + 4] vs AC<br>\r"; }
if (paragon_hospitaler){
x=charisma_attack_base; 
SWD+="Warding Blow "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC<br>\r"; }
if (paragon_justiciar){
x=charisma_attack_base; 
SWD+="Just Radiance "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"; }
if (paragon_battlefieldarcher){
x=dexterity_attack_base; 
SWD+="Combined Fire "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_beaststalker){
x=dexterity_attack_base; 
SWD+="Pinpointing Arrow "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_pathfinder){
x=strength_attack_base; 
SWD+="Wrong Step "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_stormwarden){
x=strength_attack_base; 
SWD+="Clearing the Ground "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_catburglar){
x=dexterity_attack_base; 
SWD+="Cat Burglar's Gambit "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_daggermaster){
x=dexterity_attack_base; 
SWD+="Critical Opportunity "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_masterinfiltrator){
x=dexterity_attack_base; 
SWD+="Distracting Wound "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_shadowassassin){
x=dexterity_attack_base; 
SWD+="Killer's Eye "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex<br>\r"; }
if (paragon_doomsayer){
x=charisma_attack_base; 
SWD+="Fates Entwined "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"; }
if (paragon_feytouched){
x=charisma_attack_base; 
SWD+="Will of the Feywild "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"; }
if (paragon_lifestealer){
x=constitution_attack_base; 
SWD+="Soul Scorch "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will<br>\r"; }
if (paragon_battlecaptain){
x=strength_attack_base; 
SWD+="Force Retreat "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex<br>\r"; }
if (paragon_combatveteran){
x=strength_attack_base; 
SWD+="Skirmish Ploy "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex<br>\r"; }
if (paragon_knightcommander){
x=strength_attack_base; 
SWD+="Slash and Press "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_swordmarshal){
x=strength_attack_base; 
SWD+="Blade Flurry "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_battlemage){
x=intelligence_attack_base; 
SWD+="Forceful Retort "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude<br>\r"; }
if (paragon_bloodmage){
x=intelligence_attack_base; 
SWD+="Blood Pulse "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will<br>\r"; }
if (paragon_spellstormmage){
x=intelligence_attack_base; 
SWD+="Storm Cage "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex<br>\r"; }
if (paragon_wizardofthespiraltower){
x=intelligence_attack_base; 
SWD+="The One Sword "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex<br>\r"; }
if (paragon_anarchofshyr){
x=intelligence_attack_base; 
SWD+="Lightning Clutch "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC<br>\r"; }
if (paragon_coronalguard){
x=intelligence_attack_base; 
SWD+="Countering Thunderclap "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude<br>\r"; }
if (paragon_darkwalker){
x=charisma_attack_base; 
SWD+="Ghostly Bane "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r"; }
if (paragon_doomguide){
x=charisma_attack_base; 
SWD+="Kelemvor's Circle "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r"; }
if (paragon_drowwanderer){
x=physical_attack_base; 
SWD+="From out of Nowhere "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC<br>\r"; } 
if (paragon_eartheartdefender){
x=strength_attack_base; 
SWD+="Gain Heart "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r"; } 
if (paragon_elementaltempest){
x=physical_attack_base; 
SWD+="Tempest Burst "+PlusOrMinus(x)+" ["+best_physical_attack+"] vs reflex<br>\r"; } 
if (paragon_evermeetwarlock){
x=charisma_attack_base; 
SWD+="Blinding Beacon "+PlusOrMinus(x)+" [base charisma attack] vs reflex<br>\r"; } 


if (paragon_ghostofeventide){
x=dexterity_attack_base;
SWD+="Shadow Hand Attack "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_heartwarder){
x=charisma_attack_base;
SWD+="Siren Voice "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"; }
if (paragon_highforestscout){
x=dexterity_attack_base;
SWD+="Argent Arrow "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_impilturandemonslayer){
x=strength_attack_base;
SWD+="Demonslayer's Hindrance "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_morninglord){
x=mental_attack_base;
SWD+="Pure Glow "+PlusOrMinus(x)+sup_i()+" [best_mental_attack] vs will<br>\r"; }
if (paragon_purpledragonknight){
x=strength_attack_base;
SWD+="Rallying Attack "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_silverstar){
x=mental_attack_base;
SWD+="Tears of Selune "+PlusOrMinus(x)+sup_i()+" [best_mental_attack] vs will<br>\r"; }
if (paragon_simbarchofaglarond){
x=intelligence_attack_base+8;
SWD+="Silver Fire "+PlusOrMinus(x)+sup_i()+" [base intelligence attack + 8] vs reflex<br>\r"; }
if (paragon_spellguardwizard){
x=intelligence_attack_base;
SWD+="Spellguard Force Lash "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude<br>\r"; }
if (paragon_steelskyliberator){
x=strength_attack_base;
SWD+="Liberator's Blow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_swordcoastcorsair){
x=strength_attack_base;stringy="strength";if (dexterity>strength){x=dexterity_attack_base;stringy="dexterity";}
SWD+="Strike Terror "+PlusOrMinus(x)+sup_w()+" ["+stringy+"] vs reflex<br>\r"; }
if (paragon_umbriri){
x=strength_attack_base;
SWD+="Assassin Shadow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_wanderingswordmage){
x=intelligence_attack_base;
SWD+="Four Corners Attack "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC<br>\r"; }
if (paragon_warwizardofcormyr){
x=intelligence_attack_base;
SWD+="Lightning Ripple "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex<br>\r"; }
if (paragon_whirlwindgenasi){
q=4;if (total_levels>=21){q=6;}x=mental_attack_base+q;
SWD+="Tumbling Gale "+PlusOrMinus(x)+" ["+best_mental_attack+""+q+"] vs fortitude<br>\r"; }
if (paragon_wildfiregenasi){
q=4;if (total_levels>=21){q=6;}
x=physical_attack_base+q;
SWD+="Firesoul Combustion "+PlusOrMinus(x)+" ["+best_physical_attack+""+q+"] vs reflex<br>\r"; }

if (paragon_feralspirit){
x=beast_attack_base;
SWD+="Feral Diversion "+PlusOrMinus(x)+" [beast attack bonus] vs AC<br>\r"; }

if (paragon_packrunner){
x=strength_attack_base;
SWD+="Pack Runner Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }

if (paragon_wildcatstalker){
x=strength_attack_base;
SWD+="Cat-Eyed Strike (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex<br>\r";
x=dexterity_attack_base;
SWD+="Cat-Eyed Strike (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex<br>\r";
}

if (paragon_bladeofcendriane){
x=strength_attack_base;
SWD+="Forcing the Portal "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}

if (paragon_doomguardmarauder){
x=strength_attack_base;
SWD+="Entropic Blow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}

if (paragon_gatecrasher){
x=dexterity_attack_base;
SWD+="Striker's Gate "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r";}

if (paragon_knightofcelestia){
x=strength_attack_base;
SWD+="Celestia's Challenge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}

if (paragon_maleckethjanissary){
x=strength_attack_base;
SWD+="Loyal Unto Death "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}

if (paragon_planeshifter){
if (intelligence>charisma)
{
x=intelligence_attack_base;
SWD+="Sequester "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will<br>\r";
}
else
{
x=charisma_attack_base;
SWD+="Sequester "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";
}
}

if (paragon_shadowcaptain){
x=strength_attack_base;
SWD+="Underworld Gambit "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}

if (paragon_soulguide){
x=wisdom_attack_base;
SWD+="Channel Divinity: Rebuke Soul "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";
x=wisdom_attack_base;
SWD+="Soul's Enthrallment "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";

}



if (paragon_ancestralincarnate){
x=wisdom_attack_base;
SWD+="Past-Life Guardian "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}

if (paragon_bloodfurysavage){
if (strength>dexterity)
{
x=strength_attack_base;
SWD+="Unbound Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";
}
else
{
x=dexterity_attack_base;
SWD+="Unbound Assault "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r";
}
}

if (paragon_feybeguiler){
if (intelligence>charisma)
{
x=intelligence_attack_base;
SWD+="Bedazzling Orb "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex<br>\r";
}
else
{
x=charisma_attack_base;
SWD+="Bedazzling Orb "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";
}
}

if (paragon_firstbornofmoradin){
x=strength_attack_base;
SWD+="Receive the Charge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_halflingscoundrel){
if (dexterity>charisma)
{x=dexterity_attack_base;
SWD+="Sly Offensive "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex<br>\r";
}
else
{x=charisma_attack_base;
SWD+="Sly Offensive "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs reflex<br>\r";
}
}
if (paragon_moonstalker){
if (total_levels<21)
{
x=wisdom_attack_base+4;
SWD+="Call to the Moon "+PlusOrMinus(x)+" [base wisdom attack +4] vs will [no weapon, no implement]<br>\r";
}
else
{
x=wisdom_attack_base+6;
SWD+="Call to the Moon "+PlusOrMinus(x)+" [base wisdom attack +6] vs will [no weapon, no implement]<br>\r";
}
}
if (paragon_scionofarkhosia){
z=4;if (total_levels>20){z=6;}
x=dexterity_attack_base;stringy="dexterity";
if (constitution>dexterity){x=constitution_attack_base;stringy="constitution";}
if ((strength>constitution)&(strength>dexterity)){x=strength_attack_base;stringy="strength";}
x+=z;
SWD+="Dragon's Wrath "+PlusOrMinus(x+z)+" [base "+stringy+" attack+"+z+"] vs reflex [no weapon, no implement]<br>\r";}
if (paragon_shiereknight){
z=4;if (total_levels>20){z=6;}
x=intelligence_attack_base;stringy="intelligence";
if (wisdom>intelligence){x=wisdom_attack_base;stringy="wisdom";}
if ((charisma>wisdom)&(charisma>intelligence)){x=charisma_attack_base;stringy="charisma";}
x+=z;
SWD+="Ensorcelled Mind "+PlusOrMinus(x+z)+" [base "+stringy+" attack+"+z+"] vs will [no weapon or implement]<br>\r";}
if (paragon_stoneblessed){
x=strength_attack_base;
SWD+="Mountain Sweep "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_turathihighborn){
z=4;if (total_levels>20){z=6;}
x=intelligence_attack_base;stringy="intelligence";
if (constitution>intelligence){x=constitution_attack_base;stringy="constitution";}
if ((charisma>constitution)&(charisma>constitution)){x=charisma_attack_base;stringy="charisma";}
x+=z;
SWD+="Bolts of Bedevilment "+PlusOrMinus(x+z)+" [base "+stringy+" attack+"+z+"] vs will [no weapon or implement]<br>\r";}
if (paragon_twilightguardian){
z=4;if (total_levels>20){z=6;}
x=intelligence_attack_base;stringy="intelligence";
if (wisdom>intelligence){x=wisdom_attack_base;stringy="wisdom";}
if ((charisma>wisdom)&(charisma>intelligence)){x=charisma_attack_base;stringy="charisma";}
x+=z;
SWD+="Bonds of Life "+PlusOrMinus(x+z)+" [base "+stringy+" attack+"+z+"] vs reflex [no weapon or implement]<br>\r";}
if (paragon_hammerofjudgment){
x=wisdom_attack_base;
SWD+="Thunder Hammer "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs fortitude<br>\r";}
if (paragon_oathsworn){
x=wisdom_attack_base;
SWD+="Oath of Weakness "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (paragon_unveiledvisage){
x=wisdom_attack_base;
SWD+="Radiant Visage "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_zealousassassin){
x=wisdom_attack_base;
SWD+="Strike from Empty Air "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (paragon_bearwarrior){
x=strength_attack_base;
SWD+="Mauling Bear "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_fearbringerthane){
x=strength_attack_base;
SWD+="Screaming Hawk Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_frenziedberserker){
x=strength_attack_base;
SWD+="Persistent Frenzy "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_wildrunner){
x=strength_attack_base;
SWD+="Shifting Wilds Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_studentoftheseven){
x=charisma_attack_base;
SWD+="Anyspell "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude / reflex / will<br>\r";}
if (paragon_summerrhymer){
x=charisma_attack_base;
SWD+="Song of the Queen's Protection "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
if (paragon_voiceofthunder){
x=charisma_attack_base;
SWD+="Rolling Echo "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
if (paragon_warchanter){
x=charisma_attack_base;
SWD+="Victorious Smite"+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC<br>\r";}
if (paragon_bloodmoonstalker){
x=wisdom_attack_base;
SWD+="Blood Moon Frenzy "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_guardianofthelivinggate){
x=wisdom_attack_base;
SWD+="First Ward of the LLiving Gate "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_keeperofthehiddenflame){
x=wisdom_attack_base;
SWD+="Summon the Beast "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_skyhunter){
x=wisdom_attack_base;
SWD+="Blinding Talons "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_angelicaspect){
x=wisdom_attack_base;
SWD+="Numinous Cascade "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_blightspeaker){
x=wisdom_attack_base;
SWD+="Chains of Death "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_flameofhope){
x=wisdom_attack_base;
SWD+="Numinous Cascade "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_hammerofvengeance){
x=wisdom_attack_base;
SWD+="Mark of Castigation "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_discipleoftheworldserpent){
x=wisdom_attack_base;
SWD+="Serpent's Rebuke "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_ghostpanther){
x=wisdom_attack_base;
SWD+="Predator Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_greatbearshaman){
x=wisdom_attack_base;
SWD+="Bear Fang Defese "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
if (paragon_spirittempest){
x=wisdom_attack_base;
SWD+="Spirit Tide "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_arcanewellspring){
x=charisma_attack_base;
SWD+="Twin Bolt "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (paragon_demonskinadept){
x=charisma_attack_base;
SWD+="Demon-Soul Bolts "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
if (paragon_dragonsoulheir){
x=charisma_attack_base;
SWD+="Breath of the Dragon Soul "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (paragon_wildmage){
x=charisma_attack_base;
SWD+="Tempest Surge "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (paragon_bloodwrathguardian){
x=strength_attack_base;
SWD+="Bloodwrath Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r";}
if (paragon_hornedchampion){
x=strength_attack_base;
SWD+="Zealous Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack, add +2 if bloodied] vs reflex<br>\r";}
if (paragon_stormsentinel){
x=strength_attack_base;
SWD+="Thunder Smash "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r";}
if (paragon_verdantlord){
x=strength_attack_base;
SWD+="Falling Tree Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex<br>\r";}



// kurwa 11th level attack
if (paragon_other){SWD+=document.form1.otherparagonpath.value+" special attacks:<p>"; }

x=strength_attack_base; 
if (document.form1.arcoftherighteous_box.checked){SWD+="Arc of the Righteous "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.inspiringstrike_box.checked){SWD+="Inspiring Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.mantleofglory_box.checked){SWD+="Mantle of Glory "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.plagueofdoom_box.checked){SWD+="Plague of Doom "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.anvilofdoom_box.checked){SWD+="Anvil of Doom "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.chainsofsorrow_box.checked){SWD+="Chains of Sorrow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.giantswake_box.checked){SWD+="Giant's Wake "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.silverstep_box.checked){SWD+="Silver Step "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.stormofblows_box.checked){SWD+="Storm of Blows "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.talonoftheroc_box.checked){SWD+="Talon of the Roc "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.entanglingsmite_box.checked){SWD+="Entangling Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.radiantcharge_box.checked){SWD+="Radiant Charge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.renewingsmite_box.checked){SWD+="Renewing Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.whirlwindsmite_box.checked){SWD+="Whirlwind Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.armorsplinter_box.checked){SWD+="Armor Splinter "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.knockdownshot_box.checked){SWD+="Knockdown Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.nimbledefense_box.checked){SWD+="Nimble Defense "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.pinningstrike_box.checked){SWD+="Pinning Strike (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.pinningstrike_box.checked){SWD+="Pinning Strike (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.foolsopportunity_box.checked){SWD+="Fool's Opportunity "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs will"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.stunningstrike_box.checked){SWD+="Stunning Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.tornadostrike_box.checked){SWD+="Tornado Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.unbalancingattack_box.checked){SWD+="Unbalancing Attack "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.bewitchingwhispers_box.checked){SWD+="Bewitching Whispers "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.coldfirevortex_box.checked){SWD+="Cold Fire Vortex "+PlusOrMinus(x)+sup_i()+" [consitution] vs fortitude / reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.harrowstorm_box.checked){SWD+="Harrow Storm "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.soulflaying_box.checked){SWD+="Soulflaying "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.beatthemintotheground_box.checked){SWD+="Beat Them Into the Ground "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.bolsteringblow_box.checked){SWD+="Bolstering Blow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.denyingsmite_box.checked){SWD+="Denying Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.furyofthesirocco_box.checked){SWD+="Fury of the Sirocco "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.frostburn_box.checked){SWD+="Frostburn "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.mesmerichold_box.checked){SWD+="Mesmeric Hold "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.prismaticburst_box.checked){SWD+="Prismatic Burst "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.thunderlance_box.checked){SWD+="Thunder Lance "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }



x=wisdom_attack_base;
if (document.form1.cloudofsouls_box.checked){SWD+="Cloud of Souls "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.lightoftheavengingsun_box.checked){SWD+="Light of the Avenging Sun "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.sequesteringword_box.checked){SWD+="Sequestering Word "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.whirlingblades_box.checked){SWD+="Whirling Blades "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.bladewhirlwind_box.checked){SWD+="Blade Whirlwind "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.cracktheskull_box.checked){SWD+="Crack the Skull "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. fortitude<br>\r";}
if (document.form1.stormofblades_box.checked){SWD+="Storm of Blades "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.terrorscry_box.checked){SWD+="Terror's Cry "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.thunderfall_box.checked){SWD+="Thunderfall "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=charisma_attack_base;
if (document.form1.earthquakestrike_box.checked){SWD+="Earthquake Strike "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
if (document.form1.foolhardyfighting_box.checked){SWD+="Foolhardy Fighting "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.harmonyofthetwo_box.checked){SWD+="Harmony of the Two "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
if (document.form1.songofstorms_box.checked){SWD+="Song of Storms "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.clawsofretribution_box.checked){SWD+="Claws of Retribution "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.esxposeweakness_box.checked){SWD+="Expose Weakness "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.thundercrash_box.checked){SWD+="Thunder Crash "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.tidalsurge_box.checked){SWD+="Tidal Surge "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.compelattention_box.checked){SWD+="Compel Attention "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.pilarofguardianflame_box.checked){SWD+="Pilar of Guardian Flame "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.sealoftheheretic_box.checked){SWD+="Seal of the Heretic "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.windsofcelestia_box.checked){SWD+="Winds of Celestia "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.calltotheindomitabledefender_box.checked){SWD+="Call to the Indomitable Defender "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.calltothelaughingfortune_box.checked){SWD+="Call to the Laughing Fortune "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.howlinggust_box.checked){SWD+="Howling Gust "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.spiritofcleansinglight_box.checked){SWD+="Spirit of Cleansing Light "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=charisma_attack_base;
if (document.form1.chainsoffire_box.checked){SWD+="Chains of Fire "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.jawsoftheearth_box.checked){SWD+="Jaws of the Earth "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.mindhammer_box.checked){SWD+="Mind Hammer "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.thunderbreath_box.checked){SWD+="Thunder Breath "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
x=strength_attack_base;
if (document.form1.creepersgrasp_box.checked){SWD+="Creeper's Grasp "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. reflex<br>\r";}
if (document.form1.icyshards_box.checked){SWD+="Icy Shards "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. fortitude<br>\r";}
if (document.form1.ponderousstrike_box.checked){SWD+="Ponderous Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.sunburststrike_box.checked){SWD+="Sunburst Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}






x=beast_attack_base;
if (document.form1.herdtheprey_box.checked){SWD+="Herd the Prey "+PlusOrMinus(x)+sup_w()+" [beast attack bonus] vs. fortitude<br>\r";}
x=strength_attack_base;
if (document.form1.knockdownpounce_box.checked){SWD+="Knockdown Pounce "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}


if (document.form1.other13encounter_box.checked){SWD+=document.form1.other13encounter.value+":<br>\r"; }


x=strength_attack_base; 
if (document.form1.holyspark_box.checked){SWD+="Holy Spark "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs will"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.purifyingfire_box.checked){SWD+="Purifying Fire "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.sealofwarding_box.checked){SWD+="Seal of Warding "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.dragonsfangs_box.checked){SWD+="Dragon's Fangs "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.serpentdancestrike_box.checked){SWD+="Serpent Dance Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.bloodiedretribution_box.checked){SWD+="Bloodied Retribution "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.breakthewall_box.checked){SWD+="Break the Wall "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.truenemesis_box.checked){SWD+="True Nemesis "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.bladecascade_box.checked){SWD+="Blade Cascade "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.bleedingwounds_box.checked){SWD+="Bleeding Wounds "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.confoundingarrows_box.checked){SWD+="Confounding Arrows "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.stunningsteel_box.checked){SWD+="Stunning Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.garottegrip_box.checked){SWD+="Garotte Grip "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.slayingstrike_box.checked){SWD+="Slaying Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.curseofthegoldenmist_box.checked){SWD+="Curse of the Golden Mist "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.fireswarm_box.checked){SWD+="Fire Swarm "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.tendrilsofthuban_box.checked){SWD+="Tendrils of Thuban "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.thirstingmaw_box.checked){SWD+="Thirsting Maw "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.makethembleed_box.checked){SWD+="Make Them Bleed "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.renewthetroops_box.checked){SWD+="Renew the Troops "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.warlordsgambit_box.checked){SWD+="Warlord's Gambit "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.bigbysgraspinghands_box.checked){SWD+="Bigby's Grasping Hands "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.blastofcold_box.checked){SWD+="Blast of Cold "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.otilukesresilientsphere_box.checked){SWD+="Otiluke's Resilient Sphere "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.prismaticbeams_box.checked){SWD+="Prismatic Beams "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude / reflex / will"; 
SWD+="<br>\r"; }
if (document.form1.wallofice_box.checked){SWD+="Wall of Ice [special]"; 
SWD+="<br>\r"; }





x=wisdom_attack_base;
if (document.form1.aspectoffury_box.checked){SWD+="Aspect of Fury "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.bondofthesacredduel_box.checked){SWD+="Bond of the Sacred Duel "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.oathofdivinelightning_box.checked){SWD+="Oath of Divine Lightning "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.sigilofcarceri_box.checked){SWD+="Sigil of Carceri "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
x=strength_attack_base;
if (document.form1.flameheartrage_box.checked){SWD+="Flameheart Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.huntinglionrage_box.checked){SWD+="Hunting Lion Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.ironhammerrage_box.checked){SWD+="Iron Hammer Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.thunderfuryrage_box.checked){SWD+="Thunder Fury Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=charisma_attack_base;
if (document.form1.confusingchorus_box.checked){SWD+="Confusing Chorus "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.danceofbiringwind_box.checked){SWD+="Dance of Biting Wind "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
if (document.form1.menacingthunder_box.checked){SWD+="Menacing Thunder "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.quicksteeldance_box.checked){SWD+="Quick Steel Dance "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
x=wisdom_attack_base;
if (document.form1.balefulpolymorph_box.checked){SWD+="Baleful Polymorph "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.calllightningstorm_box.checked){SWD+="Call Lightning Storm "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.devouringice_box.checked){SWD+="Devouring Ice "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.revitalizingpounce_box.checked){SWD+="Revitalizing Pounce "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.slashingclaws_box.checked){SWD+="Slashing Claws "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.godhammer_box.checked){SWD+="God Hammer "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.markofanathema_box.checked){SWD+="Mark of Anathema "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.threebeaconsoftwilight_box.checked){SWD+="Three Beacons of Twilight "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.wallofblades_box.checked){SWD+="Wall of Blades "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.guardianoftheprimalcopse_box.checked){SWD+="Guardian of the Primal Copse "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.searingwindofthesouth_box.checked){SWD+="Searing Wind of the South "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.spiritofthewolfpack_box.checked){SWD+="Spirit of the Wolf Pack "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.stormguardianspirit_box.checked){SWD+="Storm Guardian Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=charisma_attack_base;
if (document.form1.frosteddies_box.checked){SWD+="Frost Eddies "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.hostilitycharm_box.checked){SWD+="Hostility Charm "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.scintillatingstarburst_box.checked){SWD+="Scintillating Starburst "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.spitfirefurnace_box.checked){SWD+="Spitfire Furnace "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
x=strength_attack_base;
if (document.form1.formofsummerfire_box.checked){SWD+="Form of Summer Fire "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. reflex<br>\r";}
if (document.form1.formofthechargingboar_box.checked){SWD+="Form of the Charging Boar "+PlusOrMinus(x)+sup_w()+" [base strengt attack] vs. AC<br>\r";}
if (document.form1.formoftherowansentinel_box.checked){SWD+="Form of the Rowan Sentinel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.formofthestonecrusher_box.checked){SWD+="Form of the Stonecrusher "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}










x=wisdom_attack_base;
if (document.form1.aspectofterror_box.checked){SWD+="Aspect of Terror "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.fieryvengeance_box.checked){SWD+="Fiery Vengeance "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.finaloath_box.checked){SWD+="Final Oath "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.templeofresolution_box.checked){SWD+="Temple of Resolution "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. reflex<br>\r";}
x=strength_attack_base;
if (document.form1.crimsonphoenixrage_box.checked){SWD+="Crimson Phoenix Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.rageoftheprimalbeast_box.checked){SWD+="Rage of the Primal Beast "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.winterghostrage_box.checked){SWD+="Winter Ghost Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.worldserpentrage_box.checked){SWD+="World Serpent Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=charisma_attack_base;
if (document.form1.herosbeacon_box.checked){SWD+="Hero's Beacon "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
if (document.form1.satireofleadership_box.checked){SWD+="Satire of Leadership "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.spellbind_box.checked){SWD+="Spellbind "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
x=wisdom_attack_base;
if (document.form1.blindingblizzard_box.checked){SWD+="Blinding Blizzard "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.gazeofthebeast_box.checked){SWD+="Gaze of the Beast "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.lifeleechthorns_box.checked){SWD+="Life Leech Thorns "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.primalarchetype_box.checked){SWD+="Primal Archetype "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.firesofthesilvergate_box.checked){SWD+="Fires of the Silver Gate "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.invoketheabsolutedark_box.checked){SWD+="Invoke the Absolute Dark "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.summonangelofvictory_box.checked){SWD+="Summon Angel of Victory "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will [minor / sustained / opportunity]<br>\r";}
if (document.form1.wordofthegods_box.checked){SWD+="Word of the Gods "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=wisdom_attack_base;
if (document.form1.deathspirit_box.checked){SWD+="Death Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.seaofserpents_box.checked){SWD+="Sea of Serpents "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.spiritsofmist_box.checked){SWD+="Spirits of Mist "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.spiritoftheunbrokenvow_box.checked){SWD+="Spirit of the Unbroken Vow "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=charisma_attack_base;
if (document.form1.endlessacid_box.checked){SWD+="Endless Acid "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.entropicwhirlwind_box.checked){SWD+="Entropic Whirlwind "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.prismaticstorm_box.checked){SWD+="Prismatic Storm "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
x=strength_attack_base;
if (document.form1.formofthechimera_box.checked){SWD+="Form of the Chimera "+PlusOrMinus(x+6)+" [base strength attack + 6] vs. reflex [no weapon or implement]<br>\r";}
if (document.form1.formofspringrenewal_box.checked){SWD+="Form of Spring Renewal "+PlusOrMinus(x+6)+" [base attack + 6] vs. reflex [no weapon or implement]<br>\r";}
if (document.form1.formofthestarmetalwarrior_box.checked){SWD+="Form of the Star Metal Warrior "+PlusOrMinus(x)+" [base srength attack] vs. AC [no weapon or implement]<br>\r";}
if (document.form1.formofthesoulserpent_box.checked){SWD+="Form of the Soul Serpent "+PlusOrMinus(x + 6)+" [base strength attack + 6] vs. will [no weapon or implement]<br>\r";}






x=strength_attack_base;
if (document.form1.bloodfrenzyranger_box.checked){SWD+="Blood Frenzy (ranger) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=beast_attack_base;
if (document.form1.scentoffear_box.checked){SWD+="Scent of Fear "+PlusOrMinus(x)+" [beast attack bonus] vs. AC<br>\r";}


if (document.form1.other15daily_box.checked){SWD+=document.form1.other15daily.value+":<br>\r"; }




x=strength_attack_base; 
if (document.form1.blindinglight_box.checked){SWD+="Blinding Light "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.enthrall_box.checked){SWD+="Enthrall "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.sentinelstrike_box.checked){SWD+="Sentinel Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.thundrousword_box.checked){SWD+="Thundrous Word "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base+6; 
if (document.form1.exactingstrike_box.checked){SWD+="Exacting Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack + 6] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.exorcismofsteel_box.checked){SWD+="Exorcism of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.harryingassault_box.checked){SWD+="Harrying Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.mountainbreakingblow_box.checked){SWD+="Mountain Breaking Blow "+PlusOrMinus(x)+sup_w()+" [strengh] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.vorpaltornado_box.checked){SWD+="Vorpal Tornado "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.warriorschallenge_box.checked){SWD+="Warrior's Challenge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.enervatingsmite_box.checked){SWD+="Enervating Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.fortifyingsmite_box.checked){SWD+="Fortifying Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.handofthegods_box.checked){SWD+="Hand of the Gods "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.terrifyingsmite_box.checked){SWD+="Terrifying Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base + modifier_number(wisdom); 
if (document.form1.arrowofvengeance_box.checked){SWD+="Arrow of Vengeance "+PlusOrMinus(x)+sup_w()+" [base dexterity attack + wisdom bonus] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.cheetahsrake_box.checked){SWD+="Cheetah's Rake "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.tripleshot_box.checked){SWD+="Triple Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.twoweaponeviscerate_box.checked){SWD+="Two-Weapon Eviscerate "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.dragontailstrike_box.checked){SWD+="Dragon Tail Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.houndingstrike_box.checked){SWD+="Hounding Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs will"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.stabandgrab_box.checked){SWD+="Stab and Grab "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.strandoffate_box.checked){SWD+="Strand of Fate "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.thirstingtendrils_box.checked){SWD+="Thirsting Tendrils "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.warlocksbargain_box.checked){SWD+="Warlock's Bargain "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.battleon_box.checked){SWD+="Battle On "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.hailofsteel_box.checked){SWD+="Hail of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.thundrousfury_box.checked){SWD+="Thundrous Fury "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.warlordsrush_box.checked){SWD+="Warlord's Rush "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.combust_box.checked){SWD+="Combust "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.crushingtitansfist_box.checked){SWD+="Crushing Titan's Fist "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base+4; 
if (document.form1.forcevolley_box.checked){SWD+="Force Volley (one opponent)"+PlusOrMinus(x)+sup_i()+" [base intelligence attack+4] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.forcevolley_box.checked){SWD+="Force Volley (two or three opponents)"+PlusOrMinus(x)+sup_i()+" [base intelligence attack, special] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.icetomb_box.checked){SWD+="Ice Tomb "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }



x=wisdom_attack_base;
if (document.form1.astralfury_box.checked){SWD+="Astral Fury "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.readyforthefinalblow_box.checked){SWD+="Ready the Final Blow "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.spectralcharge_box.checked){SWD+="Spectral Charge "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.wardingblade_box.checked){SWD+="Warding Blade "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.defastatingblow_box.checked){SWD+="Devastating Blow "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.mountaingrasp_box.checked){SWD+="Mountain Grasp "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.shoulderslam_box.checked){SWD+="Shoulder Slam "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. fortitude<br>\r";}
if (document.form1.threateningfry_box.checked){SWD+="Threatening Fury "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.vigorousstrike_box.checked){SWD+="Vigorous Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=charisma_attack_base;
if (document.form1.masksofmenace_box.checked){SWD+="Masks of Menace "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.shoutofevasion_box.checked){SWD+="Shout of Evasion "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.songofsummons_box.checked){SWD+="Song of Summons "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.wordofvulnerability_box.checked){SWD+="Word of Vulnerability "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
x=wisdom_attack_base;
if (document.form1.lightningcascade_box.checked){SWD+="Lightning Cascade "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.scavengersprize_box.checked){SWD+="Scavenger's Prize "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.shiftingrake_box.checked){SWD+="Shifting Rake "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.windstorm_box.checked){SWD+="Windstorm "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
x=wisdom_attack_base
if (document.form1.blooddebt_box.checked){SWD+="Blood Debt "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.curseofhaemnathuun_box.checked){SWD+="Curse of Haemnathuun "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.glyphofradiance_box.checked){SWD+="Glyph of Radiance "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.glyphofthreeblades_box.checked){SWD+="Glyph of Three Blades "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.calltothelashingbehemoth_box.checked){SWD+="Call to the Lashing Behemoth "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.shacklesofthemountain_box.checked){SWD+="Shackles of the Mountain "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.spiritbondofvengeance_box.checked){SWD+="Spirit Bond of Vengeance "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.spiritofspringsrenewal_box.checked){SWD+="Spirit of Spring's Renewal "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=charisma_attack_base;
if (document.form1.breathofwinter_box.checked){SWD+="Breath of Winter "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.dragontailmeditation_box.checked){SWD+="Dragon Tail Meditation "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.poisonousevasion_box.checked){SWD+="Poisonous Evasion "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.thundersummons_box.checked){SWD+="Thunder Summons "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
x=strength_attack_base;
if (document.form1.callforththeharvest_box.checked){SWD+="Call forth the Harvest "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.eagervinestrike_box.checked){SWD+="Eager Vine Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.earthholdsrebuke_box.checked){SWD+="Earthhold's Rebuke "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.razorleafcut_box.checked){SWD+="Razor Leaf Cut "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. fortitude<br>\r";}








x=strength_attack_base;
if (document.form1.bladeandfang_box.checked){SWD+="Blade and Fang "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.houndingbeast_box.checked){SWD+="Hounding Beast "+PlusOrMinus(x)+sup_w()+" [strength] vs. AC<br>\r";}

if (document.form1.other17encounter_box.checked){SWD+=document.form1.other17encounter.value+":<br>\r"; }

x=wisdom_attack_base; 
if (document.form1.firestorm_box.checked){SWD+="Fire Storm "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.holywrath_box.checked){SWD+="Holy Wrath "+PlusOrMinus(x)+sup_i()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.indominitablespirit_box.checked){SWD+="Indominitable Spirit "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.knightofglory_box.checked){SWD+="Knight of Glory "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.devastationswake_box.checked){SWD+="Devastation's Wake "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.reavingstrike_box.checked){SWD+="Reaving Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.strikeofthewatchfulguard_box.checked){SWD+="Strike of the Watchful Guard "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.coronaofblindingradiance_box.checked){SWD+="Corona of Blinding Radiance "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.crusadersboon_box.checked){SWD+="Crusader's Boon "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.righteousinferno_box.checked){SWD+="Righteous Inferno "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base+2; 
if (document.form1.cruelcageofsteel_box.checked){SWD+="Cruel Cage of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack + 2] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.greatramarrow_box.checked){SWD+="Great Ram Arrow "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.twoinoneshot_box.checked){SWD+="Two in One Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack, special] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.woundingwhirlwind_box.checked){SWD+="Wounding Whirlwind "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.feintingflurry_box.checked){SWD+="Feinting Flurry "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs will"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.flyingfoe_box.checked){SWD+="Flying Foe "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.snakesretreat_box.checked){SWD+="Snake's Retreat "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.delusionsofloyalty_box.checked){SWD+="Delusions of Loyalty "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
if (document.form1.minionsofmalbolge_box.checked){SWD+="Minions of Malbolge [special]"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.wrathofacamar_box.checked){SWD+="Wrath of Acamar "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.breakthetempo_box.checked){SWD+="Break the Tempo "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.victorysurge_box.checked){SWD+="Victory Surge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.windmillofdoom_box.checked){SWD+="Windmill of Doom "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.acidwave_box.checked){SWD+="Acid Wave "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
if (document.form1.cloudkill_box.checked){SWD+="Cloudkill "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude per errata 7/2/08"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.disintegrate_box.checked){SWD+="Disintegrate "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.evardsblacktentacles_box.checked){SWD+="Evard's Black Tentacles "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }

x=wisdom_attack_base;
if (document.form1.aspectofawe_box.checked){SWD+="Aspect of Awe "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.oathoftheinevitableblade_box.checked){SWD+="Oath of the Inevitable Blade "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.templeofrespite_box.checked){SWD+="Temple of Respite "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.vengefulrecovery_box.checked){SWD+="Vengeful Recovery "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.ghostviperrage_box.checked){SWD+="Ghost Viper Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.hydrarage_box.checked){SWD+="Hydra Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.stormdrakerage_box.checked){SWD+="Storm Drake Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.winterphoenixrage_box.checked){SWD+="Winter Phoenix Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=charisma_attack_base;
if (document.form1.encirclingdance_box.checked){SWD+="Encircling Dance "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.increasingthetempo_box.checked){SWD+="Increasing the Tempo [special]<br>\r";}
if (document.form1.irresistibledance_box.checked){SWD+="Irresistible Dance "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.satireofprowess_box.checked){SWD+="Satire of Prowess "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
x=wisdom_attack_base;
if (document.form1.entanglingthorns_box.checked){SWD+="Entangling Thorns "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.lungeandvanish_box.checked){SWD+="Lunge and Vanish "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.primalbear_box.checked){SWD+="Primal Bear "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.winterhailstorm_box.checked){SWD+="Winter Hailstorm "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
x=wisdom_attack_base;
if (document.form1.astraltempest_box.checked){SWD+="Astral Tempest "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.maledictionofgartak_box.checked){SWD+="Malediction of Gartak "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.summonangeloflight_box.checked){SWD+="Summon Angel of Light "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex [standard action as per revision / opportunity attack]<br>\r";}
if (document.form1.tombofmagrym_box.checked){SWD+="Tomb of Magrym "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.greatbearguardian_box.checked){SWD+="Great Bear Guardian "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.hornsoftheundefeatedkhan_box.checked){SWD+="Horns of the Undefeated Khan "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.spiritoftheshieldbreaker_box.checked){SWD+="Spirit of the Shield Breaker "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.tendrilsofthefateweaver_box.checked){SWD+="Tendrils of the Fate Weaver "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=charisma_attack_base;
if (document.form1.balefulgazeofthebasilisk_box.checked){SWD+="Baleful Gaze of the Basilisk "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.blackfireserpent_box.checked){SWD+="Black Fire Serpent "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.prismaticexplsion_box.checked){SWD+="Prismatic Explosion "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.splitstrike_box.checked){SWD+="Split Strike "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
x=strength_attack_base;
if (document.form1.blizzardstrike_box.checked){SWD+="Blizzard Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.direbeastassault_box.checked){SWD+="Dire Beast Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.lightningbarrage_box.checked){SWD+="Lightning Barrage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. reflex<br>\r";}
if (document.form1.thunderingbolts_box.checked){SWD+="Thundering Bolts "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. fortitude<br>\r";}



x=beast_attack_base;
if (document.form1.ferociousroar_box.checked){SWD+="Ferocious Roar "+PlusOrMinus(x)+" [beast attack bonus] vs. Will<br>\r";}
x=beast_attack_base;
if (document.form1.gnawingassault_box.checked){SWD+="Gnawing Assault "+PlusOrMinus(x)+" [beast attack bonus] vs. AC<br>\r";}



if (document.form1.other19daily_box.checked){SWD+=document.form1.other19daily.value+":<br>\r"; }


if (total_levels>=20)
{


if (paragon_angelicavenger){
x=strength_attack_base; 
SWD+="Angel Ascendant "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_divineoracle){
x=wisdom_attack_base; 
SWD+="Hammer of Fate "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r"; }
if (paragon_radiantservant){
x=wisdom_attack_base; 
SWD+="Radiant Brilliance "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r"; }
if (paragon_warpriest){
x=wisdom_attack_base; 
SWD+="Battle Pyres "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r"; }
if (paragon_ironvanguard){
x=strength_attack_base; 
SWD+="Indominatable Strength "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_kensei){
x=strength_attack_base; 
SWD+="Weaponsoul Dance "+PlusOrMinus(x)+sup_w()+" [base strength attack, more] vs AC<br>\r"; }
if (paragon_pitfighter){
x=strength_attack_base; 
SWD+="Lion of Battle "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_swordmaster){
x=strength_attack_base; 
SWD+="Crescendo Sword "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_astralweapon){
x=strength_attack_base; 
SWD+="Astral Whirlwind "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_championoforder){
x=strength_attack_base; 
SWD+="Rule of Order "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r"; }
if (paragon_hospitaler){
x=charisma_attack_base; 
SWD+="Life-Giving Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs fortitude<br>\r"; }
if (paragon_justiciar){
x=charisma_attack_base; 
SWD+="Challenge the Unjust "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"; }
if (paragon_battlefieldarcher){
x=dexterity_attack_base; 
SWD+="Quarry's Bane "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_beaststalker){
x=dexterity_attack_base; 
SWD+="Beast Stalker's Target "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_pathfinder){
x=strength_attack_base; 
SWD+="Slasher's Mark "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_stormwarden){
x=strength_attack_base; 
SWD+="Cold Steel Hurricane "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_catburglar){
x=dexterity_attack_base; 
SWD+="Redirected Death "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex<br>\r"; }
if (paragon_daggermaster){
x=dexterity_attack_base; 
SWD+="Deep Dagger Wound "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_masterinfiltrator){
x=dexterity_attack_base; 
SWD+="Painful Puncture "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_shadowassassin){
x=dexterity_attack_base; 
SWD+="Final Blow "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex<br>\r"; }
if (paragon_doomsayer){
x=charisma_attack_base; 
SWD+="Long Fall Into Darkness "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"; }
if (paragon_feytouched){
x=charisma_attack_base; 
SWD+="Whispers of the Fey "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"; }
if (paragon_lifestealer){
x=constitution_attack_base; 
SWD+="Soultheft "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude<br>\r"; }
if (paragon_battlecaptain){
x=strength_attack_base; 
SWD+="Cunning Flurry "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_combatveteran){
x=strength_attack_base; 
SWD+="Superior Tactics "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_knightcommander){
x=strength_attack_base; 
SWD+="Control the Field "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_swordmarshal){
x=strength_attack_base; 
SWD+="Diamond Blade of Victory "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_battlemage){
x=intelligence_attack_base; 
SWD+="Closing Spell "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex<br>\r"; }
if (paragon_bloodmage){
x=intelligence_attack_base; 
SWD+="Dextructive Salutation "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will<br>\r"; }
if (paragon_spellstormmage){
x=intelligence_attack_base; 
SWD+="Maelstrom of Chaos "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude<br>\r"; }
if (paragon_wizardofthespiraltower){
x=intelligence_attack_base+4; 
SWD+="Corellon's Blade "+PlusOrMinus(x)+sup_i()+" [base intelligence attack + 4] vs will<br>\r"; }
if (paragon_anarchofshyr){
x=intelligence_attack_base; 
SWD+="Shyran Cataclysm "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC<br>\r"; }
if (paragon_coronalguard){
x=intelligence_attack_base; 
SWD+="Avaunt Foe "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs fortitude<br>\r"; }
if (paragon_darkwalker){
x=charisma_attack_base; 
SWD+="Wraithform Blast "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r"; }
if (paragon_doomguide){
x=strength_attack_base; 
SWD+="Kelemvor's Sword "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex<br>\r"; }
if (paragon_drowwanderer){
x=physical_attack_base; 
SWD+="Darkblade "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC<br>\r"; }
if (paragon_eartheartdefender){
x=strength_attack_base; 
SWD+="Earthsurge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r"; }
if (paragon_elementaltempest){
x=physical_attack_base; 
SWD+="Elemental Fury "+PlusOrMinus(x)+" ["+best_physical_attack+"] vs reflex<br>\r"; }
if (paragon_elementaltempest){
x=charisma_attack_base; 
SWD+="Moonflower Inspiration "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude / reflex / will [your choice for each target]<br>\r"; }




if (paragon_ghostofeventide){
x=dexterity_attack_base;
SWD+="Robed in Shadow "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r"; }
if (paragon_heartwarder){
x=charisma_attack_base+2;
SWD+="Sune's Kiss "+PlusOrMinus(x)+sup_i()+" [base charisma attack + 2] vs will<br>\r"; }
if (paragon_highforestscout){
x=dexterity_attack_base;
SWD+="Binding Arrows "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex<br>\r"; }
if (paragon_impilturandemonslayer){
x=strength_attack_base;
SWD+="Demonblade Flurry "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_morninglord){
x=mental_attack_base;
SWD+="Lance of Dawn "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs will<br>\r"; }
if (paragon_purpledragonknight){
x=charisma_attack_base+5;
SWD+="For Cormyr! "+PlusOrMinus(x)+" [base charisma attack + 5] vs wil<br>\r"; }
if (paragon_silverstar){
x=mental_attack_base;
SWD+="Moonfire "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs reflex<br>\r"; }
if (paragon_simbarchofaglarond){
x=intelligence_attack_base;
SWD+="Simbul's Tempest "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude<br>\r"; }
if (paragon_spellguardwizard){
x=intelligence_attack_base;
SWD+="Mythal Spark "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will<br>\r"; }
if (paragon_steelskyliberator){
x=strength_attack_base;
SWD+="Break the Chains "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex<br>\r"; }
if (paragon_swordcoastcorsair){
x=strength_attack_base;
SWD+="Keelhaul "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }
if (paragon_umbriri){
x=intelligence_attack_base;
SWD+="Shadowed Psyche "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs will<br>\r"; }
if (paragon_wanderingswordmage){
SWD+="Heritage of Blades "+PlusOrMinus(x)+" [special]<br>\r"; }
if (paragon_warwizardofcormyr){
x=intelligence_attack_base;
SWD+="Storm of Victory "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude<br>\r"; }
if (paragon_whirlwindgenasi){
q=5;if (total_levels>=26){q=7;} x=mental_attack_base+q;
SWD+="Windsoul Whirlwind "+PlusOrMinus(x)+" ["+best_mental_attack + ""+q+"] vs fortitude<br>\r"; }
if (paragon_wildfiregenasi){
q=5;if (total_levels>=26){q=7;} x=physical_attack_base+q;
SWD+="Firesoul Conflagration "+PlusOrMinus(x)+" ["+best_physical_attack + ""+q+"] vs reflex<br>\r"; }


if (paragon_feralspirit){
x=strength_attack_base;
SWD+="Twin-Soul Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r"; }

if (paragon_packrunner){
x=beast_attack_base;
SWD+="Neck-Bite Pounce "+PlusOrMinus(x)+" [beast attack base] vs AC<br>\r"; }

if (paragon_wildcatstalker){
x=beast_attack_base;
SWD+="Panther Pounce "+PlusOrMinus(x)+sup_w()+" [beast attack base] vs AC<br>\r"; }

if (paragon_bladeofcendriane){
x=strength_attack_base;
SWD+="Feywild Tempest "+PlusOrMinus(x)+sup_w()+" [strength attack base] vs AC<br>\r"; }

if (paragon_doomguardmarauder){
x=strength_attack_base;
SWD+="Arm of Dissolution "+PlusOrMinus(x)+sup_w()+" [strength attack base] vs AC<br>\r"; }

if (paragon_gatecrasher){
x=dexterity_attack_base;
SWD+="Boltportal Strike "+PlusOrMinus(x)+sup_w()+" [dexterity attack base] vs AC<br>\r"; }

if (paragon_knightofcelestia){
x=strength_attack_base;
SWD+="Purifying Radiance "+PlusOrMinus(x)+sup_w()+" [strength attack base] vs AC<br>\r"; }

if (paragon_maleckethjanissary){
x=intelligence_attack_base;
SWD+="Elemental Scourge "+PlusOrMinus(x)+sup_i()+" [intelligence attack base] vs AC<br>\r"; }

if (paragon_planeshifter){
if (intelligence>charisma)
{
x=intelligence_attack_base;
SWD+="Dimensional Cascade "+PlusOrMinus(x)+sup_i()+" [inteligence attack base] vs AC<br>\r";
}
else
{
x=charisma_attack_base;
SWD+="Dimensional Cascade "+PlusOrMinus(x)+sup_i()+" [charisma attack base] vs AC<br>\r";
}
}

if (paragon_shadowcaptain){
x=beast_attack_base;
SWD+="Shadow Turncoat "+PlusOrMinus(x)+sup_w()+" [beast attack base] vs AC<br>\r"; }

if (paragon_soulguide){
x=beast_attack_base;
SWD+="Soul Brand "+PlusOrMinus(x)+sup_i()+" [beast attack base] vs AC<br>\r"; }


if (paragon_ancestralincarnate){
x=wisdom_attack_base;
SWD+="Past-Life Vanguard "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_bloodfurysavage){
if (dexterity>strength)
{
x=dexterity_attack_base;
SWD+="Murderous Rage "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r";
}
else
{
x=strength_attack_base;
SWD+="Murderous Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";
}
}
if (paragon_feybeguiler){
if (charisma>intelligence)
{
x=charisma_attack_base;
SWD+="Beguiling Bolt "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";
}
else
{
x=intelligence_attack_base;
SWD+="Beguiling Bolt "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will<br>\r";
}
}
if (paragon_firstbornofmoradin){
x=strength_attack_base;
SWD+="Mountain Stance Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_halflingscoundrel){
if (dexterity>charisma)
{
x=dexterity_attack_base;
SWD+="Halfling's Taunt "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC<br>\r";
}
else
{
x=charisma_attack_base;
SWD+="Halfling's Taunt "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC<br>\r";
}
}
if (paragon_moonstalker){
if (dexterity>strength)
{
x=dexterity_attack_base;
SWD+="Circle the Prey "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs reflex<br>\r";
}
else
{
x=strength_attack_base;
SWD+="Circle the Prey "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex<br>\r";
}
}
if (paragon_scionofarkhosia){
x=strength_attack_base;stringy="strength";
if (dexterity>strength){x=dexterity_attack_base;stringy="dexterity";}
if ((constitution>strength)&(constitution>dexterity)){x=constitution_attack_base;stringy="constitution";}
x+=6;
SWD+="Clinging Breath "+PlusOrMinus(x)+" [base "+stringy+" attack + 6] vs reflex [no weapon or implement]<br>\r";}
if (paragon_shiereknight){
x=intelligence_attack_base;stringy="intelligence";
if (wisdom>intelligence){x=wisdom_attack_base;stringy="wisdom";}
if ((charisma>intelligence)&(charisma>wisdom)){x=charisma_attack_base;stringy="charisma";}
x+=6;
SWD+="Imperious Presence "+PlusOrMinus(x)+" [base "+stringy+" attack] vs will [no weapon or implement]<br>\r";}
if (paragon_stoneblessed){
x=strength_attack_base;
SWD+="Avalanche Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r";}
if (paragon_turathihighborn){
x=intelligence_attack_base;stringy="intelligence";
if (charisma>intelligence){x=charisma_attack_base;stringy="charisma";}
if ((constitution>intelligence)&(constitution>charisma)){x=constitution_attack_base;stringy="constitution";}
x+=6;
SWD+="Thrall of Turath "+PlusOrMinus(x)+" [base "+stringy+" attack + 6] vs reflex [no weapon or implement]<br>\r";}
if (paragon_twilightguardian){
x=intelligence_attack_base;stringy="intelligence";
if (wisdom>intelligence){x=wisdom_attack_base;stringy="wisdom";}
if ((charisma>intelligence)&(charisma>wisdom)){x=charisma_attack_base;stringy="charisma";}
x+=6;
SWD+="Nature's Rage "+PlusOrMinus(x)+" [base "+stringy+" attack + 6] vs reflex [no weapon or implement]<br>\r";}
if (paragon_hammerofjudgment){
x=wisdom_attack_base;
SWD+="Hammer of the Final Pronouncement "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (paragon_oathsworn){
x=wisdom_attack_base;
SWD+="Oath Bond "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (paragon_unveiledvisage){
x=wisdom_attack_base;
SWD+="Divine Aspect "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_zealousassassin){
x=wisdom_attack_base;
SWD+="Blade of the Zealot "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs AC<br>\r";}
if (paragon_bearwarrior){
x=strength_attack_base;
SWD+="Rampaging Bear "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_fearbringerthane){
x=strength_attack_base;
SWD+="Tide of Battle "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_frenziedberserker){
x=strength_attack_base;
SWD+="Final Confrontation "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_wildrunner){
x=strength_attack_base;
SWD+="Wildrunner's Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_studentoftheseven){
x=charisma_attack_base;
SWD+="Voice of the Seven "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude / reflex / will<br>\r";}
if (paragon_summerrhymer){
x=charisma_attack_base;
SWD+="Song of the High Court "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will<br>\r";}
if (paragon_voiceofthunder){
x=charisma_attack_base;
SWD+="Song of Thunder "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude<br>\r";}
if (paragon_warchanter){
x=charisma_attack_base;
SWD+="Visions of Victory "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs AC<br>\r";}
if (paragon_bloodmoonstalker){
x=wisdom_attack_base;
SWD+="Nature's Grave "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_guardianofthelivinggate){
x=wisdom_attack_base;
SWD+="Third Ward of the Living Gate "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_keeperofthehiddenflame){
x=wisdom_attack_base;
SWD+="Spirit of the Beast "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_skyhunter){
x=wisdom_attack_base;
SWD+="Primal Eagle "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
if (paragon_angelicaspect){
x=wisdom_attack_base;
SWD+="Coldfire Pillar "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_blightspeaker){
x=wisdom_attack_base;
SWD+="Endbringer "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_flameofhope){
x=wisdom_attack_base;
SWD+="Sunburst Bulwark "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_hammerofvengeance){
x=wisdom_attack_base;
SWD+="Warding Thunder "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
if (paragon_discipleoftheworldserpent){
x=wisdom_attack_base;
SWD+="Crush of the Serpent "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude<br>\r";}
if (paragon_ghostpanther){
x=wisdom_attack_base;
SWD+="Ghost Panther Spiral "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_greatbearshaman){
x=wisdom_attack_base;
SWD+="Call to the Great Bear "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex<br>\r";}
if (paragon_spirittempest){
x=wisdom_attack_base;
SWD+="Spirit Storm "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will<br>\r";}
if (paragon_arcanewellspring){
SWD+="Sorcerous Metamorphosis"+sup_i()+" [damage is special]<br>\r";}
if (paragon_demonskinadept){
x=charisma_attack_base;
SWD+="Swords of the Marilith "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (paragon_dragonsoulheir){
x=charisma_attack_base;
SWD+="Veil of the Dragon "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (paragon_wildmage){
x=charisma_attack_base;
SWD+="Prismatic Bolt "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex<br>\r";}
if (paragon_bloodwrathguardian){
x=strength_attack_base;
SWD+="Form of the Primal Beast "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_hornedchampion){
x=strength_attack_base;
SWD+="Form of the Leaping Stag "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC<br>\r";}
if (paragon_stormsentinel){
x=constitution_attack_base;
SWD+="Form of the Storm's Wrath [special]\r";}
if (paragon_verdantlord){
x=strength_attack_base;
SWD+="Form of the Verdant Lord "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs fortitude<br>\r";}



// kurwa attacks at level 20
}



x=wisdom_attack_base; 
if (document.form1.astralbladesofdeath_box.checked){SWD+="Astral Blades of Death "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.divinecensure_box.checked){SWD+="Divine Censure "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base+2; 
if (document.form1.hauntingstrike_box.checked){SWD+="Haunting Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack + 2] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.healingtorch_box.checked){SWD+="Healing Torch "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.cageofchains_box.checked){SWD+="Cage of Chains "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.fangsofsteel_box.checked){SWD+="Fangs of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.hacknslash_box.checked){SWD+="Hack 'n' Slash "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.paralyzingstrike_box.checked){SWD+="Paralyzing Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.skullcrusher_box.checked){SWD+="Skull Crusher "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.warriorsurging_box.checked){SWD+="Warrior's Urging "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.herewaitsthydoom_box.checked){SWD+="Here Waits Thy Doom "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.martyrssmite_box.checked){SWD+="Martyr's Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.resoundingsmite_box.checked){SWD+="Resounding Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.sublimetranspostion_box.checked){SWD+="Sublime Transpostion "+PlusOrMinus(x)+sup_w()+" [base charisma attack, special] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.bladeward_box.checked){SWD+="Blade Ward "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.cloakofthorns_box.checked){SWD+="Cloak of Thorns "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.hammershot_box.checked){SWD+="Hammer Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.manticoresvolley_box.checked){SWD+="Manticore's Volley "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.knavesgambit_box.checked){SWD+="Knave's Gambit "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.scorpionstrike_box.checked){SWD+="Scorpion Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.steelentrapment_box.checked){SWD+="Steel Entrapment "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.darktransport_box.checked){SWD+="Dark Transport "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.spitefuldarts_box.checked){SWD+="Spiteful Darts "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.thornsofvenom_box.checked){SWD+="Thorns of Venom "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.greatdragonwarcry_box.checked){SWD+="Great Dragon War Cry "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.pillartopost_box.checked){SWD+="Pillar to Post "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.rabbitsandwolves_box.checked){SWD+="Rabbits and Wolves "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.suddenassault_box.checked){SWD+="Sudden Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.acidstorm_box.checked){SWD+="Acid Storm "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.chainlightning_box.checked){SWD+="Chain Lightning "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.thunderclap_box.checked){SWD+="Thunderclap "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }




x=wisdom_attack_base;
if (document.form1.avengersshield_box.checked){SWD+="Avenger's Shield "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.bondofjustice_box.checked){SWD+="Bond of Justice "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.phaseduel_box.checked){SWD+="Phase Duel "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.arcingthrow_box.checked){SWD+="Arcing Throw "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.berserkersshout_box.checked){SWD+="Berserker's Shout "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.craterfall_box.checked){SWD+="Crater Fall "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.fatalstrike_box.checked){SWD+="Fatal Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.feralscythe_box.checked){SWD+="Feral Scythe "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.staggeringstrike_box.checked){SWD+="Staggering Strike "+PlusOrMinus(x)+sup_w()+" [base strengt attack] vs. fortitude<br>\r";}
x=charisma_attack_base;
if (document.form1.echoesintime_box.checked){SWD+="Echoes in Time "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.rhythmofdisorientation_box.checked){SWD+="Rhythm of Disorientation "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.songofliberation_box.checked){SWD+="Song of Liberation "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.wealandwoe_box.checked){SWD+="Weal and Woe "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
x=wisdom_attack_base;
if (document.form1.graspingearth_box.checked){SWD+="Grasping Earth "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.primalroar_box.checked){SWD+="Primal Roar "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.stormburst_box.checked){SWD+="Storm Burst "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.strengthofthehunt_box.checked){SWD+="Strength of the Hunt "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.cascadeoffivesuns_box.checked){SWD+="Cascade of Five Suns "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.stormofcelestia_box.checked){SWD+="Storm of Celestia "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.vindicatingflames_box.checked){SWD+="Vindicating Flames "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.wordofrebuke_box.checked){SWD+="Word of Rebuke "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=wisdom_attack_base;
if (document.form1.calltotheprimalprotector_box.checked){SWD+="Call to the Primal Protector "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.calltotherelentlesshunter_box.checked){SWD+="Call to the Relentless Hunter "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.spiritofthedeathraven_box.checked){SWD+="Spirit of the Death Raven "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.twintempestspirits_box.checked){SWD+="Twin Tempest Spirits "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=charisma_attack_base;
if (document.form1.blackbreath_box.checked){SWD+="Black Breath "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.chaosorbs_box.checked){SWD+="Chaos Orbs "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.ironchains_box.checked){SWD+="Iron Chains "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.platesofice_box.checked){SWD+="Plates of Ice "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
x=strength_attack_base;
if (document.form1.guardianswrath_box.checked){SWD+="Guardian's Wrath "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.naturesally_box.checked){SWD+="Nature's Ally "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. reflex<br>\r";}
if (document.form1.startlingsavagery_box.checked){SWD+="Startling Savagery "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.whirlwindassault_box.checked){SWD+="Whirlwind Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}





x=strength_attack_base;
if (document.form1.chasedown_box.checked){SWD+="Chase Down "+PlusOrMinus(x)+sup_w()+" [strength] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.overwhelmingfury_box.checked){SWD+="Overwhelming Fury "+PlusOrMinus(x)+sup_w()+" [strength] vs. AC<br>\r";}


if (document.form1.other23encounter_box.checked){SWD+=document.form1.other23encounter.value+":<br>\r"; }

x=strength_attack_base; 
if (document.form1.nimbusofdoom_box.checked){SWD+="Nimbus of Doom "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.sacredword_box.checked){SWD+="Sacred Word "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs fortitude"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.sealofbinding_box.checked){SWD+="Seal of Binding "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.reapersstance_box.checked){SWD+="Reaper's Stance [special]"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.reignofterror_box.checked){SWD+="Reign of Terror "+PlusOrMinus(x)+sup_i()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.supremacyofsteel_box.checked){SWD+="Supremacy of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.exaltedretribution_box.checked){SWD+="Exalted Retribution "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.totheninehellswithyou_box.checked){SWD+="To the Nine Hells with You "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.bloodstorm_box.checked){SWD+="Blood Storm (melee) "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.bloodstorm_box.checked){SWD+="Blood Storm (ranged) "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
if (document.form1.tigersreflex_box.checked){SWD+="Tiger's Reflex [special]"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.unstoppablearrows_box.checked){SWD+="Unstoppable Arrows "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.bitingassault_box.checked){SWD+="Biting Assault "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.ghostonthewind_box.checked){SWD+="Ghost on the Wind "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs will"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.hamstring_box.checked){SWD+="Hamstring "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.curseofthetwinprinces_box.checked){SWD+="Curse of the Twin Princes "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.tartareantomb_box.checked){SWD+="Tartarean Tomb "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.thirteenbalefulstars_box.checked){SWD+="Thirteen Baleful Stars "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.relentlessassault_box.checked){SWD+="Relentless Assault "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.stirthehornetsnest_box.checked){SWD+="Stir the Hornet's Nest "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.whiteravenscall_box.checked){SWD+="White Raven's Call "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.elementalmaw_box.checked){SWD+="Elemental Maw "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.maze_box.checked){SWD+="Maze "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.necroticweb_box.checked){SWD+="Necrotic Web "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.prismaticspray_box.checked){SWD+="Prismatic Spray "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude, reflex, and will"; 
SWD+="<br>\r"; }


x=wisdom_attack_base;
if (document.form1.aspectofdeath_box.checked){SWD+="Aspect of Death "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.bondofdestiny_box.checked){SWD+="Bond of Destiny "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.executionersjustice_box.checked){SWD+="Executioner's Justice "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.sigilofdamnation_box.checked){SWD+="Sigil of Damnation "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.ashhammerrage_box.checked){SWD+="Ash Hammer Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.blodhungerrage_box.checked){SWD+="Blood Hunger Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.bluedragonrage_box.checked){SWD+="Blue Dragon Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.stonetempestrage_box.checked){SWD+="Stone Tempest Rage "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=charisma_attack_base;
if (document.form1.adversarialsong_box.checked){SWD+="Adversarial Song "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.fraughtwithfailure_box.checked){SWD+="Fraught With Failure "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
if (document.form1.frenziedrhythm_box.checked){SWD+="Frenzied Rhythm "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.visiondistortion_box.checked){SWD+="Vision Distortion "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
x=wisdom_attack_base;
if (document.form1.ferociousmaul_box.checked){SWD+="Ferocious Maul "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.feylure_box.checked){SWD+="Fey Lure "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.primalstorm_box.checked){SWD+="Primal Storm "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.primaltiger_box.checked){SWD+="Primal Tiger "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.anthemofthefirstdawn_box.checked){SWD+="Anthem of the First Dawn "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.invokethefallen_box.checked){SWD+="Invoke the Fallen "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.rackinginvocationofpain_box.checked){SWD+="Racking Invocation of Pain "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.rainofcolorlessfire_box.checked){SWD+="Rain of Colorless Fire "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.ironbornspirit_box.checked){SWD+="Ironborn Spirit "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.spiritofthelaughingwanderer_box.checked){SWD+="Spirit of the Laughing Wanderer "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.spiritoftheworldserpent_box.checked){SWD+="Spirit of the World Serpent "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.westernwindofstorms_box.checked){SWD+="Western Wind of Storms "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=charisma_attack_base;
if (document.form1.draconicincarnation_box.checked){SWD+="Draconic Incarnation "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.forcestorm_box.checked){SWD+="Force Storm "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.wordsofchaos_box.checked){SWD+="Words of Chaos "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
x=strength_attack_base;
if (document.form1.formoftheblackwolf_box.checked){SWD+="Form of the Black Wolf "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.formofthedisplacerbeast_box.checked){SWD+="Form of the Displacer Beast "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.formofthejunglelord_box.checked){SWD+="Form of the Jungle Lord "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.formoftheautumnreaper_box.checked){SWD+="Form of the Autumn Reaper "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. fortitude<br>\r";}


x=beast_attack_base;
if (document.form1.primalrampage_box.checked){SWD+="Primal Rampage "+PlusOrMinus(x)+sup_w()+" [beast attack base] vs. AC<br>\r";}
x=strength_attack_base;
if (document.form1.pursuitofthewildhunt_box.checked){SWD+="Pursuit of the Wild Hunt "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}




if (document.form1.other25daily_box.checked){SWD+=document.form1.other25daily.value+":<br>\r"; }

x=strength_attack_base+4; 
if (document.form1.punishingstrike_box.checked){SWD+="Punishing Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack + 4 as per revision] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.sacrificialhealing_box.checked){SWD+="Sacrificial Healing "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.scourgeoftheunworthy_box.checked){SWD+="Scourge of the Unworthy "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=wisdom_attack_base; 
if (document.form1.sunburst_box.checked){SWD+="Sunburst "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.adamantinestrike_box.checked){SWD+="Adamantine Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.cruelreaper_box.checked){SWD+="Cruel Reaper "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.diamondshielddefense_box.checked){SWD+="Diamond Shield Defense "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.indomitablebattlestrike_box.checked){SWD+="Indomitable Battle Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.blindingsmite_box.checked){SWD+="Blinding Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.brandofjudgment_box.checked){SWD+="Brand of Judgment "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base+2; 
if (document.form1.deificvengeance_box.checked){SWD+="Deific Vengeance "+PlusOrMinus(x)+sup_i()+" [base charisma attack + 2] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.restrictingsmite_box.checked){SWD+="Restricting Smite "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.stunningsmite_box.checked){SWD+="Stunning Smite "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.deathrend_box.checked){SWD+="Death Rend "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.hailofarrows_box.checked){SWD+="Hail of Arrows "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.lightningshot_box.checked){SWD+="Lightning Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.wanderingtornado_box.checked){SWD+="Wandering Tornado "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
if (rogue_artfuldodger)
{
x=dexterity_attack_base+modifier_number(charisma); 
if (document.form1.danceofdeath_box.checked){SWD+="Dance of Death "+PlusOrMinus(x)+sup_w()+" [base dexterity attack + charisma modifier] vs AC"; 
SWD+="<br>\r"; }
}
else
{
x=dexterity_attack_base; 
if (document.form1.danceofdeath_box.checked){SWD+="Dance of Death "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
}
if (rogue_brutalscoundrel)
{
x=dexterity_attack_base+modifier_number(strength); 
if (document.form1.hurricaneofblood_box.checked){SWD+="Hurricane of Blood "+PlusOrMinus(x)+sup_w()+" [base dexterity attack + strength modifier] vs AC"; 
SWD+="<br>\r"; }
}
else
{
x=dexterity_attack_base; 
if (document.form1.hurricaneofblood_box.checked){SWD+="Hurricane of Blood "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
}

x=dexterity_attack_base; 
if (document.form1.perfectstrike_box.checked){SWD+="Perfect Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC, fortitude, or reflex"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.banishtothevoid_box.checked){SWD+="Banish to the Void "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.curseofthefeyking_box.checked){SWD+="Curse of the Fey King "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.hellfirecurse_box.checked){SWD+="Hellfire Curse "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.chimerabattlestrike_box.checked){SWD+="Chimera Battle Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.devastatingcharge_box.checked){SWD+="Devastating Charge "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.inciteheroism_box.checked){SWD+="Incite Heroism "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.warlordsdoom_box.checked){SWD+="Warlord's Doom "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.blackfire_box.checked){SWD+="Black Fire "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.confusion_box.checked){SWD+="Confusion "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.forcecage_box.checked){SWD+="Force Cage "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }


x=wisdom_attack_base;
if (document.form1.astralcharge_box.checked){SWD+="Astral Charge "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.deathstroke_box.checked){SWD+="Death Stroke "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.inevitableend_box.checked){SWD+="Inevitable End "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. AC<br>\r";}
if (document.form1.scattertotheastralwinds_box.checked){SWD+="Scatter to the Astral Winds "+PlusOrMinus(x)+sup_w()+" [base wisdom attack] vs. will<br>\r";}
x=strength_attack_base;
if (document.form1.bloodwrath_box.checked){SWD+="Blood Wrath "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.bonebreaker_box.checked){SWD+="Bone Breaker "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. fortitude<br>\r";}
if (document.form1.butchersfeast_box.checked){SWD+="Butcher's Feast "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.hurricaneofblades_box.checked){SWD+="Hurricane of Blades "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.rampagingdragonstrike_box.checked){SWD+="Rampaging Dragon Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=charisma_attack_base;
if (document.form1.bondofmalediction_box.checked){SWD+="Bond of Malediction "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
if (document.form1.kaleidoscopigburst_box.checked){SWD+="Kaleidoscopic Burst "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. will<br>\r";}
if (document.form1.surgeofvalor_box.checked){SWD+="Surge of Valor "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs. AC<br>\r";}
x=wisdom_attack_base;
if (document.form1.explosivewind_box.checked){SWD+="Explosive Wind "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.feralwhirlwind_box.checked){SWD+="Feral Whirlwind "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.leapingrake_box.checked){SWD+="Leaping Rake "+PlusOrMinus(x)+sup_i()+sup_bf()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.polarblast_box.checked){SWD+="Polar Blast "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
x=wisdom_attack_base;
if (document.form1.invoketerror_box.checked){SWD+="Invoke Terror "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
if (document.form1.offeringofpeace_box.checked){SWD+="Offering of Peace "+sup_i()+" [special]<br>\r";}
if (document.form1.swarmofastralsteel_box.checked){SWD+="Swarm of Astral Steel "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.wordofannihilation_box.checked){SWD+="Word of Annihilation "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=wisdom_attack_base;
if (document.form1.bloodreaperspirits_box.checked){SWD+="Blood Reaper Spirits "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. fortitude<br>\r";}
if (document.form1.calltothecleansingfire_box.checked){SWD+="Call to the Cleansing Fire "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.calltothegreathunter_box.checked){SWD+="Call to the Great Hunter "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. reflex<br>\r";}
if (document.form1.spiritofelderwisdom_box.checked){SWD+="Spirit of Elder Wisdom "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs. will<br>\r";}
x=charisma_attack_base;
if (document.form1.lightningeruption_box.checked){SWD+="Lightning Eruption "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.poisonward_box.checked){SWD+="Poison Ward "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.thunderpulse_box.checked){SWD+="Thunder Pulse "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. fortitude<br>\r";}
if (document.form1.wildfirecurse_box.checked){SWD+="Wildfire Curse "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs. reflex<br>\r";}
x=strength_attack_base;
if (document.form1.earthtomb_box.checked){SWD+="Earth Tomb "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.guardiansstorm_box.checked){SWD+="Guardian's Storm "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
if (document.form1.screamingwindstrike_box.checked){SWD+="Screaming Wind Strike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. reflex<br>\r";}
if (document.form1.weightofthemountain_box.checked){SWD+="Weight of the Mountain "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}


x=strength_attack_base;
if (document.form1.beastlyvise_box.checked){SWD+="Beastly Vise "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}
x=beast_attack_base;
if (document.form1.catchanddrop_box.checked){SWD+="Catch and Drop "+PlusOrMinus(x)+sup_w()+" [beast attack bonus] vs. reflex<br>\r";}


if (document.form1.other27encounter_box.checked){SWD+=document.form1.other27encounter.value+":<br>\r"; }

x=wisdom_attack_base; 
if (document.form1.astralstorm_box.checked){SWD+="Astral Storm "+PlusOrMinus(x)+sup_i()+" [base wisdom attack] vs reflex"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.godstrike_box.checked){SWD+="Godstrike "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
if (document.form1.forcethebattle_box.checked){SWD+="Force the Battle [special]"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.nomercy_box.checked){SWD+="No Mercy "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.stormofdestruction_box.checked){SWD+="Storm of Destruction "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.evenhandofjustice_box.checked){SWD+="Even Hand of Justice "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.powerfulfaith_box.checked){SWD+="Powerful Faith "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
if (document.form1.followupblow_box.checked){SWD+="Follow-up Blow [special]"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.threeinoneshot_box.checked){SWD+="Three in One Shot "+PlusOrMinus(x)+sup_w()+" [base dexterity attack, special] vs AC"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.weaveawebofsteel_box.checked){SWD+="Weave a Web of Steel "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.assassinspoint_box.checked){SWD+="Assassin's Point "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs AC"; 
SWD+="<br>\r"; }
x=dexterity_attack_base; 
if (document.form1.immobilizingstrike_box.checked){SWD+="Immobilizing Strike "+PlusOrMinus(x)+sup_w()+" [base dexterity attack] vs fortitude"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.movingtarget_box.checked){SWD+="Moving Target "+PlusOrMinus(x)+sup_w()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=charisma_attack_base; 
if (document.form1.curseofthedarkdelirium_box.checked){SWD+="Curse of the Dark Delirium "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.doomofdelban_box.checked){SWD+="Doom of Delban "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude"; 
SWD+="<br>\r"; }
x=constitution_attack_base; 
if (document.form1.hurlthroughhell_box.checked){SWD+="Hurl Through Hell "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will"; 
SWD+="<br>\r"; }
x=strength_attack_base; 
if (document.form1.defydeath_box.checked){SWD+="Defy Death "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }

x=strength_attack_base;
if (document.form1.standinvincible_box.checked){SWD+="Stand Invincible "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs AC"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.greatericestorm_box.checked){SWD+="Greater Ice Storm "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.legionshold_box.checked){SWD+="Legions Hold "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs will"; 
SWD+="<br>\r"; }
x=intelligence_attack_base; 
if (document.form1.meteorswarm_box.checked){SWD+="Meteor Swarm "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex"; 
SWD+="<br>\r"; }



x=strength_attack_base;
if (document.form1.huntmastersmauling_box.checked){SWD+="Huntmaster's Mauling "+PlusOrMinus(x)+sup_w()+" [base strength attack] vs. AC<br>\r";}


if (document.form1.other29daily_box.checked){SWD+=document.form1.other29daily.value+":<br>\r"; }




x=intelligence_attack_base;
if (document.form1.foesnare_box.checked==true){SWD+="Foesnare [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.lightningclash_box.checked==true){SWD+="Lightning Clash [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.whirlingblade_box.checked==true){SWD+="Whirling Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.blastbackswipe_box.checked==true){SWD+="Blast Backswipe [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.corrosiveruin_box.checked==true){SWD+="Corrosive Ruin [FRPG] "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.slothstrike_box.checked==true){SWD+="Sloth Strike [FRPG] "+PlusOrMinus(x)+sup_w()+" [AC] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.transposinglunge_box.checked==true){SWD+="Transposing Lunge [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.deepfreeze_box.checked==true){SWD+="Deep Freeze [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.elementalfoible_box.checked==true){SWD+="Elemental Foible [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.lingeringlightning_box.checked==true){SWD+="Lingering Lightning [FRPG] "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.electrifiedlash_box.checked==true){SWD+="Electrified Lash [FRPG] "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}

if (document.form1.flamewallstrike_box.checked==true){SWD+="Flamewall Strike [FRPG] "+PlusOrMinus(x)+sup_i()+" [special]";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.isolatingslam_box.checked==true){SWD+="Isolating Slam [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.spikesofagony_box.checked==true){SWD+="Spikes of Agony [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.beaconblade_box.checked==true){SWD+="Beacon Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.begone_box.checked==true){SWD+="Be Gone [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.glamorblade_box.checked==true){SWD+="Glamor Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.acidburstblade_box.checked==true){SWD+="Acid Burst Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.dimensionalslash_box.checked==true){SWD+="Dimensional Slash [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.seedoffire_box.checked==true){SWD+="Seed of Fire [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.acidforblood_box.checked==true){SWD+="Acid for Blood [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.infernossword_box.checked==true){SWD+="Inferno's Sword [FRPG] "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex";
SWD+="<br>\r";}

if (document.form1.freethestormwithin_box.checked==true){SWD+="Free the Storm Within [FRPG] "+PlusOrMinus(x)+sup_w()+" [special]";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.icecage_box.checked==true){SWD+="Ice Cage [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.spidersilkslash_box.checked==true){SWD+="Spider Silk Slash [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.swordshock_box.checked==true){SWD+="Sword Shock [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.baneblade_box.checked==true){SWD+="Bane Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.hellsownblade_box.checked==true){SWD+="Hell's Own Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.lightningrod_box.checked==true){SWD+="Lightning Rod [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.acidfountain_box.checked==true){SWD+="Acid Fountain [FRPG] "+PlusOrMinus(x)+sup_i()+" [base intelligence attack] vs reflex";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.meteorstrike_box.checked==true){SWD+="Meteor Strike [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.thunderreposte_box.checked==true){SWD+="Thunder Reposte [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.boundinglightning_box.checked==true){SWD+="Bounding Lightning [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs reflex";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.icyshackles_box.checked==true){SWD+="Icy Shackles [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}

if (document.form1.quicksilverblade_box.checked==true){SWD+="Quicksilver Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [special]";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.thunderingheart_box.checked==true){SWD+="Thundering Heart [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.maelstromblade_box.checked==true){SWD+="Maelstrom Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.circleofdevastation_box.checked==true){SWD+="Circle of Devastation [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.dimensionalcharge_box.checked==true){SWD+="Dimensional Charge [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.astralthunderblade_box.checked==true){SWD+="Astral Thunderblade [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC / fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.obliteratingblaze_box.checked==true){SWD+="Obliterating Blaze [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC / fortitude";
SWD+="<br>\r";}
x=intelligence_attack_base;
if (document.form1.vorpaldoom_box.checked==true){SWD+="Vorpal Doom [FRPG] "+PlusOrMinus(x)+sup_w()+" [base intelligence attack] vs AC";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.cursebite_box.checked==true){SWD+="Cursebite [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.flickeringvenom_box.checked==true){SWD+="Flickering Venom [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.contagion_box.checked==true){SWD+="Contagion [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.yourglorioussacrifice_box.checked==true){SWD+="Your Glorious Sacrifice [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofkhaeleth_box.checked==true){SWD+="Vestige of Khaeleth [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofmountvaelis_box.checked==true){SWD+="Vestige of Mount Vaelis [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.upsettingonslaught_box.checked==true){SWD+="Upsetting Onslaught [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.yourdeliciousweakness_box.checked==true){SWD+="Your Delicious Weakness [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.forcefulassault_box.checked==true){SWD+="Forceful Assault [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.twilightofthesoul_box.checked==true){SWD+="Twilight of the Soul [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofugar_box.checked==true){SWD+="Vestige of Ugar [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofxandor_box.checked==true){SWD+="Vestige of Xandor [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will";
SWD+="<br>\r";}
x=charisma_attack_base+2;
if (document.form1.deathboon_box.checked==true){SWD+="Death Boon [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack + 2] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.deathscommands_box.checked==true){SWD+="Death's Commands [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.deathsfondcaress_box.checked==true){SWD+="Death's Fond Caress [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs relfex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.ringofpain_box.checked==true){SWD+="Ring of Pain [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofilmeth_box.checked==true){SWD+="Vestige of Ilmeth [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofshax_box.checked==true){SWD+="Vestige of Shax [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.cursegrind_box.checked==true){SWD+="Curse Grind [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.allmustsacrifice_box.checked==true){SWD+="All Must Sacrifice [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.kimmerielssmile_box.checked==true){SWD+="Kimmeriel's Smile [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.darkladysgift_box.checked==true){SWD+="Dark Lady's Gift [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofleraje_box.checked==true){SWD+="Vestige of Leraje [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofsolis_box.checked==true){SWD+="Vestige of Solis [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.unholyglee_box.checked==true){SWD+="Unholy Glee [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.yourdelectablepain_box.checked==true){SWD+="Your Delectable Pain [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.explosivecontagion_box.checked==true){SWD+="Explosive Contagion [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.passionatebetrayal_box.checked==true){SWD+="Passionate Betrayal [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofamaan_box.checked==true){SWD+="Vestige of Amaan [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeoftheburnedemperors_box.checked==true){SWD+="Vestige of the Burned Emperors "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base+2;
if (document.form1.dreadtheft_box.checked==true){SWD+="Dread Theft [FRPG] "+PlusOrMinus(x)+sup_i()+" [charisima] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.bladesofvanquishedarmies_box.checked==true){SWD+="Blades of Vanquished Armies [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.invisibledeath_box.checked==true){SWD+="Invisible Death [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.ringoftorment_box.checked==true){SWD+="Ring of Torment [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs will";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeoflandssoul_box.checked==true){SWD+="Vestige of Land's Soul "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.ringoftorment_box.checked==true){SWD+="Vestige of the Queen of Namhar "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs will";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.inevitableundercut_box.checked==true){SWD+="Inevitable Undercut [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs fortitude";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.onefinalsacrifice_box.checked==true){SWD+="One Final Sacrifice [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=charisma_attack_base;
if (document.form1.spreadthecorrosion_box.checked==true){SWD+="Spread the Corrosion [FRPG] "+PlusOrMinus(x)+sup_i()+" [base charisma attack] vs reflex";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofthemasterofthehiddenflame_box.checked==true){SWD+="Vestige of the Master of the Hidden Flame [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude";
SWD+="<br>\r";}
x=constitution_attack_base;
if (document.form1.vestigeofzuriel_box.checked==true){SWD+="Vestige of Zuriel [AP] "+PlusOrMinus(x)+sup_i()+" [base constitution attack] vs fortitude";
SWD+="<br>\r";}


if (document.form1.horrificmawbite_box.checked==true)
 {

  if (total_levels<=10){x=physical_attack_base+2;SWD+="Horrific Maw Bite [FRPG] "+PlusOrMinus(x)+" ["+best_physical_attack+" + 2] vs AC";}
  else if (total_levels<=20){x=physical_attack_base+4;SWD+="Horrific Maw Bite [FRPG] "+PlusOrMinus(x)+" ["+best_physical_attack+" + 4] vs AC";}
  else {x=physical_attack_base+6;SWD+="Horrific Maw Bite [FRPG] "+PlusOrMinus(x)+" ["+best_physical_attack+" + 6] vs AC";}
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.plaguelash_box.checked==true){SWD+="Plague Lash [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs fortitude";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.burningfocus_box.checked==true){SWD+="Burning Focus [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.spellmirror_box.checked==true){SWD+="Spell Mirror [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs reflex";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.scarcarvingblade_box.checked==true){SWD+="Scar Carving Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.calloftheplague_box.checked==true){SWD+="Call of the Plague [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs fortitude";
SWD+="<br>\r";}

if (document.form1.blurringblade_box.checked==true){SWD+="Blurring Blade [FRPG] "+PlusOrMinus(x)+sup_w()+" [special]";
SWD+="<br>\r";}

if (document.form1.terribleimposition_box.checked==true)
 {
  if (total_levels<=10){x=mental_attack_base+2;SWD+="Terrible Imposition [FRPG] "+PlusOrMinus(x)+" ["+best_mental_attack+" + 2] vs fortitude";}
  else if (total_levels<=20){x=mental_attack_base+4;SWD+="Terrible Imposition [FRPG] "+PlusOrMinus(x)+" ["+best_mental_attack+" + 4] vs fortitude";}
  else {x=mental_attack_base+6;SWD+="Terrible Imposition [FRPG] "+PlusOrMinus(x)+" ["+best_mental_attack+" + 6] vs fortitude";}
 
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.reachofthedoomed_box.checked==true){SWD+="Reach of the Doomed [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.cursedgraspingair_box.checked==true){SWD+="Cursed Grasping Air [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs reflex";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.venomousbloodfang_box.checked==true){SWD+="Venomous Bloodfang [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.burningtheplaguedbellows_box.checked==true){SWD+="Burning the Plagued Bellows [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs reflex";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.submissionoftheearth_box.checked==true){SWD+="Submission of the Earth [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.linesinburningsand_box.checked==true){SWD+="Lines in Burning Sand [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs AC";
SWD+="<br>\r";}

if (document.form1.spellmothersembrace_box.checked==true)
 {
  if (total_levels<=10){x=physical_attack_base+2;SWD+="Spell Mother's Embrace [FRPG] "+PlusOrMinus(x)+" ["+best_physical_attack+" + 2] vs fortitude";}
  else if (total_levels<=20){x=physical_attack_base+4;SWD+="Spell Mother's Embrace [FRPG] "+PlusOrMinus(x)+" ["+best_physical_attack+" + 4] vs fortitude";}
  else {x=physical_attack_base+6;SWD+="Spell Mother's Embrace [FRPG] "+PlusOrMinus(x)+" ["+best_physical_attack+" + 6] vs fortitude";}
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.inflictionoftheflamemist_box.checked==true){SWD+="Infliction of the Flame Mist [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs fortitude";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.rabidchainofsteel_box.checked==true){SWD+="Rabid Chain of Steel [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.irontoothofbloodlust_box.checked==true){SWD+="Iron Tooth of Bloodlust [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.maskofmidnight_box.checked==true){SWD+="Mask of Midnight [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs will";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.spellcurse_box.checked==true){SWD+="Spell Curse [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.gravityofmoment_box.checked==true){SWD+="Gravity of Moment [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs will";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.hideoustether_box.checked==true){SWD+="Hideous Tether [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.tonguesoftheearth_box.checked==true){SWD+="Tongues of the Earth [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs reflex";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.malignantgrowth_box.checked==true){SWD+="Malignant Growth [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs fortitude";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.contagionflame_box.checked==true){SWD+="Contagion Flame [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.shiftingwave_box.checked==true){SWD+="Shifting Wave [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs will";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.impossibleflurry_box.checked==true){SWD+="Impossible Flurry [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=physical_attack_base;
if (document.form1.echoesofvalor_box.checked==true){SWD+="Echoes of Valor [FRPG] "+PlusOrMinus(x)+sup_w()+" ["+best_physical_attack+"] vs AC";
SWD+="<br>\r";}
x=mental_attack_base;
if (document.form1.metamorphosisofspellflame_box.checked==true){SWD+="Metamorphosis of Spellflame [FRPG] "+PlusOrMinus(x)+sup_i()+" ["+best_mental_attack+"] vs fortitude/will [whichever is easier]";
SWD+="<br>\r";}





if (explain_sup_v){SWD+="<font size=\"-1\"><sup>v</sup> Versatile weapon. Add +1 to damage if using two-handed.</font size><br>"}
if (explain_sup_w){SWD+="<font size=\"-1\"><sup>w</sup> Weapon-based power. Apply adjustments for proficiency, situation, feats, magic, etc.</font size><br>"}
if (explain_sup_i)
 {
  SWD+="<font size=\"-1\"><sup>i</sup> Implement-usable power. Apply a bonus as appropriate for magic, any implement expertises, etc."
  if (class_swordmage){SWD+="  Swordmages do not apply their weapon proficiencies to implement-usable spells.<br>\r"}
  SWD+="</font size><br>\r"
 }
if (explain_sup_bf)
 {
  SWD+="<font size=\"-1\"><sup>bf</sup> Beast-form power."
  SWD+="</font size><br>\r"
 }
x=1;if (total_levels>10){x=2;} if (total_levels>20){x=3;}
if (feat_intelligentblademaster){SWD+="<font size=\"-1\">Intelligent blademaster: Use intelligence instead of strength on basic attacks only.</font size><br>"}
if (feat_weaponexpertiseaxe){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using an axe.</font size><br>"}
if (feat_weaponexpertisebow){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a bow.</font size><br>"}
if (feat_weaponexpertisecrossbow){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a crossbow.</font size><br>"}
if (feat_weaponexpertiseflail){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a flail.</font size><br>"}
if (feat_weaponexpertisehammer){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a hammer.</font size><br>"}
if (feat_weaponexpertiseheavyblade){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a heavy blade.</font size><br>"}
if (feat_weaponexpertiselightblade){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a light blade.</font size><br>"}
if (feat_weaponexpertisemace){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a mace.</font size><br>"}
if (feat_weaponexpertisepick){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a pick.</font size><br>"}
if (feat_weaponexpertisepolearm){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a polearm.</font size><br>"}
if (feat_weaponexpertisesling){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a sling.</font size><br>"}
if (feat_weaponexpertisespear){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a spear.</font size><br>"}
if (feat_weaponexpertisestaff){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using a staff.</font size><br>"}
if (feat_weaponexpertiseunarmed){SWD+="<font size=\"-1\">Remember to add +"+x+" on all attack powers (but not basic attacks) using bare hands.</font size><br>"}


SWD +="<p></ul>\r"; 
if (feat_humanperseverance)
 {SWD+="Base Saving Throw: d20 + 1 [human perseverance] vs 10<p>\r"; }
else if (genasi_earthsoul)
 {SWD+="Base Saving Throw: d20 + 1 [Earthsoul] vs 10<p>\r"; }
 else {SWD+="Base Saving Throw: d20 vs 10<p>\r"; }

SWD+="</ul><p><table width=100%><tr width=100%><td width=50% valign=\"top\"><font face=\"Arial\">"
SWD+="Encumberance 4e<p>"
SWD+="<table><tr><td><font face=\"Arial\">Normal Load:<br>Heavy Load:<br>Maximum Drag Load<br></td><td><font face=\"Arial\">"+(strength*10)+" lb.<br>\r"+(strength*20)+" lb.<br>\r"+(strength*50)+" lb.<br></tr></table>"; 
SWD+="</td><td><font face=\"Arial\">"
SWD+="Encumberance 3.5<p>"
SWD +="<table><tr><td><font face=\"Arial\">Light load:<br>Medium load:<br>Heavy load:<br>Lift over head:<br>Lift off ground:<br>Push or drag:<br></td><td><font face=\"Arial\">"
x=0; z=0; 
x_and_heft()
if (small==false){SWD +=x + " lb. or less<br>\r"; }
if (small==true){SWD +=Math.round(x*3/4) + " or less<br>\r"; }
x++ ; 
z=0; 
if (strength== 1){z=6; }
if (strength== 2){z=13; }
if (strength== 3){z=20; }
if (strength== 4){z=26; }
if (strength== 5){z=33; }
if (strength== 6){z=40; }
if (strength== 7){z=46; }
if (strength== 8){z=53; }
if (strength== 9){z=60; }
if (strength==10){z=66; }
if (strength==11){z=76; }
if (strength==12){z=86; }
if (strength==13){z=100; }
if (strength==14){z=116; }
if (strength==15){z=133; }
if (strength==16){z=153; }
if (strength==17){z=173; }
if (strength==18){z=200; }
if (strength==19){z=233; }
if (strength==20){z=266; }
if (strength==21){z=306; }
if (strength==22){z=346; }
if (strength==23){z=400; }
if (strength==24){z=466; }
if (strength==25){z=533; }
if (strength==26){z=613; }
if (strength==27){z=693; }
if (strength==28){z=800; }
if (strength==29){z=933; }
if (small==false){SWD +=x + "-" + z + " lb.<br>\r"; }
if (small==true){SWD +=Math.round(x*3/4) + "-" + Math.round(z*3/4) + " lb.<br>\r"; }
x=z + 1; 
if (strength== 1){z=10; }
if (strength== 2){z=20; }
if (strength== 3){z=30; }
if (strength== 4){z=40; }
if (strength== 5){z=50; }
if (strength== 6){z=60; }
if (strength== 7){z=70; }
if (strength== 8){z=80; }
if (strength== 9){z=90; }
if (strength==10){z=100; }
if (strength==11){z=115; }
if (strength==12){z=130; }
if (strength==13){z=150; }
if (strength==14){z=175; }
if (strength==15){z=200; }
if (strength==16){z=230; }
if (strength==17){z=260; }
if (strength==18){z=300; }
if (strength==19){z=350; }
if (strength==20){z=400; }
if (strength==21){z=460; }
if (strength==22){z=520; }
if (strength==23){z=600; }
if (strength==24){z=700; }
if (strength==25){z=800; }
if (strength==26){z=920; }
if (strength==27){z=1040; }
if (strength==28){z=1200; }
if (strength==29){z=1400; }
if (small==false){SWD +=x + "-" + z + " lb.<br>\r"; }
if (small==true){SWD +=Math.round(x*3/4) + "-" + Math.round(z*3/4) + " lb.<br>\r"; }

if (small==false){SWD +=z + " lb.<br>\r"; }
if (small==true){SWD +=Math.round(z*3/4) + " lb.<br>\r"; }

if (small==false){SWD +=(2*z) + " lb.<br>\r"; }
if (small==true){SWD +=Math.round(z*3/2) + " lb.<br>\r"; }

if (small==false){SWD +=(5*z) + " lb.<br>\r"; }
if (small==true){SWD +=Math.round(z*15/4) + " lb.<br>\r"; }

SWD +="</td></tr></table><p>"
SWD +="</td></tr></table><p>"

SWD +="<p><table><tr><td valign=\"top\"><font face=\"Arial\">Languages:</td><td><font face=\"Arial\">"
if (document.form1.common_box.checked==true){SWD +="Common;  "}
if (document.form1.deepspeech_box.checked==true){SWD +="Deep Speech;  "}
if (document.form1.draconic_box.checked==true){SWD +="Draconic;  "}
if (document.form1.dwarven_box.checked==true){SWD +="Dwarven;  "}
if (document.form1.elven_box.checked==true){SWD +="Elven;  "}
if (document.form1.giant_box.checked==true){SWD +="Giant;  "}
if (document.form1.goblin_box.checked==true){SWD +="Goblin;  "}
if (document.form1.primordial_box.checked==true){SWD +="Primordial;  "}
if (document.form1.supernal_box.checked==true){SWD +="Supernal;  "}
if (document.form1.abyssal_box.checked==true){SWD +="Abyssal;  "}
if (document.form1.chondathan_box.checked==true){SWD +="Chondathan [FRPG];  "}
if (document.form1.damaran_box.checked==true){SWD +="Damaran [FRPG];  "}
if (document.form1.netherese_box.checked==true){SWD +="Netherese [FRPG];  "}
if (document.form1.shou_box.checked==true){SWD +="Shou [FRPG];  "}
if (document.form1.thayan_box.checked==true){SWD +="Thayan [FRPG];  "}
if (document.form1.tuigan_box.checked==true){SWD +="Tuigan [FRPG];  "}
if (document.form1.untheric_box.checked==true){SWD +="Untheric [FRPG];  "}
if (document.form1.other01_box.checked==true){SWD +=document.form1.other01.value+";  "}
if (document.form1.other02_box.checked==true){SWD +=document.form1.other02.value+";  "}
if (document.form1.other03_box.checked==true){SWD +=document.form1.other03.value+";  "}


Languages(); 
if (z<extra_language_entitlement)

 {SWD +=" (? " + (extra_language_entitlement-z) + " more)"}


SWD +="</td></tr></table><p>"


if (  (((class_cleric) | (class_bard) | (class_invoker) | (class_druid) | (class_wizard))&(!feat_alchemistswap)) | (feat_ritualcaster) | (class_other))
{
SWD +="Rituals Known:<p><ul>";



 if (document.form1.animalmessenger_box.checked){SWD+="Animal Messenger [Level 1]<br>\r"; }
 if (document.form1.banishvermin01_box.checked){SWD+="Banish Vermin [Dragon 366] [Level 1]<br>\r"; }
 if (document.form1.brewpotion_box.checked){SWD+="Brew Potion [Level 1 per revision]<br>\r"; }
 if (document.form1.comprehendlanguage_box.checked){SWD+="Comprehend Language [Level 1]<br>\r"; }
 if (document.form1.explorersfire01_box.checked){SWD+="Explorer's Fire [Dragon 366] [Level 1]<br>\r"; }
 if (document.form1.fastidiousness01_box.checked){SWD+="Fastidiousness [Dragon 366] [Level 1]<br>\r"; }
 if (document.form1.gentlerepose_box.checked){SWD+="Gentle Repose [Level 1]<br>\r"; }
 if (document.form1.magicmouth_box.checked){SWD+="Magic Mouth [Level 1]<br>\r"; }
 if (document.form1.makewhole_box.checked){SWD+="Make Whole [Level 1]<br>\r"; }
 if (document.form1.secretpage_box.checked){SWD+="Secret Page [Level 1]<br>\r"; }
 if (document.form1.silence_box.checked){SWD+="Silence [Level 1]<br>\r"; }
 if (document.form1.tensersfloatingdisk_box.checked){SWD+="Tenser's Floating Disk [Level 1]<br>\r"; }
 if (document.form1.wizardscurtain01_box.checked){SWD+="Wizard's Curtain [Dragon 366] [Level 1]<br>\r"; }
 if (document.form1.delversfire02_box.checked){SWD+="Delver's Fire [Dragon 366] [Level 2]<br>\r"; }
 if (document.form1.endureelements_box.checked){SWD+="Endure Elements [Level 2]<br>\r"; }
 if (document.form1.eyeofalarm_box.checked){SWD+="Eye of Alarm [Level 2]<br>\r"; }
 if (document.form1.preservation02_box.checked){SWD+="Preservation [Dragon 366] [Level 2]<br>\r"; }
 if (document.form1.waterwalk_box.checked){SWD+="Water Walk [Level 2]<br>\r"; }
 if (document.form1.battlefieldelocution03_box.checked){SWD+="Battlefield Elocution [Dragon 366] [Level 3]<br>\r"; }
 if (document.form1.detectsecretdoors_box.checked){SWD+="Detect Secret Doors [Level 3]<br>\r"; }
 if (document.form1.arcanelock_box.checked){SWD+="Arcane Lock [Level 4]<br>\r"; }
 if (document.form1.delayaffliction04_box.checked){SWD+="Delay Affliction [Dragon 366] [Level 4]<br>\r"; }
 if (document.form1.enchantmagicitem_box.checked){SWD+="Enchant Magic Item [Level 4]<br>\r"; }
 if (document.form1.handoffate_box.checked){SWD+="Hand of Fate [Level 4]<br>\r"; }
 if (document.form1.knock_box.checked){SWD+="Knock [Level 4]<br>\r"; }
 if (document.form1.travelersfeast_box.checked){SWD+="Traveler's Feast [Level 4]<br>\r"; }
 if (document.form1.hallucinatoryitem_box.checked){SWD+="Hallucinatory Item [Level 5]<br>\r"; }
 if (document.form1.magiccircle_box.checked){SWD+="Magic Circle [Level 5]<br>\r"; }
 if (document.form1.bolsterobject06_box.checked){SWD+="Bolster Object [Dragon 366] [Level 6]<br>\r"; }
 if (document.form1.communewithnature_box.checked){SWD+="Commune With Nature [Level 6]<br>\r"; }
 if (document.form1.curedisease_box.checked){SWD+="Cure Disease [Level 6]<br>\r"; }
 if (document.form1.discernlies_box.checked){SWD+="Discern Lies [Level 6]<br>\r"; }
 if (document.form1.disenchantmagicitem_box.checked){SWD+="Disenchant Magic Item [Level 6]<br>\r"; }
 if (document.form1.earthenramparts06_box.checked){SWD+="Earthen Ramparts [Dragon 366] [Level 6]<br>\r"; }
 if (document.form1.excavation06_box.checked){SWD+="Excavation [Dragon 366] [Level 6]<br>\r"; }
 if (document.form1.leomundssecretchest_box.checked){SWD+="Leomund's Secret Chest [Level 6]<br>\r"; }
 if (document.form1.mordenkainensascent06_box.checked){SWD+="Mordenkainen's Ascent [Dragon 366] [Level 6]<br>\r"; }
 if (document.form1.mordenkainensjoining06_box.checked){SWD+="Mordenkainen's Joining [Dragon 366] [Level 6]<br>\r"; }
 if (document.form1.phantomsteed_box.checked){SWD+="Phantom Steed [Level 6]<br>\r"; }
 if (document.form1.wizardsescape06_box.checked){SWD+="Wizard's Escape [Dragon 366] [Level 6]<br>\r"; }
 if (document.form1.sending_box.checked){SWD+="Sending [Level 6]<br>\r"; }
 if (document.form1.speakwithdead_box.checked){SWD+="Speak With Dead [Level 6]<br>\r"; }
 if (document.form1.linkedportal_box.checked){SWD+="Linked Portal [Level 8]<br>\r"; }
 if (document.form1.raisedead_box.checked){SWD+="Raise Dead [Level 8]<br>\r"; }
 if (document.form1.removeaffliction_box.checked){SWD+="Remove Affliction [Level 8]<br>\r"; }
 if (document.form1.signalofpursuit08_box.checked){SWD+="Signal of Pursuit [Dragon 366] [Level 8]<br>\r"; }
 if (document.form1.tenserslift08_box.checked){SWD+="Tenser's Lift [Dragon 366] [Level 8]<br>\r"; }
 if (document.form1.waterbreathing_box.checked){SWD+="Water Breathing [Level 8]<br>\r"; }
 if (document.form1.wizardssight_box.checked){SWD+="Wizard's Sight [Level 8]<br>\r"; }
 if (document.form1.concealobject10_box.checked){SWD+="Conceal Object [Dragon 366] [Level 10]<br>\r"; }
 if (document.form1.consultmysticsages_box.checked){SWD+="Consult Mystic Sages [Level 10]<br>\r"; }
 if (document.form1.chameleonscloak10_box.checked){SWD+="Chameleon's Cloak [Dragon 366] [Level 10]<br>\r"; }
 if (document.form1.detectobject_box.checked){SWD+="Detect Object [Level 10]<br>\r"; }
 if (document.form1.scribe10_box.checked){SWD+="Scribe [Dragon 366] [Level 10]<br>\r"; }
 if (document.form1.tensersbinding10_box.checked){SWD+="Tenser's Binding [Dragon 366] [Level 10]<br>\r"; }
 if (document.form1.drawmijsinstantsummons_box.checked){SWD+="Drawmij's Instant Summons [Level 12]<br>\r"; }
 if (document.form1.hallucinatorycreature_box.checked){SWD+="Hallucinatory Creature [Level 12]<br>\r"; }
 if (document.form1.passwall_box.checked){SWD+="Passwall [Level 12]<br>\r"; }
 if (document.form1.shadowwalk_box.checked){SWD+="Shadow Walk [Level 12]<br>\r"; }
 if (document.form1.visageoflife12_box.checked){SWD+="Visage of Life [Dragon 366] [Level 12]<br>\r"; }
 if (document.form1.eyeofwarning_box.checked){SWD+="Eye of Warning [Level 14]<br>\r"; }
 if (document.form1.planarsending14_box.checked){SWD+="Planar Sending [Dragon 366] [Level 14]<br>\r"; }
 if (document.form1.viewlocation_box.checked){SWD+="View Location [Level 14]<br>\r"; }
 if (document.form1.voicecatcherveil14_box.checked){SWD+="Voice Catcherveil [Dragon 366] [Level 14]<br>\r"; }
 if (document.form1.consultoracle_box.checked){SWD+="Consult Oracle [Level 16]<br>\r"; }
 if (document.form1.safeguard16_box.checked){SWD+="Safeguard [Dragon 366] [Level 16]<br>\r"; }
 if (document.form1.stasisshell16_box.checked){SWD+="Stasis Shell [Dragon 366] [Level 16]<br>\r"; }
 if (document.form1.memoryseal18_box.checked){SWD+="Memory Seal [Dragon 366] [Level 18]<br>\r"; }
 if (document.form1.planarportal_box.checked){SWD+="Planar Portal [Level 18]<br>\r"; }
 if (document.form1.teleportcatcher18_box.checked){SWD+="Teleport Catcher [Dragon 366] [Level 18]<br>\r"; }
 if (document.form1.viewobject_box.checked){SWD+="View Object [Level 18]<br>\r"; }
 if (document.form1.forbiddance_box.checked){SWD+="Forbiddance [Level 20]<br>\r"; }
 if (document.form1.overlandflight20_box.checked){SWD+="Overland Flight [Dragon 366] [Level 20]<br>\r"; }
 if (document.form1.truesending20_box.checked){SWD+="True Sending [Dragon 366] [Level 20]<br>\r"; }
 if (document.form1.loremastersbargain_box.checked){SWD+="Loremaster's Bargain [Level 22]<br>\r"; }
 if (document.form1.observecreature_box.checked){SWD+="Observe Creature [Level 24]<br>\r"; }
 if (document.form1.deceivesensor26_box.checked){SWD+="Deceive Sensor [Dragon 366] [Level 26]<br>\r"; }
 if (document.form1.voiceoffate_box.checked){SWD+="Voice of Fate [Level 26]<br>\r"; }
 if (document.form1.trueportal_box.checked){SWD+="True Portal [Level 28]<br>\r"; }

  if (document.form1.amanuensis01_box.checked){SWD+="Amanuensis [FRPG][Level 1]<br>\r"; }
  if (document.form1.arcanemark01_box.checked){SWD+="Arcane Mark [FRPG][Level 1]<br>\r"; }
  if (document.form1.simbulsconversion01_box.checked){SWD+="Simbul's Conversion [FRPG][Level 1]<br>\r"; }
  if (document.form1.seekrumor02_box.checked){SWD+="Seek Rumor [FRPG][Level 2]<br>\r"; }
  if (document.form1.darklight04_box.checked){SWD+="Dark Light [FRPG][Level 4]<br>\r"; }
  if (document.form1.featofstrength04_box.checked){SWD+="Feat of Strength [FRPG][Level 4]<br>\r"; }
  if (document.form1.clearthepath06_box.checked){SWD+="Clear the Path [FRPG][Level 6]<br>\r"; }
  if (document.form1.deathlyshroud06_box.checked){SWD+="Deathly Shroud [FRPG][Level 6]<br>\r"; }
  if (document.form1.duplicate06_box.checked){SWD+="Duplicate [FRPG][Level 6]<br>\r"; }
  if (document.form1.tinylanterns06_box.checked){SWD+="Tiny Lanterns [FRPG][Level 6]<br>\r"; }
  if (document.form1.analyzeportal08_box.checked){SWD+="Analyze Portal [FRPG][MotP][Level 8]<br>\r"; }
  if (document.form1.shadowbridge08_box.checked){SWD+="Shadow Bridge [FRPG][Level 8]<br>\r"; }
  if (document.form1.sharehusk08_box.checked){SWD+="Share Husk [FRPG][Level 8]<br>\r"; }
  if (document.form1.status08_box.checked){SWD+="Status [FRPG][Level 8]<br>\r"; }
  if (document.form1.trailblaze10_box.checked){SWD+="Trailblaze [FRPG][Level 10]<br>\r"; }
  if (document.form1.walkcrossroads14_box.checked){SWD+="Walk Crossroads [FRPG][Level 14]<br>\r"; }
  if (document.form1.waterborn14_box.checked){SWD+="Waterborn [FRPG][Level 14]<br>\r"; }
  if (document.form1.timeravager14_box.checked){SWD+="Time Ravager [FRPG][Level 14]<br>\r"; }
  if (document.form1.purifyspellscarred18_box.checked){SWD+="Purify Spellscarred [FRPG][Level 18]<br>\r"; }
  if (document.form1.soulguard20_box.checked){SWD+="Soulguard [FRPG][Level 20]<br>\r"; }
  if (document.form1.divinesight22_box.checked){SWD+="Divine Sight [FRPG][Level 22]<br>\r"; }
  if (document.form1.purgespellplague24_box.checked){SWD+="Purge Spellplague [FRPG][Level 24]<br>\r"; }
  if (document.form1.shiftmote26_box.checked){SWD+="Shift Mote [FRPG][Level 26]<br>\r"; }
  if (document.form1.raiseland30_box.checked){SWD+="Raise Land [FRPG][Level 30]<br>\r"; }

 if (document.form1.feypassage06_box.checked){SWD+="Fey Passage [MotP][Level 6]<br>\r"}
 if (document.form1.shadowpassage08_box.checked){SWD+="Shadow Passage [MotP][Level 8]<br>\r"}
 if (document.form1.demicache12_box.checked){SWD+="Demicache [MotP][Level 12]<br>\r"}
 if (document.form1.elementaltransference12_box.checked){SWD+="Elemental Transference [MotP][Level 12]<br>\r"}
 if (document.form1.ropetrick12_box.checked){SWD+="Rope Trick [MotP][Level 12]<br>\r"}
 if (document.form1.astralguide14_box.checked){SWD+="Astral Guide [MotP][Level 14]<br>\r"}
 if (document.form1.scrambleportal14_box.checked){SWD+="Scramble Portal [MotP][Level 14]<br>\r"}
 if (document.form1.astralsojourn15_box.checked){SWD+="Astral Sojourn [MotP][Level 15]<br>\r"}
 if (document.form1.createteleportationcircle15_box.checked){SWD+="Create Teleportation Circle [MotP][Level 15]<br>\r"}
 if (document.form1.farsending16_box.checked){SWD+="Far Sending [MotP][Level 16]<br>\r"}
 if (document.form1.planeshift18_box.checked){SWD+="Plane Shift [MotP][Level 18]<br>\r"}


  if (document.form1.corpselight02_box.checked){SWD+="Corpse Light [OG][Level 2]<br>\r"}
  if (document.form1.lastsightvision02_box.checked){SWD+="Last Sight Vision [OG][Level 2]<br>\r"}
  if (document.form1.undeadward03_box.checked){SWD+="Undead Ward [OG][Level 3]<br>\r"}
  if (document.form1.skullwatch04_box.checked){SWD+="Skull Watch [OG][Level 4]<br>\r"}
  if (document.form1.undeadservitor06_box.checked){SWD+="Undead Servitor [OG][Level 6]<br>\r"}
  if (document.form1.gravesight08_box.checked){SWD+="Gravesight [OG][Level 8]<br>\r"}
  if (document.form1.corpsegate14_box.checked){SWD+="Corpse Gate [OG][Level 14]<br>\r"}


if (document.form1.createcampsite01_box.checked){SWD+="Create Campsite [PH2][Level 1]<br>\r"}
if (document.form1.gliblimerick01_box.checked){SWD+="Glib Limerick [PH2][Level 1]<br>\r"}
if (document.form1.travelerschant01_box.checked){SWD+="Traveler's Chant [PH2][Level 1]<br>\r"}
if (document.form1.bloom02_box.checked){SWD+="Bloom [PH2][Level 2]<br>\r"}
if (document.form1.pyrotechnics02_box.checked){SWD+="Pyrotechnics [PH2][Level 2]<br>\r"}
if (document.form1.treeshape02_box.checked){SWD+="Tree Shape [PH2][Level 2]<br>\r"}
if (document.form1.affectnormalfire03_box.checked){SWD+="Affect Normal Fire [PH2][Level 3]<br>\r"}
if (document.form1.lullaby03_box.checked){SWD+="Lullaby [PH2][Level 3]<br>\r"}
if (document.form1.snare03_box.checked){SWD+="Snare [PH2][Level 3]<br>\r"}
if (document.form1.animalfriendship05_box.checked){SWD+="Animal Friendship [PH2][Level 5]<br>\r"}
if (document.form1.speakwithnature05_box.checked){SWD+="Speak with Nature [PH2][Level 5]<br>\r"}
if (document.form1.callwildernessguide06_box.checked){SWD+="Call Wilderness Guide [PH2][Level 6]<br>\r"}
if (document.form1.foolsspeech06_box.checked){SWD+="Fool's Speech [PH2][Level 6]<br>\r"}
if (document.form1.ironwood06_box.checked){SWD+="Ironwood [PH2][Level 6]<br>\r"}
if (document.form1.treestride06_box.checked){SWD+="Tree Stride [PH2][Level 6]<br>\r"}
if (document.form1.wyvernwatch06_box.checked){SWD+="Wyvern Watch [PH2][Level 6]<br>\r"}
if (document.form1.songofsustenance08_box.checked){SWD+="Song of Sustenance [PH2][Level 8]<br>\r"}
if (document.form1.tuneofmerriment09_box.checked){SWD+="Tune of Merriment [PH2][Level 9]<br>\r"}
if (document.form1.ariaofrevelation10_box.checked){SWD+="Aria of Revelation [PH2][Level 10]<br>\r"}
if (document.form1.chorusoftruth10_box.checked){SWD+="Chorus of Truth [PH2][Level 10]<br>\r"}
if (document.form1.songofrestfulness10_box.checked){SWD+="Song of Restfulness [PH2][Level 10]<br>\r"}
if (document.form1.reverseportal12_box.checked){SWD+="Reverse Portal [PH2][Level 12]<br>\r"}
if (document.form1.controlweather14_box.checked){SWD+="Control Weather [PH2][Level 14]<br>\r"}


if (document.form1.purifywater01_box.checked){SWD+="Purify Water [AP][Level 1]<br>\r"}
if (document.form1.unseenservant01_box.checked){SWD+="Unseen Servant [AP][Level 1]<br>\r"}
if (document.form1.lowerwater02_box.checked){SWD+="Lower Water [AP][Level 2]<br>\r"}
if (document.form1.foolsgold03_box.checked){SWD+="Fool's Gold [AP][Level 3]<br>\r"}
if (document.form1.beastgrowth04_box.checked){SWD+="Beast Growth [AP][Level 4]<br>\r"}
if (document.form1.calloffriendship04_box.checked){SWD+="Call of Friendship [AP][Level 4]<br>\r"}
if (document.form1.objectreading05_box.checked){SWD+="Object Reading [AP][Level 5]<br>\r"}
if (document.form1.preserveflame06_box.checked){SWD+="Preserve Flame [AP][Level 6]<br>\r"}
if (document.form1.shrink06_box.checked){SWD+="Shrink [AP][Level 6]<br>\r"}
if (document.form1.anthemofunity08_box.checked){SWD+="Anthem of Unity [AP][Level 8]<br>\r"}
if (document.form1.detecttreasure09_box.checked){SWD+="Detect Treasure [AP][Level 9]<br>\r"}
if (document.form1.magicmap09_box.checked){SWD+="Magic Map [AP][Level 9]<br>\r"}
if (document.form1.historyrevealed11_box.checked){SWD+="History Revealed [AP][Level 11]<br>\r"}
if (document.form1.arcanebarrier12_box.checked){SWD+="Arcane Barrier [AP][Level 12]<br>\r"}
if (document.form1.telepathicbond14_box.checked){SWD+="Telepathic Bond [AP][Level 14]<br>\r"}
if (document.form1.whispersoftheedifice14_box.checked){SWD+="Whispers of the Edifice [AP][Level 14]<br>\r"}
if (document.form1.farsight16_box.checked){SWD+="Farsight [AP][Level 16]<br>\r"}
if (document.form1.guardsandwards18_box.checked){SWD+="Guards and Wards [AP][Level 18]<br>\r"}
if (document.form1.imprisonment28_box.checked){SWD+="Imprisonment [AP][Level 28]<br>\r"}


SWD +="</ul>";
}

if ((feat_alchemist)|(feat_alchemistswap))
 {

SWD +="<p>Alchemical Formulas Known:<ul><p>"
if (document.form1.alchemicalsilver_box.checked){SWD+="Alchemical silver<br>";}
if (document.form1.alchemistsacid_box.checked){SWD+="Alchemist's acid<br>";}
if (document.form1.alchemistsfire_box.checked){SWD+="Alchemist's fire<br>";}
if (document.form1.alchemistsfrost_box.checked){SWD+="Alchemist's frost<br>";}
if (document.form1.antivenom_box.checked){SWD+="Antivenom<br>";}
if (document.form1.beastbane_box.checked){SWD+="Beastbane<br>";}
if (document.form1.blastpatch_box.checked){SWD+="Blastpatch<br>";}
if (document.form1.blindingbomb_box.checked){SWD+="Blinding bomb<br>";}
if (document.form1.bloodstingerpoison_box.checked){SWD+="Bloodstinger poison<br>";}
if (document.form1.clearsensepowder_box.checked){SWD+="Clearsense powder<br>";}
if (document.form1.clearwatersolution_box.checked){SWD+="Clearwater solution<br>";}
if (document.form1.dragonfiretar_box.checked){SWD+="Dragonfire tar<br>";}
if (document.form1.ghoststrikeoil_box.checked){SWD+="Ghoststrike oil<br>";}
if (document.form1.goodnighttincture_box.checked){SWD+="Goodnight tincture<br>";}
if (document.form1.herbalpoultice_box.checked){SWD+="Herbal poultice<br>";}
if (document.form1.joltflask_box.checked){SWD+="Jolt flask<br>";}
if (document.form1.lockburstchalk_box.checked){SWD+="Lockburst Chalk<br>";}
if (document.form1.salveofslipperiness_box.checked){SWD+="Salve of slipperiness<br>";}
if (document.form1.slowstepoil_box.checked){SWD+="Slowstep oil<br>";}
if (document.form1.smokestick_box.checked){SWD+="Smokestick<br>";}
if (document.form1.sovereignglue_box.checked){SWD+="Sovereign glue<br>";}
if (document.form1.tanglefootbag_box.checked){SWD+="Tanglefoot bag<br>";}
if (document.form1.thunderstone_box.checked){SWD+="Thunderstone<br>";}
if (document.form1.trackingdust_box.checked){SWD+="Tracking dust<br>";}
if (document.form1.universalsolvent_box.checked){SWD+="Universal solvent<br>";}
SWD +="</ul><p>";
 }

SWD +="<p>Skills:<ul><table>"

SWD+="<tr><td><font face=\"Arial\">Acrobatics:</td><td><font face=\"Arial\">"+acrobatics_string_1+"</td><td><font face=\"Arial\">"+acrobatics_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Arcana:</td><td><font face=\"Arial\">"+arcana_string_1+"</td><td><font face=\"Arial\">"+arcana_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Athletics:</td><td><font face=\"Arial\">"+athletics_string_1+"</td><td><font face=\"Arial\">"+athletics_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Bluff:</td><td><font face=\"Arial\">"+bluff_string_1+"</td><td><font face=\"Arial\">"+bluff_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Diplomacy:</td><td><font face=\"Arial\">"+diplomacy_string_1+"</td><td><font face=\"Arial\">"+diplomacy_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Dungeoneering:</td><td><font face=\"Arial\">"+dungeoneering_string_1+"</td><td><font face=\"Arial\">"+dungeoneering_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Endurance:</td><td><font face=\"Arial\">"+endurance_string_1+"</td><td><font face=\"Arial\">"+endurance_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Heal:</td><td><font face=\"Arial\">"+heal_string_1+"</td><td><font face=\"Arial\">"+heal_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">History:</td><td><font face=\"Arial\">"+history_string_1+"</td><td><font face=\"Arial\">"+history_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Insight:</td><td><font face=\"Arial\">"+insight_string_1+"</td><td><font face=\"Arial\">"+insight_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Intimidate:</td><td><font face=\"Arial\">"+intimidate_string_1+"</td><td><font face=\"Arial\">"+intimidate_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Nature:</td><td><font face=\"Arial\">"+nature_string_1+"</td><td><font face=\"Arial\">"+nature_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Perception:</td><td><font face=\"Arial\">"+perception_string_1+"</td><td><font face=\"Arial\">"+perception_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Religion:</td><td><font face=\"Arial\">"+religion_string_1+"</td><td><font face=\"Arial\">"+religion_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Stealth:</td><td><font face=\"Arial\">"+stealth_string_1+"</td><td><font face=\"Arial\">"+stealth_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Streetwise:</td><td><font face=\"Arial\">"+streetwise_string_1+"</td><td><font face=\"Arial\">"+streetwise_string_2+"</td></tr>\r"; 
SWD+="<tr><td><font face=\"Arial\">Thievery:</td><td><font face=\"Arial\">"+thievery_string_1+"</td><td><font face=\"Arial\">"+thievery_string_2+"</td></tr>\r"; 
SWD +="</table></ul><p>Feats:<ul><table>"


if (multi_cleric_initiateofthefaith){SWD+="<tr><td><font face=\"Arial\">Initiate of the Faith [multiclass cleric]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_fighter_studentofthesword){SWD+="<tr><td><font face=\"Arial\">Student of the Sword [multiclass fighter]</td><td><font face=\"Arial\"></td></tr>\r"} 
if (multi_paladin_soldierofthefaith){SWD+="<tr><td><font face=\"Arial\">Soldier of the Faith [multiclass paladin]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_ranger_warriorofthewild){SWD+="<tr><td><font face=\"Arial\">Warrior of the Wild [multiclass ranger]</td><td><font face=\"Arial\"></td></tr>\r"} 
if (multi_rogue_sneakofshadows){SWD+="<tr><td><font face=\"Arial\">Sneak of Shadows [multiclass rogue]</td><td><font face=\"Arial\"></td></tr>\r"} 
if (multi_warlock_pactinitiate){SWD+="<tr><td><font face=\"Arial\">Pact Initiate [multiclass warlock]</td><td><font face=\"Arial\"></td></tr>\r"} 
if (multi_warlord_studentofbattle){SWD+="<tr><td><font face=\"Arial\">Student of Battle [multiclass warlord]</td><td><font face=\"Arial\"></td></tr>\r"} 
if (multi_wizard_arcaneinitiate){SWD+="<tr><td><font face=\"Arial\">Arcane Initiate [multiclass wizard]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_swordmage_bladeinitiate){SWD+="<tr><td><font face=\"Arial\">Blade Initiate [multiclass swordmage][FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_fighter_battleawareness){SWD+="<tr><td><font face=\"Arial\">Battle Awareness [multiclass fighter][MP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_warlord_inspiringleader){SWD+="<tr><td><font face=\"Arial\">Inspiring Leader [multiclass warlord][MP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_rogue_ruthlessefficiency){SWD+="<tr><td><font face=\"Arial\">Ruthless Efficiency [multiclass rogue][MP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_rogue_slydodge){SWD+="<tr><td><font face=\"Arial\">Sly Dodge [multiclass rogue][MP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_warlord_tacticalleader){SWD+="<tr><td><font face=\"Arial\">Tactical Leader [multiclass warlord][MP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_ranger_twobladewarrior){SWD+="<tr><td><font face=\"Arial\">Two-Blade Warrior [multiclass ranger][MP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_invoker_acolyteofdivinesecrets){SWD+="<tr><td><font face=\"Arial\">Acolyte of Divine Secrets [multiclass invoker][PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_sorcerer_arcaneprodigy){SWD+="<tr><td><font face=\"Arial\">Arcane Prodigy [multiclass sorcerer][PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_bard_bardicdilettante){SWD+="<tr><td><font face=\"Arial\">Bardic Dilettante [multiclass bard][PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_barbarian_berserkersfury){SWD+="<tr><td><font face=\"Arial\">Berserker's Fury [multiclass barbarian][PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_warden_defenderofthewild){SWD+="<tr><td><font face=\"Arial\">Defender of the Wild [multiclass warden][PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_avenger_discipleofdivinewrath){SWD+="<tr><td><font face=\"Arial\">Disciple of Divine Wrath [multiclass avenger][PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_druid_initiateoftheoldfaith){SWD+="<tr><td><font face=\"Arial\">Initiate of the Old Faith [multiclass druid][PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_shaman_spirittalker){SWD+="<tr><td><font face=\"Arial\">Spirit Talker [multiclass shaman][PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_bard_bardicritualist){SWD+="<tr><td><font face=\"Arial\">Bardic Ritualist [multiclass bard][allows Ritual Casting][AP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_swordmage_heartoftheblade){SWD+="<tr><td><font face=\"Arial\">Heart of the Blade [multiclass swordmage][AP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_wizard_learnedspellcaster){SWD+="<tr><td><font face=\"Arial\">Learned Spellcaster [multiclass wizard][allows Ritual Casting][AP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (multi_sorcerer_soulofsorcery)
 {
  stringy="Resist 5 ";
  if (document.form1.soul_of_sorcery_list.selectedIndex==0){stringy+="acid";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==1){stringy+="cold";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==2){stringy+="fire";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==3){stringy+="force";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==4){stringy+="lightning";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==5){stringy+="necrotic";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==6){stringy+="poison";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==7){stringy+="psychic";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==8){stringy+="radiant";}
  if (document.form1.soul_of_sorcery_list.selectedIndex==9){stringy+="thunder";}
  SWD+="<tr><td><font face=\"Arial\">Soul of Sorcery [multiclass sorcerer]["+stringy+"][AP]</td><td><font face=\"Arial\"></td></tr>\r"
 }
if (multi_warlock_studentofmalediction){SWD+="<tr><td><font face=\"Arial\">Student of Malediction [multiclass warlock]</td><td><font face=\"Arial\"></td></tr>\r"} 

if (multi_spellscarred){SWD+="<tr><td><font face=\"Arial\">Spellscarred [multiclass effect]</td><td><font face=\"Arial\"></td></tr>\r"}

if (feat_actionsurge){SWD+="<tr><td><font face=\"Arial\">Action Surge</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_agilehunter){SWD+="<tr><td><font face=\"Arial\">Agile Hunter</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_alertness){SWD+="<tr><td><font face=\"Arial\">Alertness</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorofbahamut){SWD+="<tr><td><font face=\"Arial\">Armor of Bahamut</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorproficiencychainmail){SWD+="<tr><td><font face=\"Arial\">Armor Proficiency -- Chainmail</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorproficiencyleather){SWD+="<tr><td><font face=\"Arial\">Armor Proficiency -- Leather</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorproficiencyhide){SWD+="<tr><td><font face=\"Arial\">Armor Proficiency -- Hide</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorproficiencyplate){SWD+="<tr><td><font face=\"Arial\">Armor Proficiency -- Plate</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorproficiencyscale){SWD+="<tr><td><font face=\"Arial\">Armor Proficiency -- Scale</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_astralfire){SWD+="<tr><td><font face=\"Arial\">Astral Fire</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_avandrasrescue){SWD+="<tr><td><font face=\"Arial\">Avandra's Rescue</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_backstabber)
 {
  stringy=""; 
  if (!class_rogue)
   {
    if (total_levels<=10){stringy=" [+2d8 at this level]"; }
    else if (total_levels<=20){stringy=" [+3d8 at this level]"; }
    else {stringy=" [+5d8 at this level]"; }
   }
  SWD+="<tr><td><font face=\"Arial\">Backstabber"+stringy+"</td><td><font face=\"Arial\"></td></tr>\r"
 }
if (feat_bladeopportunist){SWD+="<tr><td><font face=\"Arial\">Blade Opportunist</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_burningblizzard){SWD+="<tr><td><font face=\"Arial\">Burning Blizzard</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_combatreflexes){SWD+="<tr><td><font face=\"Arial\">Combat Reflexes</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_corellonsgrace){SWD+="<tr><td><font face=\"Arial\">Corellon's Grace</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_darkfury){SWD+="<tr><td><font face=\"Arial\">Dark Fury</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_defensivemobility){SWD+="<tr><td><font face=\"Arial\">Defensive Mobility</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_distractingshield){SWD+="<tr><td><font face=\"Arial\">Distracting Shield</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_dodgegiants){SWD+="<tr><td><font face=\"Arial\">Dodge Giants</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_dragonbornfrenzy){SWD+="<tr><td><font face=\"Arial\">Dragonborn Frenzy</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_dragonbornsenses){SWD+="<tr><td><font face=\"Arial\">Dragonborn Senses</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_durable){SWD+="<tr><td><font face=\"Arial\">Durable</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_dwarvenweapontraining){SWD+="<tr><td><font face=\"Arial\">Dwarven Weapon Training</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_eladrinsoldier){SWD+="<tr><td><font face=\"Arial\">Eladrin Soldier</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_elvenprecision){SWD+="<tr><td><font face=\"Arial\">Elven Precision</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_enlargeddragonbreath){SWD+="<tr><td><font face=\"Arial\">Enlarged Dragonbreath</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_escapeartist){SWD+="<tr><td><font face=\"Arial\">Escape Artist</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_expandedspellbook){SWD+="<tr><td><font face=\"Arial\">Expanded Spellbook</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_farshot){SWD+="<tr><td><font face=\"Arial\">Farshot</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_farthrow){SWD+="<tr><td><font face=\"Arial\">Far Throw</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_fastrunner){SWD+="<tr><td><font face=\"Arial\">Fast Runner</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_ferociousrebuke){SWD+="<tr><td><font face=\"Arial\">Ferocious Rebuke</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_groupinsight){SWD+="<tr><td><font face=\"Arial\">Group Insight</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_halflingagility){SWD+="<tr><td><font face=\"Arial\">Halfling Agility</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_harmonyoferathis){SWD+="<tr><td><font face=\"Arial\">Harmony of Erathis</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_healinghands){SWD+="<tr><td><font face=\"Arial\">Healing Hands</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_hellfireblood){SWD+="<tr><td><font face=\"Arial\">Hellfire Blood</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_humanperseverance){SWD+="<tr><td><font face=\"Arial\">Human Perseverance</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_improveddarkonesblessing){SWD+="<tr><td><font face=\"Arial\">Improved Dark One's Blessing</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_improvedfateofthevoid){SWD+="<tr><td><font face=\"Arial\">Improved Fate of the Void</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_improvedinitiative){SWD+="<tr><td><font face=\"Arial\">Improved Initiative</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_improvedmistystep){SWD+="<tr><td><font face=\"Arial\">Improved Misty Step</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_inspiredrecovery){SWD+="<tr><td><font face=\"Arial\">Inspired Recovery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_iounspoise){SWD+="<tr><td><font face=\"Arial\">Ioun's Poise</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_jackofalltrades){SWD+="<tr><td><font face=\"Arial\">Jack of all Trades</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_kordsfavor){SWD+="<tr><td><font face=\"Arial\">Kord's Favor</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_lethalhunter){SWD+="<tr><td><font face=\"Arial\">Lethal Hunter</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_lightstep){SWD+="<tr><td><font face=\"Arial\">Light Step</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_linguist>0){SWD+="<tr><td><font face=\"Arial\">Linguist x"+feat_linguist+"</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_longjumper){SWD+="<tr><td><font face=\"Arial\">Long Jumper</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_longinthecrowd){SWD+="<tr><td><font face=\"Arial\">Lost in the Crowd</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_melorastide){SWD+="<tr><td><font face=\"Arial\">Melora's Tide</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_moradinsresolve){SWD+="<tr><td><font face=\"Arial\">Moradin's Resolve</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_mountedcombat){SWD+="<tr><td><font face=\"Arial\">Mounted Combat</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_nimbleblade){SWD+="<tr><td><font face=\"Arial\">Nimble Blade</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_pelorsradiance){SWD+="<tr><td><font face=\"Arial\">Pelor's Radiance</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_potentchallenge){SWD+="<tr><td><font face=\"Arial\">Potent Challenge</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_powerattack){SWD+="<tr><td><font face=\"Arial\">Power Attack</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_powerfulcharge){SWD+="<tr><td><font face=\"Arial\">Powerful Charge</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_precisehunter){SWD+="<tr><td><font face=\"Arial\">Precise Hunter</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_presstheadvantage){SWD+="<tr><td><font face=\"Arial\">Press the Advantage</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_quickdraw){SWD+="<tr><td><font face=\"Arial\">Quickdraw</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_ragingstorm){SWD+="<tr><td><font face=\"Arial\">Raging Storm</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_ravenqueensblessing){SWD+="<tr><td><font face=\"Arial\">Raven Queen's Blessing</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_ritualcaster){SWD+="<tr><td><font face=\"Arial\">Ritual Caster</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_sehaninesreversal){SWD+="<tr><td><font face=\"Arial\">Sehanine's Reversal</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_angharradhsfavor){SWD+="<tr><td><font face=\"Arial\">Angharradh's Favor [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_avoweddragonfoe){SWD+="<tr><td><font face=\"Arial\">Avowed Dragon Foe [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_berronarssalve){SWD+="<tr><td><font face=\"Arial\">Berronar's Salve [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_blessingofsilvanus){SWD+="<tr><td><font face=\"Arial\">Blessing of Silvanus [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_brokenshackles){SWD+="<tr><td><font face=\"Arial\">Broken Shackles [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_chaunteasblessing){SWD+="<tr><td><font face=\"Arial\">Chauntea's Blessing [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_clutchofdarkness){SWD+="<tr><td><font face=\"Arial\">Clutch of Darkness [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_elementalassault){SWD+="<tr><td><font face=\"Arial\">Elemental Assault [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_escalatingassault){SWD+="<tr><td><font face=\"Arial\">Escalating Assault [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_extramanifestationearthsoul){SWD+="<tr><td><font face=\"Arial\">Extra Manifestation: Earthsoul [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_extramanifestationfiresoul){SWD+="<tr><td><font face=\"Arial\">Extra Manifestation: Firesoul [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_extramanifestationstormsoul){SWD+="<tr><td><font face=\"Arial\">Extra Manifestation: Stormsoul [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_extramanifestationwatersoul){SWD+="<tr><td><font face=\"Arial\">Extra Manifestation: Watersoul [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_extramanifestationwindsoul){SWD+="<tr><td><font face=\"Arial\">Extra Manifestation: Windsoul [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_eyesofselune){SWD+="<tr><td><font face=\"Arial\">Eyes of Selune [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_fleetnessofmielikki){SWD+="<tr><td><font face=\"Arial\">Fleetness of Mielikki [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_ghostwiseheritage){SWD+="<tr><td><font face=\"Arial\">Ghostwise Heritage [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_glittergoldsgambit){SWD+="<tr><td><font face=\"Arial\">Glittergold's Gambit [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_golddwarfpride){SWD+="<tr><td><font face=\"Arial\">Gold Dwarf Pride [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_gondscraft){SWD+="<tr><td><font face=\"Arial\">Gond's Craft [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_ilmatersmartyrdom){SWD+="<tr><td><font face=\"Arial\">Ilmater's Martyrdom [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_improvedswordbond){SWD+="<tr><td><font face=\"Arial\">Improved Swordbond [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_intelligentblademaster){SWD+="<tr><td><font face=\"Arial\">Intelligent Blademaster [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_kelemvorsjudgment){SWD+="<tr><td><font face=\"Arial\">Kelemvor's Judgment [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_manifestresistance){SWD+="<tr><td><font face=\"Arial\">Manifest Resistance [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_improvedrazorswarm){SWD+="<tr><td><font face=\"Arial\">Improved Razor Swarm [MotP]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_moonelfresilience){SWD+="<tr><td><font face=\"Arial\">Moon Elf Resilience [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_oghmasrecall){SWD+="<tr><td><font face=\"Arial\">Oghma's Recall [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_powerofamaunator){SWD+="<tr><td><font face=\"Arial\">Power of Amaunator [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_retributiveshield){SWD+="<tr><td><font face=\"Arial\">Retributive Shield [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_righteousrageoftempus){SWD+="<tr><td><font face=\"Arial\">Righteous Rage of Tempus [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_ruthlesshunter){SWD+="<tr><td><font face=\"Arial\">Ruthless Hunter [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_scionofthegods){SWD+="<tr><td><font face=\"Arial\">Scion of the Gods [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_sheelaperyroylsgift){SWD+="<tr><td><font face=\"Arial\">Sheela Peryroyl's Gift [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_shieldofshadows){SWD+="<tr><td><font face=\"Arial\">Shield of Shadows [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_shieldthefallen){SWD+="<tr><td><font face=\"Arial\">Shield the Fallen [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_stubbornsurvivor){SWD+="<tr><td><font face=\"Arial\">Stubborn Survivor [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_studentofswordmagic){SWD+="<tr><td><font face=\"Arial\">Student of Swordmagic [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_sunelfgrace){SWD+="<tr><td><font face=\"Arial\">Sun Elf Grace [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_sunestouch){SWD+="<tr><td><font face=\"Arial\">Sune's Touch [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_tormsjustice){SWD+="<tr><td><font face=\"Arial\">Torm's Justice [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_tymorascoin){SWD+="<tr><td><font face=\"Arial\">Tymora's Coin [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_versatileresistance){SWD+="<tr><td><font face=\"Arial\">Versatile Resistance [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_waukeenssilvertongue){SWD+="<tr><td><font face=\"Arial\">Waukeen's Silver Tongue [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_alchemist){SWD+="<tr><td><font face=\"Arial\">Alchemist [AV]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_alchemistswap){SWD+="<tr><td><font face=\"Arial\">Alchemist [AV][traded away Ritual Caster]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_wildelfluck){SWD+="<tr><td><font face=\"Arial\">Wild Elf Luck [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_woodelfagility){SWD+="<tr><td><font face=\"Arial\">Wood Elf Agility [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_demonwebspiral){SWD+="<tr><td><font face=\"Arial\">Demonweb Spiral [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_distantswordbond){SWD+="<tr><td><font face=\"Arial\">Distant Swordbond [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_doubleaegis){SWD+="<tr><td><font face=\"Arial\">Double Aegis [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_improveddarkspiralaura){SWD+="<tr><td><font face=\"Arial\">Improved Dark Spiral Aura [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_masteroffireanddarkness){SWD+="<tr><td><font face=\"Arial\">Master of Fire and Darkness [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_mercilesskiller){SWD+="<tr><td><font face=\"Arial\">Merciless Killer [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_moongleamoath){SWD+="<tr><td><font face=\"Arial\">Moongleam Oath [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_shockingflame){SWD+="<tr><td><font face=\"Arial\">Shocking Flame [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_stoneguard){SWD+="<tr><td><font face=\"Arial\">Stoneguard [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_stormrider){SWD+="<tr><td><font face=\"Arial\">Storm Rider [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_venemousheritage){SWD+="<tr><td><font face=\"Arial\">Venemous Heritage [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_warwizardry){SWD+="<tr><td><font face=\"Arial\">War Wizardry [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_agileopportunist){SWD+="<tr><td><font face=\"Arial\">Agile Opportunist [PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_paragondefenses){SWD+="<tr><td><font face=\"Arial\">Paragon Defenses [PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_quickrecovery){SWD+="<tr><td><font face=\"Arial\">Quick Recovery [PH2]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_reservemaneuver){SWD+="<tr><td><font face=\"Arial\">Reserve Maneuver [PH2]</td><td><font face=\"Arial\">Choice:</td></tr>\r"}
if (feat_doublemanifestation){SWD+="<tr><td><font face=\"Arial\">Double Manifestation [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_totalaegis){SWD+="<tr><td><font face=\"Arial\">Total Aegis [FRPG]</td><td><font face=\"Arial\"></td></tr>\r"}



if (feat_aggressiveassault){SWD+="<tr><td><font face=\"Arial\">Aggressive Assault [MP]</td><td></td></tr>\r"}
if (feat_anklecutter){SWD+="<tr><td><font face=\"Arial\">Ankle Cutter [MP]</td><td></td></tr>\r"}
if (feat_beastguidance){SWD+="<tr><td><font face=\"Arial\">Beast Guidance [MP]</td><td></td></tr>\r"}
if (feat_beastprotector){SWD+="<tr><td><font face=\"Arial\">Beast Protector [MP]</td><td></td></tr>\r"}
if (feat_beasttrainingathletics){SWD+="<tr><td><font face=\"Arial\">Beast Training -- Athletics [MP]</td><td></td></tr>\r"}
if (feat_beasttrainingendurance){SWD+="<tr><td><font face=\"Arial\">Beast Training -- Endurance [MP]</td><td></td></tr>\r"}
if (feat_beasttrainingperception){SWD+="<tr><td><font face=\"Arial\">Beast Training -- Perception [MP]</td><td></td></tr>\r"}
if (feat_beasttrainingstealth){SWD+="<tr><td><font face=\"Arial\">Beast Training -- Stealth [MP]</td><td></td></tr>\r"}
if (feat_bloodiedinvigoration){SWD+="<tr><td><font face=\"Arial\">Bloodied Invigoration [MP]</td><td></td></tr>\r"}
if (feat_bolsteringinspiration){SWD+="<tr><td><font face=\"Arial\">Bolstering Inspiration [MP]</td><td></td></tr>\r"}
if (feat_bracingbreath){SWD+="<tr><td><font face=\"Arial\">Bracing Breath [MP]</td><td></td></tr>\r"}
if (feat_bravuraspirit){SWD+="<tr><td><font face=\"Arial\">Bravura Spirit [MP]</td><td></td></tr>\r"}
if (feat_breathresistantbeast){SWD+="<tr><td><font face=\"Arial\">Breath Resistant Beast [MP]</td><td></td></tr>\r"}
if (feat_brutalaccuracy){SWD+="<tr><td><font face=\"Arial\">Brutal Accuracy [MP]</td><td></td></tr>\r"}
if (feat_brutalteamwork){SWD+="<tr><td><font face=\"Arial\">Brutal Teamwork [MP]</td><td></td></tr>\r"}
if (feat_brutalwound){SWD+="<tr><td><font face=\"Arial\">Brutal Wound [MP]</td><td></td></tr>\r"}
if (feat_camouflage){SWD+="<tr><td><font face=\"Arial\">Camouflage [MP]</td><td></td></tr>\r"}
if (feat_commandthedarkness){SWD+="<tr><td><font face=\"Arial\">Command the Darkness [MP]</td><td></td></tr>\r"}
if (feat_coordinatedopportunity){SWD+="<tr><td><font face=\"Arial\">Coordinated Opportunity [MP]</td><td></td></tr>\r"}
if (feat_cunningambusher){SWD+="<tr><td><font face=\"Arial\">Cunning Ambusher [MP]</td><td></td></tr>\r"}
if (feat_darkfiretargeting){SWD+="<tr><td><font face=\"Arial\">Darkfire Targeting [MP]</td><td></td></tr>\r"}
if (feat_deepgash){SWD+="<tr><td><font face=\"Arial\">Deep Gash [MP]</td><td></td></tr>\r"}
if (feat_defensiveresilience){SWD+="<tr><td><font face=\"Arial\">Defensive Resilience [MP]</td><td></td></tr>\r"}
if (feat_devotedchallenge){SWD+="<tr><td><font face=\"Arial\">Devoted Challenge [MP]</td><td></td></tr>\r"}
if (feat_dirtyfighting){SWD+="<tr><td><font face=\"Arial\">Dirty Fighting [MP]</td><td></td></tr>\r"}
if (feat_draggingflail){SWD+="<tr><td><font face=\"Arial\">Dragging Flail [MP]</td><td></td></tr>\r"}
if (feat_drowbeastmastery){SWD+="<tr><td><font face=\"Arial\">Drow Beast Mastery [MP]</td><td></td></tr>\r"}
if (feat_dwarfstoneblood){SWD+="<tr><td><font face=\"Arial\">Dwarf Stoneblood [MP]</td><td></td></tr>\r"}
if (feat_dwarftrapsmith){SWD+="<tr><td><font face=\"Arial\">Dwarf trapsmith [MP]</td><td></td></tr>\r"}
if (feat_elvenbeastmastery){SWD+="<tr><td><font face=\"Arial\">Elven Beastmastery [MP]</td><td></td></tr>\r"}
if (feat_experttracker){SWD+="<tr><td><font face=\"Arial\">Expert Tracker [MP]</td><td></td></tr>\r"}
if (feat_feyblades){SWD+="<tr><td><font face=\"Arial\">Fey Blades [MP]</td><td></td></tr>\r"}
if (feat_feycommand){SWD+="<tr><td><font face=\"Arial\">Fey Command [MP]</td><td></td></tr>\r"}
if (feat_feyborncompanion){SWD+="<tr><td><font face=\"Arial\">Feyborn Companion [MP]</td><td></td></tr>\r"}
if (feat_fiendishcompanion){SWD+="<tr><td><font face=\"Arial\">Fiendish Companion [MP]</td><td></td></tr>\r"}
if (feat_groupassault){SWD+="<tr><td><font face=\"Arial\">Group Assault [MP]</td><td></td></tr>\r"}
if (feat_groupquarry){SWD+="<tr><td><font face=\"Arial\">Group Quarry [MP]</td><td></td></tr>\r"}
if (feat_grouprattling){SWD+="<tr><td><font face=\"Arial\">Group Rattling [MP]</td><td></td></tr>\r"}
if (feat_halflingstalwart){SWD+="<tr><td><font face=\"Arial\">Halfling Stalwart [MP]</td><td></td></tr>\r"}
if (feat_humanbeastmastery){SWD+="<tr><td><font face=\"Arial\">Human Beastmastery [MP]</td><td></td></tr>\r"}
if (feat_hunterofwindandwave){SWD+="<tr><td><font face=\"Arial\">Hunter of Wind and Wave [MP]</td><td></td></tr>\r"}
if (feat_huntersaim){SWD+="<tr><td><font face=\"Arial\">Hunter's Aim [MP]</td><td></td></tr>\r"}
if (feat_improvedbravura){SWD+="<tr><td><font face=\"Arial\">Improved Bravura [MP]</td><td></td></tr>\r"}
if (feat_improvedinspiration){SWD+="<tr><td><font face=\"Arial\">Improved Inspiration [MP]</td><td></td></tr>\r"}
if (feat_improvedinspiringword){SWD+="<tr><td><font face=\"Arial\">Improved Inspiring Word [MP]</td><td></td></tr>\r"}
if (feat_improvedresources){SWD+="<tr><td><font face=\"Arial\">Improved Resources [MP]</td><td></td></tr>\r"}
if (feat_improvedtactics){SWD+="<tr><td><font face=\"Arial\">Improved Tactics [MP]</td><td></td></tr>\r"}
if (feat_improvedvigor){SWD+="<tr><td><font face=\"Arial\">Improved Vigor [MP]</td><td></td></tr>\r"}
if (feat_inspireddefense){SWD+="<tr><td><font face=\"Arial\">Inspired Defense [MP]</td><td></td></tr>\r"}
if (feat_inspiredtactics){SWD+="<tr><td><font face=\"Arial\">Inspired Tactics [MP]</td><td></td></tr>\r"}
if (feat_intothefraymp){SWD+="<tr><td><font face=\"Arial\">Into the Fray [MP]</td><td></td></tr>\r"}
if (feat_keeperofstorm){SWD+="<tr><td><font face=\"Arial\">Keeper of Storm [MP]</td><td></td></tr>\r"}
if (feat_leadingfire){SWD+="<tr><td><font face=\"Arial\">Leading Fire [MP]</td><td></td></tr>\r"}
if (feat_lendmight){SWD+="<tr><td><font face=\"Arial\">Lend Might [MP]</td><td></td></tr>\r"}
if (feat_lingeringwrath){SWD+="<tr><td><font face=\"Arial\">Lingering Wrath [MP]</td><td></td></tr>\r"}
if (feat_longswordfinesse){SWD+="<tr><td><font face=\"Arial\">Longsword Finesse [MP]</td><td></td></tr>\r"}
if (feat_luckyskirmisher){SWD+="<tr><td><font face=\"Arial\">Lucky Skirmisher [MP]</td><td></td></tr>\r"}
if (feat_martialalacrity){SWD+="<tr><td><font face=\"Arial\">Martial Alacrity [MP]</td><td></td></tr>\r"}
if (feat_martialfreedom){SWD+="<tr><td><font face=\"Arial\">Martial Freedom [MP]</td><td></td></tr>\r"}
if (feat_masterofrumblingearth){SWD+="<tr><td><font face=\"Arial\">Master of Rumbling Earth [MP]</td><td></td></tr>\r"}
if (feat_nimblecompanion){SWD+="<tr><td><font face=\"Arial\">Nimble Companion [MP]</td><td></td></tr>\r"}
if (feat_offensiveresilience){SWD+="<tr><td><font face=\"Arial\">Offensive Resilience [MP]</td><td></td></tr>\r"}
if (feat_opportunisticaccuracy){SWD+="<tr><td><font face=\"Arial\">Opportunistic Accuracy [MP]</td><td></td></tr>\r"}
if (feat_polearmmomentum){SWD+="<tr><td><font face=\"Arial\">Polearm Momentum [MP]</td><td></td></tr>\r"}
if (feat_predatoryaction){SWD+="<tr><td><font face=\"Arial\">Predatory Action [MP]</td><td></td></tr>\r"}
if (feat_primestrike){SWD+="<tr><td><font face=\"Arial\">Prime Strike [MP]</td><td></td></tr>\r"}
if (feat_rashsneakattack){SWD+="<tr><td><font face=\"Arial\">Rash Sneak Attack [MP]</td><td></td></tr>\r"}
if (feat_rattlingwrath){SWD+="<tr><td><font face=\"Arial\">Rattling Wrath [MP]</td><td></td></tr>\r"}
if (feat_reapingblade){SWD+="<tr><td><font face=\"Arial\">Reaping Blade [MP]</td><td></td></tr>\r"}
if (feat_recklessscramble){SWD+="<tr><td><font face=\"Arial\">Reckless Scramble [MP]</td><td></td></tr>\r"}
if (feat_ruthlessinjury){SWD+="<tr><td><font face=\"Arial\">Ruthless Injury [MP]</td><td></td></tr>\r"}
if (feat_savinginspiration){SWD+="<tr><td><font face=\"Arial\">Saving Inspiration [MP]</td><td></td></tr>\r"}
if (feat_secureencampment){SWD+="<tr><td><font face=\"Arial\">Secure Encampment [MP]</td><td></td></tr>\r"}
if (feat_shielddefense){SWD+="<tr><td><font face=\"Arial\">Shield Defense [MP]</td><td></td></tr>\r"}
if (feat_sidewaysdefense){SWD+="<tr><td><font face=\"Arial\">Sideways Defense [MP]</td><td></td></tr>\r"}
if (feat_slayingaction){SWD+="<tr><td><font face=\"Arial\">Slaying Action [MP]</td><td></td></tr>\r"}
if (feat_sneakyaccuracy){SWD+="<tr><td><font face=\"Arial\">Sneaky Acuracy [MP]</td><td></td></tr>\r"}
if (feat_speedyresponse){SWD+="<tr><td><font face=\"Arial\">Speedy Response [MP]</td><td></td></tr>\r"}
if (feat_streetthug){SWD+="<tr><td><font face=\"Arial\">Street Thug [MP]</td><td></td></tr>\r"}
if (feat_surprisingcharge){SWD+="<tr><td><font face=\"Arial\">Surprising Charge [MP]</td><td></td></tr>\r"}
if (feat_tacticalinspiration){SWD+="<tr><td><font face=\"Arial\">Tactical Inspiration [MP]</td><td></td></tr>\r"}
if (feat_takemeasure){SWD+="<tr><td><font face=\"Arial\">Take Measure [MP]</td><td></td></tr>\r"}
if (feat_thunderhammer){SWD+="<tr><td><font face=\"Arial\">Thunder Hammer [MP]</td><td></td></tr>\r"}
if (feat_thundertuskcompanion){SWD+="<tr><td><font face=\"Arial\">Thundertusk Companion [MP]</td><td></td></tr>\r"}
if (feat_trapsense){SWD+="<tr><td><font face=\"Arial\">Trap Sense [MP]</td><td></td></tr>\r"}
if (feat_tunnelstalker){SWD+="<tr><td><font face=\"Arial\">Tunnel Stalker [MP]</td><td></td></tr>\r"}
if (feat_twofistedshooter){SWD+="<tr><td><font face=\"Arial\">Two Fisted Shooter [MP]</td><td></td></tr>\r"}
if (feat_unbalancingwrath){SWD+="<tr><td><font face=\"Arial\">Unbalancing Wrath [MP]</td><td></td></tr>\r"}
if (feat_vengefulbeast){SWD+="<tr><td><font face=\"Arial\">Vengeful Beast [MP]</td><td></td></tr>\r"}
if (feat_victorsconfidence){SWD+="<tr><td><font face=\"Arial\">Victor's Confidence [MP]</td><td></td></tr>\r"}
if (feat_wielderofpiercingflame){SWD+="<tr><td><font face=\"Arial\">Wielder of Piercing Flame [MP]</td><td></td></tr>\r"}


if (feat_advantageofcunning){SWD+="<tr><td><font face=\"Arial\">Advantage of Cunning [PH2]</td><td></td></tr>\r"}
if (feat_angerunleashed){SWD+="<tr><td><font face=\"Arial\">Anger Unleashed [PH2]</td><td></td></tr>\r"}
if (feat_arcanespellfury){SWD+="<tr><td><font face=\"Arial\">Arcane Spell Fury [PH2]</td><td></td></tr>\r"}
if (feat_auspiciouslineage){SWD+="<tr><td><font face=\"Arial\">Auspicious Lineage [PH2]</td><td></td></tr>\r"}
if (feat_bardicknowledge){SWD+="<tr><td><font face=\"Arial\">Bardic Knowledge [PH2]</td><td></td></tr>\r"}
if (feat_blurringclaws){SWD+="<tr><td><font face=\"Arial\">Blurring Claws [PH2]</td><td></td></tr>\r"}
if (feat_combatmedic){SWD+="<tr><td><font face=\"Arial\">Combat Medic [PH2]</td><td></td></tr>\r"}
if (feat_coordinatedexplosion){SWD+="<tr><td><font face=\"Arial\">Coordinated Explosion [PH2]</td><td></td></tr>\r"}
if (feat_crushingearthstrength){SWD+="<tr><td><font face=\"Arial\">Crushing Earthstrength [PH2]</td><td></td></tr>\r"}
if (feat_deadlyrage){SWD+="<tr><td><font face=\"Arial\">Deadly Rage [PH2]</td><td></td></tr>\r"}
if (feat_disciplinedwildsoul){SWD+="<tr><td><font face=\"Arial\">Disciplined Wild Soul [PH2]</td><td></td></tr>\r"}
if (feat_distantadvantage){SWD+="<tr><td><font face=\"Arial\">Distant Advantage [PH2]</td><td></td></tr>\r"}
if (feat_echoesofthunder){SWD+="<tr><td><font face=\"Arial\">Echoes of Thunder [PH2]</td><td></td></tr>\r"}
if (feat_enragedboarform){SWD+="<tr><td><font face=\"Arial\">Enraged Boar Form [PH2]</td><td></td></tr>\r"}
if (feat_expertritualist){SWD+="<tr><td><font face=\"Arial\">Expert Ritualist [PH2]</td><td></td></tr>\r"}
if (feat_ferocioustigerform){SWD+="<tr><td><font face=\"Arial\">Ferocious Tiger Form [PH2]</td><td></td></tr>\r"}
if (feat_feytrickster){SWD+="<tr><td><font face=\"Arial\">Fey Trickster [PH2]</td><td></td></tr>\r"}
if (feat_goliathgreatweaponprowess){SWD+="<tr><td><font face=\"Arial\">Goliath Great Weaponprowess [PH2]</td><td></td></tr>\r"}
if (feat_gorebrutecharge){SWD+="<tr><td><font face=\"Arial\">Gorebrute Charge [PH2]</td><td></td></tr>\r"}
if (feat_groupstealth){SWD+="<tr><td><font face=\"Arial\">Group Stealth [PH2]</td><td></td></tr>\r"}
if (feat_guaranteedretribution){SWD+="<tr><td><font face=\"Arial\">Guaranteed Retribution [PH2]</td><td></td></tr>\r"}
x=1;if (total_levels>=15){x=2;}; if (total_levels>=25){x=3;}
if (feat_implementexpertisedagger){SWD+="<tr><td><font face=\"Arial\">Implement Expertise -- Dagger [PH2];</td><td><font face=\"Arial\"><font size=\"-1\">  Remember your +"+x+" attack bonus using a dagger as implement</td></tr>\r"}
if (feat_implementexpertiseholysymbol){SWD+="<tr><td><font face=\"Arial\">Implement Expertise --Holy Symbol [PH2];</td><td><font face=\"Arial\"><font size=\"-1\">  Remember your +"+x+" attack bonus using a holy symbol</td></tr>\r"}
if (feat_implementexpertisemusic){SWD+="<tr><td><font face=\"Arial\">Implement Expertise -- Music [PH2];</td><td><font face=\"Arial\"><font size=\"-1\">  Remember your +"+x+" attack bonus using a musical implement</td></tr>\r"}
if (feat_implementexpertiseorb){SWD+="<tr><td><font face=\"Arial\">Implement Expertise -- Orb [PH2];</td><td><font face=\"Arial\"><font size=\"-1\">  Remember your +"+x+" attack bonus using an orb</td></tr>\r"}
if (feat_implementexpertiserod){SWD+="<tr><td><font face=\"Arial\">Implement Expertise -- Rod [PH2];</td><td><font face=\"Arial\"><font size=\"-1\">  Remember your +"+x+" attack bonus using a rod</td></tr>\r"}
if (feat_implementexpertisestaff){SWD+="<tr><td><font face=\"Arial\">Implement Expertise -- Staff [PH2];</td><td><font face=\"Arial\"><font size=\"-1\">  Remember your +"+x+" attack bonus using a staff</td></tr>\r"}
if (feat_implementexpertisetome){SWD+="<tr><td><font face=\"Arial\">Implement Expertise -- Tome [PH2 / AP];</td><td><font face=\"Arial\"><font size=\"-1\">  Remember your +"+x+" attack bonus using a tome</td></tr>\r"}
if (feat_implementexpertisetotem){SWD+="<tr><td><font face=\"Arial\">Implement Expertise -- Totem [PH2];</td><td><font face=\"Arial\"><font size=\"-1\">  Remember your +"+x+" attack bonus using a totem</td></tr>\r"}
if (feat_implementexpertisewand){SWD+="<tr><td><font face=\"Arial\">Implement Expertise -- Wand [PH2];</td><td><font face=\"Arial\"><font size=\"-1\"> Remember your +"+x+" attack bonus using a wand</td></tr>\r"}
if (feat_improvedarmoroffaith){SWD+="<tr><td><font face=\"Arial\">Improved Armor of Faith [PH2]</td><td></td></tr>\r"}
if (feat_improvedbullrush){SWD+="<tr><td><font face=\"Arial\">Improved Bull Rush [PH2]</td><td></td></tr>\r"}
if (feat_improveddragonsoul){SWD+="<tr><td><font face=\"Arial\">Improved Dragon Soul [PH2]</td><td></td></tr>\r"}
if (feat_improvedgrab){SWD+="<tr><td><font face=\"Arial\">Improved Grab [PH2]</td><td></td></tr>\r"}
if (feat_improvedmajesticword){SWD+="<tr><td><font face=\"Arial\">Improved Majestic Word [PH2]</td><td></td></tr>\r"}
if (feat_improvedragebloodvigor){SWD+="<tr><td><font face=\"Arial\">Improved Rageblood Vigor [PH2]</td><td></td></tr>\r"}
if (feat_improvedroaroftriumph){SWD+="<tr><td><font face=\"Arial\">Improved Roar of Triumph [PH2]</td><td></td></tr>\r"}
if (feat_insightfulpreservation){SWD+="<tr><td><font face=\"Arial\">Insightful Preservation [PH2]</td><td></td></tr>\r"}
if (feat_invigoratingpursuit){SWD+="<tr><td><font face=\"Arial\">Invigorating Pursuit [PH2]</td><td></td></tr>\r"}
if (feat_invokerdefense){SWD+="<tr><td><font face=\"Arial\">Invoker Defense [PH2]</td><td></td></tr>\r"}
if (feat_markingsoftheblessed){SWD+="<tr><td><font face=\"Arial\">Markings of the Blessed [PH2]</td><td></td></tr>\r"}
if (feat_markingsofthevictor){SWD+="<tr><td><font face=\"Arial\">Markings of the Victor [PH2]</td><td></td></tr>\r"}
if (feat_meleetraining){SWD+="<tr><td><font face=\"Arial\">Melee Training [PH2]</td><td></td></tr>\r"}
if (feat_oncomingstorm){SWD+="<tr><td><font face=\"Arial\">Oncoming Storm [PH2]</td><td></td></tr>\r"}
if (feat_potentrebirth){SWD+="<tr><td><font face=\"Arial\">Potent Rebirth [PH2]</td><td></td></tr>\r"}
if (feat_primalfury){SWD+="<tr><td><font face=\"Arial\">Primal Fury [PH2]</td><td></td></tr>\r"}
if (feat_primalinstinct){SWD+="<tr><td><font face=\"Arial\">Primal Instinct [PH2]</td><td></td></tr>\r"}
if (feat_protectorspiritadept){SWD+="<tr><td><font face=\"Arial\">Protector Spirit Adept [PH2]</td><td></td></tr>\r"}
if (feat_radiantpower){SWD+="<tr><td><font face=\"Arial\">Radiant Power [PH2]</td><td></td></tr>\r"}
if (feat_resonatingcovenant){SWD+="<tr><td><font face=\"Arial\">Resonating Covenant [PH2]</td><td></td></tr>\r"}
if (feat_restfulhealing){SWD+="<tr><td><font face=\"Arial\">Restful Healing [PH2]</td><td></td></tr>\r"}
if (feat_revitalizingfontoflife){SWD+="<tr><td><font face=\"Arial\">Revitalizing Font of Life [PH2]</td><td></td></tr>\r"}
if (feat_risingfury){SWD+="<tr><td><font face=\"Arial\">Rising Fury [PH2]</td><td></td></tr>\r"}
if (feat_savageassault){SWD+="<tr><td><font face=\"Arial\">Savage Assault [PH2]</td><td></td></tr>\r"}
if (feat_scouringwrath){SWD+="<tr><td><font face=\"Arial\">Scouring Wrath [PH2]</td><td></td></tr>\r"}
if (feat_shadowskulk){SWD+="<tr><td><font face=\"Arial\">Shadow Skulk [PH2]</td><td></td></tr>\r"}
if (feat_sharedhealingspirit){SWD+="<tr><td><font face=\"Arial\">Shared Healing Spirit [PH2]</td><td></td></tr>\r"}
if (feat_sorcerousbladechanneling){SWD+="<tr><td><font face=\"Arial\">Sorcerous Blade Channeling [PH2]</td><td></td></tr>\r"}
if (feat_speedloader){SWD+="<tr><td><font face=\"Arial\">Speed Loader [PH2]</td><td></td></tr>\r"}
if (feat_spritspeaker){SWD+="<tr><td><font face=\"Arial\">Sprit Speaker [PH2]</td><td></td></tr>\r"}
if (feat_stalkerspiritadept){SWD+="<tr><td><font face=\"Arial\">Stalker Spirit Adept [PH2]</td><td></td></tr>\r"}
if (feat_strengthofvalor){SWD+="<tr><td><font face=\"Arial\">Strength of Valor [PH2]</td><td></td></tr>\r"}
if (feat_suddenroots){SWD+="<tr><td><font face=\"Arial\">Sudden Roots [PH2]</td><td></td></tr>\r"}
if (feat_surgingflame){SWD+="<tr><td><font face=\"Arial\">Surging Flame [PH2]</td><td></td></tr>\r"}
if (feat_thirstforbattle){SWD+="<tr><td><font face=\"Arial\">Thirst for Battle [PH2]</td><td></td></tr>\r"}
if (feat_timelyrespite){SWD+="<tr><td><font face=\"Arial\">Timely Respite [PH2]</td><td></td></tr>\r"}
if (feat_twoweaponthreat){SWD+="<tr><td><font face=\"Arial\">Two Weapon Threat [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertiseaxe){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Axe [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisebow){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Bow [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisecrossbow){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Crossbow [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertiseflail){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Flail [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisehammer){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Hammer [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertiseheavyblade){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Heavy Blade [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertiselightblade){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Light Blade [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisemace){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Mace [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisepick){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Pick [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisepolearm){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Polearm [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisesling){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Sling [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisespear){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Spear [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertisestaff){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Staff [PH2]</td><td></td></tr>\r"}
if (feat_weaponexpertiseunarmed){SWD+="<tr><td><font face=\"Arial\">Weapon Expertise -- Unarmed [PH2]</td><td></td></tr>\r"}
if (feat_wildbloodcunning){SWD+="<tr><td><font face=\"Arial\">Wildblood Cunning [PH2]</td><td></td></tr>\r"}
if (feat_wildsenses){SWD+="<tr><td><font face=\"Arial\">Wild Senses [PH2]</td><td></td></tr>\r"}
if (feat_arcaneimplementproficiencydagger){SWD+="<tr><td><font face=\"Arial\">Arcane Implement Proficiency -- Dagger [AP]</td><td></td></tr>\r"}
if (feat_arcaneimplementproficiencymusic){SWD+="<tr><td><font face=\"Arial\">Arcane Implement Proficiency -- Music [AP]</td><td></td></tr>\r"}
if (feat_arcaneimplementproficiencyorb){SWD+="<tr><td><font face=\"Arial\">Arcane Implement Proficiency -- Orb [AP]</td><td></td></tr>\r"}
if (feat_arcaneimplementproficiencyrod){SWD+="<tr><td><font face=\"Arial\">Arcane Implement Proficiency -- Rod [AP]</td><td></td></tr>\r"}
if (feat_arcaneimplementproficiencystaff){SWD+="<tr><td><font face=\"Arial\">Arcane Implement Proficiency -- Staff [AP]</td><td></td></tr>\r"}
if (feat_arcaneimplementproficiencytome){SWD+="<tr><td><font face=\"Arial\">Arcane Implement Proficiency -- Tome [AP]</td><td></td></tr>\r"}
if (feat_arcaneimplementproficiencywand){SWD+="<tr><td><font face=\"Arial\">Arcane Implement Proficiency -- Wand [AP]</td><td></td></tr>\r"}
if (feat_dualimplementspellcaster){SWD+="<tr><td><font face=\"Arial\">Dual Implement Spellcaster [AP]</td><td></td></tr>\r"}



if (feat_agiletempest){SWD+="<tr><td><font face=\"Arial\">Agile Tempest [MP]</td><td></td></tr>\r"}
if (feat_avandrasgift){SWD+="<tr><td><font face=\"Arial\">Avandra's Gift [MP]</td><td></td></tr>\r"}
if (feat_avengingspirit){SWD+="<tr><td><font face=\"Arial\">Avenging Spirit [MP]</td><td></td></tr>\r"}
if (feat_bleedingbackstab){SWD+="<tr><td><font face=\"Arial\">Bleeding Backstab [MP]</td><td></td></tr>\r"}
if (feat_bleedingprecision){SWD+="<tr><td><font face=\"Arial\">Bleeding Precision [MP]</td><td></td></tr>\r"}
if (feat_bloodyinspiration){SWD+="<tr><td><font face=\"Arial\">Bloody Inspiration [MP]</td><td></td></tr>\r"}
if (feat_bloodytenacity){SWD+="<tr><td><font face=\"Arial\">Bloody Tenacity [MP]</td><td></td></tr>\r"}
if (feat_chainmailagility){SWD+="<tr><td><font face=\"Arial\">Chainmail Agility [MP]</td><td></td></tr>\r"}
if (feat_combatopening){SWD+="<tr><td><font face=\"Arial\">Combat Opening [MP]</td><td></td></tr>\r"}
if (feat_culltheweak){SWD+="<tr><td><font face=\"Arial\">Cull the Weak [MP]</td><td></td></tr>\r"}
if (feat_darkhunter){SWD+="<tr><td><font face=\"Arial\">Dark Hunter [MP]</td><td></td></tr>\r"}
if (feat_darkjumper){SWD+="<tr><td><font face=\"Arial\">Dark Jumper [MP]</td><td></td></tr>\r"}
if (feat_dauntingchallenge){SWD+="<tr><td><font face=\"Arial\">Daunting Challenge [MP]</td><td></td></tr>\r"}
if (feat_defensivesurge){SWD+="<tr><td><font face=\"Arial\">Defensive Surge [MP]</td><td></td></tr>\r"}
if (feat_distractingcompanion){SWD+="<tr><td><font face=\"Arial\">Distracting Companion [MP]</td><td></td></tr>\r"}
if (feat_draconicarrogance){SWD+="<tr><td><font face=\"Arial\">Draconic Arrogance [MP]</td><td></td></tr>\r"}
if (feat_dragonbreathwarrior){SWD+="<tr><td><font face=\"Arial\">Dragonbreath Warrior [MP]</td><td></td></tr>\r"}
if (feat_elementalcompanions){SWD+="<tr><td><font face=\"Arial\">Elemental Companions [MP]</td><td></td></tr>\r"}
if (feat_elementalguardian){SWD+="<tr><td><font face=\"Arial\">Elemental Guardian [MP]</td><td></td></tr>\r"}
if (feat_enduringwallop){SWD+="<tr><td><font face=\"Arial\">Enduring Wallop [MP]</td><td></td></tr>\r"}
if (feat_evasivefootwork){SWD+="<tr><td><font face=\"Arial\">Evasive Footwork [MP]</td><td></td></tr>\r"}
if (feat_feycharge){SWD+="<tr><td><font face=\"Arial\">Fey Charge [MP]</td><td></td></tr>\r"}
if (feat_feygambit){SWD+="<tr><td><font face=\"Arial\">Fey Gambit [MP]</td><td></td></tr>\r"}
if (feat_feytactics){SWD+="<tr><td><font face=\"Arial\">Fey Tactics [MP]</td><td></td></tr>\r"}
if (feat_fiendishdefender){SWD+="<tr><td><font face=\"Arial\">Fiendish Defender [MP]</td><td></td></tr>\r"}
if (feat_grit){SWD+="<tr><td><font face=\"Arial\">Grit [MP]</td><td></td></tr>\r"}
if (feat_groupflanking){SWD+="<tr><td><font face=\"Arial\">Group Flanking [MP]</td><td></td></tr>\r"}
if (feat_halflingbeastmastery){SWD+="<tr><td><font face=\"Arial\">Halfling Beast Mastery [MP]</td><td></td></tr>\r"}
if (feat_huntersadvantage){SWD+="<tr><td><font face=\"Arial\">Hunter's Advantage [MP]</td><td></td></tr>\r"}
if (feat_huntersresurgence){SWD+="<tr><td><font face=\"Arial\">Hunter's Resurgence [MP]</td><td></td></tr>\r"}
if (feat_impetuouscharger){SWD+="<tr><td><font face=\"Arial\">Impetuous Charger [MP]</td><td></td></tr>\r"}
if (feat_infernalsneakattack){SWD+="<tr><td><font face=\"Arial\">Infernal Sneak Attack [MP]</td><td></td></tr>\r"}
if (feat_markedscourge){SWD+="<tr><td><font face=\"Arial\">Marked Scourge [MP]</td><td></td></tr>\r"}
if (feat_mightybattlerage){SWD+="<tr><td><font face=\"Arial\">Mighty Battlerage [MP]</td><td></td></tr>\r"}
if (feat_opportunisticarcher){SWD+="<tr><td><font face=\"Arial\">Opportunistic Archer [MP]</td><td></td></tr>\r"}
if (feat_opportunisticsneakattack){SWD+="<tr><td><font face=\"Arial\">Opportunistic Sneak Attack [MP]</td><td></td></tr>\r"}
if (feat_phalanxwarrior){SWD+="<tr><td><font face=\"Arial\">Phalanx Warrior [MP]</td><td></td></tr>\r"}
if (feat_preternaturalsenses){SWD+="<tr><td><font face=\"Arial\">Preternatural Senses [MP]</td><td></td></tr>\r"}
if (feat_primequarry){SWD+="<tr><td><font face=\"Arial\">Prime Quarry [MP]</td><td></td></tr>\r"}
if (feat_primeslayer){SWD+="<tr><td><font face=\"Arial\">Prime Slayer [MP]</td><td></td></tr>\r"}
if (feat_protectivebeast){SWD+="<tr><td><font face=\"Arial\">Protective Beast [MP]</td><td></td></tr>\r"}
if (feat_recklessattacker){SWD+="<tr><td><font face=\"Arial\">Reckless Attacker [MP]</td><td></td></tr>\r"}
if (feat_reliableresources){SWD+="<tr><td><font face=\"Arial\">Reliable Resources [MP]</td><td></td></tr>\r"}
if (feat_rogueweaponmastery){SWD+="<tr><td><font face=\"Arial\">Rogue Weaponmastery [MP]</td><td></td></tr>\r"}
if (feat_roundaboutcharge){SWD+="<tr><td><font face=\"Arial\">Roundabout Charge [MP]</td><td></td></tr>\r"}
if (feat_steadfasttacatics){SWD+="<tr><td><font face=\"Arial\">Steadfast Tacatics [MP]</td><td></td></tr>\r"}
if (feat_stonefootreprisal){SWD+="<tr><td><font face=\"Arial\">Stonefoot Reprisal [MP]</td><td></td></tr>\r"}
if (feat_sturdybeast){SWD+="<tr><td><font face=\"Arial\">Sturdy Beast [MP]</td><td></td></tr>\r"}
if (feat_vitalinspiration){SWD+="<tr><td><font face=\"Arial\">Vital Inspiration [MP]</td><td></td></tr>\r"}
if (feat_warlordsformation){SWD+="<tr><td><font face=\"Arial\">Warlord's Formation [MP]</td><td></td></tr>\r"}
if (feat_wrathfulhunter){SWD+="<tr><td><font face=\"Arial\">Wrathful Hunter [MP]</td><td></td></tr>\r"}
if (feat_twoweaponopening){SWD+="<tr><td><font face=\"Arial\">Two Weapon Opening [PH2]</td><td></td></tr>\r"}
if (feat_versatilemaster){SWD+="<tr><td><font face=\"Arial\">Versatile Master [PH2]</td><td></td></tr>\r"}
if (feat_actiongrant){SWD+="<tr><td><font face=\"Arial\">Action Grant [MP]</td><td></td></tr>\r"}
if (feat_aggressiveleadership){SWD+="<tr><td><font face=\"Arial\">Aggressive Leadership [MP]</td><td></td></tr>\r"}
if (feat_artfulprovocation){SWD+="<tr><td><font face=\"Arial\">Artful Provocation [MP]</td><td></td></tr>\r"}
if (feat_boldspirit){SWD+="<tr><td><font face=\"Arial\">Bold Spirit [MP]</td><td></td></tr>\r"}
if (feat_brutaladvantage){SWD+="<tr><td><font face=\"Arial\">Brutal Advantage [MP]</td><td></td></tr>\r"}
if (feat_calltoglory){SWD+="<tr><td><font face=\"Arial\">Call to Glory [MP]</td><td></td></tr>\r"}
if (feat_channeledbattlerage){SWD+="<tr><td><font face=\"Arial\">Channeled Battlerage [MP]</td><td></td></tr>\r"}
if (feat_correctingaim){SWD+="<tr><td><font face=\"Arial\">Correcting Aim [MP]</td><td></td></tr>\r"}
if (feat_darkfirewarrior){SWD+="<tr><td><font face=\"Arial\">Darkfire Warrior [MP]</td><td></td></tr>\r"}
if (feat_dragonwarrior){SWD+="<tr><td><font face=\"Arial\">Dragon Warrior [MP]</td><td></td></tr>\r"}
if (feat_elementalwarrior){SWD+="<tr><td><font face=\"Arial\">Elemental Warrior [MP]</td><td></td></tr>\r"}
if (feat_epicrecovery){SWD+="<tr><td><font face=\"Arial\">Epic Recovery [MP]</td><td></td></tr>\r"}
if (feat_feywildwarrior){SWD+="<tr><td><font face=\"Arial\">Feywild Warrior [MP]</td><td></td></tr>\r"}
if (feat_fortuneswarrior){SWD+="<tr><td><font face=\"Arial\">Fortune's Warrior [MP]</td><td></td></tr>\r"}
if (feat_hawkeyewarrior){SWD+="<tr><td><font face=\"Arial\">Hawkeye Warrior [MP]</td><td></td></tr>\r"}
if (feat_improvedprimeshot){SWD+="<tr><td><font face=\"Arial\">Improved Prime Shot [MP]</td><td></td></tr>\r"}
if (feat_infernalwarrior){SWD+="<tr><td><font face=\"Arial\">Infernal Warrior [MP]</td><td></td></tr>\r"}
if (feat_invigoratingexploit){SWD+="<tr><td><font face=\"Arial\">Invigorating Exploit [MP]</td><td></td></tr>\r"}
if (feat_knockbackswing){SWD+="<tr><td><font face=\"Arial\">Knockback Swing [MP]</td><td></td></tr>\r"}
if (feat_lastingadvantage){SWD+="<tr><td><font face=\"Arial\">Lasting Advantage [MP]</td><td></td></tr>\r"}
if (feat_martialmastery){SWD+="<tr><td><font face=\"Arial\">Martial Mastery [MP]</td><td></td></tr>\r"}
if (feat_martialresolve){SWD+="<tr><td><font face=\"Arial\">Martial Resolve [MP]</td><td></td></tr>\r"}
if (feat_mobilewarrior){SWD+="<tr><td><font face=\"Arial\">Mobile Warrior [MP]</td><td></td></tr>\r"}
if (feat_onewithshadow){SWD+="<tr><td><font face=\"Arial\">One with Shadow [MP]</td><td></td></tr>\r"}
if (feat_peerlesshunter){SWD+="<tr><td><font face=\"Arial\">Peerless Hunter [MP]</td><td></td></tr>\r"}
if (feat_practicedreliability){SWD+="<tr><td><font face=\"Arial\">Practiced Reliability [MP]</td><td></td></tr>\r"}
if (feat_primehunter){SWD+="<tr><td><font face=\"Arial\">Prime Hunter [MP]</td><td></td></tr>\r"}
if (feat_protectiveleadership){SWD+="<tr><td><font face=\"Arial\">Protective Leadership [MP]</td><td></td></tr>\r"}
if (feat_quickbeastcommand){SWD+="<tr><td><font face=\"Arial\">Quick Beast Command [MP]</td><td></td></tr>\r"}
if (feat_rattlingexploit){SWD+="<tr><td><font face=\"Arial\">Rattling Exploit [MP]</td><td></td></tr>\r"}
if (feat_reachingwhirlwind){SWD+="<tr><td><font face=\"Arial\">Reaching Whirlwind [MP]</td><td></td></tr>\r"}
if (feat_rendingtempest){SWD+="<tr><td><font face=\"Arial\">Rending Tempest [MP]</td><td></td></tr>\r"}
if (feat_ruthlessterror){SWD+="<tr><td><font face=\"Arial\">Ruthless Terror [MP]</td><td></td></tr>\r"}
if (feat_staggeringshot){SWD+="<tr><td><font face=\"Arial\">Staggering Shot [MP]</td><td></td></tr>\r"}
if (feat_stoneheartwarrior){SWD+="<tr><td><font face=\"Arial\">Stoneheart Warrior [MP]</td><td></td></tr>\r"}
if (feat_supremeinspiration){SWD+="<tr><td><font face=\"Arial\">Supreme Inspiration [MP]</td><td></td></tr>\r"}
if (feat_surpriseaction){SWD+="<tr><td><font face=\"Arial\">Surprise Action [MP]</td><td></td></tr>\r"}
if (feat_tacticalcunning){SWD+="<tr><td><font face=\"Arial\">Tactical Cunning [MP]</td><td></td></tr>\r"}
if (feat_tacticalinsight){SWD+="<tr><td><font face=\"Arial\">Tactical Insight [MP]</td><td></td></tr>\r"}
if (feat_timelyrevival){SWD+="<tr><td><font face=\"Arial\">Timely Revival [MP]</td><td></td></tr>\r"}
if (feat_unstoppablecharge){SWD+="<tr><td><font face=\"Arial\">Unstoppable Charge [MP]</td><td></td></tr>\r"}
if (feat_whirlwindsneakattack){SWD+="<tr><td><font face=\"Arial\">Whirlwind Sneak Attack [MP]</td><td></td></tr>\r"}
if (feat_bowmastery){SWD+="<tr><td><font face=\"Arial\">Bow Mastery [PH2]</td><td></td></tr>\r"}
if (feat_epicfortitude){SWD+="<tr><td><font face=\"Arial\">Epic Fortitude [PH2]</td><td></td></tr>\r"}
if (feat_epicreflexes){SWD+="<tr><td><font face=\"Arial\">Epic Reflexes [PH2]</td><td></td></tr>\r"}
if (feat_epicwill){SWD+="<tr><td><font face=\"Arial\">Epic Will [PH2]</td><td></td></tr>\r"}
if (feat_indomitablewill){SWD+="<tr><td><font face=\"Arial\">Indomitable Will [PH2]</td><td></td></tr>\r"}
if (feat_opportunereflexes){SWD+="<tr><td><font face=\"Arial\">Opportune Reflexes [PH2]</td><td></td></tr>\r"}
if (feat_robustdefenses){SWD+="<tr><td><font face=\"Arial\">Robust Defenses [PH2]</td><td></td></tr>\r"}
if (feat_unyieldingfortitude){SWD+="<tr><td><font face=\"Arial\">Unyielding Fortitude [PH2]</td><td></td></tr>\r"}
if (feat_battleacumen){SWD+="<tr><td><font face=\"Arial\">Battle Acumen [MP]</td><td></td></tr>\r"}
if (feat_battleinstructor){SWD+="<tr><td><font face=\"Arial\">Battle Instructor [MP]</td><td></td></tr>\r"}
if (feat_courageousshooter){SWD+="<tr><td><font face=\"Arial\"Ccourageous Shooter [MP]</td><td></td></tr>\r"}
if (feat_firstin){SWD+="<tr><td><font face=\"Arial\">First In [MP]</td><td></td></tr>\r"}
if (feat_arcanefamiliar){SWD+="<tr><td><font face=\"Arial\">Arcane Familiar [AP]</td><td></td></tr>\r"}
if (feat_alertfamiliar){SWD+="<tr><td><font face=\"Arial\">Alert Familiar [Dragon 374]</td><td></td></tr>\r"}
if (feat_aggressivefamiliar){SWD+="<tr><td><font face=\"Arial\">Aggressive Familiar [Dragon 374]</td><td></td></tr>\r"}
if (feat_bondedfamiliar){SWD+="<tr><td><font face=\"Arial\">Bonded Familiar [AP]</td><td></td></tr>\r"}
if (feat_quickfamiliar){SWD+="<tr><td><font face=\"Arial\">Quick Familiar [Dragon 374]</td><td></td></tr>\r"}
if (feat_sharedspeed){SWD+="<tr><td><font face=\"Arial\">Shared Speed [Dragon 374]</td><td></td></tr>\r"}
if (feat_shieldingfamiliar){SWD+="<tr><td><font face=\"Arial\">Shielding Familiar [AP]</td><td></td></tr>\r"}
if (feat_spellseerfamiliar){SWD+="<tr><td><font face=\"Arial\">Spellseer Familiar [AP]</td><td></td></tr>\r"}



if (feat_other01){SWD+="<tr><td><font face=\"Arial\">"+document.form1.otherfeat01.value+"</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_other02){SWD+="<tr><td><font face=\"Arial\">"+document.form1.otherfeat02.value+"</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_other03){SWD+="<tr><td><font face=\"Arial\">"+document.form1.otherfeat03.value+"</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_other04){SWD+="<tr><td><font face=\"Arial\">"+document.form1.otherfeat04.value+"</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_other05){SWD+="<tr><td><font face=\"Arial\">"+document.form1.otherfeat05.value+"</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_other06){SWD+="<tr><td><font face=\"Arial\">"+document.form1.otherfeat06.value+"</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_other07){SWD+="<tr><td><font face=\"Arial\">"+document.form1.otherfeat07.value+"</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_shieldproficiencyheavy){SWD+="<tr><td><font face=\"Arial\">Shield Proficiency -- Heavy</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_shieldproficiencylight){SWD+="<tr><td><font face=\"Arial\">Shield Proficiency -- Light</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_shieldpush){SWD+="<tr><td><font face=\"Arial\">Shield Push</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusacrobatics){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Acrobatics</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusarcana){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Arcana</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusathletics){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Athletics</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusbluff){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Bluff</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusdiplomacy){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Diplomacy</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusdungeoneering){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Dungeoneering</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusendurance){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Endurance</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusheal){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Heal</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocushistory){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- History</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusinsight){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Insight</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusintimidate){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Intimidate</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusnature){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Nature</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusperception){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Perception</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusreligion){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Religion</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusstealth){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Stealth</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusstreetwise){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Streetwise</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skillfocusthievery){SWD+="<tr><td><font face=\"Arial\">Skill Focus -- Thievery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingacrobatics){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Acrobatics</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingarcana){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Arcana</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingathletics){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Athletics</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingbluff){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Bluff</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingdiplomacy){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Diplomacy</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingdungeoneering){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Dungeoneering</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingendurance){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Endurance</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingheal){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Heal</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltraininghistory){SWD+="<tr><td><font face=\"Arial\">Skill Training -- History</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltraininginsight){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Insight</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingintimidate){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Intimidate</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingnature){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Nature</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingperception){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Perception</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingreligion){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Religion</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingstealth){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Stealth</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingstreetwise){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Streetwise</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_skilltrainingthievery){SWD+="<tr><td><font face=\"Arial\">Skill Training -- Thievery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_sureclimber){SWD+="<tr><td><font face=\"Arial\">Sure Climber</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_surpriseknockdown){SWD+="<tr><td><font face=\"Arial\">Surprise Knockdown</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_tacticalassault){SWD+="<tr><td><font face=\"Arial\">Tactical Assault</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_toughness){SWD+="<tr><td><font face=\"Arial\">Toughness</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_twoweapondefense){SWD+="<tr><td><font face=\"Arial\">Two Weapon Defense</td><td><font face=\"Arial\">[add bonus as applicable]</td></tr>\r"}
if (feat_twoweaponfighting){SWD+="<tr><td><font face=\"Arial\">Two Weapon Fighting</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocusaxe){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Axe</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocusbow){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Bow</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocuscrossbow){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Crossbow</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocusflail){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Flail</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocushammer){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Hammer</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocusheavyblade){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Heavy Blade</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocuslightblade){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Light Blade</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocusmace){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Mace</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocuspick){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Pick</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocuspolearm){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Polearm</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocussling){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Sling</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocusspear){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Spear</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocusstaff){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Staff</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponfocusunarmed){SWD+="<tr><td><font face=\"Arial\">Weapon Focus -- Unarmed</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyclub){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Club</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencydagger){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Dagger</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyjavelin){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Javelin</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencymace){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Mace</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencysickle){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Sickle</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyspear){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Spear</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencygreatclub){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Greatclub</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencymorningstar){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Morningstar</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyquarterstaff){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Quarterstaff</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyscythe){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Scythe</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencybattleaxe){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Battleaxe</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyflail){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Flail</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyhandaxe){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Handaxe</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencylongsword){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Longsword</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyscimitar){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Scimitar</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyshortsword){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Shortsword</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencythrowinghammer){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Throwing Hammer</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencywarhammer){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Warhammer</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencywarpick){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- War Pick</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyfalchion){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Falchion</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyglaive){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Glaive</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencygreataxe){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Greataxe</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencygreatsword){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Greatsword</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyhalberd){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Halberd</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyheavyflail){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Heavyflail</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencylongspear){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Longspear</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencymaul){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Maul</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencybastardsword){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Bastard Sword</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencykatar){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Katar</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyrapier){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Rapier</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyspikedchain){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Spiked Chain</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyhandcrossbow){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Hand Crossbow</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencysling){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Sling</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencycrossbow){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Crossbow</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencylongbow){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Longbow</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyshortbow){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Shortbow</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyshuriken){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Shuriken</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyothersimplemeleeweapons){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Other Simple Melee Weapons</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyothermilitarymeleeweapons){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Other Military Melee Weapons</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyothersuperiormeleeweapons){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Other Superior Melee Weapons</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyothersimplerangedweapons){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Other Simple Ranged Weapons</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_weaponproficiencyothersuperiorrangedweapons){SWD+="<tr><td><font face=\"Arial\">Weapon Proficiency -- Other Superior Ranged Weapons</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_wintertouched){SWD+="<tr><td><font face=\"Arial\">Wintertouched</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_actionrecovery){SWD+="<tr><td><font face=\"Arial\">Action Recovery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_agileathlete){SWD+="<tr><td><font face=\"Arial\">Agile Athlete</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_arcanereach){SWD+="<tr><td><font face=\"Arial\">Arcane Reach</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorspecializationchainmail){SWD+="<tr><td><font face=\"Arial\">Armor Specialization -- Chainmail</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorspecializationhide){SWD+="<tr><td><font face=\"Arial\">Armor Specialization -- Hide</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorspecializationplate){SWD+="<tr><td><font face=\"Arial\">Armor Specialization -- Plate</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_armorspecializationscale){SWD+="<tr><td><font face=\"Arial\">Armor Specialization -- Scale</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_backtothewall){SWD+="<tr><td><font face=\"Arial\">Back to the Wall</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_bloodthirst){SWD+="<tr><td><font face=\"Arial\">Bloodthirst</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_combatanticipation){SWD+="<tr><td><font face=\"Arial\">Combat Anticipation</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_combatcommander){SWD+="<tr><td><font face=\"Arial\">Combat Commander</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_dangersense){SWD+="<tr><td><font face=\"Arial\">Danger Sense</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_deadlyaxe){SWD+="<tr><td><font face=\"Arial\">Deadly Axe</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_defensiveadvantage){SWD+="<tr><td><font face=\"Arial\">Defensive Advantage</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_devastatingcritical){SWD+="<tr><td><font face=\"Arial\">Devastating Critical</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_distantshot){SWD+="<tr><td><font face=\"Arial\">Distant Shot</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_dwarvendurability){SWD+="<tr><td><font face=\"Arial\">Dwarven Durability</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_empowereddragonbreath){SWD+="<tr><td><font face=\"Arial\">Empowered Dragonbreath</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_evasion){SWD+="<tr><td><font face=\"Arial\">Evasion</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_feywildprotection){SWD+="<tr><td><font face=\"Arial\">Feywild Protection</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_fieryrebuke){SWD+="<tr><td><font face=\"Arial\">Fiery Rebuke</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_fleetfooted){SWD+="<tr><td><font face=\"Arial\">Fleet Footed</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_greatfortitude){SWD+="<tr><td><font face=\"Arial\">Great Fortitude</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_hammerrhythm){SWD+="<tr><td><font face=\"Arial\">Hammer Rhythm</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_heavybladeopportunity){SWD+="<tr><td><font face=\"Arial\">Heavy Blade Opportunity</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_improvedsecondwind){SWD+="<tr><td><font face=\"Arial\">Improved Second Wind</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_inescapableforce){SWD+="<tr><td><font face=\"Arial\">Inescapable Force</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_ironwill){SWD+="<tr><td><font face=\"Arial\">Iron Will</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_lastingfrost){SWD+="<tr><td><font face=\"Arial\">Lasting Frost</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_lightbladeprecision){SWD+="<tr><td><font face=\"Arial\">Light Blade Precision</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_lightningarc){SWD+="<tr><td><font face=\"Arial\">Lightning Arc</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_lightningreflexes){SWD+="<tr><td><font face=\"Arial\">Lightning Reflexes</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_mettle){SWD+="<tr><td><font face=\"Arial\">Mettle</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_pointblankshot){SWD+="<tr><td><font face=\"Arial\">Point Blank Shot</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_polearmgamble){SWD+="<tr><td><font face=\"Arial\">Polearm Gamble</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_psychiclock){SWD+="<tr><td><font face=\"Arial\">Psychic Lock</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_resoundingthunder){SWD+="<tr><td><font face=\"Arial\">Resounding Thunder</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_runningshot){SWD+="<tr><td><font face=\"Arial\">Running Shot</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_scimitardance){SWD+="<tr><td><font face=\"Arial\">Scimitar Dance</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_secondimplementorb){SWD+="<tr><td><font face=\"Arial\">Second Implement (Orb)</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_secondimplementstaff){SWD+="<tr><td><font face=\"Arial\">Second Implement (Staff)</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_secondimplementwand){SWD+="<tr><td><font face=\"Arial\">Second Implement (Wand)</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_secretstride){SWD+="<tr><td><font face=\"Arial\">Secret Stride</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_seizethemoment){SWD+="<tr><td><font face=\"Arial\">Seize the Moment</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_shieldspecialization){SWD+="<tr><td><font face=\"Arial\">Shield Specialization</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_slyhunter){SWD+="<tr><td><font face=\"Arial\">Sly Hunter</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_solidsound){SWD+="<tr><td><font face=\"Arial\">Solid Sound</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_spearpush){SWD+="<tr><td><font face=\"Arial\">Spear Push</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_spellfocus){SWD+="<tr><td><font face=\"Arial\">Spell Focus</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_steadyshooter){SWD+="<tr><td><font face=\"Arial\">Steady Shooter</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_sweepingflail){SWD+="<tr><td><font face=\"Arial\">Sweeping Flail</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_twofoldcurse){SWD+="<tr><td><font face=\"Arial\">Twofold Curse</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_uncannydodge){SWD+="<tr><td><font face=\"Arial\">Uncannydodge</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_underfoot){SWD+="<tr><td><font face=\"Arial\">Underfoot</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_arcanemastery){SWD+="<tr><td><font face=\"Arial\">Aarcane Mastery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_axemastery){SWD+="<tr><td><font face=\"Arial\">Axe Mastery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_blindfight){SWD+="<tr><td><font face=\"Arial\">Blindfight</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_bludgeonmastery){SWD+="<tr><td><font face=\"Arial\">Bludgeon Mastery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_epicresurgence){SWD+="<tr><td><font face=\"Arial\">Epic Resurgence</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_flailmastery){SWD+="<tr><td><font face=\"Arial\">Flail Mastery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_flankingmaneuver){SWD+="<tr><td><font face=\"Arial\">Flanking Maneuver</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_fontofradiance){SWD+="<tr><td><font face=\"Arial\">Font of Radiance</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_heavyblademastery){SWD+="<tr><td><font face=\"Arial\">Heavy Blade Mastery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_irresistableflame){SWD+="<tr><td><font face=\"Arial\">Irresistable Flame</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_lightblademastery){SWD+="<tr><td><font face=\"Arial\">Light Blade Mastery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_pickmastery){SWD+="<tr><td><font face=\"Arial\">Pick Mastery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_spearmastery){SWD+="<tr><td><font face=\"Arial\">Spear Mastery</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_spellaccuracy){SWD+="<tr><td><font face=\"Arial\">Spell Accuracy</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_triumphantattack){SWD+="<tr><td><font face=\"Arial\">Triumphant Attack</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_twoweaponflurry){SWD+="<tr><td><font face=\"Arial\">Two Weapon Flurry</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_unfetteredstride){SWD+="<tr><td><font face=\"Arial\">Unfettered Stride</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_multiclasspowerswapencounter){SWD+="<tr><td><font face=\"Arial\">Multiclass Power Swap -- Encounter</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_multiclasspowerswaputility){SWD+="<tr><td><font face=\"Arial\">Multiclass Power Swap -- Utility</td><td><font face=\"Arial\"></td></tr>\r"}
if (feat_multiclasspowerswapdaily){SWD+="<tr><td><font face=\"Arial\">Multiclass Power Swap -- Daily</td><td><font face=\"Arial\"></td></tr>\r"}


SWD +="</table>\r</ul><p>\r"


SWD +="<p>"
 
SWD +="At-Will:<p><ul>"; 
x=1; if (total_levels>=21){x=2; }
SWD+="Basic Melee Attack: By weapon, damage "+x+"[W]"+StrengthDamage()+" [standard action]<br>\r";
SWD+="Basic Ranged Attack: By weapon, damage "+x+"[W]"+DexterityDamage()+" [standard action]<br>\r"; 
SWD+="Bull Rush: "+PlusOrMinus(strength_attack_base)+" [base strength attack] vs fortitude [standard action]<br>\r"; 
SWD+="Grab: "+PlusOrMinus(strength_attack_base)+" [base strength attack] vs reflex [standard action]<br>\r"; 
SWD+="Move grabbed target: "+PlusOrMinus(strength_attack_base)+" [base strength attack] vs fortitude [standard action]<br>\r"; 
SWD+="Escape: "+PlusOrMinus(acrobatics_bonus)+" [acrobatics] vs reflex / "+PlusOrMinus(athletics_bonus)+" [athletics] vs fortitude [move action]<br>\r"; 
 if (race_doppelganger){SWD+="Change Shape [doppelganger][minor action]<br>\r"; }
 if (race_goblin){SWD+="Goblin Tactics [Goblin][immediate reaction]<br>\r"; }
 if (race_kobold){SWD+="Shifty [kobold][minor action]<br>\r"; }
if (class_paladin){SWD+="Divine Challenge [Paladin][minor action]<br>\r"; }
if (class_ranger){SWD+="Hunter's Quarry [Ranger][minor action]<br>\r"; }
if (class_paladin){x=modifier_number(wisdom); if (x<1){x=1; }SWD+="Lay On Hands [Paladin][minor action]["+x+"/day]<br>\r"; }
if (class_warlock){SWD+="Warlock's Curse [Warlock][minor action]<br>\r"; }
if (class_wizard){SWD+="Ghost Sound [Wizard][standard action]<br>\r"; }
if (class_wizard){SWD+="Light [Wizard][minor action]<br>\r"; }
if (class_wizard){SWD+="Mage Hand [Wizard][minor action]<br>\r"; }
if (class_wizard){SWD+="Prestidigitation [Wizard][standard action]<br>\r"; }
if (swordmage_assault){SWD+="Aegis of Assault [Swordmage][minor action]<br>\r"; }
if (swordmage_shielding){SWD+="Aegis of Shielding [Swordmage][minor action]<br>\r"; }
if (swordmage_ensnarement){SWD+="Aegis of Ensnarement [Swordmage][minor action]<br>\r"; }
if ((class_druid)|(multi_druid_initiateoftheoldfaith)){SWD+="Wild Shape [Druid][minor action]<br>\r"; }
if (class_shaman){SWD+="Call Spirit Companion [Shaman][minor action]<br>\r"; }
if (multi_shaman_spirittalker){SWD+="Call Spirit Companion [multiclass shaman spirit talker][minor action]<br>\r"; }
if (shaman_stalker){SWD+="Spirit's Fangs [Shaman][opportunity action]<br>\r"; }
if (shaman_protector){SWD+="Spirit's Shield [Shaman][opportunity action]<br>\r"; }
if (class_warden){SWD+="Warden's Fury [Warden][immediate interrupt]<br>\r"; }
if (class_warden){SWD+="Warden's Grasp [Warden][immediate reaction]<br>\r"; }
if (class_other){SWD+="Class Ability ["+document.form1.other_class_name.value+"]<br>\r"; }
if (feat_versatilemaster){stringy="";HalfElfDilettantes();}
if (document.form1.lanceoffaith_box.checked){SWD+="Lance of Faith [Level 1]<br>\r"; }
if (document.form1.priestsshield_box.checked){SWD+="Priest's Shield [Level 1]<br>\r"; }
if (document.form1.righteousbrand_box.checked){SWD+="Righteous Brand [Level 1]<br>\r"; }
if (document.form1.sacredflame_box.checked){SWD+="Sacred Flame [Level 1]<br>\r"; }
if (document.form1.cleave_box.checked){SWD+="Cleave [Level 1]<br>\r"; }
if (document.form1.reapingstrike_box.checked){SWD+="Reaping Strike [Level 1]<br>\r"; }
if (document.form1.surestrike_box.checked){SWD+="Sure Strike [Level 1]<br>\r"; }
if (document.form1.tideofiron_box.checked){SWD+="Tide of Iron [Level 1]<br>\r"; }
if (document.form1.brashstrike_box.checked){SWD+="Brash Strike [MP; Level 1]<br>\r"; }
if (document.form1.crushingsurge_box.checked){SWD+="Crushing Surge [MP; Level 1]<br>\r"; }
if (document.form1.dualstrike_box.checked){SWD+="Dual Strike [MP; Level 1]<br>\r"; }
if (document.form1.footworklure_box.checked){SWD+="Footwork Lure [MP; Level 1]<br>\r"; }
if (document.form1.bolsteringstrike_box.checked){SWD+="Bolstering Strike [Level 1]<br>\r"; }
if (document.form1.enfeeblingstrike_box.checked){SWD+="Enfeebling Strike [Level 1]<br>\r"; }
if (document.form1.holystrike_box.checked){SWD+="Holy Strike [Level 1]<br>\r"; }
if (document.form1.valiantstrike_box.checked){SWD+="Valiant Strike [Level 1]<br>\r"; }
if (document.form1.carefulattack_box.checked){SWD+="Careful Attack [Level 1]<br>\r"; }
if (document.form1.hitandrun_box.checked){SWD+="Hit and Run [Level 1]<br>\r"; }
if (document.form1.nimblestrike_box.checked){SWD+="Nimble Strike [Level 1]<br>\r"; }
if (document.form1.twinstrike_box.checked){SWD+="Twin Strike [Level 1]<br>\r"; }
if (document.form1.circlingstrike_box.checked){SWD+="Circling Strike [Level 1]<br>\r";}
if (document.form1.predatorstrike_box.checked){SWD+="Predator Strike [Level 1]<br>\r";}
if (document.form1.deftstrike_box.checked){SWD+="Deft Strike [Level 1]<br>\r"; }
if (document.form1.heartenthebeast_box.checked){SWD+="Hearten the Beast [Level 2]<br>\r";}
if (document.form1.packalertness_box.checked){SWD+="Pack Alertness [Level 2][minor action]<br>\r";}
if (document.form1.quickrecoverypower_box.checked){SWD+="Quick Recovery [Level 10][immediate reaction]<br>\r";}




if (document.form1.piercingstrike_box.checked){SWD+="Piercing Strike [Level 1]<br>\r"; }
if (document.form1.ripostestrike_box.checked){SWD+="Riposte Strike [Level 1]<br>\r"; }
if (document.form1.slyflourish_box.checked){SWD+="Sly Flourish [Level 1]<br>\r"; }
if (document.form1.dishearteningstrike_box.checked){SWD+="Disheartening Strike [MP; Level 1]<br>\r"; }
if (document.form1.direradiance_box.checked){SWD+="Dire Radiance [Level 1]<br>\r"; }
if (document.form1.eldritchblast_box.checked){SWD+="Eldritch Blast [Level 1]<br>\r"; }
if (document.form1.eyebite_box.checked){SWD+="Eyebite [Level 1]<br>\r"; }
if (document.form1.eyesofthevestige_box.checked){SWD+="Eyes of the Vestige [Level 1]<br>\r"; }
if (document.form1.hellishrebuke_box.checked){SWD+="Hellish Rebuke [Level 1]<br>\r"; }
if (document.form1.spitefulglamor_box.checked){SWD+="Spiteful Glamor [FRPG; Level 1]<br>\r"; }
if (document.form1.commandersstrike_box.checked){SWD+="Commander's Strike [Level 1]<br>\r"; }
if (document.form1.furioussmash_box.checked){SWD+="Furious Smash [Level 1]<br>\r"; }
if (document.form1.vipersstrike_box.checked){SWD+="Viper's Strike [Level 1]<br>\r"; }
if (document.form1.wolfpacktactics_box.checked){SWD+="Wolf Pack Tactics [Level 1]<br>\r"; }
if (document.form1.brashassault_box.checked){SWD+="Brash Assault [Level 1]<br>\r"; }
if (document.form1.openingshove_box.checked){SWD+="Opening Shove [Level 1]<br>\r"; }
if (document.form1.cloudofdaggers_box.checked){SWD+="Cloud of Daggers [Level 1]<br>\r"; }
if (document.form1.magicmissile_box.checked){SWD+="Magic Missile [Level 1]<br>\r"; }
if (document.form1.rayoffrost_box.checked){SWD+="Ray of Frost [Level 1]<br>\r"; }
if (document.form1.scorchingburst_box.checked){SWD+="Scorching Burst [Level 1]<br>\r"; }
if (document.form1.thunderwave_box.checked){SWD+="Thunderwave [Level 1]<br>\r"; }
if (document.form1.illusoryambush_box.checked){SWD+="Illusory Ambush [Level 1]<br>\r"; }
if (document.form1.phantombolt_box.checked){SWD+="Phantom Bolt [Level 1]<br>\r"; }
if (document.form1.stormpillar_box.checked){SWD+="Storm Pillar [Level 1]<br>\r"; }


if (document.form1.bondofpursuit_box.checked){SWD+="Bond of Pursuit [Level 1]<br>\r";}
if (document.form1.bondofretribution_box.checked){SWD+="Bond of Retribution [Level 1]<br>\r";}
if (document.form1.overwhelmingstrike_box.checked){SWD+="Overwhelming Strike [Level 1]<br>\r";}
if (document.form1.radiantvengeance_box.checked){SWD+="Radiant Vengeance [Level 1]<br>\r";}
if (document.form1.devastatingstrike_box.checked){SWD+="Devastating Strike [Level 1]<br>\r";}
if (document.form1.howlingstrike_box.checked){SWD+="Howling Strike [Level 1]<br>\r";}
if (document.form1.pressingstrike_box.checked){SWD+="Pressing Strike [Level 1]<br>\r";}
if (document.form1.recuperatingstrike_box.checked){SWD+="Recuperating Strike [Level 1]<br>\r";}
if (document.form1.guidingstrike_box.checked){SWD+="Guiding Srike [Level 1]<br>\r";}
if (document.form1.misdirectedmark_box.checked){SWD+="Misdirected Mark [Level 1]<br>\r";}
if (document.form1.viciousmockery_box.checked){SWD+="Vicious Mockery [Level 1]<br>\r";}
if (document.form1.warsongstrike_box.checked){SWD+="Warsong Strike [Level 1]<br>\r";}
if (document.form1.jinxshot_box.checked){SWD+="Jinx Shot [AP; Level 1]<br>\r";}
if (document.form1.callofthebeast_box.checked){SWD+="Call of the Beast [Level 1]<br>\r";}
if (document.form1.chillwind_box.checked){SWD+="Chill Wind [Level 1]<br>\r";}
if (document.form1.flameseed_box.checked){SWD+="Flame Seed [Level 1]<br>\r";}
if (document.form1.graspingclaws_box.checked){SWD+="Grasping Claws [Level 1]<br>\r";}
if (document.form1.pounce_box.checked){SWD+="Pounce [Level 1]<br>\r";}
if (document.form1.savagerend_box.checked){SWD+="Savage Rend [Level 1]<br>\r";}
if (document.form1.stormspike_box.checked){SWD+="Storm Spike [Level 1]<br>\r";}
if (document.form1.thornwhip_box.checked){SWD+="Thorn Whip [Level 1]<br>\r";}
if (document.form1.avenginglight_box.checked){SWD+="Avenging Light [Level 1]<br>\r";}
if (document.form1.divinebolts_box.checked){SWD+="Divine Bolts [Level 1]<br>\r";}
if (document.form1.graspingshards_box.checked){SWD+="Grasping Shards [Level 1]<br>\r";}
if (document.form1.sunstrike_box.checked){SWD+="Sun Strike [Level 1]<br>\r";}
if (document.form1.vanguardslightning_box.checked){SWD+="Vanguard's Lightning [Level 1]<br>\r";}
if (document.form1.defendingstrike_box.checked){SWD+="Defending Strike [Level 1]<br>\r";}
if (document.form1.hauntingspirits_box.checked){SWD+="Haunting Spirits [Level 1]<br>\r";}
if (document.form1.protectingstrike_box.checked){SWD+="Protecting Strike [Level 1]<br>\r";}
if (document.form1.stalkersstrike_box.checked){SWD+="Stalker's Strike [Level 1]<br>\r";}
if (document.form1.watchersstrike_box.checked){SWD+="Watcher's Strike [Level 1]<br>\r";}
if (document.form1.wrathofwinter_box.checked){SWD+="Wrath of Winter [Level 1]<br>\r";}
if (document.form1.acidorb_box.checked){SWD+="Acid Orb [Level 1]<br>\r";}
if (document.form1.burningspray_box.checked){SWD+="Burning Spray [Level 1]<br>\r";}
if (document.form1.chaosbolt_box.checked){SWD+="Chaos Bolt [Level 1]<br>\r";}
if (document.form1.dragonfrost_box.checked){SWD+="Dragon Frost [Level 1]<br>\r";}
if (document.form1.stormwalk_box.checked){SWD+="Storm Walk [Level 1]<br>\r";}
if (document.form1.blazingstarfall_box.checked){SWD+="Blazing Starfall [AP; Level 1]<br>\r";}
if (document.form1.lightningstrike_box.checked){SWD+="Lightning Strike [AP; Level 1]<br>\r";}
if (document.form1.earthshieldstrike_box.checked){SWD+="Earthshield Strike [Level 1]<br>\r";}
if (document.form1.strengthofstone_box.checked){SWD+="Strength of Stone [Level 1]<br>\r";}
if (document.form1.thornstrike_box.checked){SWD+="Thorn Strike [Level 1]<br>\r";}
if (document.form1.weightofearth_box.checked){SWD+="Weight of Earth [Level 1]<br>\r";}




if (document.form1.boomingblade_box.checked){SWD+="Booming Blade [FRPG; Level 1]<br>\r"; }
if (document.form1.greenflameblade_box.checked){SWD+="Greenflame Blade [FRPG; Level 1]<br>\r"; }
if (document.form1.lightninglure_box.checked){SWD+="Lightning Lure [FRPG; Level 1]<br>\r"; }
if (document.form1.swordburst_box.checked){SWD+="Sword Burst [FRPG; Level 1]<br>\r"; }
if (document.form1.luringstrike_box.checked){SWD+="Luring Strike [AP; Level 1]<br>\r"; }



if (document.form1.other01atwill_1_box.checked){SWD+=document.form1.other01atwill_1.value+" [Level 1]:<br>\r"; }
if (document.form1.other01atwill_2_box.checked){SWD+=document.form1.other01atwill_2.value+" [Level 1]:<br>\r"; }
if (document.form1.other01atwill_3_box.checked){SWD+=document.form1.other01atwill_3.value+" [Level 1]:<br>\r"; }
if (document.form1.fleetingghost_box.checked){SWD+="Fleeting Ghost [Level 2 Utility][move action]<br>\r"; }
if (document.form1.greatleapr_box.checked){SWD+="Great Leap [Level 2 Utility][move action]<br>\r"; }
if (document.form1.other02atwill_box.checked){SWD+=document.form1.other02atwill.value+" [Level 2 Utility]:<br>\r"; }
if (document.form1.holylantern_box.checked){SWD+="Holy Lantern [Level 6 Utility]<br>\r"; }
if (document.form1.chameleon_box.checked){SWD+="Chameleon [Level 6 Utility][immediate interrupt]<br>\r"; }
if (document.form1.nimbleclimb_box.checked){SWD+="Nimble Climb [Level 6 Utility]<br>\r"; }
if (document.form1.seastride_box.checked){SWD+="Sea Stride [Level 6 Utility][minor action]<br>\r";}

if (document.form1.other06atwill_box.checked){SWD+=document.form1.other06atwill.value+" [Level 6 Utility]:<br>\r"; }

if (document.form1.shadowstride_box.checked){SWD+="Shadow Stride [Level 10 Utility][move action]<br>\r"; }
if (document.form1.other10atwill_box.checked){SWD+=document.form1.other10atwill.value+" [Level 10 Utility]:<br>\r"; }
if (paragon_scionofarkhosia){SWD+="Dragon Wings [Scion of Arkhosia Level 12 Utility][move action]<br>\r";}
if (document.form1.other16atwill_box.checked){SWD+=document.form1.other16atwill.value+" [Level 16 Utility]:<br>\r"; }
if (document.form1.monkeysgrip_box.checked){SWD+="Monkey's Grip [Level 16 Utility][minor action]<br>\r";}
if (document.form1.other22atwill_box.checked){SWD+=document.form1.other22atwill.value+" [Level 22 Utility]:<br>\r"; }
if (epic_gloriousspirit){SWD+="<img src=box.gif>qqq [Glorious Spirit Level 26 Utility]<br>\r";}

SWD+="<font size=\"-1\"><p><table>"; 
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Other Standard Actions:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Administer a potion; Aid another; Charge [+1 to basic melee attack or bull rush]; Coup de grace; Equip / stow shield; Ready an action; Total defense; Sustain standard action; Some skills during combat (i.e., Acrobatics -- fast escape; Bluff, Heal -- first aid, Intimidate,  Thievery depending on circumstances);";
SWD+=" <p></td></tr>\r";
x=speed_squares+2; if (feat_fastrunner){x+=2; }
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Other Move Actions:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Crawl; Run [speed "+x+"]; Stand up; Shift; Squeeze; Walk; may include some skills during combat (i.e., Acrobatics, Athletics)<p></td></tr>\r"; 
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Other Minor Actions:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Draw / sheathe weapon; Drink a potion; Drop prone; Load a crossbow; Open / close a door; Pick up an item; Retrieve / stow an item; Perception -- active (as per revision),Sustain minor action; Some skills during combat (i.e., Insight)";
if (has_arcane_familiar()){SWD+="; switch familiar active/passive;"}


SWD+="<p></td></tr>\r";
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Other Immediate Action:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Readied action<p></td></tr>\r"; 
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Other Opportunity Action:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Opportunity attack<p></td></tr>\r"; 
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Other Free Actions:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Drop held items; End a grab; Talk<p></td></tr>\r"; 
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Other Non-Actions:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Delay; Endurance checks; Insight to counter Bluff; Knowledge checks; Perception -- passive<p></td></tr>\r"; 
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Short rest:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Healing surges as available<p></td></tr>\r"; 
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Five minutes:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Normal escape from restraints (Acrobatics)<p></td></tr>\r"; 
SWD+="<tr><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">One hour:</td><td valign=\"top\"><font face=\"Arial\"><font size=\"-1\">Forage; Streetwise check<p></td></tr>\r"; 
SWD +="</table></font size>"; 
SWD +="</ul><p>"; 

SWD +="Encounter Powers:<p><ul>";





SWD+="<img src=box.gif>Second Wind"; 
if (race_dwarf){SWD+=" [minor action for dwarf]"; }
if (feat_improvedsecondwind){SWD+=" [+5 feat bonus applies]"; }
SWD+="<br>\r"
SWD+="<img src=box.gif>Spend an Action Point [free action, not in surprise round]<br>\r"
if (dragonbreath_acid){SWD+="<img src=box.gif>Dragon Breath, Acid [Dragonborn][minor action]<br>\r"; }
if (dragonbreath_cold){SWD+="<img src=box.gif>Dragon Breath, Cold [Dragonborn][minor action]<br>\r"; }
if (dragonbreath_fire){SWD+="<img src=box.gif>Dragon Breath, Fire [Dragonborn][minor action]<br>\r"; }
if (dragonbreath_lightning){SWD+="<img src=box.gif>Dragon Breath, Lightning [Dragonborn][minor action]<br>\r"; }
if (dragonbreath_poison){SWD+="<img src=box.gif>Dragon Breath, Poison [Dragonborn][minor action]<br>\r"; }
if (race_eladrin){SWD+="<img src=box.gif>Fey Step [Eladrin][move action]<br>\r"; }
if (race_elf){SWD+="<img src=box.gif>Elven Accuracy [Elf][free action]<br>\r"; }
if (!feat_versatilemaster){stringy="<img src=box.gif>";HalfElfDilettantes();}
if (race_halfling){SWD+="<img src=box.gif>Second Chance [Halfling][immediate interrupt]<br>\r"; }
if (race_tiefling){SWD+="<img src=box.gif>Infernal Wrath [Tiefling][minor action]<br>\r"; }
 if (race_bugbear){SWD+="<img src=box.gif>Predatory Eye [Bugbear]<br>\r"; }
 if (race_drow){SWD+="<img src=box.gif>Cloud of Darkness / Darkfire [Drow]<br>\r"; }
 if (genasi_earthsoul){SWD+="<img src=box.gif>Earthshock [Earthsoul]<br>\r"; }
 if (genasi_firesoul){SWD+="<img src=box.gif>Firepulse [Firesoul]<br>\r"; }
 if (race_bladeling){SWD+="<img src=box.gif>Razor Swarm [Bladeling]<br>\r"; }
 if (race_deva){SWD+="<img src=box.gif>Memory of a Thousand Lifetimes [Deva]<br>\r"; }
 if (race_goliath){SWD+="<img src=box.gif>Stone's Endurance [Goliath]<br>\r"; }
 if (race_halforc){SWD+="<img src=box.gif>Furious Assault [Half-Orc]<br>\r"; }
 if (genasi_stormsoul){SWD+="<img src=box.gif>Promise of Storm [Stormsoul]<br>\r"; }
 if (genasi_watersoul){SWD+="<img src=box.gif>Swiftcurrent [Watersoul]<br>\r"; }
 if (genasi_windsoul){SWD+="<img src=box.gif>Windwalker [Windsoul]<br>\r"; }
 if (race_githyanki){SWD+="<img src=box.gif>Telekinetic Leap [Githyanki]<br>\r"; }
 if (race_githzerai){SWD+="<img src=box.gif>Iron Mind [Githzerai]<br>\r"; }
 if (race_gnoll){SWD+="<img src=box.gif>Ferocious Charge [Gnoll]<br>\r"; }
 if (race_gnome){SWD+="<img src=box.gif>Fade Away [Gnome]<br>\r"; }
 if (race_hobgoblin){SWD+="<img src=box.gif>Hobgoblin Resilience [Hobgoblin]<br>\r"; }
 if (race_minotaur){SWD+="<img src=box.gif>Goring Charge [Minotaur]<br>\r"; }
 if (race_orc){SWD+="<img src=box.gif>Warrior's Surge [Orc]<br>\r"; }
 if (race_shadarkai){SWD+="<img src=box.gif>Shadow Jaunt [Shadar-kai]<br>\r"; }
 if (race_shifterlongtooth){SWD+="<img src=box.gif>Longtooth Shifting [Longtooth Shifter]<br>\r"; }
 if (race_shifterrazorclaw){SWD+="<img src=box.gif>Razorclaw Shifting [Razorclaw Shifter]<br>\r"; }
 if (race_warforged){SWD+="<img src=box.gif>Warforged Resolve [Warforged]<br>\r"; }
 if (race_other){SWD+="<img src=box.gif>Racial Ability ["+document.form1.other_race_name.value+"] (?)<br>\r"; }

if (multi_invoker_acolyteofdivinesecrets){SWD+="At-Will Invoker Attack Power [multiclass invoker, list choice here]: <br>\r"; }
if (multi_druid_initiateoftheoldfaith){SWD+="At-Will Druid Beast Power [multiclass druid, initiate of the old faith, list choice here]: <br>\r"; }
x=2;if (total_levels>10){x=3;}if (total_levels>20){x=4;}
if (multi_sorcerer_arcaneprodigy){SWD+="<img src=box.gif>+"+x+" on next damage roll [multiclass sorcerer arcane prodigy][free action]<br>\r"; }
if (multi_warden_defenderofthewild){SWD+="<img src=box.gif>Mark each adjacent enemy [multiclass warden defender of the wild][free action]<br>\r"; }
if (multi_avenger_discipleofdivinewrath){SWD+="<img src=box.gif>Oath of Enmity x1 turn [multiclass avenger disciple of divine wrath][minor action]<br>\r"; }
if (multi_shaman_spirittalker){SWD+="<img src=box.gif>Spirit's Fangs / Shield [multiclass shaman spirit talker][opportunity action]<br>\r"; }
if (multi_warlock_studentofmalediction){SWD+="<img src=box.gif>Warlock's Curse [multiclass warlock student of maledition][minor action]<br>\r"; }


if ((paragon_soulguide)|(class_cleric) | (class_paladin) |(class_avenger) | (class_invoker)){SWD+="<img src=box.gif>Channel Divinity<br>\r"; }
if (class_cleric){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Divine Fortune [free action]<br>\r"; }
if (class_cleric){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Turn Undead <br>\r"; }
if (class_paladin){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Divine Mettle [minor action]<br>\r"; }
if (class_paladin){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Divine Strength [minor action]<br>\r"; }
if (class_avenger){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Abjure Undead<br>\r"; }
if (class_avenger){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Divine Guidance [immediate interrupt]<br>\r"; }
if (invoker_wrath){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Armor of Wrath [immediate reaction]<br>\r"; }
if (invoker_preservation){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Preserver's Rebuke [immediate reaction]<br>\r"; }
if (class_invoker){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Rebuke Undead<br>\r"; }


if (feat_armorofbahamut){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Armor of Bahamut &nbsp; &nbsp<br>\r"; }
if (feat_avandrasrescue){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Avandra's Rescue &nbsp; &nbsp<br>\r"; }
if (feat_corellonsgrace){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Corellon's Grace &nbsp; &nbsp<br>\r"; }
if (feat_harmonyoferathis){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Harmony of Erathis &nbsp; &nbsp<br>\r"; }
if (feat_iounspoise){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Ioun's Poise &nbsp; &nbsp<br>\r"; }
if (feat_kordsfavor){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Kord's Favor &nbsp; &nbsp<br>\r"; }
if (feat_melorastide){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Meelora's Tide &nbsp; &nbsp<br>\r"; }
if (feat_moradinsresolve){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Moradin's Resolve &nbsp; &nbsp<br>\r"; }
if (feat_pelorsradiance){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Pelor's Radiance &nbsp; &nbsp<br>\r"; }
if (feat_ravenqueensblessing){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Raven Queen's Blessing &nbsp; &nbsp<br>\r"; }
if (feat_sehaninesreversal){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Sehanine's Reversal &nbsp; &nbsp<br>\r"; }
if (feat_angharradhsfavor){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Angharradh's Favor &nbsp; &nbsp<br>\r"; }
if (feat_berronarssalve){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Berronar's Salve &nbsp; &nbsp<br>\r"; }
if (feat_blessingofsilvanus){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  Blessing of Silvanus&nbsp; &nbsp<br>\r"; }
if (feat_chaunteasblessing){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Chauntea's Blessing &nbsp; &nbsp<br>\r"; }
if (feat_eyesofselune){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Eyes of Selune &nbsp; &nbsp<br>\r"; }
if (feat_fleetnessofmielikki){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Fleetness of Mielikki &nbsp; &nbsp<br>\r"; }
if (feat_glittergoldsgambit){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Glittergold's Gambit &nbsp; &nbsp<br>\r"; }
if (feat_gondscraft){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Gond's Craft&nbsp<br>\r"; }
if (feat_ilmatersmartyrdom){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Ilmater's Martyrdom &nbsp; &nbsp<br>\r"; }
if (feat_kelemvorsjudgment){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Kelemvor's Judgment &nbsp; &nbsp<br>\r"; }
if (feat_oghmasrecall){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Oghma's Recall &nbsp; &nbsp<br>\r"; }
if (feat_powerofamaunator){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Power of Amaunator &nbsp; &nbsp<br>\r"; }
if (feat_righteousrageoftempus){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Righteous Rage of Tempus &nbsp; &nbsp<br>\r"; }
if (feat_sheelaperyroylsgift){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Sheela Peryroyl's Gift &nbsp; &nbsp<br>\r"; }
if (feat_sunestouch){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Sune's Touch &nbsp; &nbsp<br>\r"; }
if (feat_tormsjustice){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Torm's Justice &nbsp; &nbsp<br>\r"; }
if (feat_tymorascoin){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Tymora's Coin &nbsp; &nbsp<br>\r"; }
if (feat_waukeenssilvertongue){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Waukeen's Silver Tongue &nbsp; &nbsp<br>\r"; }
if (paragon_soulguide){SWD+="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Rebuke Soul &nbsp; &nbsp<br>\r"; }
if (class_cleric){SWD+="<img src=box.gif>Healing Word [minor action, 2x/encounter, maximum 1x/round]<br>\r"; }
if (class_warlord)
 {
  x=2;if (total_levels>=16){x=3;}
  SWD+="<img src=box.gif>Inspiring Word [minor action]["+x+"x/encounter]<br>\r";
 }
if (class_wizard){SWD+="<img src=box.gif>Use Implement [free action]<br>\r"; }
if (class_avenger){SWD+="<img src=box.gif>Oath of Enmity [minor action]<br>\r"; }
if (barbarian_thaneborn){SWD+="<img src=box.gif>Roar of Triumph [free action]<br>\r"; }
if (barbarian_rageblood){SWD+="<img src=box.gif>Swift Charge [free action]<br>\r"; }
if (class_bard){SWD+="<img src=box.gif>Majestic Word [minor action]<br>\r"; }
if (class_bard){SWD+="<img src=box.gif>Words of Friendship [minor action]<br>\r"; }
if (class_shaman){SWD+="<img src=box.gif>Healing Spirit [minor action]<br>\r"; }
if (class_shaman){SWD+="<img src=box.gif>Speak with Spirits [minor action]<br>\r"; }
if (class_other){SWD+="<img src=box.gif>Class Ability ["+document.form1.other_class_name.value+"]<br>\r"; }
if ((multi_fighter_studentofthesword)&(fighter_onehand)){SWD+="<img src=box.gif>+1 to hit with a one-handed weapon [Studemt of the Sword multiclass fighter]<br>\r"; }
if ((multi_fighter_studentofthesword)&(fighter_twohand)){SWD+="<img src=box.gif>+1 to hit with a two-handed weapon [Student of the Sword multiclass fighter]<br>\r"; }
if (multi_paladin_soldierofthefaith){SWD+="<img src=box.gif>Divine Challenge [Soldier of the Faith multiclass paladin]<br>\r"; }
if (multi_ranger_warriorofthewild){SWD+="<img src=box.gif>Hunter's Quarry [Warrior of the Wild multiclass ranger][minor action] "+HuntersQuarryDamage()+"<br>\r"; }
if (multi_rogue_sneakofshadows){SWD+="<img src=box.gif>Sneak Attack [Sneak of Shadows multiclass rogue][sneak attack once per encounter with combat advantage]<br>\r"; }
if (multi_warlock_pactinitiate)
 {
  if (warlock_star){SWD+="<img src=box.gif>Dire Radiance [multiclass star warlock]<br>\r"; }
  if (warlock_fey){SWD+="<img src=box.gif>Eyebite [multiclass fey warlock]<br>\r"; }
  if (warlock_infernal){SWD+="<img src=box.gif>Hellish Rebuke [multiclass infernal warlock]<br>\r"; }
  if (warlock_dark){SWD+="<img src=box.gif>Spiteful Glamor [multiclass dark warlock]<br>\r"; }
  if (warlock_vestige){SWD+="<img src=box.gif>Eyes of the Vestige [multiclass vestige warlock]<br>\r"; }
  if (warlock_other){SWD+="<img src=box.gif>At-will Power [multiclass "+document.form1.otherwarlockpact.value+" warlock]<br>\r"; }
 }
if (multi_warlord_studentofbattle){SWD+="<img src=box.gif>Inspiring Word [Student of Battle multiclass warlord]<br>\r"; }
if (multi_wizard_arcaneinitiate)
 {
  if (document.form1.arcane_initiate_list.selectedIndex==0){SWD+="<img src=box.gif>Cloud of Daggers [multiclass wizard]<br>\r";}
  if (document.form1.arcane_initiate_list.selectedIndex==1){SWD+="<img src=box.gif>Magic Missile [multiclass wizard]<br>\r";}
  if (document.form1.arcane_initiate_list.selectedIndex==2){SWD+="<img src=box.gif>Ray of Frost [multiclass wizard]<br>\r";}
  if (document.form1.arcane_initiate_list.selectedIndex==3){SWD+="<img src=box.gif>Scorching Burst [multiclass wizard]<br>\r";}
  if (document.form1.arcane_initiate_list.selectedIndex==4){SWD+="<img src=box.gif>Thunderwave [multiclass wizard]<br>\r";}
  if (document.form1.arcane_initiate_list.selectedIndex==5){SWD+="<img src=box.gif>Illusory Ambush [multiclass wizard]<br>\r";}
  if (document.form1.arcane_initiate_list.selectedIndex==6){SWD+="<img src=box.gif>Phantom Bolt [multiclass wizard]<br>\r";}
  if (document.form1.arcane_initiate_list.selectedIndex==7){SWD+="<img src=box.gif>Storm Pillar [multiclass wizard]<br>\r";}
 }
if (feat_feytrickster)
 {
  SWD+="<img src=box.gif>Mage Hand [fey trickster]<br>\r";
  SWD+="<img src=box.gif>Prestidigitation [fey trickster]<br>\r";
 }

if (document.form1.causefear_box.checked){SWD+="<img src=box.gif>Cause Fear [Level 1]<br>\r"; }
if (document.form1.divineglow_box.checked){SWD+="<img src=box.gif>Divine Glow [Level 1]<br>\r"; }
if (document.form1.healingstrike_box.checked){SWD+="<img src=box.gif>Healing Strike [Level 1]<br>\r"; }
if (document.form1.wrathfulthunder_box.checked){SWD+="<img src=box.gif>Wrathful Thunder [Level 1]<br>\r"; }
if (document.form1.coveringattack_box.checked){SWD+="<img src=box.gif>Covering Attack [Level 1]<br>\r"; }
if (document.form1.passingattack_box.checked){SWD+="<img src=box.gif>Passing Attack [Level 1]<br>\r"; }
if (document.form1.spinningsweep_box.checked){SWD+="<img src=box.gif>Spinning Sweep [Level 1]<br>\r"; }
if (document.form1.steelserpentstrike_box.checked){SWD+="<img src=box.gif>Steel Serpent Strike [Level 1]<br>\r"; }
if (document.form1.fearsomesmite_box.checked){SWD+="<img src=box.gif>Fearsome Smite [Level 1]<br>\r"; }
if (document.form1.piercingsmite_box.checked){SWD+="<img src=box.gif>Piercing Smite [Level 1]<br>\r"; }
if (document.form1.radiantsmite_box.checked){SWD+="<img src=box.gif>Radiant Smite [Level 1]<br>\r"; }
if (document.form1.shieldingsmite_box.checked){SWD+="<img src=box.gif>Shielding Smite [Level 1]<br>\r"; }
if (document.form1.direwolverinestrike_box.checked){SWD+="<img src=box.gif>Dire Wolverine Strike [Level 1]<br>\r"; }
if (document.form1.evasivestrike_box.checked){SWD+="<img src=box.gif>Evasive Strike [Level 1]<br>\r"; }
if (document.form1.foxscunning_box.checked){SWD+="<img src=box.gif>Fox's Cunning [Level 1][immediate reaction]<br>\r"; }
if (document.form1.twofangedstrike_box.checked){SWD+="<img src=box.gif>Two Fanged Strike [Level 1]<br>\r"; }
if (document.form1.enclosetheprey_box.checked){SWD+="<img src=box.gif>&nbsp;Enclose the Prey [Level 1]<br>\r";}
if (document.form1.synchronizedstrike_box.checked){SWD+="<img src=box.gif>&nbsp;Synchronized Strike [Level 1]<br>\r";}
if (document.form1.dazingstrike_box.checked){SWD+="<img src=box.gif>Dazing Strike [Level 1]<br>\r"; }
if (document.form1.kingscastle_box.checked){SWD+="<img src=box.gif>King's Castle [Level 1]<br>\r"; }
if (document.form1.positioningstrike_box.checked){SWD+="<img src=box.gif>Positioning Strike [Level 1]<br>\r"; }
if (document.form1.torturousstrike_box.checked){SWD+="<img src=box.gif>Torturous Strike [Level 1]<br>\r"; }
if (document.form1.diabolicgrasp_box.checked){SWD+="<img src=box.gif>Diabolic Grasp [Level 1]<br>\r"; }
if (document.form1.dreadfulword_box.checked){SWD+="<img src=box.gif>Dreadful Word [Level 1]<br>\r"; }
if (document.form1.vampiricembrace_box.checked){SWD+="<img src=box.gif>Vampiric Embrace [Level 1]<br>\r"; }
if (document.form1.witchfire_box.checked){SWD+="<img src=box.gif>Witchfire [Level 1]<br>\r"; }
if (document.form1.guardingattack_box.checked){SWD+="<img src=box.gif>Guarding Attack [Level 1]<br>\r"; }
if (document.form1.hammerandanvil_box.checked){SWD+="<img src=box.gif>Hammer and Anvil [Level 1]<br>\r"; }
if (document.form1.leafonthewind_box.checked){SWD+="<img src=box.gif>Leaf on the Wind [Level 1]<br>\r"; }
if (document.form1.warlordsfavor_box.checked){SWD+="<img src=box.gif>Warlord's Favor [Level 1]<br>\r"; }
if (document.form1.burninghands_box.checked){SWD+="<img src=box.gif>Burning Hands [Level 1]<br>\r"; }
if (document.form1.chillstrike_box.checked){SWD+="<img src=box.gif>Chill Strike [Level 1]<br>\r"; }
if (document.form1.forceorb_box.checked){SWD+="<img src=box.gif>Force Orb [Level 1]<br>\r"; }
if (document.form1.icyterrain_box.checked){SWD+="<img src=box.gif>Icy Terrain [Level 1]<br>\r"; }
if (document.form1.rayofenfeeblement_box.checked){SWD+="<img src=box.gif>Ray of Enfeeblement [Level 1]<br>\r"; }


if (document.form1.angelicalacrity_box.checked){SWD+="<img src=box.gif>Angelic Alacrity [Level 1]<br>\r";}
if (document.form1.avengingecho_box.checked){SWD+="<img src=box.gif>Avenging Echo [Level 1]<br>\r";}
if (document.form1.sharedmadness_box.checked){SWD+="<img src=box.gif>Shared Madness [Level 1]<br>\r";}
if (document.form1.whirlwindcharge_box.checked){SWD+="<img src=box.gif>Whirlwind Charge [Level 1]<br>\r";}
if (document.form1.avalanchestrike_box.checked){SWD+="<img src=box.gif>Avalanche Strike [Level 1]<br>\r";}
if (document.form1.bloodletting_box.checked){SWD+="<img src=box.gif>Bloodletting [Level 1]<br>\r";}
if (document.form1.greatcleave_box.checked){SWD+="<img src=box.gif>Great Cleave [Level 1]<br>\r";}
if (document.form1.vaultthefallen_box.checked){SWD+="<img src=box.gif>Vault the Fallen [Level 1]<br>\r";}
if (document.form1.blunder_box.checked){SWD+="<img src=box.gif>Blunder [Level 1]<br>\r";}
if (document.form1.fastfriends_box.checked){SWD+="<img src=box.gif>Fast Friends [Level 1]<br>\r";}
if (document.form1.inspiringrefrain_box.checked){SWD+="<img src=box.gif>Inspiring Refrain [Level 1]<br>\r";}
if (document.form1.shoutoftriumph_box.checked){SWD+="<img src=box.gif>Shout of Triumph [Level 1]<br>\r";}
if (document.form1.culltheherd_box.checked){SWD+="<img src=box.gif>Cull the Herd [Level 1]<br>\r";}
if (document.form1.dartingbite_box.checked){SWD+="<img src=box.gif>Darting Bite [Level 1]<br>\r";}
if (document.form1.frostflash_box.checked){SWD+="<img src=box.gif>Frost Flash [Level 1]<br>\r";}
if (document.form1.twistingvines_box.checked){SWD+="<img src=box.gif>Twisting Vines [Level 1]<br>\r";}
if (document.form1.astralterror_box.checked){SWD+="<img src=box.gif>Astral Terror [Level 1]<br>\r";}
if (document.form1.bladesofastralfire_box.checked){SWD+="<img src=box.gif>Blades of Astral Fire [Level 1]<br>\r";}
if (document.form1.spearoftheinquisitor_box.checked){SWD+="<img src=box.gif>Spear of the Inquisitor [Level 1]<br>\r";}
if (document.form1.thunderofjudgment_box.checked){SWD+="<img src=box.gif>Thunder of Judgment [Level 1]<br>\r";}
if (document.form1.calltotheancestralwarrior_box.checked){SWD+="<img src=box.gif>Call to the Ancestral Warrior [Level 1]<br>\r";}
if (document.form1.calltotheancientdefender_box.checked){SWD+="<img src=box.gif>Call to the Ancient Defender [Level 1]<br>\r";}
if (document.form1.thunderbearswarding_box.checked){SWD+="<img src=box.gif>Thunder Bear's Warding [Level 1]<br>\r";}
if (document.form1.twinpanthers_box.checked){SWD+="<img src=box.gif>Twin Panthers [Level 1]<br>\r";}
if (document.form1.bedevilingburst_box.checked){SWD+="<img src=box.gif>Bedeviling Burst [Level 1]<br>\r";}
if (document.form1.explosivepyre_box.checked){SWD+="<img src=box.gif>Explosive Pyre [Level 1]<br>\r";}
if (document.form1.frostbind_box.checked){SWD+="<img src=box.gif>Frostbind [Level 1]<br>\r";}
if (document.form1.tempestbreath_box.checked){SWD+="<img src=box.gif>Tempest Breath [Level 1]<br>\r";}
if (document.form1.thunderslam_box.checked){SWD+="<img src=box.gif>Thunder Slam [Level 1]<br>\r";}
if (document.form1.earthspikes_box.checked){SWD+="<img src=box.gif>Earth Spikes [Level 1]<br>\r";}
if (document.form1.hungryearth_box.checked){SWD+="<img src=box.gif>Hungry Earth [Level 1]<br>\r";}
if (document.form1.thunderramassault_box.checked){SWD+="<img src=box.gif>Thunder Ram Assault [Level 1]<br>\r";}
if (document.form1.wildbloodfrenzy_box.checked){SWD+="<img src=box.gif>Wild Blood Frenzy [Level 1]<br>\r";}






if (document.form1.chillingblow_box.checked){SWD+="<img src=box.gif>Chilling Blow [FRPG; Level 1]<br>\r"; }
if (document.form1.flamecyclone_box.checked){SWD+="<img src=box.gif>Flame Cyclone [FRPG; Level 1]<br>\r"; }
if (document.form1.foesnare_box.checked){SWD+="<img src=box.gif>Foesnare [FRPG; Level 1]<br>\r";}
if (document.form1.lightningclash_box.checked){SWD+="<img src=box.gif>Lightning Clash [FRPG; Level 1]<br>\r";}
if (document.form1.cursebite_box.checked){SWD+="<img src=box.gif>Cursebite [FRPG; Level 1]<br>\r";}
if (document.form1.flickeringvenom_box.checked){SWD+="<img src=box.gif>Flickering Venom [FRPG; Level 1]<br>\r";}
if (document.form1.horrificmawbite_box.checked){SWD+="<img src=box.gif>Horrific Maw Bite [FRPG; Level 1]<br>\r";}
if (document.form1.plaguelash_box.checked){SWD+="<img src=box.gif>Plague Lash [FRPG; Level 1]<br>\r";}
if (document.form1.other01encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other01encounter.value+" [Level 1]:<br>\r"; }
if (document.form1.divineaid_box.checked){SWD+="<img src=box.gif>Divine Aid [Level 2 Utility]<br>\r"; }
if (document.form1.sanctuary_box.checked){SWD+="<img src=box.gif>Sanctuary [Level 2 Utility]<br>\r"; }
if (document.form1.getoverhere_box.checked){SWD+="<img src=box.gif>Get Over Here [Level 2 Utility][move action]<br>\r"; }
if (document.form1.noopening_box.checked){SWD+="<img src=box.gif>No Opening [Level 2 Utility][immediate interupt]<br>\r"; }
if (document.form1.crucialadvice_box.checked){SWD+="<img src=box.gif>Crucial Advice [Level 2 Utility][immediate reaction]<br>\r"; }
if (document.form1.unbalancingparry_box.checked){SWD+="<img src=box.gif>Unbalancing Parry [Level 2 Utility][immediate reaction]<br>\r"; }
if (document.form1.yieldground_box.checked){SWD+="<img src=box.gif>Yield Ground [Level 2 Utility][immediate reaction]<br>\r"; }
if (document.form1.masterofdeceit_box.checked){SWD+="<img src=box.gif>Master of Deceit [Level 2 Utility][free action]<br>\r"; }
if (document.form1.quickfingers_box.checked){SWD+="<img src=box.gif>Quick Fingers [Level 2 Utility][minor action]<br>\r"; }
if (document.form1.tumble_box.checked){SWD+="<img src=box.gif>Tumble [Level 2 Utility][move action]<br>\r"; }
if (document.form1.beguilingtongue_box.checked){SWD+="<img src=box.gif>Beguiling Tongue [Level 2 Utility][minor action]<br>\r"; }
if (document.form1.etherealstride_box.checked){SWD+="<img src=box.gif>Ethereal Stride [Level 2 Utility][move action]<br>\r"; }
if (document.form1.shadowveil_box.checked){SWD+="<img src=box.gif>Shadow Veil [Level 2 Utility][minor action]<br>\r"; }
if (document.form1.aidtheinjured_box.checked){SWD+="<img src=box.gif>Aid the Injured [Level 2 Utility]<br>\r"; }
if (document.form1.crescendoofviolence_box.checked){SWD+="<img src=box.gif>Crescendo of Violence [Level 2 Utility][immediate reaction]<br>\r"; }
if (document.form1.knightsmove_box.checked){SWD+="<img src=box.gif>Knight's Move [Level 2 Utility][move action]<br>\r"; }
if (document.form1.shakeitoff_box.checked){SWD+="<img src=box.gif>Shake It Off [Level 2 Utility][minor action]<br>\r"; }
if (document.form1.jump_box.checked){SWD+="<img src=box.gif>Jump [Level 2 Utility][move action]<br>\r"; }
if (document.form1.shield_box.checked){SWD+="<img src=box.gif>Shield [Level 2 Utility][immediate interrupt]<br>\r"; }


if (document.form1.distractingflare_box.checked){SWD+="<img src=box.gif>Distracting Flare [Level 2 Utility][move action]<br>\r";}
if (document.form1.refocusenmity_box.checked){SWD+="<img src=box.gif>Refocus Enmity [Level 2 Utility]minor action]<br>\r";}
if (document.form1.resonantescape_box.checked){SWD+="<img src=box.gif>Resonant Escape [Level 2 Utility][immediate reaction]<br>\r";}
if (document.form1.combatspirit_box.checked){SWD+="<img src=box.gif>Combat Spirit [Level 2 Utility][move action]<br>\r";}
if (document.form1.stonebreaker_box.checked){SWD+="<img src=box.gif>Stonebreaker [Level 2 Utility][minor action]<br>\r";}
if (document.form1.tigersleap_box.checked){SWD+="<img src=box.gif>Tiger's Leap [Level 2 Utility][move action]<br>\r";}
if (document.form1.inspirecompetence_box.checked){SWD+="<img src=box.gif>Inspire Competence [Level 2 Utility][minor action]<br>\r";}
if (document.form1.barkskin_box.checked){SWD+="<img src=box.gif>Barkskin [Level 2 Utility][minor action]<br>\r";}
if (document.form1.divinecall_box.checked){SWD+="<img src=box.gif>Divine Call [Level 2 Utility][minor action]<br>\r";}
if (document.form1.shroudofawe_box.checked){SWD+="<img src=box.gif>Shroud of Awe [Level 2 Utility][minor action]<br>\r";}
if (document.form1.bondsoftheclan_box.checked){SWD+="<img src=box.gif>Bonds of the Clan [Level 2 Utility][immediate interrupt]<br>\r";}
if (document.form1.spiritcall_box.checked){SWD+="<img src=box.gif>Spirit Call [Level 2 Utility][minor action]<br>\r";}
if (document.form1.dragonflamemantle_box.checked){SWD+="<img src=box.gif>Dragon Flame Mantle [Level 2 Utility][immediate interrupt]<br>\r";}
if (document.form1.stretchspell_box.checked){SWD+="<img src=box.gif>Stretch Spell [Level 2 Utility][minor action]<br>\r";}
if (document.form1.unseenaid_box.checked){SWD+="<img src=box.gif>Unseen Aid [Level 2 Utility][minor action]<br>\r";}
if (document.form1.eyesofthehawk_box.checked){SWD+="<img src=box.gif>Eyes of the Hawk [Level 2 Utility][minor action]<br>\r";}
if (document.form1.mountainlionstep_box.checked){SWD+="<img src=box.gif>Mountain Lion Step [Level 2 Utility][minor action]<br>\r";}


if (document.form1.dimensionalwarp_box.checked){SWD+="<img src=box.gif>Dimensional Warp [FRPG; Level 2 Utility][minor action]<br>\r"; }
if (document.form1.mythalrecovery_box.checked){SWD+="<img src=box.gif>Mythal Recovery [FRPG; Level 2 Utility][minor action]<br>\r";}
if (document.form1.spiderscuttle_box.checked){SWD+="<img src=box.gif>Spider Scuttle [FRPG; Level 2 Utility][free action]<br>\r";}
if (document.form1.spelleater_box.checked){SWD+="<img src=box.gif>Spell Eater [FRPG; Level 2 Utility]<br>\r";}
if (document.form1.plagueofrootedmajesty_box.checked){SWD+="<img src=box.gif>Plague of Rooted Majesty [FRPG; Level 2 Utility][minor action]<br>\r";}
if (document.form1.other02encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other02encounter.value+" [Level 2 Utility]:<br>\r"; }



if (document.form1.blazingbeacon_box.checked){SWD+="<img src=box.gif>Blazing Beacon [Level 3]<br>\r"; }
if (document.form1.command_box.checked){SWD+="<img src=box.gif>Command [Level 3]<br>\r"; }
if (document.form1.dauntinglight_box.checked){SWD+="<img src=box.gif>Daunting Light [Level 3]<br>\r"; }
if (document.form1.splitthesky_box.checked){SWD+="<img src=box.gif>Split the Sky [Level 3]<br>\r"; }
if (document.form1.armorpiercingthrust_box.checked){SWD+="<img src=box.gif>Armor Piercing Thrust [Level 3]<br>\r"; }
if (document.form1.crushingblow_box.checked){SWD+="<img src=box.gif>Crushing Blow [Level 3]<br>\r"; }
if (document.form1.danceofsteel_box.checked){SWD+="<img src=box.gif>Dance of Steel [Level 3]<br>\r"; }
if (document.form1.precisestrike_box.checked){SWD+="<img src=box.gif>Precise Strike [Level 3]<br>\r"; }
if (document.form1.rainofblows_box.checked){SWD+="<img src=box.gif>Rain of Blows [Level 3]<br>\r"; }
if (document.form1.sweepingblow_box.checked){SWD+="<img src=box.gif>Sweeping Blow [Level 3]<br>\r"; }
if (document.form1.arcingsmite_box.checked){SWD+="<img src=box.gif>Arcing Smite [Level 3]<br>\r"; }
if (document.form1.invigoratingsmite_box.checked){SWD+="<img src=box.gif>Invigorating Smite [Level 3]<br>\r"; }
if (document.form1.righteoussmite_box.checked){SWD+="<img src=box.gif>Righteous Smite [Level 3]<br>\r"; }
if (document.form1.staggeringsmite_box.checked){SWD+="<img src=box.gif>Staggering Smite [Level 3]<br>\r"; }
if (document.form1.cutandrun_box.checked){SWD+="<img src=box.gif>Cut and Run [Level 3]<br>\r"; }
if (document.form1.disruptivestrike_box.checked){SWD+="<img src=box.gif>Disruptive Strike [Level 3][immediate reaction]<br>\r"; }
if (document.form1.shadowwaspstrike_box.checked){SWD+="<img src=box.gif>Shadow Wasp Strike [Level 3]<br>\r"; }
if (document.form1.thundertuskboarstrike_box.checked){SWD+="<img src=box.gif>Thunder Tusk Boar Strike [Level 3]<br>\r"; }
if (document.form1.beastlatch_box.checked){SWD+="<img src=box.gif>&nbsp;Beast Latch [Level 3]<br>\r";}
if (document.form1.pairedpredators_box.checked){SWD+="<img src=box.gif>&nbsp;Paired Predators [Level 3]<br>\r";}
if (document.form1.baitandswitch_box.checked){SWD+="<img src=box.gif>Bait and Switch [Level 3]<br>\r"; }
if (document.form1.setupstrike_box.checked){SWD+="<img src=box.gif>Setup Strike [Level 3]<br>\r"; }
if (document.form1.toppleover_box.checked){SWD+="<img src=box.gif>Topple Over [Level 3]<br>\r"; }
if (document.form1.trickstersblade_box.checked){SWD+="<img src=box.gif>Trickster's Blade [Level 3]<br>\r"; }
if (document.form1.eldritchrain_box.checked){SWD+="<img src=box.gif>Eldritch Rain [Level 3]<br>\r"; }
if (document.form1.fierybolt_box.checked){SWD+="<img src=box.gif>Fiery Bolt [Level 3]<br>\r"; }
if (document.form1.frigiddarkness_box.checked){SWD+="<img src=box.gif>Frigid Darkness [Level 3]<br>\r"; }
if (document.form1.otherwindstride_box.checked){SWD+="<img src=box.gif>Otherwind Stride [Level 3]<br>\r"; }
if (document.form1.holdtheline_box.checked){SWD+="<img src=box.gif>Hold the Line [Level 3]<br>\r"; }
if (document.form1.inspiringwarcry_box.checked){SWD+="<img src=box.gif>Inspiring War Cry [Level 3]<br>\r"; }
if (document.form1.steelmonsoon_box.checked){SWD+="<img src=box.gif>Steel Monsoon [Level 3]<br>\r"; }
if (document.form1.warlordsstrike_box.checked){SWD+="<img src=box.gif>Warlord's Strike [Level 3]<br>\r"; }
if (document.form1.colorspray_box.checked){SWD+="<img src=box.gif>Color Spray [Level 3]<br>\r"; }
if (document.form1.fireshroud_box.checked){SWD+="<img src=box.gif>Fire Shroud [Level 3]<br>\r"; }
if (document.form1.icyrays_box.checked){SWD+="<img src=box.gif>Icy Rays [Level 3]<br>\r"; }
if (document.form1.shocksphere_box.checked){SWD+="<img src=box.gif>Shock Sphere [Level 3]<br>\r"; }


if (document.form1.deflectingthunder_box.checked){SWD+="<img src=box.gif>Deflecting Thunder [Level 3]<br>\r"; }
if (document.form1.enmitysreach_box.checked){SWD+="<img src=box.gif>Enmity's Reach [Level 3]<br>\r"; }
if (document.form1.halooffire_box.checked){SWD+="<img src=box.gif>Halo of Fire [Level 3]<br>\r"; }
if (document.form1.sequesteringstrike_box.checked){SWD+="<img src=box.gif>Sequestering Strike [Level 3]<br>\r"; }
if (document.form1.bladesweep_box.checked){SWD+="<img src=box.gif>Blade Sweep [Level 3]<br>\r"; }
if (document.form1.bloodstrike_box.checked){SWD+="<img src=box.gif>Blood Strike [Level 3]<br>\r"; }
if (document.form1.daringcharge_box.checked){SWD+="<img src=box.gif>Daring Charge [Level 3]<br>\r"; }
if (document.form1.hammerfall_box.checked){SWD+="<img src=box.gif>Hammer Fall [Level 3]<br>\r"; }
if (document.form1.shatterbonestrike_box.checked){SWD+="<img src=box.gif>Shatter Bone Strike [Level 3]<br>\r"; }
if (document.form1.chargerscall_box.checked){SWD+="<img src=box.gif>Charger's Call [Level 3]<br>\r"; }
if (document.form1.cunningferocity_box.checked){SWD+="<img src=box.gif>Cunning Ferocity [Level 3]<br>\r"; }
if (document.form1.dissonantstrain_box.checked){SWD+="<img src=box.gif>Dissonant Strain [Level 3]<br>\r"; }
if (document.form1.impellingforce_box.checked){SWD+="<img src=box.gif>Impelling Force [Level 3]<br>\r"; }
if (document.form1.batteringclaws_box.checked){SWD+="<img src=box.gif>Battering Claws [Level 3]<br>\r"; }
if (document.form1.calllightning_box.checked){SWD+="<img src=box.gif>Call Lightning [Level 3]<br>\r"; }
if (document.form1.predatorsflurry_box.checked){SWD+="<img src=box.gif>Predator's Flurry [Level 3]<br>\r"; }
if (document.form1.tundrawind_box.checked){SWD+="<img src=box.gif>Tundra Wind [Level 3]<br>\r"; }
if (document.form1.chainsofcarceri_box.checked){SWD+="<img src=box.gif>Chains of Carceri [Level 3]<br>\r"; }
if (document.form1.glyphofimprisonment_box.checked){SWD+="<img src=box.gif>Glyph of Imprisonment [Level 3]<br>\r"; }
if (document.form1.offeringofjustice_box.checked){SWD+="<img src=box.gif>Offering of Justice [Level 3]<br>\r"; }
if (document.form1.sunhammer_box.checked){SWD+="<img src=box.gif>Sun Hammer [Level 3]<br>\r"; }
if (document.form1.calltothesavageelder_box.checked){SWD+="<img src=box.gif>Call to the Savage Elder [Level 3]<br>\r"; }
if (document.form1.lightningpantherspirit_box.checked){SWD+="<img src=box.gif>Lightning Panther Spirit [Level 3]<br>\r"; }
if (document.form1.rimefirespirit_box.checked){SWD+="<img src=box.gif>Rimefire Spirit [Level 3]<br>\r"; }
if (document.form1.springrenewalstrike_box.checked){SWD+="<img src=box.gif>Spring Renewal Strike [Level 3]<br>\r"; }
if (document.form1.dancinglightning_box.checked){SWD+="<img src=box.gif>Dancing Lightning [Level 3]<br>\r"; }
if (document.form1.flamespiral_box.checked){SWD+="<img src=box.gif>Flame Spiral [Level 3]<br>\r"; }
if (document.form1.icedragonsteeth_box.checked){SWD+="<img src=box.gif>Ice Dragon's Teeth [Level 3]<br>\r"; }
if (document.form1.poisonousexhalation_box.checked){SWD+="<img src=box.gif>Poisonous Exhalation [Level 3]<br>\r"; }
if (document.form1.spectralclaw_box.checked){SWD+="<img src=box.gif>Spectral Claw [Level 3]<br>\r"; }
if (document.form1.burstofearthsfury_box.checked){SWD+="<img src=box.gif>Burst of Earth's Fury [Level 3]<br>\r"; }
if (document.form1.earthgraspstrike_box.checked){SWD+="<img src=box.gif>Earthgrasp Strike [Level 3]<br>\r"; }
if (document.form1.predatoryguardian_box.checked){SWD+="<img src=box.gif>Predatory Guardian [Level 3]<br>\r"; }
if (document.form1.thunderingstrike_box.checked){SWD+="<img src=box.gif>Thundering Strike [Level 3]<br>\r"; }




if (document.form1.corrosiveruin_box.checked){SWD+="<img src=box.gif>Corrosive Ruin [FRPG; Level 3]<br>\r";}
if (document.form1.slothstrike_box.checked){SWD+="<img src=box.gif>Sloth Sstrike [FRPG; Level 3]<br>\r";}
if (document.form1.transposinglunge_box.checked){SWD+="<img src=box.gif>Transposing Lunge [FRPG; Level 3]<br>\r";}
if (document.form1.upsettingonslaught_box.checked){SWD+="<img src=box.gif>Upsetting Onslaught [FRPG; Level 3]<br>\r";}
if (document.form1.yourdeliciousweakness_box.checked){SWD+="<img src=box.gif>Your Delicious Weakness [FRPG; Level 3]<br>\r";}
if (document.form1.scarcarvingblade_box.checked){SWD+="<img src=box.gif>Scar Carving Blade [FRPG; Level 3]<br>\r";}
if (document.form1.calloftheplague_box.checked){SWD+="<img src=box.gif>Call of the Plague [FRPG; Level 3]<br>\r";}
if (document.form1.other03encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other03encounter.value+" [Level 3]:<br>\r"; }

if (document.form1.bastionofhealth_box.checked){SWD+="<img src=box.gif>Bastion of Health [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.unbreakable_box.checked){SWD+="<img src=box.gif>Unbreakable [Level 6 Utility][immediate reaction]<br>\r"; }
if (document.form1.weavethroughthefray_box.checked){SWD+="<img src=box.gif>Weave Through the Fray [Level 6 Utility][immediate interrupt]<br>\r"; }
if (document.form1.ignobleescape_box.checked){SWD+="<img src=box.gif>Ignoble Escape [Level 6 Utility][move action]<br>\r"; }
if (document.form1.mobmentality_box.checked){SWD+="<img src=box.gif>Mob Mentality [Level 6 Utility]<br>\r"; }
if (document.form1.slipperymind_box.checked){SWD+="<img src=box.gif>Slippery Mind [Level 6 Utility][immediate interrupt]<br>\r"; }
if (document.form1.feyswitch_box.checked){SWD+="<img src=box.gif>Fey Switch [Level 6 Utility][move action]<br>\r"; }
if (document.form1.spiderclimb_box.checked){SWD+="<img src=box.gif>Spider Climb [Level 6 Utility][move action]<br>\r"; }
if (document.form1.guidethecharge_box.checked){SWD+="<img src=box.gif>Guide the Charge [Level 6 Utility][immediate interrupt]<br>\r"; }
if (document.form1.inspiringreaction_box.checked){SWD+="<img src=box.gif>Inspiring Reaction [Level 6 Utility][immediate reaction]<br>\r"; }
if (document.form1.armathorsstep_box.checked){SWD+="<img src=box.gif>Armathor's Step [FRPG; Level 6 Utility][move action]<br>\r";}
if (document.form1.silversteelveil_box.checked){SWD+="<img src=box.gif>Silver Steel Veil [FRPG; Level 6 Utility][minor action]<br>\r";}
if (document.form1.shadowslip_box.checked){SWD+="<img src=box.gif>Shadow Slip [FRPG; Level 6 Utility][immediate reaction]<br>\r";}
if (document.form1.plaguefirebody_box.checked){SWD+="<img src=box.gif>Plaguefire Body [FRPG; Level 6 Utility][free action]<br>\r";}
if (document.form1.defensiveposture_box.checked){SWD+="<img src=box.gif>&nbsp;Defensive Posture [Level 6][immediate interrupt]<br>\r";}
if (document.form1.aspectofagility_box.checked){SWD+="<img src=box.gif>Aspect of Agility [Level 6 Utility][nove action]<br>\r";}
if (document.form1.lossofwill_box.checked){SWD+="<img src=box.gif>Loss of Will [Level 6 Utility][immediate reaction]<br>\r";}
if (document.form1.odetosacrifice_box.checked){SWD+="<img src=box.gif>Ode to Sacrifice [Level 6 Utility][minor action]<br>\r";}
if (document.form1.songofconquest_box.checked){SWD+="<img src=box.gif>Song of Conquest [Level 6 Utility][minor action]<br>\r";}
if (document.form1.camouflagecloak_box.checked){SWD+="<img src=box.gif>Camouflage Cloak [Level 6 Utility][minor action]<br>\r";}
if (document.form1.demandjustice_box.checked){SWD+="<img src=box.gif>Demand Justice [Level 6 Utility][immediate interrupt]<br>\r";}
if (document.form1.shieldoflight_box.checked){SWD+="<img src=box.gif>Shield of Light [Level 6 Utility][immediate interrupt]<br>\r";}
if (document.form1.suddenrestoration_box.checked){SWD+="<img src=box.gif>Sudden Restoration [Level 6 Utility][minor action]<br>\r";}
if (document.form1.suddenscales_box.checked){SWD+="<img src=box.gif>Sudden Scales [Level 6 Utility][immediate interrupt]<br>\r";}
if (document.form1.swiftescape_box.checked){SWD+="<img src=box.gif>Swift Escape [Level 6 Utility][immediate interrupt]<br>\r";}
if (document.form1.windbornestep_box.checked){SWD+="<img src=box.gif>Windborne Step [Level 6 Utility][move action]<br>\r";}


if (document.form1.other06encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other06encounter.value+" [Level 6 Utility]:<br>\r"; }





if (document.form1.awestrike_box.checked){SWD+="<img src=box.gif>Awe Strike [Level 7]<br>\r"; }
if (document.form1.breakthespirit_box.checked){SWD+="<img src=box.gif>Break the Spirit [Level 7]<br>\r"; }
if (document.form1.searinglight_box.checked){SWD+="<img src=box.gif>Searing Light [Level 7]<br>\r"; }
if (document.form1.strengthenthefaithful_box.checked){SWD+="<img src=box.gif>Strengthen the Faithful [Level 7]<br>\r"; }
if (document.form1.comeandgetit_box.checked){SWD+="<img src=box.gif>Come and Get It [Level 7]<br>\r"; }
if (document.form1.griffonswrath_box.checked){SWD+="<img src=box.gif>Griffon's Wrath [Level 7]<br>\r"; }
if (document.form1.ironbulwark_box.checked){SWD+="<img src=box.gif>Iron Bulwark [Level 7]<br>\r"; }
if (document.form1.recklessstrike_box.checked){SWD+="<img src=box.gif>Reckless Strike [Level 7]<br>\r"; }
if (document.form1.suddensurge_box.checked){SWD+="<img src=box.gif>Sudden Surge [Level 7]<br>\r"; }
if (document.form1.beckonfoe_box.checked){SWD+="<img src=box.gif>Beckon Foe [Level 7]<br>\r"; }
if (document.form1.benigntransposition_box.checked){SWD+="<img src=box.gif>Benign Transposition [Level 7]<br>\r"; }
if (document.form1.divinereverence_box.checked){SWD+="<img src=box.gif>Divine Reverence [Level 7]<br>\r"; }
if (document.form1.thundersmite_box.checked){SWD+="<img src=box.gif>Thunder Smite [Level 7]<br>\r"; }
if (document.form1.clawsofthegriffon_box.checked){SWD+="<img src=box.gif>Claws of the Griffon [Level 7]<br>\r"; }
if (document.form1.hawktalon_box.checked){SWD+="<img src=box.gif>Hawk Talon [Level 7]<br>\r"; }
if (document.form1.spikesofthemanticore_box.checked){SWD+="<img src=box.gif>Spikes of the Manticore [Level 7]<br>\r"; }
if (document.form1.sweepingwhirlwind_box.checked){SWD+="<img src=box.gif>Sweeping Whirlwind [Level 7]<br>\r"; }
if (document.form1.beastrush_box.checked){SWD+="<img src=box.gif>&nbsp;Beast Rush [Level 7]<br>\r";}
if (document.form1.harriedquarry_box.checked){SWD+="<img src=box.gif>&nbsp;Harried Quarry [Level 7]<br>\r";}
if (document.form1.cloudofsteel_box.checked){SWD+="<img src=box.gif>Cloud of Steel [Level 7]<br>\r"; }
if (document.form1.imperilingstrike_box.checked){SWD+="<img src=box.gif>Imperiling Strike [Level 7]<br>\r"; }
if (document.form1.roguesluck_box.checked){SWD+="<img src=box.gif>Rogue's Luck [Level 7]<br>\r"; }
if (document.form1.sandintheeyes_box.checked){SWD+="<img src=box.gif>Sand in the Eyes [Level 7]<br>\r"; }
if (document.form1.howlofdoom_box.checked){SWD+="<img src=box.gif>Howl of Doom [Level 7]<br>\r"; }
if (document.form1.infernalmooncurse_box.checked){SWD+="<img src=box.gif>Infernal Moon Curse [Level 7]<br>\r"; }
if (document.form1.mirethemind_box.checked){SWD+="<img src=box.gif>Mire the Mind [Level 7]<br>\r"; }
if (document.form1.signofillomen_box.checked){SWD+="<img src=box.gif>Sign of Ill Omen [Level 7]<br>\r"; }
if (document.form1.lionsroar_box.checked){SWD+="<img src=box.gif>Lion's Roar [Level 7]<br>\r"; }
if (document.form1.sunderarmor_box.checked){SWD+="<img src=box.gif>Sunder Armor [Level 7]<br>\r"; }
if (document.form1.surpriseattack_box.checked){SWD+="<img src=box.gif>Surprise Attack [Level 7]<br>\r"; }
if (document.form1.surroundfoe_box.checked){SWD+="<img src=box.gif>Surround Foe [Level 7]<br>\r"; }
if (document.form1.fireburst_box.checked){SWD+="<img src=box.gif>Fire Burst [Level 7]<br>\r"; }
if (document.form1.lightningbolt_box.checked){SWD+="<img src=box.gif>Lightning Bolt [Level 7]<br>\r"; }
if (document.form1.spectralram_box.checked){SWD+="<img src=box.gif>Spectral Ram [Level 7]<br>\r"; }
if (document.form1.winterswrath_box.checked){SWD+="<img src=box.gif>Winter's Wrath [Level 7]<br>\r"; }

if (document.form1.avengingwinds_box.checked){SWD+="<img src=box.gif>Avenging Winds [Level 7]<br>\r"}
if (document.form1.bladestep_box.checked){SWD+="<img src=box.gif>Blade Step [Level 7]<br>\r"}
if (document.form1.inexorablepursuit_box.checked){SWD+="<img src=box.gif>Inexorable Pursuit [Level 7]<br>\r"}
if (document.form1.slintertheformation_box.checked){SWD+="<img src=box.gif>Splinter the Formation [Level 7]<br>\r"}
if (document.form1.curtainofsteel_box.checked){SWD+="<img src=box.gif>Curtain of Steel [Level 7]<br>\r"}
if (document.form1.greatshout_box.checked){SWD+="<img src=box.gif>Great Shout [Level 7]<br>\r"}
if (document.form1.feastofviolence_box.checked){SWD+="<img src=box.gif>Feast of Violence [Level 7]<br>\r"}
if (document.form1.tideofblood_box.checked){SWD+="<img src=box.gif>Tide of Blood [Level 7]<br>\r"}
if (document.form1.deflectattention_box.checked){SWD+="<img src=box.gif>Deflect Attention [Level 7]<br>\r"}
if (document.form1.distractingshout_box.checked){SWD+="<img src=box.gif>Distracting Shout [Level 7]<br>\r"}
if (document.form1.scorpionsclawstrike_box.checked){SWD+="<img src=box.gif>Scorpion's Claw Strike [Level 7]<br>\r"}
if (document.form1.unluck_box.checked){SWD+="<img src=box.gif>Unluck [Level 7]<br>\r"}
if (document.form1.feastoffury_box.checked){SWD+="<img src=box.gif>Feast of Fury [Level 7]<br>\r"}
if (document.form1.latchon_box.checked){SWD+="<img src=box.gif>Latch On [Level 7]<br>\r"}
if (document.form1.swlrlingwinds_box.checked){SWD+="<img src=box.gif>Swirling Winds [Level 7]<br>\r"}
if (document.form1.tremor_box.checked){SWD+="<img src=box.gif>Tremor [Level 7]<br>\r"}
if (document.form1.balefuleyeofjudgment_box.checked){SWD+="<img src=box.gif>Baleful Eye of Judgment [Level 7]<br>\r"}
if (document.form1.boltoftherisingsun_box.checked){SWD+="<img src=box.gif>Bolt of the Rising Sun [Level 7]<br>\r"}
if (document.form1.invokeobedience_box.checked){SWD+="<img src=box.gif>Invoke Obedience [Level 7]<br>\r"}
if (document.form1.thunderboldoftheheavens_box.checked){SWD+="<img src=box.gif>Thunderbolt of the Heavens [Level 7]<br>\r"}
if (document.form1.calltotheblooddancer_box.checked){SWD+="<img src=box.gif>Call to the Blood Dancer [Level 7]<br>\r"}
if (document.form1.calltothehowlingstorm_box.checked){SWD+="<img src=box.gif>Call to the Howling Storm [Level 7]<br>\r"}
if (document.form1.thunderstormspirit_box.checked){SWD+="<img src=box.gif>Thunderstorm Spirit [Level 7]<br>\r"}
if (document.form1.winterwindspirit_box.checked){SWD+="<img src=box.gif>Winter Wind Spirit [Level 7]<br>\r"}
if (document.form1.chaosstorm_box.checked){SWD+="<img src=box.gif>Chaos Storm [Level 7]<br>\r"}
if (document.form1.crushingsphere_box.checked){SWD+="<img src=box.gif>Crushing Sphere [Level 7]<br>\r"}
if (document.form1.rimestorm_box.checked){SWD+="<img src=box.gif>Rimestorm [Level 7]<br>\r"}
if (document.form1.shout_box.checked){SWD+="<img src=box.gif>Shout [Level 7]<br>\r"}
if (document.form1.earthgift_box.checked){SWD+="<img src=box.gif>Earth Gift [Level 7]<br>\r"}
if (document.form1.mountainhammer_box.checked){SWD+="<img src=box.gif>Mountain Hammer [Level 7]<br>\r"}
if (document.form1.stalkerspositioning_box.checked){SWD+="<img src=box.gif>Stalker's Positioning [Level 7]<br>\r"}
if (document.form1.thornburst_box.checked){SWD+="<img src=box.gif>Thorn Burst [Level 7]<br>\r"}



if (document.form1.electrifiedlash_box.checked){SWD+="<img src=box.gif>Electrified Lash [FRPG; Level 7]<br>\r";}
if (document.form1.flamewallstrike_box.checked){SWD+="<img src=box.gif>Flamewall Strike [FRPG; Level 7]<br>\r";}
if (document.form1.isolatingslam_box.checked){SWD+="<img src=box.gif>Isolating Slam [FRPG; Level 7]<br>\r";}
if (document.form1.spikesofagony_box.checked){SWD+="<img src=box.gif>Spikes of Agony [FRPG; Level 7]<br>\r";}
if (document.form1.deathboon_box.checked){SWD+="<img src=box.gif>Death Boon [FRPG; Level 7]<br>\r";}
if (document.form1.deathscommands_box.checked){SWD+="<img src=box.gif>Death's Commands [FRPG; Level 7]<br>\r";}
if (document.form1.reachofthedoomed_box.checked){SWD+="<img src=box.gif>Reach of the Doomed [FRPG; Level 7]<br>\r";}
if (document.form1.cursedgraspingair_box.checked){SWD+="<img src=box.gif>Cursed Grasping Air [FRPG; Level 7]<br>\r";}
if (document.form1.venomousbloodfang_box.checked){SWD+="<img src=box.gif>Venomous Blood Fang [FRPG; Level 7]<br>\r";}



if (document.form1.other07encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other07encounter.value+" [Level 7]:<br>\r"; }

if (document.form1.shieldingword_box.checked){SWD+="<img src=box.gif>Shielding Word [Level 10 Utility][immediate interrupt]<br>\r"; }
if (document.form1.intothefray_box.checked){SWD+="<img src=box.gif>Into the Fray [Fighter; Level 10 Utility][minor action]<br>\r"; }
if (document.form1.cleansingspirit_box.checked){SWD+="<img src=box.gif>Cleansing Spirit [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.expeditiousstride_box.checked){SWD+="<img src=box.gif>Expeditious Stride [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.dangeroustheft_box.checked){SWD+="<img src=box.gif>Dangerous Theft [Level 10 Utility][free action]<br>\r"; }

if (document.form1.channelendurance_box.checked){SWD+="<img src=box.gif>Channel Endurance [Level 10 Utility][minor action]<br>\r";}
if (document.form1.eyeofjustice_box.checked){SWD+="<img src=box.gif>Eye of Justice [Level 10 Utility][minor action]<br>\r";}
if (document.form1.wellspringofrenewal_box.checked){SWD+="<img src=box.gif>Wellspring of Renewal [Level 10 Utility][minor action]<br>\r";}
if (document.form1.illusoryerasure_box.checked){SWD+="<img src=box.gif>Illusory Erasure [Level 10 Utility][minor action]<br>\r";}
if (document.form1.songofrecovery_box.checked){SWD+="<img src=box.gif>Song of Recovery [Level 10 Utility][minor action]<br>\r";}
if (document.form1.feywildsojourn_box.checked){SWD+="<img src=box.gif>Feywild Sojourn [Level 10 Utility][move action]<br>\r";}
if (document.form1.rootsofrescue_box.checked){SWD+="<img src=box.gif>Roots of Rescue [Level 10 Utility][immediate interrupt]<br>\r";}
if (document.form1.angelicvisage_box.checked){SWD+="<img src=box.gif>Angelic Visage [Level 10 Utility][immediate interrupt]<br>\r";}
if (document.form1.primalgust_box.checked){SWD+="<img src=box.gif>Primal Gust [Level 10 Utility][minor action]<br>\r";}
if (document.form1.narrowescape_box.checked){SWD+="<img src=box.gif>Narrow Escape [Level 10 Utility][immediate reaction]<br>\r";}
if (document.form1.earthstride_box.checked){SWD+="<img src=box.gif>Earth Stride [Level 10 Utility][move action]<br>\r";}


if (document.form1.arcaneawareness_box.checked){SWD+="<img src=box.gif>Arcane Awareness [FRPG; Level 10 Utility][free action]<br>\r";}
if (document.form1.darkestmirror_box.checked){SWD+="<img src=box.gif>Darkest Mirror [FRPG; Level 10 Utility][minor action]<br>\r";}
if (document.form1.cursegrind_box.checked){SWD+="<img src=box.gif>Curse Grind [FRPG; Level 10 Utility]<br>\r";}
if (document.form1.allmustsacrifice_box.checked){SWD+="<img src=box.gif>All Must Sacrifice [FRPG; Level 10 Utility]<br>\r";}
if (document.form1.scarofbluewings_box.checked){SWD+="<img src=box.gif>Scar of Blue Wings [FRPG; Level 10 Utility][move action]<br>\r";}
if (document.form1.tearsoffireandblood_box.checked){SWD+="<img src=box.gif>Tears of Fire and Blood [FRPG; Level 10 Utility][free action]<br>\r";}





if (document.form1.other10encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other10encounter.value+" [Level 10 Utility]:<br>\r"; }



if (paragon_angelicavenger){
SWD+="<img src=box.gif>Astral Wave [Angelic Avenger Level 11]<br>\r"; }
if (paragon_divineoracle){
SWD+="<img src=box.gif>Prophecy of Doom [Divine Oracle Level 11]<br>\r"; }
if (paragon_radiantservant){
SWD+="<img src=box.gif>Solar Wrath [Radiant Servant Level 11]<br>\r"; }
if (paragon_warpriest){
SWD+="<img src=box.gif>Battle Cry [War Priest Level 11]<br>\r"; }
if (paragon_ironvanguard){
SWD+="<img src=box.gif>Frontline Surge [Iron Vanguard Level 11]<br>\r"; }
if (paragon_kensei){
SWD+="<img src=box.gif>Masterstroke [Kensei Level 11]<br>\r"; }
if (paragon_pitfighter){
SWD+="<img src=box.gif>All Bets Are Off [Pit Fighter Level 11]<br>\r"; }
if (paragon_swordmaster){
SWD+="<img src=box.gif>Precision Cut [Sword Master Level 11]<br>\r"; }
if (paragon_astralweapon){
SWD+="<img src=box.gif>Carving a Path of Light [Astral Weapon Level 11]<br>\r"; }
if (paragon_championoforder){
SWD+="<img src=box.gif>Certain Justice [Champion of Order Level 11]<br>\r"; }
if (paragon_hospitaler){
SWD+="<img src=box.gif>Warding Blow [Hospitaler Level 11]<br>\r"; }
if (paragon_justiciar){
SWD+="<img src=box.gif>Just Radiance [Justiciar Level 11]<br>\r"; }
if (paragon_battlefieldarcher){
SWD+="<img src=box.gif>Combined Fire [Battlefield Archer Level 11][immediate reaction]<br>\r"; }
if (paragon_beaststalker){
SWD+="<img src=box.gif>Pinpointing Arrow [Beast Stalker Level 11]<br>\r"; }
if (paragon_pathfinder){
SWD+="<img src=box.gif>Wrong Step [Pathfinder Level 11][immediate interrupt]<br>\r"; }
if (paragon_stormwarden){
SWD+="<img src=box.gif>Clearing the Ground [Storm Warden Level 11]<br>\r"; }
if (paragon_catburglar){
SWD+="<img src=box.gif>Cat Burglar's Gambit [Cat Burglar Level 11]<br>\r"; }
if (paragon_daggermaster){
SWD+="<img src=box.gif>Critical Opportunity [Dagger Master Level 11][minor action]<br>\r"; }
if (paragon_masterinfiltrator){
SWD+="<img src=box.gif>Distracting Wound [Master Infiltrator Level 11]<br>\r"; }
if (paragon_shadowassassin){
SWD+="<img src=box.gif>Killer's Eye [Shadow Assassin Level 11]<br>\r"; }
if (paragon_doomsayer){
SWD+="<img src=box.gif>Fates Entwined [Doomsayer Level 11]<br>\r"; }
if (paragon_feytouched){
SWD+="<img src=box.gif>Will of the Feywild [Feytouched Level 11]<br>\r"; }
if (paragon_lifestealer){
SWD+="<img src=box.gif>Soul Scorch [Life Stealer Level 11]<br>\r"; }
if (paragon_battlecaptain){
SWD+="<img src=box.gif>Force Retreat [Battle Captain Level 11]<br>\r"; }
if (paragon_combatveteran){
SWD+="<img src=box.gif>Skirmish Ploy [Combat Veteran Level 11]<br>\r"; }
if (paragon_knightcommander){
SWD+="<img src=box.gif>Slash and Press [Knight Commander Level 11]<br>\r"; }
if (paragon_swordmarshal){
SWD+="<img src=box.gif>Blade Flurry [Sword Marshal Level 11]<br>\r"; }
if (paragon_battlemage){
SWD+="<img src=box.gif>Forceful Retort [Battle Mage Level 11]<br>\r"; }
if (paragon_bloodmage){
SWD+="<img src=box.gif>Blood Pulse [Blood Mage Level 11]<br>\r"; }
if (paragon_spellstormmage){
SWD+="<img src=box.gif>Storm Cage [Spellstorm Mage Level 11]<br>\r"; }
if (paragon_wizardofthespiraltower){
SWD+="<img src=box.gif>The One Sword [Wizard of the Spiral Tower Level 11]<br>\r"; }
if (paragon_anarchofshyr){
SWD+="<img src=box.gif>Lightning Clutch [Anarch of Shyr Level 11]<br>\r"; }
if (paragon_coronalguard){
SWD+="<img src=box.gif>Countering Thunderclap [Coronal Guard Level 11]<br>\r"; }
if (paragon_darkwalker){
SWD+="<img src=box.gif>Ghostly Bane [Darkwalker Level 11]<br>\r"; }
if (paragon_doomguide){
SWD+="<img src=box.gif>Kelemvor's Circle [Doomguide Level 11]<br>\r"; }
if (paragon_drowwanderer){
SWD+="<img src=box.gif>From out of Nowhere [Drow Wanderer Level 11]<br>\r"; }
if (paragon_eartheartdefender){
SWD+="<img src=box.gif>Gain Heart [Eartheart Defender Level 11]<br>\r"; }
if (paragon_elementaltempest){
SWD+="<img src=box.gif>Tempest Burst [Elemental Tempest Level 11]<br>\r"; }
if (paragon_evermeetwarlock){
SWD+="<img src=box.gif>Blinding Beacon [Evermeet Warlock Level 11]<br>\r"; }
if (paragon_ghostofeventide){
SWD+="<img src=box.gif>Shadow Hand Attack [Ghost of Eventide Level 11]<br>\r"; }
if (paragon_heartwarder){
SWD+="<img src=box.gif>Siren Voice [Heartwarder Level 11]<br>\r"; }
if (paragon_highforestscout){
SWD+="<img src=box.gif>Argent Arrow [High Forest Scout Level 11]<br>\r"; }
if (paragon_impilturandemonslayer){
SWD+="<img src=box.gif>Demonslayer's Hindrance [Impilturan Demonslayer Level 11]<br>\r"; }
if (paragon_morninglord){
SWD+="<img src=box.gif>Pure Glow [Morninglord Level 11]<br>\r"; }
if (paragon_purpledragonknight){
SWD+="<img src=box.gif>Rallying Attack [Purple Dragon Knight Level 11]<br>\r"; }
if (paragon_silverstar){
SWD+="<img src=box.gif>Tears of Selune [Silverstar Level 11]<br>\r"; }
if (paragon_simbarchofaglarond){
SWD+="<img src=box.gif>Silver Fire [Simbarch of Aglarond Level 11]<br>\r"; }
if (paragon_spellguardwizard){
SWD+="<img src=box.gif>Spellguard Force Lash [Spellguard Wizard Level 11]<br>\r"; }
if (paragon_steelskyliberator){
SWD+="<img src=box.gif>Liberator's Blow [Steelsky Liberator Level 11]<br>\r"; }
if (paragon_swordcoastcorsair){
SWD+="<img src=box.gif>Strike Terror [Sword Coast Corsair Level 11]<br>\r"; }
if (paragon_umbriri){
SWD+="<img src=box.gif>Assassin Shadow [Umbriri Level 11]<br>\r"; }
if (paragon_wanderingswordmage){
SWD+="<img src=box.gif>Four Corners Attack [Wandering Swordmage Level 11]<br>\r"; }
if (paragon_warwizardofcormyr){
SWD+="<img src=box.gif>Lightning Ripple [War Wizard of Cormyr Level 11]<br>\r"; }
if (paragon_whirlwindgenasi){
SWD+="<img src=box.gif>Tumbling Gale [Whirlwind Genasi Level 11]<br>\r"; }
if (paragon_wildfiregenasi){
SWD+="<img src=box.gif>Firesoul Combustion [Wildfire Genasi Level 11]<br>\r"; }
if (paragon_feralspirit){
SWD+="<img src=box.gif>Feral Diversion [Feral Spirit Level 11]<br>\r"; }
if (paragon_packrunner){
SWD+="<img src=box.gif>Pack Runner Assault [Pack Runner Level 11]<br>\r"; }
if (paragon_wildcatstalker){
SWD+="<img src=box.gif>Cat-Eyed Strike [Wildcat Stalker Level 11]<br>\r"; }

if (paragon_bladeofcendriane){
SWD+="<img src=box.gif>Forcing the Portal [Blade of Cendriane Level 11]<br>\r"; }
if (paragon_doomguardmarauder){
SWD+="<img src=box.gif>Entropic Blow [Doomguard Marauder Level 11]<br>\r"; }
if (paragon_gatecrasher){
SWD+="<img src=box.gif>Striker's Gate [Gatecrasher Level 11]<br>\r"; }
if (paragon_knightofcelestia){
SWD+="<img src=box.gif>Celestia's Challenge [Knight of Celestia Level 11]<br>\r"; }
if (paragon_maleckethjanissary){
SWD+="<img src=box.gif>Loyal Unto Death [Malec-Keth Janissary Level 11]<br>\r"; }
if (paragon_planeshifter){
SWD+="<img src=box.gif>Sequester [Planeshifter Level 11]<br>\r"; }
if (paragon_shadowcaptain){
SWD+="<img src=box.gif>Underworld Gambit [Shadow Captain Level 11]<br>\r"; }
if (paragon_soulguide){
SWD+="<img src=box.gif>Soul's Enthrallment [Soul Guide Level 11]<br>\r"; }


if (paragon_ancestralincarnate){
SWD+="<img src=box.gif>Past-Life Guardian [Ancestral Incarnate Level 11]<br>\r";}
if (paragon_bloodfurysavage){
SWD+="<img src=box.gif>Unbound Assault [Blood Fury Savage Level 11]<br>\r";}
if (paragon_feybeguiler){
SWD+="<img src=box.gif>Bedazzling Orb [Fey Beguiler Level 11]<br>\r";}
if (paragon_firstbornofmoradin){
SWD+="<img src=box.gif>Receive the Charge [Firstborn of Moradin Level 11]<br>\r";}
if (paragon_halflingscoundrel){
SWD+="<img src=box.gif>Sly Offensive [Halfling Scoundrel Level 11]<br>\r";}
if (paragon_moonstalker){
SWD+="<img src=box.gif>Call to the Moon [Moonstalker Level 11]<br>\r";}
if (paragon_scionofarkhosia){
SWD+="<img src=box.gif>Dragon's Wrath [Scion of Arkhosia Level 11]<br>\r";}
if (paragon_shiereknight){
SWD+="<img src=box.gif>Ensorcelled Mind [Shiere Knight Level 11]<br>\r";}
if (paragon_stoneblessed){
SWD+="<img src=box.gif>Mountain Sweep [Stoneblessed Level 11]<br>\r";}
if (paragon_turathihighborn){
SWD+="<img src=box.gif>Bedeviled Mind [Turathi Highborn Level 11]<br>\r";}
if (paragon_twilightguardian){
SWD+="<img src=box.gif>Bonds of Life [Twilight Guardian Level 11]<br>\r";}
if (paragon_hammerofjudgment){
SWD+="<img src=box.gif>Thunder Hammer [Hammer of Judgment Level 11]<br>\r";}
if (paragon_oathsworn){
SWD+="<img src=box.gif>Oath of Weakness [Oathsworn Level 11]<br>\r";}
if (paragon_unveiledvisage){
SWD+="<img src=box.gif>Radiant Visage [Unveiled Visage Level 11]<br>\r";}
if (paragon_zealousassassin){
SWD+="<img src=box.gif>Strike from Empty Air [Zealous Assassin Level 11]<br>\r";}
if (paragon_bearwarrior){
SWD+="<img src=box.gif>Mauling Bear [Bear Warrior Level 11]<br>\r";}
if (paragon_fearbringerthane){
SWD+="<img src=box.gif>Screaming Hawk Strike [Fearbringer Thane Level 11]<br>\r";}
if (paragon_frenziedberserker){
SWD+="<img src=box.gif>Persistent Frenzy [Frenzied Berserker Level 11]<br>\r";}
if (paragon_wildrunner){
SWD+="<img src=box.gif>Shifting WIlds Strike [Wildrunner Level 11]<br>\r";}
if (paragon_studentoftheseven){
SWD+="<img src=box.gif>Anyspell [Student of the Seven Level 11]<br>\r";}
if (paragon_summerrhymer){
SWD+="<img src=box.gif>Song of the Queen's Protection [Summer Rhymer Level 11]<br>\r";}
if (paragon_voiceofthunder){
SWD+="<img src=box.gif>Rolling Echo [Voice of Thunder Level 11]<br>\r";}
if (paragon_warchanter){
SWD+="<img src=box.gif>Victorious Smite [War Chanter Level 11]<br>\r";}
if (paragon_bloodmoonstalker){
SWD+="<img src=box.gif>BLood Moon Frenzy [Bloodmoon Stalker Level 11]<br>\r";}
if (paragon_guardianofthelivinggate){
SWD+="<img src=box.gif>First Ward of the Living Gate [Guardian of the Living Gate Level 11]<br>\r";}
if (paragon_keeperofthehiddenflame){
SWD+="<img src=box.gif>Summon the Beast [Keeper of the Hidden Flame Level 11]<br>\r";}
if (paragon_skyhunter){
SWD+="<img src=box.gif>Blinding Talons [Sky Hunter Level 11]<br>\r";}
if (paragon_angelicaspect){
SWD+="<img src=box.gif>Numinous Cascade [Angelic Aspect Level 11]<br>\r";}
if (paragon_blightspeaker){
SWD+="<img src=box.gif>Chains of Death [Blight Speaker Level 11]<br>\r";}
if (paragon_flameofhope){
SWD+="<img src=box.gif>Numinous Cascade [Flame of Hope Level 11]<br>\r";}
if (paragon_hammerofvengeance){
SWD+="<img src=box.gif>Mark of Castigation [Hammer of Vengeance Level 11]<br>\r";}
if (paragon_discipleoftheworldserpent){
SWD+="<img src=box.gif>Serpent's Rebuke [Disciple of the World Serpent Level 11]<br>\r";}
if (paragon_ghostpanther){
SWD+="<img src=box.gif>Predator Spirit [Ghost Panther Level 11]<br>\r";}
if (paragon_greatbearshaman){
SWD+="<img src=box.gif>Bear Fang Defense [Great Bear Shaman Level 11]<br>\r";}
if (paragon_spirittempest){
SWD+="<img src=box.gif>Spirit Tide [Spirit Tempest Level 11]<br>\r";}
if (paragon_arcanewellspring){
SWD+="<img src=box.gif>Twin Bolt [Arcane Wellspring Level 11]<br>\r";}
if (paragon_demonskinadept){
SWD+="<img src=box.gif>Demon-Soul Bolts [Demonskin Adept Level 11]<br>\r";}
if (paragon_dragonsoulheir){
SWD+="<img src=box.gif>Breath of the Dragon Soul [Dragonsoul Heir Level 11]<br>\r";}
if (paragon_wildmage){
SWD+="<img src=box.gif>Tempest Surge [Wild Mage Level 11]<br>\r";}
if (paragon_bloodwrathguardian){
SWD+="<img src=box.gif>Bloodwrath Strike [Bloodwrath Guardian Level 11]<br>\r";}
if (paragon_hornedchampion){
SWD+="<img src=box.gif>Zealous Strike [Horned Champion Level 11]<br>\r";}
if (paragon_stormsentinel){
SWD+="<img src=box.gif>Thunder Smash [Storm Sentinel Level 11]<br>\r";}
if (paragon_verdantlord){
SWD+="<img src=box.gif>Falling Tree Strike [Verdant Lord Level 11]<br>\r";}





// kurwa 11 encounter

if (paragon_other){SWD+="<img src=box.gif>"+document.form1.otherparagonpath.value+" special ability [Level 11] (most are encounter attacks):<br>\r"; }

if (total_levels>=12)
{
if (paragon_ironvanguard){
SWD+="<img src=box.gif>Inexorable Shift [Iron Vanguard Level 12 Utility][move action]<br>\r"; }
if (paragon_swordmaster){
SWD+="<img src=box.gif>Fantastic Flourish [Sword Master Level 12 Utility][minor action]<br>\r"; }
if (paragon_astralweapon){
SWD+="<img src=box.gif>Pray for More [Astral Weapon Level 12 Utility][free action]<br>\r"; }
if (paragon_battlefieldarcher){
SWD+="<img src=box.gif>Archer's Glory [Battlefield Archer Level 12 Utility][free action]<br>\r"; }
if (paragon_stormwarden){
SWD+="<img src=box.gif>Throw Caution to the Wind [Storm Warden Level 12 Utility][minor action]<br>\r"; }
if (paragon_catburglar){
SWD+="<img src=box.gif>Instant Escape [Cat Burglar Level 12 Utility][immediate reaction as per errata 7/2/08]<br>\r"; }
if (paragon_knightcommander){
SWD+="<img src=box.gif>Break Their Nerve [Knight Commander Level 12 Utility][minor action]<br>\r"; }
if (paragon_halflingscoundrel){
SWD+="<img src=box.gif>Problem Solver [Halfling Scoundrel Level 12 Utility][immediate interrupt]<br>\r";}
if (paragon_stoneblessed){
SWD+="<img src=box.gif>Summit Advantage [Stoneblessed Level 12 Utility][minor action]<br>\r";}
if (paragon_hammerofjudgment){
SWD+="<img src=box.gif>Resolve of Steel [Hammer of Judgment Level 12 Utility][minor action]<br>\r";}
if (paragon_unveiledvisage){
SWD+="<img src=box.gif>Divine Vigilance [Unveiled Visage Level 12 Utility][move action]<br>\r";}
if (paragon_wildrunner){
SWD+="<img src=box.gif>Press the Kill [Wildrunner Level 12 Utility][free acion]<br>\r";}
if (paragon_warchanter){
SWD+="<img src=box.gif>Battle Chant [War Chanter Level 12 Utility][minor action]<br>\r";}
if (paragon_skyhunter){
SWD+="<img src=box.gif>Soaring Falcon [Sky Hunter Level 12 Utility][free action]<br>\r";}
if (paragon_hammerofvengeance){
SWD+="<img src=box.gif>Thundering Summons [Hammer of Vengeance Level 12 Utility][move action]<br>\r";}
if (paragon_discipleoftheworldserpent){
SWD+="<img src=box.gif>Seal of the Serpent [Disciple of the World Serpent Level 12 Utility][minor action]<br>\r";}
if (paragon_ghostpanther){
SWD+="<img src=box.gif>Great Cat's Dodge [Ghost Panther Level 12 Utility][immediate interrupt]<br>\r";}
if (paragon_greatbearshaman){
SWD+="<img src=box.gif>Galvanizing Bellow [Great Bear Shaman Level 12 Utility][minor action]<br>\r";}
if (paragon_spirittempest){
SWD+="<img src=box.gif>Spirit Flow [Spirit Tempest Level 12 Utility][minor action]<br>\r";}
if (paragon_arcanewellspring){
SWD+="<img src=box.gif>Sorcerous Wings [Arcane Wellspring Level 12 Utility][minior action]<br>\r";}
if (paragon_hornedchampion){
SWD+="<img src=box.gif>Impetuous Stride [Horned Champion Level 12 Utility][move action]<br>\r";}
if (paragon_stormsentinel){
SWD+="<img src=box.gif>Storm Step [Storm Sentinel Level 12 Utility][move action]<br>\r";}

if (paragon_anarchofshyr){
SWD+="<img src=box.gif>Stance of Chaos [Anarch of Shyr Level 12 Utility][minor action]<br>\r"; }
if (paragon_darkwalker){
SWD+="<img src=box.gif>Fading Spiral [Darkwalker Level 12 Utility][free action]<br>\r"; }
if (paragon_eartheartdefender){
SWD+="<img src=box.gif>Earthsight [Eartheart Defender Level 12 Utility]<br>\r"; }
if (paragon_elementaltempest){
SWD+="<img src=box.gif>Absorb Elements [Elemental Tempest Level 12 Utility][immediate reaction]<br>\r"; }


if (paragon_other){SWD+="<img src=box.gif>"+document.form1.otherparagonpath.value+" special ability [Level 12 Utility] (if encounter):<br>\r"; }


if (paragon_impilturandemonslayer){
SWD+="<img src=box.gif>Demonward [Impilturan Demonslayer Level 12 Utility][immediate interrupt]<br>\r"; }
if (paragon_purpledragonknight){
SWD+="<img src=box.gif>Rallying Cry [Purple Dragon Knight Level 12 Utility][inor action]<br>\r"; }
if (paragon_simbarchofaglarond){
SWD+="<img src=box.gif>Symbostodweomer [Simbarch of Aglarnod Level 12 Utility][minor action]<br>\r"; }
if (paragon_spellscarredsavant){
SWD+="<img src=box.gif>Spellfire Healing [Spellscarred Savant Level 12 Utility][free action]<br>\r"; }
if (paragon_swordcoastcorsair){
SWD+="<img src=box.gif>Nerves of Steel [Sword Coast Corsair Level 12 Utility][free action]<br>\r"; }
if (paragon_umbriri){
SWD+="<img src=box.gif>Concealing Umbra [Umbriri Level 12 Utility]<br>\r"; }
if (paragon_wanderingswordmage){
SWD+="<img src=box.gif>Arcane Tanglestep [Wandering Swordmage Level 12 Utility][immediate reaction]<br>\r"; }
if (paragon_whirlwindgenasi){
SWD+="<img src=box.gif>Windsoul Zephyr [Whirlwind Genasi Level 12 Utility][move action]<br>\r"; }



if (paragon_feralspirit){
SWD+="<img src=box.gif>Swiftness of Spirit [Feral Spirit Level 12 Utility][minor action]<br>\r"; }
if (paragon_wildcatstalker){
SWD+="<img src=box.gif>Lurk Unseen [Wildcat Stalker Level 12 Utility]<br>\r"; }


if (paragon_bladeofcendriane){
SWD+="<img src=box.gif>Ethereal Hunter [Blade of Cendriane Level 12 Utility][move action]<br>\r"; }

if (paragon_doomguardmarauder){
SWD+="<img src=box.gif>Strike of Unmaking [Doomguard Marauder Level 12 Utility][free action]<br>\r"; }

if (paragon_maleckethjanissary){
SWD+="<img src=box.gif>Ever-Present Escort [Malek-Keth Janissary Level 12 Utility][immediate interrupt]<br>\r"; }

if (paragon_planeshifter){
SWD+="<img src=box.gif>Quick Portal [Planeshifter Level 12 Utility]<br>\r"; }

//LOWER THE ONES THAT ARE DAILY




// kurwa encounter 12

}
                                                
if (document.form1.arcoftherighteous_box.checked){SWD+="<img src=box.gif>Arc of the Righteous [Level 13]<br>\r"; }
if (document.form1.inspiringstrike_box.checked){SWD+="<img src=box.gif>Inspiring Strike [Level 13]<br>\r"; }
if (document.form1.mantleofglory_box.checked){SWD+="<img src=box.gif>Mantle of Glory [Level 13]<br>\r"; }
if (document.form1.plagueofdoom_box.checked){SWD+="<img src=box.gif>Plague of Doom [Level 13]<br>\r"; }
if (document.form1.anvilofdoom_box.checked){SWD+="<img src=box.gif>Anvil of Doom [Level 13]<br>\r"; }
if (document.form1.chainsofsorrow_box.checked){SWD+="<img src=box.gif>Chains of Sorrow [Level 13]<br>\r"; }
if (document.form1.giantswake_box.checked){SWD+="<img src=box.gif>Giant's Wake [Level 13]<br>\r"; }
if (document.form1.silverstep_box.checked){SWD+="<img src=box.gif>Silver Step [Level 13]<br>\r"; }
if (document.form1.stormofblows_box.checked){SWD+="<img src=box.gif>Storm of Blows [Level 13]<br>\r"; }
if (document.form1.talonoftheroc_box.checked){SWD+="<img src=box.gif>Talon of the Roc [Level 13]<br>\r"; }
if (document.form1.entanglingsmite_box.checked){SWD+="<img src=box.gif>Entangling Smite [Level 13]<br>\r"; }
if (document.form1.radiantcharge_box.checked){SWD+="<img src=box.gif>Radiant Charge [Level 13]<br>\r"; }
if (document.form1.renewingsmite_box.checked){SWD+="<img src=box.gif>Renewing Smite [Level 13]<br>\r"; }
if (document.form1.whirlwindsmite_box.checked){SWD+="<img src=box.gif>Whirlwind Smite [Level 13]<br>\r"; }
if (document.form1.armorsplinter_box.checked){SWD+="<img src=box.gif>Armor Splinter [Level 13]<br>\r"; }
if (document.form1.knockdownshot_box.checked){SWD+="<img src=box.gif>Knockdown Shot [Level 13]<br>\r"; }
if (document.form1.nimbledefense_box.checked){SWD+="<img src=box.gif>Nimble Defense [Level 13]<br>\r"; }
if (document.form1.pinningstrike_box.checked){SWD+="<img src=box.gif>Pinning Strike [Level 13]<br>\r"; }
if (document.form1.herdtheprey_box.checked){SWD+="<img src=box.gif>&nbsp;Herd the Prey [Level 13]<br>\r";}
if (document.form1.knockdownpounce_box.checked){SWD+="<img src=box.gif>&nbsp;Knockdown Pounce [Level 13]<br>\r";}
if (document.form1.foolsopportunity_box.checked){SWD+="<img src=box.gif>Fool's Opportunity [Level 13]<br>\r"; }
if (document.form1.stunningstrike_box.checked){SWD+="<img src=box.gif>Stunning Strike [Level 13]<br>\r"; }
if (document.form1.tornadostrike_box.checked){SWD+="<img src=box.gif>Tornado Strike [Level 13]<br>\r"; }
if (document.form1.unbalancingattack_box.checked){SWD+="<img src=box.gif>Unbalancing Attack [Level 13]<br>\r"; }
if (document.form1.bewitchingwhispers_box.checked){SWD+="<img src=box.gif>Bewitching Whispers [Level 13]<br>\r"; }
if (document.form1.coldfirevortex_box.checked){SWD+="<img src=box.gif>Cold Fire Vortex [Level 13]<br>\r"; }
if (document.form1.harrowstorm_box.checked){SWD+="<img src=box.gif>Harrow Storm [Level 13]<br>\r"; }
if (document.form1.soulflaying_box.checked){SWD+="<img src=box.gif>Soul Flaying [Level 13]<br>\r"; }
if (document.form1.beatthemintotheground_box.checked){SWD+="<img src=box.gif>Beat Them Into the Ground [Level 13]<br>\r"; }
if (document.form1.bolsteringblow_box.checked){SWD+="<img src=box.gif>Bolstering Blow [Level 13]<br>\r"; }
if (document.form1.denyingsmite_box.checked){SWD+="<img src=box.gif>Denying Smite [Level 13]<br>\r"; }
if (document.form1.furyofthesirocco_box.checked){SWD+="<img src=box.gif>Fury of the Sirocco [Level 13]<br>\r"; }
if (document.form1.frostburn_box.checked){SWD+="<img src=box.gif>Frostburn [Level 13]<br>\r"; }
if (document.form1.mesmerichold_box.checked){SWD+="<img src=box.gif>Mesmeric Hold [Level 13]<br>\r"; }
if (document.form1.prismaticburst_box.checked){SWD+="<img src=box.gif>Prismatic Burst [Level 13]<br>\r"; }
if (document.form1.thunderlance_box.checked){SWD+="<img src=box.gif>Thunder Lance [Level 13]<br>\r"; }


if (document.form1.cloudofsouls_box.checked){SWD+="<img src=box.gif>Cloud of Souls [Level 13]<br>\r";}
if (document.form1.lightoftheavengingsun_box.checked){SWD+="<img src=box.gif>Light of the Avenging Sun [Level 13]<br>\r";}
if (document.form1.sequesteringword_box.checked){SWD+="<img src=box.gif>Sequestering Word [Level 13]<br>\r";}
if (document.form1.whirlingblades_box.checked){SWD+="<img src=box.gif>Whirling Blades [Level 13]<br>\r";}
if (document.form1.bladewhirlwind_box.checked){SWD+="<img src=box.gif>Blade Whirlwind [Level 13]<br>\r";}
if (document.form1.cracktheskull_box.checked){SWD+="<img src=box.gif>Crack the Skull [Level 13]<br>\r";}
if (document.form1.stormofblades_box.checked){SWD+="<img src=box.gif>Storm of Blades [Level 13]<br>\r";}
if (document.form1.terrorscry_box.checked){SWD+="<img src=box.gif>Terror's Cry [Level 13]<br>\r";}
if (document.form1.thunderfall_box.checked){SWD+="<img src=box.gif>Thunderfall [Level 13]<br>\r";}
if (document.form1.earthquakestrike_box.checked){SWD+="<img src=box.gif>Earthquake Strike [Level 13]<br>\r";}
if (document.form1.foolhardyfighting_box.checked){SWD+="<img src=box.gif>Foolhardy Fighting [Level 13]<br>\r";}
if (document.form1.harmonyofthetwo_box.checked){SWD+="<img src=box.gif>Harmony of the Two [Level 13]<br>\r";}
if (document.form1.songofstorms_box.checked){SWD+="<img src=box.gif>Song of Storms [Level 13]<br>\r";}
if (document.form1.clawsofretribution_box.checked){SWD+="<img src=box.gif>Claws of Retribution [Level 13]<br>\r";}
if (document.form1.esxposeweakness_box.checked){SWD+="<img src=box.gif>Expose Weakness [Level 13]<br>\r";}
if (document.form1.thundercrash_box.checked){SWD+="<img src=box.gif>Thunder Crash [Level 13]<br>\r";}
if (document.form1.tidalsurge_box.checked){SWD+="<img src=box.gif>Tidal Surge [Level 13]<br>\r";}
if (document.form1.compelattention_box.checked){SWD+="<img src=box.gif>Compel Attention [Level 13]<br>\r";}
if (document.form1.pilarofguardianflame_box.checked){SWD+="<img src=box.gif>Pilar of Guardian Flame [Level 13]<br>\r";}
if (document.form1.sealoftheheretic_box.checked){SWD+="<img src=box.gif>Seal of the Heretic [Level 13]<br>\r";}
if (document.form1.windsofcelestia_box.checked){SWD+="<img src=box.gif>Winds of Celestia [Level 13]<br>\r";}
if (document.form1.calltotheindomitabledefender_box.checked){SWD+="<img src=box.gif>Call to the Indomitable Defender [Level 13]<br>\r";}
if (document.form1.calltothelaughingfortune_box.checked){SWD+="<img src=box.gif>Call to the Laughing Fortune [Level 13]<br>\r";}
if (document.form1.howlinggust_box.checked){SWD+="<img src=box.gif>Howling Gust [Level 13]<br>\r";}
if (document.form1.spiritofcleansinglight_box.checked){SWD+="<img src=box.gif>Spirit of Cleansing Light [Level 13]<br>\r";}
if (document.form1.chainsoffire_box.checked){SWD+="<img src=box.gif>Chains of Fire [Level 13]<br>\r";}
if (document.form1.jawsoftheearth_box.checked){SWD+="<img src=box.gif>Jaws of the Earth [Level 13]<br>\r";}
if (document.form1.mindhammer_box.checked){SWD+="<img src=box.gif>Mind Hammer [Level 13]<br>\r";}
if (document.form1.thunderbreath_box.checked){SWD+="<img src=box.gif>Thunder Breath [Level 13]<br>\r";}
if (document.form1.creepersgrasp_box.checked){SWD+="<img src=box.gif>Creeper's Grasp [Level 13]<br>\r";}
if (document.form1.icyshards_box.checked){SWD+="<img src=box.gif>Icy Shards [Level 13]<br>\r";}
if (document.form1.ponderousstrike_box.checked){SWD+="<img src=box.gif>Ponderous Strike [Level 13]<br>\r";}
if (document.form1.sunburststrike_box.checked){SWD+="<img src=box.gif>Sunburst Strike [Level 13]<br>\r";}




if (document.form1.acidburstblade_box.checked){SWD+="<img src=box.gif>Acid Burst Blade [FRPG; Level 13]<br>\r";}
if (document.form1.dimensionalslash_box.checked){SWD+="<img src=box.gif>Dimensional Slash [FRPG; Level 13]<br>\r";}
if (document.form1.seedoffire_box.checked){SWD+="<img src=box.gif>Seed of Fire [FRPG; Level 13]<br>\r";}
if (document.form1.linesinburningsand_box.checked){SWD+="<img src=box.gif>Lines in Burning Sand [FRPG; Level 13]<br>\r";}
if (document.form1.spellmothersembrace_box.checked){SWD+="<img src=box.gif>Spell Mother's Embrace [FRPG; Level 13]<br>\r";}



if (document.form1.other13encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other13encounter.value+" [Level 13]:<br>\r"; }


if (document.form1.astralshield_box.checked){SWD+="<img src=box.gif>Astral Shield [Level 16 Utility]<br>\r"; }
if (document.form1.interposingshield_box.checked){SWD+="<img src=box.gif>Interposing Shield [Level 16 Utility][immediate interrupt]<br>\r"; }
if (document.form1.surprisestep_box.checked){SWD+="<img src=box.gif>Surprise Step [Level 16 Utility][immediate reaction]<br>\r"; }
if (document.form1.hideinplainsight_box.checked){SWD+="<img src=box.gif>Hide in Plain Sight [Level 16 Utility][minor action]<br>\r"; }
if (document.form1.leapingdodge_box.checked){SWD+="<img src=box.gif>Leaping Dodge [Level 16 Utility][immediate interrupt]<br>\r"; }
if (document.form1.cloakofshadow_box.checked){SWD+="<img src=box.gif>Cloak of Shadow [Level 16 Utility][move action]<br>\r"; }
if (document.form1.infuriatingelusiveness_box.checked){SWD+="<img src=box.gif>Infuriating Elusiveness [Level 16 Utility][move action]<br>\r"; }
if (document.form1.warlordsbanner_box.checked){SWD+="<img src=box.gif>Warlord's Banner [Level 16 Utility]<br>\r"; }
if (document.form1.displacement_box.checked){SWD+="<img src=box.gif>Displacement [Level 16 Utility][immediate interrupt]<br>\r"; }
if (document.form1.bodynobody_box.checked){SWD+="<img src=box.gif>Body, No Body [FRPG; Level 16 Utility][minor action]<br>\r";}
if (document.form1.healingfleshoftheinfected_box.checked){SWD+="<img src=box.gif>Healing Flesh of the Infected [FRPG; Level 16 Utility]<br>\r";}

if (document.form1.packstealth_box.checked){SWD+="<img src=box.gif>&nbsp;Pack Stealth [Level 16][minor action]<br>\r";}
if (document.form1.astralcloak_box.checked){SWD+="<img src=box.gif>Astral Cloak [Level 16 Utility][minor action]<br>\r";}
if (document.form1.bulwarkofdefiance_box.checked){SWD+="<img src=box.gif>Bulwark of Defiance [Level 16 Utility][no action]<br>\r";}
if (document.form1.windsoftheastralsea_box.checked){SWD+="<img src=box.gif>Winds of the Astral Sea [Level 16 Utility][move action]<br>\r";}
if (document.form1.fuelthefire_box.checked){SWD+="<img src=box.gif>Fuel the Fire [Level 16 Utility][minor action]<br>\r";}
if (document.form1.shieldofjustice_box.checked){SWD+="<img src=box.gif>Shield of Justice [Level 16 Utility][immediate interrupt]<br>\r";}
if (document.form1.fateweaversshield_box.checked){SWD+="<img src=box.gif>Fate Weaver's Shield [Level 16 Utility][minor action]<br>\r";}
if (document.form1.spiritbinding_box.checked){SWD+="<img src=box.gif>Spirit Binding [Level 16 Utility][minor action]<br>\r";}
if (document.form1.breathofthedesertdragon_box.checked){SWD+="<img src=box.gif>Breath of the Desert Dragon [Level 16 Utility][move action]<br>\r";}
if (document.form1.chaossanctuary_box.checked){SWD+="<img src=box.gif>Chaos Sanctuary [Level 16 Utility][minor action]<br>\r";}
if (document.form1.draconicmajesty_box.checked){SWD+="<img src=box.gif>Draconic Majesty [Level 16 Utility][minor action]<br>\r";}
if (document.form1.cleansingearth_box.checked){SWD+="<img src=box.gif>Cleansing Earth [Level 16 Utility][immediate reaction]<br>\r";}
if (document.form1.primalleap_box.checked){SWD+="<img src=box.gif>Primal Leap [Level 16 Utility][move action]<br>\r";}


if (document.form1.other16encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other16encounter.value+" [Level 16 Utility]:<br>\r"; }



if (document.form1.blindinglight_box.checked){SWD+="<img src=box.gif>Blinding Light [Level 17]<br>\r"; }
if (document.form1.enthrall_box.checked){SWD+="<img src=box.gif>Enthrall [Level 17]<br>\r"; }
if (document.form1.sentinelstrike_box.checked){SWD+="<img src=box.gif>Sentinel Strike [Level 17]<br>\r"; }
if (document.form1.thundrousword_box.checked){SWD+="<img src=box.gif>Thundrous Word [Level 17]<br>\r"; }
if (document.form1.exactingstrike_box.checked){SWD+="<img src=box.gif>Exacting Strike [Level 17]<br>\r"; }
if (document.form1.exorcismofsteel_box.checked){SWD+="<img src=box.gif>Exorcism of Steel [Level 17]<br>\r"; }
if (document.form1.harryingassault_box.checked){SWD+="<img src=box.gif>Harrying Assault [Level 17]<br>\r"; }
if (document.form1.mountainbreakingblow_box.checked){SWD+="<img src=box.gif>Mountain Breaking Blow [Level 17]<br>\r"; }
if (document.form1.vorpaltornado_box.checked){SWD+="<img src=box.gif>Vorpal Tornado [Level 17]<br>\r"; }
if (document.form1.warriorschallenge_box.checked){SWD+="<img src=box.gif>Warrior's Challenge [Level 17]<br>\r"; }
if (document.form1.enervatingsmite_box.checked){SWD+="<img src=box.gif>Enervating Smite [Level 17]<br>\r"; }
if (document.form1.fortifyingsmite_box.checked){SWD+="<img src=box.gif>Fortifying Smite [Level 17]<br>\r"; }
if (document.form1.handofthegods_box.checked){SWD+="<img src=box.gif>Hand of the Gods [Level 17][minor action]<br>\r"; }
if (document.form1.terrifyingsmite_box.checked){SWD+="<img src=box.gif>Terrifying Smite [Level 17]<br>\r"; }
if (document.form1.arrowofvengeance_box.checked){SWD+="<img src=box.gif>Arrow of Vengeance [Level 17][immediate reaction]<br>\r"; }
if (document.form1.cheetahsrake_box.checked){SWD+="<img src=box.gif>Cheetah's Rake [Level 17]<br>\r"; }
if (document.form1.tripleshot_box.checked){SWD+="<img src=box.gif>Triple Shot [Level 17]<br>\r"; }
if (document.form1.twoweaponeviscerate_box.checked){SWD+="<img src=box.gif>Two-Weapon Eviscerate [Level 17]<br>\r"; }
if (document.form1.bladeandfang_box.checked){SWD+="<img src=box.gif>&nbsp;Blade and Fang [Level 17]<br>\r";}
if (document.form1.houndingbeast_box.checked){SWD+="<img src=box.gif>&nbsp;Hounding Beast [Level 17]<br>\r";}
if (document.form1.dragontailstrike_box.checked){SWD+="<img src=box.gif>Dragon Tail Strike [Level 17]<br>\r"; }
if (document.form1.houndingstrike_box.checked){SWD+="<img src=box.gif>Hounding Strike [Level 17]<br>\r"; }
if (document.form1.stabandgrab_box.checked){SWD+="<img src=box.gif>Stab and Grab [Level 17]<br>\r"; }
if (document.form1.strandoffate_box.checked){SWD+="<img src=box.gif>Strand of Fate [Level 17]<br>\r"; }
if (document.form1.thirstingtendrils_box.checked){SWD+="<img src=box.gif>Thirsting Tendrils [Level 17]<br>\r"; }
if (document.form1.warlocksbargain_box.checked){SWD+="<img src=box.gif>Warlock's Bargain [Level 17]<br>\r"; }
if (document.form1.battleon_box.checked){SWD+="<img src=box.gif>Battle On [Level 17]<br>\r"; }
if (document.form1.hailofsteel_box.checked){SWD+="<img src=box.gif>Hail of Steel [Level 17]<br>\r"; }
if (document.form1.thundrousfury_box.checked){SWD+="<img src=box.gif>Thundrous Fury [Level 17]<br>\r"; }
if (document.form1.warlordsrush_box.checked){SWD+="<img src=box.gif>Warlord's Rush [Level 17]<br>\r"; }
if (document.form1.combust_box.checked){SWD+="<img src=box.gif>Combust [Level 17]<br>\r"; }
if (document.form1.crushingtitansfist_box.checked){SWD+="<img src=box.gif>Crushing Titan's Fist [Level 17]<br>\r"; }
if (document.form1.forcevolley_box.checked){SWD+="<img src=box.gif>Force Volley [Level 17]<br>\r"; }
if (document.form1.icetomb_box.checked){SWD+="<img src=box.gif>Ice Tomb [Level 17]<br>\r"; }



if (document.form1.astralfury_box.checked){SWD+="<img src=box.gif>Astral Fury [Level 17]<br>\r";}
if (document.form1.readyforthefinalblow_box.checked){SWD+="<img src=box.gif>Ready the Final Blow [Level 17]<br>\r";}
if (document.form1.spectralcharge_box.checked){SWD+="<img src=box.gif>Spectral Charge [Level 17]<br>\r";}
if (document.form1.wardingblade_box.checked){SWD+="<img src=box.gif>Warding Blade [Level 17]<br>\r";}
if (document.form1.defastatingblow_box.checked){SWD+="<img src=box.gif>Devastating Blow [Level 17]<br>\r";}
if (document.form1.mountaingrasp_box.checked){SWD+="<img src=box.gif>Mountain Grasp [Level 17]<br>\r";}
if (document.form1.shoulderslam_box.checked){SWD+="<img src=box.gif>Shoulder Slam [Level 17]<br>\r";}
if (document.form1.threateningfry_box.checked){SWD+="<img src=box.gif>Threatening Fury [Level 17]<br>\r";}
if (document.form1.vigorousstrike_box.checked){SWD+="<img src=box.gif>Vigorous Strike [Level 17]<br>\r";}
if (document.form1.masksofmenace_box.checked){SWD+="<img src=box.gif>Masks of Menace [Level 17]<br>\r";}
if (document.form1.shoutofevasion_box.checked){SWD+="<img src=box.gif>Shout of Evasion [Level 17]<br>\r";}
if (document.form1.songofsummons_box.checked){SWD+="<img src=box.gif>Song of Summons [Level 17]<br>\r";}
if (document.form1.wordofvulnerability_box.checked){SWD+="<img src=box.gif>Word of Vulnerability [Level 17]<br>\r";}
if (document.form1.lightningcascade_box.checked){SWD+="<img src=box.gif>Lightning Cascade [Level 17]<br>\r";}
if (document.form1.scavengersprize_box.checked){SWD+="<img src=box.gif>Scavenger's Prize [Level 17]<br>\r";}
if (document.form1.shiftingrake_box.checked){SWD+="<img src=box.gif>Shifting Rake [Level 17]<br>\r";}
if (document.form1.windstorm_box.checked){SWD+="<img src=box.gif>Windstorm [Level 17]<br>\r";}
if (document.form1.blooddebt_box.checked){SWD+="<img src=box.gif>Blood Debt [Level 17]<br>\r";}
if (document.form1.curseofhaemnathuun_box.checked){SWD+="<img src=box.gif>Curse of Haemnathuun [Level 17]<br>\r";}
if (document.form1.glyphofradiance_box.checked){SWD+="<img src=box.gif>Glyph of Radiance [Level 17]<br>\r";}
if (document.form1.glyphofthreeblades_box.checked){SWD+="<img src=box.gif>Glyph of Three Blades [Level 17]<br>\r";}
if (document.form1.calltothelashingbehemoth_box.checked){SWD+="<img src=box.gif>Call to the Lashing Behemoth [Level 17]<br>\r";}
if (document.form1.shacklesofthemountain_box.checked){SWD+="<img src=box.gif>Shackles of the Mountain [Level 17]<br>\r";}
if (document.form1.spiritbondofvengeance_box.checked){SWD+="<img src=box.gif>Spirit Bond of Vengeance [Level 17]<br>\r";}
if (document.form1.spiritofspringsrenewal_box.checked){SWD+="<img src=box.gif>Spirit of Spring's Renewal [Level 17]<br>\r";}
if (document.form1.breathofwinter_box.checked){SWD+="<img src=box.gif>Breath of Winter [Level 17]<br>\r";}
if (document.form1.dragontailmeditation_box.checked){SWD+="<img src=box.gif>Dragon Tail Meditation [Level 17]<br>\r";}
if (document.form1.poisonousevasion_box.checked){SWD+="<img src=box.gif>Poisonous Evasion [Level 17]<br>\r";}
if (document.form1.thundersummons_box.checked){SWD+="<img src=box.gif>Thunder Summons [Level 17]<br>\r";}
if (document.form1.callforththeharvest_box.checked){SWD+="<img src=box.gif>Call forth the Harvest [Level 17]<br>\r";}
if (document.form1.eagervinestrike_box.checked){SWD+="<img src=box.gif>Eager Vine Strike [Level 17]<br>\r";}
if (document.form1.earthholdsrebuke_box.checked){SWD+="<img src=box.gif>Earthhold's Rebuke [Level 17]<br>\r";}
if (document.form1.razorleafcut_box.checked){SWD+="<img src=box.gif>Razor Leaf Cut [Level 17]<br>\r";}







if (document.form1.unholyglee_box.checked){SWD+="<img src=box.gif>Unholy Glee [FRPG; Level 17]<br>\r";}
if (document.form1.yourdelectablepain_box.checked){SWD+="<img src=box.gif>Your Delectable Pain [FRPG; Level 17]<br>\r";}
if (document.form1.irontoothofbloodlust_box.checked){SWD+="<img src=box.gif>Iron Tooth of Bloodlust [FRPG; Level 17]<br>\r";}
if (document.form1.maskofmidnight_box.checked){SWD+="<img src=box.gif>Mask of Midnight [FRPG; Level 17]<br>\r";}


if (document.form1.other17encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other17encounter.value+" [Level 17]:<br>\r"; }


if (document.form1.safestride_box.checked){SWD+="<img src=box.gif>Safe Stride [Level 22 Utility][move action]<br>\r"; }
if (document.form1.cloudjump_box.checked){SWD+="<img src=box.gif>Cloud Jump [Level 22 Utility][move action]<br>\r"; }
if (document.form1.dazzlingacrobatics_box.checked){SWD+="<img src=box.gif>Dazzling Acrobatics [Level 22 Utility][move action]<br>\r"; }
if (document.form1.entropicward_box.checked){SWD+="<img src=box.gif>Entropic Ward [Level 22 Utility][minor action]<br>\r"; }
if (document.form1.other22encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other22encounter.value+" [Level 22 Utility]:<br>\r"; }

if (document.form1.invisibletroupe_box.checked){SWD+="<img src=box.gif>Invisible Troupe [Level 22 Utility][minor action]<br>\r";}
if (document.form1.dragonfear_box.checked){SWD+="<img src=box.gif>Dragon Fear [Level 22 Utility][immediate interrupt]<br>\r";}
if (document.form1.windshape_box.checked){SWD+="<img src=box.gif>Wind Shape [Level 22 Utility][minor action]<br>\r";}


if (document.form1.astralbladesofdeath_box.checked){SWD+="<img src=box.gif>Astral Blades of Death [Level 23]<br>\r"; }
if (document.form1.divinecensure_box.checked){SWD+="<img src=box.gif>Divine Censure [Level 23]<br>\r"; }
if (document.form1.hauntingstrike_box.checked){SWD+="<img src=box.gif>Haunting Strike [Level 23]<br>\r"; }
if (document.form1.healingtorch_box.checked){SWD+="<img src=box.gif>Healing Torch [Level 23]<br>\r"; }
if (document.form1.cageofchains_box.checked){SWD+="<img src=box.gif>Cage of Chains [Level 23]<br>\r"; }
if (document.form1.fangsofsteel_box.checked){SWD+="<img src=box.gif>Fangs of Steel [Level 23]<br>\r"; }
if (document.form1.hacknslash_box.checked){SWD+="<img src=box.gif>Hack 'n' slash [Level 23]<br>\r"; }
if (document.form1.paralyzingstrike_box.checked){SWD+="<img src=box.gif>Paralyzing Strike [Level 23]<br>\r"; }
if (document.form1.skullcrusher_box.checked){SWD+="<img src=box.gif>Skull Crusher [Level 23]<br>\r"; }
if (document.form1.warriorsurging_box.checked){SWD+="<img src=box.gif>Warrior's Urging [Level 23]<br>\r"; }
if (document.form1.herewaitsthydoom_box.checked){SWD+="<img src=box.gif>Here Waits Thy Doom [Level 23]<br>\r"; }
if (document.form1.martyrssmite_box.checked){SWD+="<img src=box.gif>Martyr's Smite [Level 23]<br>\r"; }
if (document.form1.resoundingsmite_box.checked){SWD+="<img src=box.gif>Resounding Smite [Level 23]<br>\r"; }
if (document.form1.sublimetranspostion_box.checked){SWD+="<img src=box.gif>Sublime Transpostion [Level 23]<br>\r"; }
if (document.form1.bladeward_box.checked){SWD+="<img src=box.gif>Blade Ward [Level 23][immediate interrupt; 2[W] as per errata 7/2/08]<br>\r"; }
if (document.form1.cloakofthorns_box.checked){SWD+="<img src=box.gif>Cloak of Thorns [Level 23]<br>\r"; }
if (document.form1.hammershot_box.checked){SWD+="<img src=box.gif>Hammer Shot [Level 23]<br>\r"; }
if (document.form1.manticoresvolley_box.checked){SWD+="<img src=box.gif>Manticore's Volley [Level 23]<br>\r"; }
if (document.form1.chasedown_box.checked){SWD+="<img src=box.gif>&nbsp;Chase Down [Level 23]<br>\r";}
if (document.form1.overwhelmingfury_box.checked){SWD+="<img src=box.gif>&nbsp;Overwhelming Fury [Level 23]<br>\r";}
if (document.form1.knavesgambit_box.checked){SWD+="<img src=box.gif>Knave's Gambit [Level 23]<br>\r"; }
if (document.form1.scorpionstrike_box.checked){SWD+="<img src=box.gif>Scorpion Strike [Level 23][immediate reaction]<br>\r"; }
if (document.form1.steelentrapment_box.checked){SWD+="<img src=box.gif>Steel Entrapment [Level 23]<br>\r"; }
if (document.form1.darktransport_box.checked){SWD+="<img src=box.gif>Dark Transport [Level 23]<br>\r"; }
if (document.form1.spitefuldarts_box.checked){SWD+="<img src=box.gif>Spiteful Darts [Level 23]<br>\r"; }
if (document.form1.thornsofvenom_box.checked){SWD+="<img src=box.gif>Thorns of Venom [Level 23]<br>\r"; }
if (document.form1.greatdragonwarcry_box.checked){SWD+="<img src=box.gif>Great Dragon Warcry [Level 23]<br>\r"; }
if (document.form1.pillartopost_box.checked){SWD+="<img src=box.gif>Pillar to Post [Level 23]<br>\r"; }
if (document.form1.rabbitsandwolves_box.checked){SWD+="<img src=box.gif>Rabbits and Wolves [Level 23]<br>\r"; }
if (document.form1.suddenassault_box.checked){SWD+="<img src=box.gif>Sudden Assault [Level 23]<br>\r"; }
if (document.form1.acidstorm_box.checked){SWD+="<img src=box.gif>Acid Storm [Level 23]<br>\r"; }
if (document.form1.chainlightning_box.checked){SWD+="<img src=box.gif>Chain Lightning [Level 23]<br>\r"; }
if (document.form1.thunderclap_box.checked){SWD+="<img src=box.gif>Thunderclap [Level 23]<br>\r"; }



if (document.form1.avengersshield_box.checked){SWD+="<img src=box.gif>Avenger's Shield [Level 23]<br>\r";}
if (document.form1.bondofjustice_box.checked){SWD+="<img src=box.gif>Bond of Justice [Level 23]<br>\r";}
if (document.form1.phaseduel_box.checked){SWD+="<img src=box.gif>Phase Duel [Level 23]<br>\r";}
if (document.form1.arcingthrow_box.checked){SWD+="<img src=box.gif>Arcing Throw [Level 23]<br>\r";}
if (document.form1.berserkersshout_box.checked){SWD+="<img src=box.gif>Berserker's Shout [Level 23]<br>\r";}
if (document.form1.craterfall_box.checked){SWD+="<img src=box.gif>Crater Fall [Level 23]<br>\r";}
if (document.form1.fatalstrike_box.checked){SWD+="<img src=box.gif>Fatal Strike [Level 23]<br>\r";}
if (document.form1.feralscythe_box.checked){SWD+="<img src=box.gif>Feral Scythe [Level 23]<br>\r";}
if (document.form1.staggeringstrike_box.checked){SWD+="<img src=box.gif>Staggering Strike [Level 23]<br>\r";}
if (document.form1.echoesintime_box.checked){SWD+="<img src=box.gif>Echoes in Time [Level 23]<br>\r";}
if (document.form1.rhythmofdisorientation_box.checked){SWD+="<img src=box.gif>Rhythm of Disorientation [Level 23]<br>\r";}
if (document.form1.songofliberation_box.checked){SWD+="<img src=box.gif>Song of Liberation [Level 23]<br>\r";}
if (document.form1.wealandwoe_box.checked){SWD+="<img src=box.gif>Weal and Woe [Level 23]<br>\r";}
if (document.form1.graspingearth_box.checked){SWD+="<img src=box.gif>Grasping Earth [Level 23]<br>\r";}
if (document.form1.primalroar_box.checked){SWD+="<img src=box.gif>Primal Roar [Level 23]<br>\r";}
if (document.form1.stormburst_box.checked){SWD+="<img src=box.gif>Storm Burst [Level 23]<br>\r";}
if (document.form1.strengthofthehunt_box.checked){SWD+="<img src=box.gif>Strength of the Hunt [Level 23]<br>\r";}
if (document.form1.cascadeoffivesuns_box.checked){SWD+="<img src=box.gif>Cascade of Five Suns [Level 23]<br>\r";}
if (document.form1.stormofcelestia_box.checked){SWD+="<img src=box.gif>Storm of Celestia [Level 23]<br>\r";}
if (document.form1.vindicatingflames_box.checked){SWD+="<img src=box.gif>Vindicating Flames [Level 23]<br>\r";}
if (document.form1.wordofrebuke_box.checked){SWD+="<img src=box.gif>Word of Rebuke [Level 23]<br>\r";}
if (document.form1.calltotheprimalprotector_box.checked){SWD+="<img src=box.gif>Call to the Primal Protector [Level 23]<br>\r";}
if (document.form1.calltotherelentlesshunter_box.checked){SWD+="<img src=box.gif>Call to the Relentless Hunter [Level 23]<br>\r";}
if (document.form1.spiritofthedeathraven_box.checked){SWD+="<img src=box.gif>Spirit of the Death Raven [Level 23]<br>\r";}
if (document.form1.twintempestspirits_box.checked){SWD+="<img src=box.gif>Twin Tempest Spirits [Level 23]<br>\r";}
if (document.form1.blackbreath_box.checked){SWD+="<img src=box.gif>Black Breath [Level 23]<br>\r";}
if (document.form1.chaosorbs_box.checked){SWD+="<img src=box.gif>Chaos Orbs [Level 23]<br>\r";}
if (document.form1.ironchains_box.checked){SWD+="<img src=box.gif>Iron Chains [Level 23]<br>\r";}
if (document.form1.platesofice_box.checked){SWD+="<img src=box.gif>Plates of Ice [Level 23]<br>\r";}
if (document.form1.guardianswrath_box.checked){SWD+="<img src=box.gif>Guardian's Wrath [Level 23]<br>\r";}
if (document.form1.naturesally_box.checked){SWD+="<img src=box.gif>Nature's Ally [Level 23]<br>\r";}
if (document.form1.startlingsavagery_box.checked){SWD+="<img src=box.gif>Startling Savagery [Level 23]<br>\r";}
if (document.form1.whirlwindassault_box.checked){SWD+="<img src=box.gif>Whirlwind Assault [Level 23]<br>\r";}







if (document.form1.acidfountain_box.checked){SWD+="<img src=box.gif>Acid Fountain [FRPG; Level 23]<br>\r";}
if (document.form1.meteorstrike_box.checked){SWD+="<img src=box.gif>Meteor Strike [FRPG; Level 23]<br>\r";}
if (document.form1.thunderreposte_box.checked){SWD+="<img src=box.gif>Thunder Reposte [FRPG; Level 23][immediate reaction]<br>\r";}
if (document.form1.dreadtheft_box.checked){SWD+="<img src=box.gif>Dread Theft [FRPG; Level 23]<br>\r";}
if (document.form1.bladesofvanquishedarmies_box.checked){SWD+="<img src=box.gif>Blades of Vanquished Armies [FRPG; Level 23]<br>\r";}
if (document.form1.hideoustether_box.checked){SWD+="<img src=box.gif>Hideous Tether [FRPG; Level 23]<br>\r";}
if (document.form1.tonguesoftheearth_box.checked){SWD+="<img src=box.gif>Tongues of the Earth [FRPG; Level 23]<br>\r";}



if (document.form1.other23encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other23encounter.value+" [Level 23]:<br>\r"; }

if (total_levels>=26)
 {
if (epic_beastlord){
SWD+="<img src=box.gif>Quickened Companion [Beastlord Level 26 Utility][free action]<br>\r"; }
if (epic_perfectassassin){
SWD+="<img src=box.gif>Spirit of Death [Perfect Assassin Level 26 Utility][free action]<br>\r"; }
if (epic_undyingwarrior){
SWD+="<img src=box.gif>Undying Enmity [Undying Warrior Level 26 Utility][free action]<br>\r"; }
if (epic_lorekeeper){
SWD+="<img src=box.gif>qqq [Lorekeeper Level 26 Utility]<br>\r";}
 }

if (document.form1.punishingstrike_box.checked){SWD+="<img src=box.gif>Punishing Strike [Level 27]<br>\r"; }
if (document.form1.sacrificialhealing_box.checked){SWD+="<img src=box.gif>Sacrificial Healing [Level 27]<br>\r"; }
if (document.form1.scourgeoftheunworthy_box.checked){SWD+="<img src=box.gif>Scourge of the Unworthy [Level 27]<br>\r"; }
if (document.form1.sunburst_box.checked){SWD+="<img src=box.gif>Sunburst [Level 27]<br>\r"; }
if (document.form1.adamantinestrike_box.checked){SWD+="<img src=box.gif>Adamantine Strike [Level 27]<br>\r"; }
if (document.form1.cruelreaper_box.checked){SWD+="<img src=box.gif>Cruel Reaper [Level 27]<br>\r"; }
if (document.form1.diamondshielddefense_box.checked){SWD+="<img src=box.gif>Diamond Shield Defense [Level 27]<br>\r"; }
if (document.form1.indomitablebattlestrike_box.checked){SWD+="<img src=box.gif>Indomitable Battle Strike [Level 27]<br>\r"; }
if (document.form1.blindingsmite_box.checked){SWD+="<img src=box.gif>Blinding Smite [Level 27]<br>\r"; }
if (document.form1.brandofjudgment_box.checked){SWD+="<img src=box.gif>Brand of Judgment [Level 27]<br>\r"; }
if (document.form1.deificvengeance_box.checked){SWD+="<img src=box.gif>Deific Vengeance [Level 27][immediate reaction]<br>\r"; }
if (document.form1.restrictingsmite_box.checked){SWD+="<img src=box.gif>Restricting Smite [Level 27]<br>\r"; }
if (document.form1.stunningsmite_box.checked){SWD+="<img src=box.gif>Stunning Smite [Level 27]<br>\r"; }
if (document.form1.deathrend_box.checked){SWD+="<img src=box.gif>Death Rend [Level 27]<br>\r"; }
if (document.form1.hailofarrows_box.checked){SWD+="<img src=box.gif>Hail of Arrows [Level 27]<br>\r"; }
if (document.form1.lightningshot_box.checked){SWD+="<img src=box.gif>Lightning Shot [Level 27][immediate reaction]<br>\r"; }
if (document.form1.wanderingtornado_box.checked){SWD+="<img src=box.gif>Wandering Tornado [Level 27]<br>\r"; }
if (document.form1.beastlyvise_box.checked){SWD+="<img src=box.gif>&nbsp;Beastly Vise [Level 27]<br>\r";}
if (document.form1.catchanddrop_box.checked){SWD+="<img src=box.gif>&nbsp;Catch and Drop [Level 27]<br>\r";}
if (document.form1.danceofdeath_box.checked){SWD+="<img src=box.gif>Dance of Death [Level 27]<br>\r"; }
if (document.form1.hurricaneofblood_box.checked){SWD+="<img src=box.gif>Hurricane of Blood [Level 27]<br>\r"; }
if (document.form1.perfectstrike_box.checked){SWD+="<img src=box.gif>Perfect Strike [Level 27]<br>\r"; }
if (document.form1.banishtothevoid_box.checked){SWD+="<img src=box.gif>Banish to the Void [Level 27]<br>\r"; }
if (document.form1.curseofthefeyking_box.checked){SWD+="<img src=box.gif>Curse of the Fey King [Level 27]<br>\r"; }
if (document.form1.hellfirecurse_box.checked){SWD+="<img src=box.gif>Hellfire Curse [Level 27]<br>\r"; }
if (document.form1.chimerabattlestrike_box.checked){SWD+="<img src=box.gif>Chimera Battle Strike [Level 27][standard action as per revision]<br>\r"; }
if (document.form1.devastatingcharge_box.checked){SWD+="<img src=box.gif>Devastating Charge [Level 27]<br>\r"; }
if (document.form1.inciteheroism_box.checked){SWD+="<img src=box.gif>Incite Heroism [Level 27]<br>\r"; }
if (document.form1.warlordsdoom_box.checked){SWD+="<img src=box.gif>Warlord's Doom [Level 27]<br>\r"; }
if (document.form1.blackfire_box.checked){SWD+="<img src=box.gif>Blackfire [Level 27]<br>\r"; }
if (document.form1.confusion_box.checked){SWD+="<img src=box.gif>Confusion [Level 27]<br>\r"; }
if (document.form1.forcecage_box.checked){SWD+="<img src=box.gif>Forcecage [Level 27]<br>\r"; }


if (document.form1.astralcharge_box.checked){SWD+="<img src=box.gif>Astral Charge [Level 27]<br>\r";}
if (document.form1.deathstroke_box.checked){SWD+="<img src=box.gif>Death Stroke [Level 27]<br>\r";}
if (document.form1.inevitableend_box.checked){SWD+="<img src=box.gif>Inevitable End [Level 27]<br>\r";}
if (document.form1.scattertotheastralwinds_box.checked){SWD+="<img src=box.gif>Scatter to the Astral Winds [Level 27]<br>\r";}
if (document.form1.bloodwrath_box.checked){SWD+="<img src=box.gif>Blood Wrath [Level 27]<br>\r";}
if (document.form1.bonebreaker_box.checked){SWD+="<img src=box.gif>Bone Breaker [Level 27]<br>\r";}
if (document.form1.butchersfeast_box.checked){SWD+="<img src=box.gif>Butcher's Feast [Level 27]<br>\r";}
if (document.form1.hurricaneofblades_box.checked){SWD+="<img src=box.gif>Hurricane of Blades [Level 27]<br>\r";}
if (document.form1.rampagingdragonstrike_box.checked){SWD+="<img src=box.gif>Rampaging Dragon Strike [Level 27]<br>\r";}
if (document.form1.bondofmalediction_box.checked){SWD+="<img src=box.gif>Bond of Malediction [Level 27]<br>\r";}
if (document.form1.kaleidoscopigburst_box.checked){SWD+="<img src=box.gif>Kaleidoscopic Burst [Level 27]<br>\r";}
if (document.form1.surgeofvalor_box.checked){SWD+="<img src=box.gif>Surge of Valor [Level 27]<br>\r";}
if (document.form1.explosivewind_box.checked){SWD+="<img src=box.gif>Explosive Wind [Level 27]<br>\r";}
if (document.form1.feralwhirlwind_box.checked){SWD+="<img src=box.gif>Feral Whirlwind [Level 27]<br>\r";}
if (document.form1.leapingrake_box.checked){SWD+="<img src=box.gif>Leaping Rake [Level 27]<br>\r";}
if (document.form1.polarblast_box.checked){SWD+="<img src=box.gif>Polar Blast [Level 27]<br>\r";}
if (document.form1.invoketerror_box.checked){SWD+="<img src=box.gif>Invoke Terror [Level 27]<br>\r";}
if (document.form1.offeringofpeace_box.checked){SWD+="<img src=box.gif>Offering of Peace [Level 27]<br>\r";}
if (document.form1.swarmofastralsteel_box.checked){SWD+="<img src=box.gif>Swarm of Astral Steel [Level 27]<br>\r";}
if (document.form1.wordofannihilation_box.checked){SWD+="<img src=box.gif>Word of Annihilation [Level 27]<br>\r";}
if (document.form1.bloodreaperspirits_box.checked){SWD+="<img src=box.gif>Blood Reaper Spirits [Level 27]<br>\r";}
if (document.form1.calltothecleansingfire_box.checked){SWD+="<img src=box.gif>Call to the Cleansing Fire [Level 27]<br>\r";}
if (document.form1.calltothegreathunter_box.checked){SWD+="<img src=box.gif>Call to the Great Hunter [Level 27]<br>\r";}
if (document.form1.spiritofelderwisdom_box.checked){SWD+="<img src=box.gif>Spirit of Elder Wisdom [Level 27]<br>\r";}
if (document.form1.lightningeruption_box.checked){SWD+="<img src=box.gif>Lightning Eruption [Level 27]<br>\r";}
if (document.form1.poisonward_box.checked){SWD+="<img src=box.gif>Poison Ward [Level 27]<br>\r";}
if (document.form1.thunderpulse_box.checked){SWD+="<img src=box.gif>Thunder Pulse [Level 27]<br>\r";}
if (document.form1.wildfirecurse_box.checked){SWD+="<img src=box.gif>Wildfire Curse [Level 27]<br>\r";}
if (document.form1.earthtomb_box.checked){SWD+="<img src=box.gif>Earth Tomb [Level 27]<br>\r";}
if (document.form1.guardiansstorm_box.checked){SWD+="<img src=box.gif>Guardian's Storm [Level 27]<br>\r";}
if (document.form1.screamingwindstrike_box.checked){SWD+="<img src=box.gif>Screaming Wind Strike [Level 27]<br>\r";}
if (document.form1.weightofthemountain_box.checked){SWD+="<img src=box.gif>Weight of the Mountain [Level 27]<br>\r";}



if (document.form1.maelstromblade_box.checked){SWD+="<img src=box.gif>Maelstrom Blade [FRPG; Level 27]<br>\r";}
if (document.form1.circleofdevastation_box.checked){SWD+="<img src=box.gif>Circle of Devastation [FRPG; Level 27]<br>\r";}
if (document.form1.dimensionalcharge_box.checked){SWD+="<img src=box.gif>Dimensional Charge [FRPG; Level 27]<br>\r";}
if (document.form1.inevitableundercut_box.checked){SWD+="<img src=box.gif>Inevitable Undercut [FRPG; Level 27]<br>\r";}
if (document.form1.shiftingwave_box.checked){SWD+="<img src=box.gif>Shifting Wave [FRPG; Level 27]<br>\r";}
if (document.form1.impossibleflurry_box.checked){SWD+="<img src=box.gif>Impossible Flurry [FRPG; Level 27]<br>\r";}





if (document.form1.other27encounter_box.checked){SWD+="<img src=box.gif>"+document.form1.other27encounter.value+" [Level 27]:<br>\r"; }


SWD +="</ul><p>"; 

SWD+="Daily Powers:<p><ul>"; 



if (multi_cleric_initiateofthefaith)
 {
  SWD+="<img src=box.gif>"
  SWD+="Healing Word [multiclass cleric, initiate of the faith][minor action]<br>\r"; 
 }
if (multi_bard_bardicdilettante)
 {
  SWD+="<img src=box.gif>"
  SWD+="Majestic Word [multiclass bard, bardic dilettante][minor action]<br>\r"; 
 }
if (multi_barbarian_berserkersfury)
 {
  SWD+="<img src=box.gif>"
  SWD+="+2 to damage until end of encounter [multiclass barbarian, berserker's fury][free action]<br>\r"; 
 }
if (multi_shaman_spirittalker)
 {
  SWD+="<img src=box.gif>"
  SWD+="Speak with Spirits [multiclass shaman, spirit talker]<br>\r"; 
 }
if ((class_barbarian)&(total_levels>=5)){SWD+="<img src=box.gif>Rage Strike<br>\r";}


if (feat_shieldingfamiliar){SWD+="<img src=box.gif>Shielding Familiar [feat power]<br>\r";}
if (feat_spellseerfamiliar){SWD+="<img src=box.gif>Spellseer Familiar [feat power]<br>\r";}
if (feat_aggressivefamiliar){SWD+="<img src=box.gif>Aggressive Familiar [feat power]<br>\r";}

if (document.form1.avengingflame_box.checked){SWD+="<img src=box.gif>Avenging Flame [Level 1]<br>\r"; }
if (document.form1.beaconofhope_box.checked){SWD+="<img src=box.gif>Beacon of Hope [Level 1]<br>\r"; }
if (document.form1.cascadeoflight_box.checked){SWD+="<img src=box.gif>Cascade of Light [Level 1]<br>\r"; }
if (document.form1.guardianoffaith_box.checked){SWD+="<img src=box.gif>Guardian of Faith [Level 1]<br>\r"; }
if (document.form1.brutestrike_box.checked){SWD+="<img src=box.gif>Brute Strike [Level 1][reliable]<br>\r"; }
if (document.form1.comebackstrike_box.checked){SWD+="<img src=box.gif>Comeback Strike [Level 1][reliable]<br>\r"; }
if (document.form1.villainsmenace_box.checked){SWD+="<img src=box.gif>Villain's Menace [Level 1]<br>\r"; }
if (document.form1.onpainofdeath_box.checked){SWD+="<img src=box.gif>On Pain of Death [Level 1]<br>\r"; }
if (document.form1.paladinsjudgment_box.checked){SWD+="<img src=box.gif>Paladin's Judgment [Level 1]<br>\r"; }
if (document.form1.radiantdelirium_box.checked){SWD+="<img src=box.gif>Radiant Delirium [Level 1]<br>\r"; }
if (document.form1.huntersbeartrap_box.checked){SWD+="<img src=box.gif>Hunter's Beartrap [Level 1]<br>\r"; }
if (document.form1.jawsofthewolf_box.checked){SWD+="<img src=box.gif>Jaws of the Wolf [Level 1]<br>\r"; }
if (document.form1.splitthetree_box.checked){SWD+="<img src=box.gif>Split the Tree [Level 1]<br>\r"; }
if (document.form1.suddenstrike_box.checked){SWD+="<img src=box.gif>Sudden Strike [Level 1]<br>\r"; }
if (document.form1.drivingthequarry_box.checked){SWD+="<img src=box.gif>&nbsp;Driving the Quarry [Level 1]<br>\r";}
if (document.form1.partneredsavaging_box.checked){SWD+="<img src=box.gif>&nbsp;Partnered Savaging [Level 1]<br>\r";}
if (document.form1.blindingbarrage_box.checked){SWD+="<img src=box.gif>Blinding Barrage [Level 1]<br>\r"; }
if (document.form1.easytarget_box.checked){SWD+="<img src=box.gif>Easy Target [Level 1]<br>\r"; }
if (document.form1.trickstrike_box.checked){SWD+="<img src=box.gif>Trick Strike [Level 1]<br>\r"; }
if (document.form1.armorofagathys_box.checked){SWD+="<img src=box.gif>Armor of Agathys [Level 1]<br>\r"; }
if (document.form1.curseofthedarkdream_box.checked){SWD+="<img src=box.gif>Curse of the Dark Dream [Level 1]<br>\r"; }
if (document.form1.dreadstar_box.checked){SWD+="<img src=box.gif>Dread Star [Level 1]<br>\r"; }
if (document.form1.flamesofphlegethos_box.checked){SWD+="<img src=box.gif>Flames of Phlegethos [Level 1]<br>\r"; }
if (document.form1.bastionofdefense_box.checked){SWD+="<img src=box.gif>Bastion of Defense [Level 1]<br>\r"; }
if (document.form1.leadtheattack_box.checked){SWD+="<img src=box.gif>Lead the Attack [Level 1]<br>\r"; }
if (document.form1.pinthefoe_box.checked){SWD+="<img src=box.gif>Pin the Foe [Level 1]<br>\r"; }
if (document.form1.whiteravenonslaught_box.checked){SWD+="<img src=box.gif>White Raven Onslaught [Level 1]<br>\r"; }
if (document.form1.acidarrow_box.checked){SWD+="<img src=box.gif>Acid Arrow [Level 1]<br>\r"; }
if (document.form1.flamingsphere_box.checked){SWD+="<img src=box.gif>Flaming Sphere [Level 1]<br>\r"; }
if (document.form1.freezingcloud_box.checked){SWD+="<img src=box.gif>Freezing Cloud [Level 1]<br>\r"; }
if (document.form1.sleep_box.checked){SWD+="<img src=box.gif>Sleep [Level 1]<br>\r"; }



if (document.form1.aspectofmight_box.checked){SWD+="<img src=box.gif>Aspect of Might [Level 1]<br>\r";}
if (document.form1.oathofthefinaldual_box.checked){SWD+="<img src=box.gif>Oath of the Final Dual [Level 1]<br>\r";}
if (document.form1.renewingstrike_box.checked){SWD+="<img src=box.gif>Renewing Strike [Level 1]<br>\r";}
if (document.form1.templeoflight_box.checked){SWD+="<img src=box.gif>Temple of Light [Level 1]<br>\r";}
if (document.form1.bloodhuntrage_box.checked){SWD+="<img src=box.gif>Bloodhunt Rage [Level 1]<br>\r";}
if (document.form1.macetailsrage_box.checked){SWD+="<img src=box.gif>Macetail's Rage [Level 1]<br>\r";}
if (document.form1.ragedrakesfrenzy_box.checked){SWD+="<img src=box.gif>Ragedrake's Frenzy [Level 1]<br>\r";}
if (document.form1.swiftpantherrage_box.checked){SWD+="<img src=box.gif>Swift Panther Rage [Level 1]<br>\r";}
if (document.form1.echoesoftheguardian_box.checked){SWD+="<img src=box.gif>Echoes of the Guardian [Level 1]<br>\r";}
if (document.form1.slayerssong_box.checked){SWD+="<img src=box.gif>Slayer's Song [Level 1]<br>\r";}
if (document.form1.stirringshout_box.checked){SWD+="<img src=box.gif>Stirring Shout [Level 1]<br>\r";}
if (document.form1.verseoftriumph_box.checked){SWD+="<img src=box.gif>Verse of Triumph [Level 1]<br>\r";}
if (document.form1.faeriefire_box.checked){SWD+="<img src=box.gif>Faerie Fire [Level 1]<br>\r";}
if (document.form1.firesoflife_box.checked){SWD+="<img src=box.gif>Fires of Life [Level 1]<br>\r";}
if (document.form1.savagefrenzy_box.checked){SWD+="<img src=box.gif>Savage Frenzy [Level 1]<br>\r";}
if (document.form1.windprison_box.checked){SWD+="<img src=box.gif>Wind Prison [Level 1]<br>\r";}
if (document.form1.angelicechelon_box.checked){SWD+="<img src=box.gif>Angelic Echelon [Level 1]<br>\r";}
if (document.form1.bindinginvocationofchains_box.checked){SWD+="<img src=box.gif>Binding Invocationofchains [Level 1]<br>\r";}
if (document.form1.purgingfire_box.checked){SWD+="<img src=box.gif>Purging Fire [Level 1]<br>\r";}
if (document.form1.summonangeloffire_box.checked){SWD+="<img src=box.gif>Summon Angel of Fire [Level 1]<br>\r";}
if (document.form1.blessingofthesevenwinds_box.checked){SWD+="<img src=box.gif>Blessing of the Seven Winds [Level 1]<br>\r";}
if (document.form1.cleansingwindofthenorth_box.checked){SWD+="<img src=box.gif>Cleansing Wind of the North [Level 1]<br>\r";}
if (document.form1.spiritofthehealingflood_box.checked){SWD+="<img src=box.gif>Spirit of the Healing Flood [Level 1]<br>\r";}
if (document.form1.wrathofthespiritworld_box.checked){SWD+="<img src=box.gif>Wrath of the Spirit World [Level 1]<br>\r";}
if (document.form1.chromaticorb_box.checked){SWD+="<img src=box.gif>Chromatic Orb [Level 1]<br>\r";}
if (document.form1.dazzlingray_box.checked){SWD+="<img src=box.gif>Dazzling Ray [Level 1]<br>\r";}
if (document.form1.dragonfangbolt_box.checked){SWD+="<img src=box.gif>Dragonfang Bolt [Level 1]<br>\r";}
if (document.form1.lightningbreath_box.checked){SWD+="<img src=box.gif>Lightning Breath [Level 1]<br>\r";}
if (document.form1.formofthefearsomeram_box.checked){SWD+="<img src=box.gif>Form of the Fearsome Ram [Level 1][special]<br>\r";}
if (document.form1.formoftherelentlesspanther_box.checked){SWD+="<img src=box.gif>Form of the Relentless Panther [Level 1][special]<br>\r";}
if (document.form1.formofthewillowsentinel_box.checked){SWD+="<img src=box.gif>Form of the Willow Sentinel [Level 1][special]<br>\r";}
if (document.form1.formofwintersherald_box.checked){SWD+="<img src=box.gif>Form of Winter's Herald [Level 1][special]<br>\r";}




if (document.form1.burningblade_box.checked){SWD+="<img src=box.gif>Burning Blade [FRPG; Level 1]<br>\r"; }
if (document.form1.frostbacklash_box.checked){SWD+="<img src=box.gif>Frost Backlash [FRPG; Level 1][immediate interrupt]<br>\r"; }
if (document.form1.whirlingblade_box.checked){SWD+="<img src=box.gif>Whirling Blade [FRPG; Level 1]<br>\r";}
if (document.form1.yourglorioussacrifice_box.checked){SWD+="<img src=box.gif>Your Glorious Sacrifice [FRPG; Level 1]<br>\r";}
if (document.form1.vestigeofkhaeleth_box.checked){SWD+="<img src=box.gif>Vestige of Khaeleth [AP; Level 1]<br>\r";}
if (document.form1.vestigeofmountvaelis_box.checked){SWD+="<img src=box.gif>Vestige of Mount Vaelis [AP; Level 1]<br>\r";}
if (document.form1.burningfocus_box.checked){SWD+="<img src=box.gif>Burning Focus [FRPG; Level 1]<br>\r";}
if (document.form1.spellmirror_box.checked){SWD+="<img src=box.gif>Spell Mirror [FRPG; Level 1][immediate interrupt]<br>\r";}
if (document.form1.contagion_box.checked){SWD+="<img src=box.gif>Contagion [FRPG; Level 1]<br>\r";}



if (document.form1.other01daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other01daily.value+" [Level 1]:<br>\r"; }

if (document.form1.bless_box.checked){SWD+="<img src=box.gif>Bless [Level 2 Utility]<br>\r"; }
if (document.form1.curelightwounds_box.checked){SWD+="<img src=box.gif>Cure Light Wounds [Level 2 Utility]<br>\r"; }
if (document.form1.shieldoffaith_box.checked){SWD+="<img src=box.gif>Shield of Faith [Level 2 Utility]<br>\r"; }
if (document.form1.boundlessendurance_box.checked){SWD+="<img src=box.gif>Boundless Endurance [Level 2 Utility][minor action]<br>\r"; }
if (document.form1.unstoppable_box.checked){SWD+="<img src=box.gif>Unstoppable [Level 2 Utility][minor action]<br>\r"; }
if (document.form1.astralspeech_box.checked){SWD+="<img src=box.gif>Astral Speech [Level 2 Utility][minor action]<br>\r"; }
if (document.form1.martyrsblessing_box.checked){SWD+="<img src=box.gif>Martyr's Blessing [Level 2 Utility][immediate interrupt]<br>\r"; }
if (document.form1.sacredcircle_box.checked){SWD+="<img src=box.gif>Sacred Circle [Level 2 Utility]<br>\r"; }
if (document.form1.fiendishresilience_box.checked){SWD+="<img src=box.gif>Fiendish Resilience [Level 2 Utility][minor action]<br>\r"; }
if (document.form1.expeditiousretreat_box.checked){SWD+="<img src=box.gif>Expeditious Retreat [Level 2 Utility][move action]<br>\r"; }
if (document.form1.featherfall_box.checked){SWD+="<img src=box.gif>Feather Fall [Level 2 Utility][free action]<br>\r"; }
if (document.form1.eldritchspeed_box.checked){SWD+="<img src=box.gif>Eldritch Speed [FRPG; Level 2 Utility][no action]<br>\r"; }
if (document.form1.fearnoelements_box.checked){SWD+="<img src=box.gif>Fear No Elements [FRPG; Level 2 Utility][minor action]<br>\r";}
if (document.form1.blastbackswipe_box.checked){SWD+="<img src=box.gif>Blastback Swipe [FRPG; Level 2 Utility]<br>\r";}


if (document.form1.blessingofvengeance_box.checked){SWD+="<img src=box.gif>Blessing of Vengeance [Level 2 Utility][free action]<br>\r";}
if (document.form1.primalvitality_box.checked){SWD+="<img src=box.gif>Primal Vitality [Level 2 Utility][minor action]<br>\r";}
if (document.form1.hunterstune_box.checked){SWD+="<img src=box.gif>Hunter's Tune [Level 2 Utility][minor action]<br>\r";}
if (document.form1.songofcourage_box.checked){SWD+="<img src=box.gif>Song of Courage [Level 2 Utility][minor action]<br>\r";}
if (document.form1.songofdefense_box.checked){SWD+="<img src=box.gif>Song of Defense [Level 2 Utility][minor action]<br>\r";}
if (document.form1.fleetpursuit_box.checked){SWD+="<img src=box.gif>Fleet Pursuit [Level 2 Utility][minor action][beast form]<br>\r";}
if (document.form1.obscuringmist_box.checked){SWD+="<img src=box.gif>Obscuring Mist [Level 2 Utility][standard action]<br>\r";}
if (document.form1.skitteringsneak_box.checked){SWD+="<img src=box.gif>Skittering Sneak [Level 2 Utility][free action]<br>\r";}
if (document.form1.emissaryofthegods_box.checked){SWD+="<img src=box.gif>Emissary of the Gods [Level 2 Utility][minor action]<br>\r";}
if (document.form1.shroudofwarning_box.checked){SWD+="<img src=box.gif>Shroud of Warning [Level 2 Utility][no action]<br>\r";}
if (document.form1.walloflight_box.checked){SWD+="<img src=box.gif>Wall of Light [Level 2 Utility][minor action]<br>\r";}
if (document.form1.spiritoflife_box.checked){SWD+="<img src=box.gif>Spirit of Life [Level 2 Utility][standard action]<br>\r";}
if (document.form1.spiritsofbattle_box.checked){SWD+="<img src=box.gif>Spirits of Battle [Level 2 Utility][minor action]<br>\r";}
if (document.form1.elementalshift_box.checked){SWD+="<img src=box.gif>Elemental Shift [Level 2 Utility][minor action]<br>\r";}
if (document.form1.naturesabundance_box.checked){SWD+="<img src=box.gif>Nature's Abundance [Level 2 Utility][standard action]<br>\r";}
if (document.form1.triumphantvigor_box.checked){SWD+="<img src=box.gif>Triumphant Vigor [Level 2 Utility]minor action<br>\r";}





if (document.form1.other02daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other02daily.value+" [Level 2 Utility]:<br>\r"; }


if (document.form1.consecratedground_box.checked){SWD+="<img src=box.gif>Consecrated Ground [Level 5]<br>\r"; }
if (document.form1.runeofpeace_box.checked){SWD+="<img src=box.gif>Rune of Peace [Level 5]<br>\r"; }
if (document.form1.spiritualweapon_box.checked){SWD+="<img src=box.gif>Spiritual Weapon [Level 5]<br>\r"; }
if (document.form1.weaponofthegods_box.checked){SWD+="<img src=box.gif>Weapon of the Gods [Level 5][minor action]<br>\r"; }
if (document.form1.cracktheshell_box.checked){SWD+="<img src=box.gif>Crack the Shell [Level 5][reliable]<br>\r"; }
if (document.form1.dizzyingblow_box.checked){SWD+="<img src=box.gif>Dizzying Blow [Level 5][reliable]<br>\r"; }
if (document.form1.rainofsteel_box.checked){SWD+="<img src=box.gif>Rain of Steel [Level 5][minor action]<br>\r"; }
if (document.form1.hallowedcircle_box.checked){SWD+="<img src=box.gif>Hallowed Circle [Level 5]<br>\r"; }
if (document.form1.martyrsretribution_box.checked){SWD+="<img src=box.gif>Martyr's Retribution [Level 5]<br>\r"; }
if (document.form1.signofvulnerability_box.checked){SWD+="<img src=box.gif>Sign of Vulnerability [Level 5]<br>\r"; }
if (document.form1.excruciatingshot_box.checked){SWD+="<img src=box.gif>Excruciating Shot [Level 5]<br>\r"; }
if (document.form1.frenziedskirmish_box.checked){SWD+="<img src=box.gif>Frenzied Skirmish [Level 5]<br>\r"; }
if (document.form1.splinteringshot_box.checked){SWD+="<img src=box.gif>Splintering Shot [Level 5]<br>\r"; }
if (document.form1.twowolfpounce_box.checked){SWD+="<img src=box.gif>Two Wolf Pounce [Level 5]<br>\r"; }
if (document.form1.bloodiedfrenzy_box.checked){SWD+="<img src=box.gif>&nbsp;Bloodied Frenzy [Level 5][immediate reaction]<br>\r";}
if (document.form1.laceratingmaul_box.checked){SWD+="<img src=box.gif>&nbsp;Lacerating Maul [Level 5]<br>\r";}
if (document.form1.cleverriposte_box.checked){SWD+="<img src=box.gif>Clever Riposte [Level 5]<br>\r"; }
if (document.form1.deepcut_box.checked){SWD+="<img src=box.gif>Deep Cut [Level 5]<br>\r"; }
if (document.form1.walkingwounded_box.checked){SWD+="<img src=box.gif>Walking Wounded [Level 5]<br>\r"; }
if (document.form1.avernianeruption_box.checked){SWD+="<img src=box.gif>Avernian Eruption [Level 5]<br>\r"; }
if (document.form1.crownofmadness_box.checked){SWD+="<img src=box.gif>Crown of Madness [Level 5]<br>\r"; }
if (document.form1.curseofthebloodyfangs_box.checked){SWD+="<img src=box.gif>Curse of the Bloody Fangs [Level 5]<br>\r"; }
if (document.form1.hungerofhadar_box.checked){SWD+="<img src=box.gif>Hunger of Hadar [Level 5]<br>\r"; }
if (document.form1.standthefallen_box.checked){SWD+="<img src=box.gif>Stand the Fallen [Level 5]<br>\r"; }
if (document.form1.turningpoint_box.checked){SWD+="<img src=box.gif>Turning Point [Level 5]<br>\r"; }
if (document.form1.villainsnightmare_box.checked){SWD+="<img src=box.gif>Villain's Nightmare [Level 5]<br>\r"; }
if (document.form1.bigbysicygrasp_box.checked){SWD+="<img src=box.gif>Bigby's Icy Grasp [Level 5]<br>\r"; }
if (document.form1.fireball_box.checked){SWD+="<img src=box.gif>Fireball [Level 5]<br>\r"; }






if (document.form1.stinkingcloud_box.checked){SWD+="<img src=box.gif>Stinking Cloud [Level 5]<br>\r"; }
if (document.form1.web_box.checked){SWD+="<img src=box.gif>Web [Level 5]<br>\r"; }


if (document.form1.bondofforesight_box.checked){SWD+="<img src=box.gif>Bond of Foresight [Level 5]<br>\r";}
if (document.form1.dawhfiresigil_box.checked){SWD+="<img src=box.gif>Dawn Fire Sigil [Level 5]<br>\r";}
if (document.form1.executionerscloak_box.checked){SWD+="<img src=box.gif>Executioner's Cloak [Level 5]<br>\r";}
if (document.form1.oathofconsuminglight_box.checked){SWD+="<img src=box.gif>Oath of Consuming Light [Level 5]<br>\r";}
if (document.form1.frostwolfrage_box.checked){SWD+="<img src=box.gif>Frost Wolf Rage [Level 5]<br>\r";}
if (document.form1.silverphoenixrage_box.checked){SWD+="<img src=box.gif>Silver Phoenix Rage [Level 5]<br>\r";}
if (document.form1.thunderhawkrage_box.checked){SWD+="<img src=box.gif>Thunder Hawk Rage [Level 5]<br>\r";}
if (document.form1.vengefulstormrage_box.checked){SWD+="<img src=box.gif>Vengeful Storm Rage [Level 5]<br>\r";}
if (document.form1.satireofbravery_box.checked){SWD+="<img src=box.gif>Satire of Bravery [Level 5]<br>\r";}
if (document.form1.songofdiscord_box.checked){SWD+="<img src=box.gif>Song of Discord [Level 5]<br>\r";}
if (document.form1.tuneoficeandwind_box.checked){SWD+="<img src=box.gif>Tune of Ice and Wind [Level 5]<br>\r";}
if (document.form1.wordofmysticwarding_box.checked){SWD+="<img src=box.gif>Word of Mystic Warding [Level 5]<br>\r";}
if (document.form1.hobblingrend_box.checked){SWD+="<img src=box.gif>Hobbling Rend [Level 5]<br>\r";}
if (document.form1.primalwolverine_box.checked){SWD+="<img src=box.gif>Primal Wolverine [Level 5]<br>\r";}
if (document.form1.roarofterror_box.checked){SWD+="<img src=box.gif>Roar of Terror [Level 5]<br>\r";}
if (document.form1.wallofthorns_box.checked){SWD+="<img src=box.gif>Wall of Thorns [Level 5]<br>\r";}
if (document.form1.bladeofvengeance_box.checked){SWD+="<img src=box.gif>Blade of Vengeance [Level 5]<br>\r";}
if (document.form1.graspingchainsofthejusticiar_box.checked){SWD+="<img src=box.gif>Gasping Chains of the Justiciar [Level 5]<br>\r";}
if (document.form1.iconofterror_box.checked){SWD+="<img src=box.gif>Icon of Terror [Level 5]<br>\r";}
if (document.form1.searingorb_box.checked){SWD+="<img src=box.gif>Searing Orb [Level 5]<br>\r";}
if (document.form1.earthragespirit_box.checked){SWD+="<img src=box.gif>Earthrage Spirit [Level 5]<br>\r";}
if (document.form1.spiritofthehawkswind_box.checked){SWD+="<img src=box.gif>Spirit of the Hawk's Wind [Level 5]<br>\r";}
if (document.form1.spiritoftheshieldingfire_box.checked){SWD+="<img src=box.gif>Spirit of the Shielding Fire [Level 5]<br>\r";}
if (document.form1.warchieftainsblessing_box.checked){SWD+="<img src=box.gif>War Chieftain's Blessing [Level 5]<br>\r";}
if (document.form1.acidicimplanation_box.checked){SWD+="<img src=box.gif>Acidic Implantation [Level 5]<br>\r";}
if (document.form1.palestflames_box.checked){SWD+="<img src=box.gif>Palest Flames [Level 5]<br>\r";}
if (document.form1.reelingtorment_box.checked){SWD+="<img src=box.gif>Reeling Torment [Level 5]<br>\r";}
if (document.form1.serpentineblast_box.checked){SWD+="<img src=box.gif>Serpentine Blast [Level 5]<br>\r";}
if (document.form1.thunderleap_box.checked){SWD+="<img src=box.gif>Thunder Leap [Level 5]<br>\r";}
if (document.form1.hailofthorns_box.checked){SWD+="<img src=box.gif>Hail of Thorns [Level 5]<br>\r";}
if (document.form1.stormstrike_box.checked){SWD+="<img src=box.gif>Storm Strike [Level 5]<br>\r";}
if (document.form1.thunderstep_box.checked){SWD+="<img src=box.gif>Thunder Step [Level 5]<br>\r";}
if (document.form1.wintersgrip_box.checked){SWD+="<img src=box.gif>Winter's Grip [Level 5]<br>\r";}



if (document.form1.deepfreeze_box.checked){SWD+="<img src=box.gif>Deep Freeze [FRPG; Level 5]<br>\r";}
if (document.form1.elementalfoible_box.checked){SWD+="<img src=box.gif>Elemental Foible [FRPG; Level 5]<br>\r";}
if (document.form1.lingeringlightning_box.checked){SWD+="<img src=box.gif>Lingering Lightning [FRPG; Level 5]<br>\r";}
if (document.form1.forcefulassault_box.checked){SWD+="<img src=box.gif>Forceful Assault [FRPG; Level 5]<br>\r";}
if (document.form1.twilightofthesoul_box.checked){SWD+="<img src=box.gif>Twilight of the Soul [FRPG; Level 5][reliable]<br>\r";}
if (document.form1.vestigeofugar_box.checked){SWD+="<img src=box.gif>Vestige of Ugar [AP; Level 5][reliable]<br>\r";}
if (document.form1.vestigeofxandor_box.checked){SWD+="<img src=box.gif>Vestige of Xandor [AP; Level 5][reliable]<br>\r";}
if (document.form1.blurringblade_box.checked){SWD+="<img src=box.gif>Blurring Blade [FRPG; Level 5][minor action]<br>\r";}
if (document.form1.terribleimposition_box.checked){SWD+="<img src=box.gif>Terrible Imposition [FRPG; Level 5]<br>\r";}




if (document.form1.other05daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other05daily.value+" [Level 5]:<br>\r"; }

if (document.form1.cureseriouswounds_box.checked){SWD+="<img src=box.gif>Cure Serious Wounds [Level 6 Utility]<br>\r"; }
if (document.form1.divinevigor_box.checked){SWD+="<img src=box.gif>Divine Vigor [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.battleawareness_box.checked){SWD+="<img src=box.gif>Battle Awareness [Level 6 Utility][non-action]<br>\r"; }
if (document.form1.defensivetraining_box.checked){SWD+="<img src=box.gif>Defensive Training [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.divinebodyguard_box.checked){SWD+="<img src=box.gif>Divine Bodyguard [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.oneheartonemind_box.checked){SWD+="<img src=box.gif>One Heart One Mind [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.wrathofthegods_box.checked){SWD+="<img src=box.gif>Wrath of the Gods [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.evadeambush_box.checked){SWD+="<img src=box.gif>Evade Ambush [Level 6 Utility][non-action]<br>\r"; }
if (document.form1.skilledcompanion_box.checked){SWD+="<img src=box.gif>Skilled Companion [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.darkonesownluck_box.checked){SWD+="<img src=box.gif>Dark One's Own Luck [Level 6 Utility][free action]<br>\r"; }
if (document.form1.shroudofblacksteel_box.checked){SWD+="<img src=box.gif>Shroud of Black Steel [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.quickstep_box.checked){SWD+="<img src=box.gif>Quick Step [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.standtough_box.checked){SWD+="<img src=box.gif>Stand Tough [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.dimensiondoor_box.checked){SWD+="<img src=box.gif>Dimension Door [Level 6 Utility][move action]<br>\r"; }
if (document.form1.disguiseself_box.checked){SWD+="<img src=box.gif>Disguise Self [Level 6 Utility][minor action]<br>\r"; }
if (document.form1.dispelmagic_box.checked){SWD+="<img src=box.gif>Dispel Magic [Level 6 Utility; implement as per errata 7/2/08]<br>\r"; }
if (document.form1.invisibility_box.checked){SWD+="<img src=box.gif>Invisibility [Level 6 Utility]<br>\r"; }
if (document.form1.levitate_box.checked){SWD+="<img src=box.gif>Levitate [Level 6 Utility][move action]<br>\r"; }
if (document.form1.walloffog_box.checked){SWD+="<img src=box.gif>Wall of Fog [Level 6 Utility]<br>\r"; }

if (document.form1.oathofenduringwrath_box.checked){SWD+="<img src=box.gif>Oath of Enduring Wrath [Level 6 Utility][minor action]<br>\r";}
if (document.form1.oathoftherelentlesshunter_box.checked){SWD+="<img src=box.gif>Oath of the Relentless Hunter [Level 6 Utility][minor action]<br>\r";}
if (document.form1.wrathofthedivine_box.checked){SWD+="<img src=box.gif>Wrath of the Divine [Level 6 Utility][immediate reaction]<br>\r";}
if (document.form1.combatsurge_box.checked){SWD+="<img src=box.gif>Combat Surge [Level 6 Utility][free action]<br>\r";}
if (document.form1.indomitableshift_box.checked){SWD+="<img src=box.gif>Indomitable Shift [Level 6 Utility][minor action]<br>\r";}
if (document.form1.instinctivecharge_box.checked){SWD+="<img src=box.gif>Instinctive Charge [Level 6 Utility][no action]<br>\r";}
if (document.form1.allegro_box.checked){SWD+="<img src=box.gif>Allegro [Level 6 Utility][minor action]<br>\r";}
if (document.form1.trickstershealing_box.checked){SWD+="<img src=box.gif>Trickster's Healing [Level 6 Utility][immediate reaction]<br>\r";}
if (document.form1.blackharbinger_box.checked){SWD+="<img src=box.gif>Black Harbinger [Level 6 Utility][free action]<br>\r";}
if (document.form1.chantofsustenance_box.checked){SWD+="<img src=box.gif>Chant of Sustenance [Level 6 Utility][minor action]<br>\r";}
if (document.form1.stalkerseyes_box.checked){SWD+="<img src=box.gif>Stalker's Eyes [Level 6 Utility][minor action]<br>\r";}
if (document.form1.astralstep_box.checked){SWD+="<img src=box.gif>Astral Step [Level 6 Utility][move action]<br>\r";}
if (document.form1.sharedendurance_box.checked){SWD+="<img src=box.gif>Shared Endurance [Level 6 Utility][immediate interrupt]<br>\r";}
if (document.form1.symbolofhope_box.checked){SWD+="<img src=box.gif>Symbol of Hope [Level 6 Utility][minor action]<br>\r";}
if (document.form1.blessingoftheirontree_box.checked){SWD+="<img src=box.gif>Blessing of the Iron Tree [Level 6 Utility][minor action]<br>\r";}
if (document.form1.spiritofdawn_box.checked){SWD+="<img src=box.gif>spiritofdawn [Level 6 Utility][minor action]<br>\r";}
if (document.form1.spiritofthekeeper_box.checked){SWD+="<img src=box.gif>Spirit of the Keeper [Level 6 Utility][minor action]<br>\r";}
if (document.form1.arcaneempowerment_box.checked){SWD+="<img src=box.gif>Arcane Empowerment [Level 6 Utility][minor action]<br>\r";}
if (document.form1.energeticflight_box.checked){SWD+="<img src=box.gif>Energetic Flight [Level 6 Utility][minor action]<br>\r";}
if (document.form1.bearsendurance_box.checked){SWD+="<img src=box.gif>Bear's Endurance [Level 6 Utility][immediate interrupt]<br>\r";}
if (document.form1.earthguard_box.checked){SWD+="<img src=box.gif>Earth Guard [Level 6 Utility][minor action]<br>\r";}




if (document.form1.dimensionalwarding_box.checked){SWD+="<img src=box.gif>Dimensional Warding [FRPG; Level 6 Utility][minor action]<br>\r";}
if (document.form1.fatespurnedfoe_box.checked){SWD+="<img src=box.gif>Fatespurned Foe [FRPG; Level 6 Utility]<br>\r";}
if (document.form1.hauntingreception_box.checked){SWD+="<img src=box.gif>Haunting Reception [FRPG; Level 6 Utility][immediate reaction]<br>\r";}




if (document.form1.invigoratethebeast_box.checked){SWD+="<img src=box.gif>&nbsp;Invigorate the Beast [Level 6][minor action]<br>\r";}

if (document.form1.other06daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other06daily.value+" [Level 6 Utility]:<br>\r"; }


if (document.form1.astraldefenders_box.checked){SWD+="<img src=box.gif>Astral Defenders [Level 9]<br>\r"; }
if (document.form1.bladebarrier_box.checked){SWD+="<img src=box.gif>Blade Barrier [Level 9]<br>\r"; }
if (document.form1.divinepower_box.checked){SWD+="<img src=box.gif>Divine Power [Level 9]<br>\r"; }
if (document.form1.flamestrike_box.checked){SWD+="<img src=box.gif>Flame Strike [Level 9]<br>\r"; }
if (document.form1.shiftthebattlefield_box.checked){SWD+="<img src=box.gif>Shift the Battlefield [Level 9]<br>\r"; }
if (document.form1.thicketofblades_box.checked){SWD+="<img src=box.gif>Thicket of Blades [Level 9][reliable]<br>\r"; }
if (document.form1.victorioussurge_box.checked){SWD+="<img src=box.gif>Victorious Surge [Level 9][reliable]<br>\r"; }
if (document.form1.crownofglory_box.checked){SWD+="<img src=box.gif>Crown of Glory [Level 9]<br>\r"; }
if (document.form1.onestandsalone_box.checked){SWD+="<img src=box.gif>One Stands Alone [Level 9]<br>\r"; }
if (document.form1.radiantpulse_box.checked){SWD+="<img src=box.gif>Radiant Pulse [Level 9]<br>\r"; }
if (document.form1.attacksontherun_box.checked){SWD+="<img src=box.gif>Attacks on the Run [Level 9]<br>\r"; }
if (document.form1.closequartersshot_box.checked){SWD+="<img src=box.gif>Close Quarters Shot [Level 9]<br>\r"; }
if (document.form1.sprayofarrows_box.checked){SWD+="<img src=box.gif>Spray of Arrows [Level 9]<br>\r"; }
if (document.form1.swirlingleavesofsteel_box.checked){SWD+="<img src=box.gif>Swirling Leaves of Steel [Level 9]<br>\r"; }
if (document.form1.menacingcry_box.checked){SWD+="<img src=box.gif>&nbsp;Menacing Cry [Level 9]<br>\r";}
if (document.form1.crimsonedge_box.checked){SWD+="<img src=box.gif>Crimson Edge [Level 9]<br>\r"; }
if (document.form1.deadlypositioning_box.checked){SWD+="<img src=box.gif>Deadly Positioning [Level 9]<br>\r"; }
if (document.form1.knockout_box.checked){SWD+="<img src=box.gif>Knockout [Level 9]<br>\r"; }
if (document.form1.curseoftheblackfrost_box.checked){SWD+="<img src=box.gif>Curse of the Black Frost [Level 9]<br>\r"; }
if (document.form1.ironspikeofdis_box.checked){SWD+="<img src=box.gif>Iron Spike of Dis [Level 9]<br>\r"; }
if (document.form1.summonsofkhirad_box.checked){SWD+="<img src=box.gif>Summons of Khirad [Level 9]<br>\r"; }
if (document.form1.thiefoffivefates_box.checked){SWD+="<img src=box.gif>Thief of Five Fates [Level 9]<br>\r"; }
if (document.form1.irondragoncharge_box.checked){SWD+="<img src=box.gif>Iron Dragon Charge [Level 9]<br>\r"; }
if (document.form1.knockthemdown_box.checked){SWD+="<img src=box.gif>Knock Them Down [Level 9]<br>\r"; }
if (document.form1.whiteravenstrike_box.checked){SWD+="<img src=box.gif>White Raven Strike [Level 9]<br>\r"; }
if (document.form1.icestorm_box.checked){SWD+="<img src=box.gif>Ice Storm [Level 9]<br>\r"; }
if (document.form1.lightningserpent_box.checked){SWD+="<img src=box.gif>Lightning Serpent [Level 9]<br>\r"; }
if (document.form1.mordenkainenssword_box.checked){SWD+="<img src=box.gif>Mordenkainen's Sword [Level 9]<br>\r"; }
if (document.form1.walloffire_box.checked){SWD+="<img src=box.gif>Wall of Fire [Level 9]<br>\r"; }



if (document.form1.aspectofspeed_box.checked){SWD+="<img src=box.gif>Aspect of Speed [Level 9]<br>\r";}
if (document.form1.enduringstrike_box.checked){SWD+="<img src=box.gif>Enduring Strike [Level 9]<br>\r";}
if (document.form1.oathofpursuit_box.checked){SWD+="<img src=box.gif>Oath of Pursuit [Level 9]<br>\r";}
if (document.form1.templeofshadow_box.checked){SWD+="<img src=box.gif>Temple of Shadow [Level 9]<br>\r";}
if (document.form1.blackdragonrage_box.checked){SWD+="<img src=box.gif>Black Dragon Rage [Level 9]<br>\r";}
if (document.form1.oakhammerrage_box.checked){SWD+="<img src=box.gif>Oak Hammer Rage [Level 9]<br>\r";}
if (document.form1.stonebearrage_box.checked){SWD+="<img src=box.gif>Stone Bear Rage [Level 9]<br>\r";}
if (document.form1.whitetigerrage_box.checked){SWD+="<img src=box.gif>White Tiger Rage [Level 9]<br>\r";}
if (document.form1.forcefulconduit_box.checked){SWD+="<img src=box.gif>Forceful Conduit [Level 9]<br>\r";}
if (document.form1.hideouslaughter_box.checked){SWD+="<img src=box.gif>Hideous Laughter [Level 9]<br>\r";}
if (document.form1.hymnofthedaringrescue_box.checked){SWD+="<img src=box.gif>Hymn of the Daring Rescue [Level 9]<br>\r";}
if (document.form1.thunderblade_box.checked){SWD+="<img src=box.gif>Thunder Blade [Level 9]<br>\r";}
if (document.form1.entangle_box.checked){SWD+="<img src=box.gif>Entangle [Level 9]<br>\r";}
if (document.form1.feralmauling_box.checked){SWD+="<img src=box.gif>Feral Mauling [Level 9]<br>\r";}
if (document.form1.primalwolf_box.checked){SWD+="<img src=box.gif>Primal Wolf [Level 9]<br>\r";}
if (document.form1.sunbeam_box.checked){SWD+="<img src=box.gif>Sunbeam [Level 9]<br>\r";}
if (document.form1.ceruleanflames_box.checked){SWD+="<img src=box.gif>Cerulean Flames [Level 9]<br>\r";}
if (document.form1.fourfoldinvocationofdoom_box.checked){SWD+="<img src=box.gif>Fourfold Invocation of Doom [Level 9]<br>\r";}
if (document.form1.summonbladeangel_box.checked){SWD+="<img src=box.gif>Summon Blade Angel [Level 9][minor action]<br>\r";}
if (document.form1.visionsofparadise_box.checked){SWD+="<img src=box.gif>Visions of Paradise [Level 9]<br>\r";}
if (document.form1.ancientwarlordsinspiration_box.checked){SWD+="<img src=box.gif>Ancient Warlord's Inspiration [Level 9]<br>\r";}
if (document.form1.clevertricksterspirit_box.checked){SWD+="<img src=box.gif>Clever Trickster Spirit [Level 9]<br>\r";}
if (document.form1.ragingstormspirit_box.checked){SWD+="<img src=box.gif>Raging Storm Spirit [Level 9]<br>\r";}
if (document.form1.spiritofautumnsreaping_box.checked){SWD+="<img src=box.gif>Spirit of Autumn's Reaping [Level 9]<br>\r";}
if (document.form1.adamantineecho_box.checked){SWD+="<img src=box.gif>Adamantine Echo [Level 9]<br>\r";}
if (document.form1.contagiouscurse_box.checked){SWD+="<img src=box.gif>Contagious Curse [Level 9]<br>\r";}
if (document.form1.primethefire_box.checked){SWD+="<img src=box.gif>Prime the Fire [Level 9]<br>\r";}
if (document.form1.staggeringblast_box.checked){SWD+="<img src=box.gif>Staggering Blast [Level 9]<br>\r";}
if (document.form1.formoftheoaksentinel_box.checked){SWD+="<img src=box.gif>Form of the Oak Sentinel [Level 9][minor action]<br>\r";}
if (document.form1.formofthefrenziedwolverine_box.checked){SWD+="<img src=box.gif>Form of the Frenzied Wolverine [Level 9][minor action]<br>\r";}
if (document.form1.formofthestonesentinel_box.checked){SWD+="<img src=box.gif>Form of the Stone Sentinel [Level 9][minor action]<br>\r";}
if (document.form1.formofthestormeagle_box.checked){SWD+="<img src=box.gif>Form of the Storm Eagle [Level 9][minor action]<br>\r";}





if (document.form1.beaconblade_box.checked){SWD+="<img src=box.gif>Beacon Blade [FRPG; Level 9]<br>\r";}
if (document.form1.begone_box.checked){SWD+="<img src=box.gif>Be Gone [FRPG; Level 9][reliable]<br>\r";}
if (document.form1.glamorblade_box.checked){SWD+="<img src=box.gif>Glamor Blade [FRPG; Level 9]<br>\r";}
if (document.form1.deathsfondcaress_box.checked){SWD+="<img src=box.gif>Death's Fond Caress [FRPG; Level 9][reliable]<br>\r";}
if (document.form1.ringofpain_box.checked){SWD+="<img src=box.gif>Ring of Pain [FRPG; Level 9]<br>\r";}
if (document.form1.vestigeofilmeth_box.checked){SWD+="<img src=box.gif>Vestige of Ilmeth [AP; Level 9]<br>\r";}
if (document.form1.vestigeofshax_box.checked){SWD+="<img src=box.gif>Vestige of Shax [AP; Level 9]<br>\r";}
if (document.form1.burningtheplaguedbellows_box.checked){SWD+="<img src=box.gif>Burning the Plagued Bellows [FRPG; Level 9]<br>\r";}
if (document.form1.submissionoftheearth_box.checked){SWD+="<img src=box.gif>Submission of the Earth [FRPG; Level 9]<br>\r";}

if (document.form1.other09daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other09daily.value+" [Level 9]:<br>\r"; }

if (document.form1.astralrefuge_box.checked){SWD+="<img src=box.gif>Astral Refuge [Level 10 Utility]<br>\r"; }
if (document.form1.knightsofunyieldingvalor_box.checked){SWD+="<img src=box.gif>Knights of Unyielding Valor [Level 10 Utility]<br>\r"; }
if (document.form1.masscurelightwounds_box.checked){SWD+="<img src=box.gif>Mass Cure Light Wounds [Level 10 Utility]<br>\r"; }
if (document.form1.lastditchevasion_box.checked){SWD+="<img src=box.gif>Last Ditch Evasion [Level 10 Utility][immediate interrupt]<br>\r"; }
if (document.form1.stalwartguard_box.checked){SWD+="<img src=box.gif>Stalwart Guard [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.nobleshield_box.checked){SWD+="<img src=box.gif>Noble Shield [Level 10 Utility][immediate interrupt]<br>\r"; }
if (document.form1.turnthetide_box.checked){SWD+="<img src=box.gif>Turn the Tide [Level 10 Utility]<br>\r"; }
if (document.form1.opentherange_box.checked){SWD+="<img src=box.gif>Open the Range [Level 10 Utility][immediate interrupt]<br>\r"; }
if (document.form1.undauntedstride_box.checked){SWD+="<img src=box.gif>Undaunted Stride [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.certainfreedom_box.checked){SWD+="<img src=box.gif>Certain Freedom [Level 10 Utility][move action]<br>\r"; }
if (document.form1.closequarters_box.checked){SWD+="<img src=box.gif>Close Quarters [Level 10 Utility][move action]<br>\r"; }
if (document.form1.ambassadorimp_box.checked){SWD+="<img src=box.gif>Ambassador Imp [Level 10 Utility]<br>\r"; }
if (document.form1.shadowform_box.checked){SWD+="<img src=box.gif>Shadow Form [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.shieldingshades_box.checked){SWD+="<img src=box.gif>Shielding Shades [Level 10 Utility][immediate reaction]<br>\r"; }
if (document.form1.warlocksleap_box.checked){SWD+="<img src=box.gif>Warlock's Leap [Level 10 Utility][move action]<br>\r"; }
if (document.form1.defensiverally_box.checked){SWD+="<img src=box.gif>Defensive Rally [Level 10 Utility]<br>\r"; }
if (document.form1.easesuffering_box.checked){SWD+="<img src=box.gif>Ease Suffering [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.tacticalshift_box.checked){SWD+="<img src=box.gif>Tactical Shift [Level 10 Utility][immediate interrupt]<br>\r"; }
if (document.form1.arcanegate_box.checked){SWD+="<img src=box.gif>Arcane Gate [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.blur_box.checked){SWD+="<img src=box.gif>Blur [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.mirrorimage_box.checked){SWD+="<img src=box.gif>Mirror Image [Level 10 Utility][minor action]<br>\r"; }
if (document.form1.resistance_box.checked){SWD+="<img src=box.gif>Resistance [Level 10 Utility][minor action]<br>\r"; }




if (document.form1.avengersreadiness_box.checked){SWD+="<img src=box.gif>Avenger's Readiness [Level 10 Utility][no action]<br>\r";}
if (document.form1.riveroflife_box.checked){SWD+="<img src=box.gif>River of Life [Level 10 Utility][minor action]<br>\r";}
if (document.form1.denydeath_box.checked){SWD+="<img src=box.gif>Deny Death [Level 10 Utility][immediate interrupt]<br>\r";}
if (document.form1.heartstrike_box.checked){SWD+="<img src=box.gif>Heart Strike [Level 10 Utility][minor action]<br>\r";}
if (document.form1.mountainroots_box.checked){SWD+="<img src=box.gif>Mountain Roots [Level 10 Utility][immediate interrupt]<br>\r";}
if (document.form1.veil_box.checked){SWD+="<img src=box.gif>Veil [Level 10 Utility][minor action]<br>\r";}
if (document.form1.wordoflife_box.checked){SWD+="<img src=box.gif>Word of Life [Level 10 Utility][immediate reaction]<br>\r";}
if (document.form1.armorofthewild_box.checked){SWD+="<img src=box.gif>Armor of the Wild [Level 10 Utility][minor action][beast form]<br>\r";}
if (document.form1.winterstorm_box.checked){SWD+="<img src=box.gif>Winter Storm [Level 10 Utility][standard action]<br>\r";}
if (document.form1.covenantofendurance_box.checked){SWD+="<img src=box.gif>Covenant of Endurance [Level 10 Utility][minor action]<br>\r";}
if (document.form1.divinerenewal_box.checked){SWD+="<img src=box.gif>Divine Renewal [Level 10 Utility][standard action]<br>\r";}
if (document.form1.martyrsward_box.checked){SWD+="<img src=box.gif>Martyr's Ward [Level 10 Utility][immediate interrupt]<br>\r";}
if (document.form1.rockshieldspirits_box.checked){SWD+="<img src=box.gif>Rockshield Spirits [Level 10 Utility][minor action]<br>\r";}
if (document.form1.spiritsoftheshadowedmoon_box.checked){SWD+="<img src=box.gif>Spirits of the Shadowed Moon [Level 10 Utility][minor action]<br>\r";}
if (document.form1.spiritsummons_box.checked){SWD+="<img src=box.gif>Spirit Summons [Level 10 Utility][free action]<br>\r";}
if (document.form1.chaoslink_box.checked){SWD+="<img src=box.gif>Chaos Link [Level 10 Utility][immediate reaction]<br>\r";}
if (document.form1.devourmagic_box.checked){SWD+="<img src=box.gif>Devour Magic [Level 10 Utility][standard action]<br>\r";}
if (document.form1.invertresistance_box.checked){SWD+="<img src=box.gif>Invert Resistance [Level 10 Utility][minor action]<br>\r";}
if (document.form1.returningstrength_box.checked){SWD+="<img src=box.gif>Returning Strength [Level 10 Utility][minor action]<br>\r";}
if (document.form1.shieldofstone_box.checked){SWD+="<img src=box.gif>Shield of Stone [Level 10 Utility][minor action]<br>\r";}
if (document.form1.wardingvines_box.checked){SWD+="<img src=box.gif>Warding Vines [Level 10 Utility][minor action]<br>\r";}               



if (document.form1.dimensionaldodge_box.checked){SWD+="<img src=box.gif>Dimensional Dodge [FRPG; Level 10 Utility][immediate interrupt]<br>\r";}
if (document.form1.impenetrablewarding_box.checked){SWD+="<img src=box.gif>Impenetrable Warding [FRPG; Level 10 Utility][minor action]<br>\r";}

if (document.form1.companionemplacement_box.checked){SWD+="<img src=box.gif>&nbsp;Companion Emplacement [Level 10][move action]<br>\r";}

if (document.form1.other10daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other10daily.value+" [Level 10 Utility]:<br>\r"; }


if (total_levels>=12){
if (paragon_angelicavenger){
SWD+="<img src=box.gif>Angelic Presence [Angelic Avenger Level 12 Utility][minor action]<br>\r"; }
if (paragon_divineoracle){
SWD+="<img src=box.gif>Good Omens [Divine Oracle Level 12 Utility]<br>\r"; }
if (paragon_radiantservant){
SWD+="<img src=box.gif>Healing Sun [Radiant Servant Level 12 Utility]<br>\r"; }
if (paragon_warpriest){
SWD+="<img src=box.gif>Battle Favor [War Priest Level 12 Utility][free action]<br>\r"; }
if (paragon_kensei){
SWD+="<img src=box.gif>Ultimate Parry [Kensei Level 12 Utility][immediate reaction]<br>\r"; }
if (paragon_pitfighter){
SWD+="<img src=box.gif>Deadly Payback [Pit Fighter Level 12 Utility][immediate reaction]<br>\r"; }
if (paragon_championoforder){
SWD+="<img src=box.gif>None Shall Pass [Champion of Order Level 12 Utility][free action]<br>\r"; }
if (paragon_hospitaler){
SWD+="<img src=box.gif>Healing Font [Hospitaler Level 12 Utility][minor action]<br>\r"; }
if (paragon_justiciar){
SWD+="<img src=box.gif>Strike Me Instead [Justiciar Level 12 Utility][immediate interrupt]<br>\r"; }
if (paragon_beaststalker){
SWD+="<img src=box.gif>Hunter's Grace [Beast Stalker Level 12 Utility][non-action]<br>\r"; }
if (paragon_pathfinder){
SWD+="<img src=box.gif>Act Together [Pathfinder Level 12 Utility][immediate reaction]<br>\r"; }
if (paragon_daggermaster){
SWD+="<img src=box.gif>Meditation of the Blade [Dagger Master Level 12 Utility][minor action]<br>\r"; }
if (paragon_masterinfiltrator){
SWD+="<img src=box.gif>Impossible to Catch [Master Infiltrator Level 12 Utility]<br>\r"; }
if (paragon_shadowassassin){
SWD+="<img src=box.gif>Bad Idea, Friend [Shadow Assassin Level 12 Utility]<br>\r"; }
if (paragon_doomsayer){
SWD+="<img src=box.gif>Accursed Shroud [Doomsayer Level 12 Utility]<br>\r"; }
if (paragon_feytouched){
SWD+="<img src=box.gif>Twilight Teleport [Feytouched Level 12 Utility][free action]<br>\r"; }
if (paragon_lifestealer){
SWD+="<img src=box.gif>Life Spark Summons [Life Stealer Level 12 Utility][minor action]<br>\r"; }
if (paragon_battlecaptain){
SWD+="<img src=box.gif>Bolt of Genius [Battle Captain Level 12 Utility]<br>\r"; }
if (paragon_combatveteran){
SWD+="<img src=box.gif>Miss Me Once [Combat Veteran Level 12 Utility][immediate interrupt]<br>\r"; }
if (paragon_swordmarshal){
SWD+="<img src=box.gif>Sword Marshal's Boon [Sword Marshal Level 12 Utility][free action]<br>\r"; }
if (paragon_battlemage){
SWD+="<img src=box.gif>Arcane Rejuvenation [Battle Mage Level 12 Utility][immediate interrupt]<br>\r"; }
if (paragon_bloodmage){
SWD+="<img src=box.gif>Soul Burn [Blood Mage Level 12 Utility][minor action]<br>\r"; }
if (paragon_spellstormmage){
SWD+="<img src=box.gif>Sudden Storm [Spellstorm Mage Level 12 Utility]<br>\r"; }
if (paragon_wizardofthespiraltower){
SWD+="<img src=box.gif>Shape the Dream [Wizard of the Spiral Tower Level 12 Utility][immediate interrupt][<br>\r"; }
if (paragon_coronalguard){
SWD+="<img src=box.gif>Dragon Scales [Coronal Guard Level 12 Utility][minor action]<br>\r"; }
if (paragon_doomguide){
SWD+="<img src=box.gif>Unsullied Heart [Doomguide Level 12 Utility][immediate interrupt]<br>\r"; }
if (paragon_drowwanderer){
SWD+="<img src=box.gif>Stength in Darkness [Drow Wanderer Level 12 Utility][minor action]<br>\r"; }
if (paragon_evermeetwarlock){
SWD+="<img src=box.gif>Feylights [Evermeet Warlock Level 12 Utility][minor action]<br>\r"; }

if (paragon_ghostofeventide){
SWD+="<img src=box.gif>Twilight Escape [Ghost of Eventide Level 12 Utility][immediate reaction]<br>\r"; }
if (paragon_heartwarder){
SWD+="<img src=box.gif>Sune's Shield [Hearwarder Level 12 Utility][minor action]<br>\r"; }
if (paragon_highforestscout){
SWD+="<img src=box.gif>Unrestricted Movement [High Forest Scout Level 12 Utility][minor action]<br>\r"; }
if (paragon_morninglord){
SWD+="<img src=box.gif>Rising Sun [Morninglord Level 12 Utility][minor action]<br>\r"; }
if (paragon_silverstar){
SWD+="<img src=box.gif>Moonglow [Silverstar Level 12 Utility][minor action]<br>\r"; }
if (paragon_spellguardwizard){
SWD+="<img src=box.gif>Mythal Splinter [Spellguard Wizard Level 12 Utility][minor action]<br>\r"; }
if (paragon_steelskyliberator){
SWD+="<img src=box.gif>Steelsky Stance [Steelsky Liberator Level 12 Utility][minor action]<br>\r"; }
if (paragon_warwizardofcormyr){
SWD+="<img src=box.gif>One-Way Barrier [War Wizard of Cormyr Level 12 Utility]<br>\r"; }
if (paragon_wildfiregenasi){
SWD+="<img src=box.gif>Embers of Life [Wildfire Genasi Level 12 Utility][immediate interrupt]<br>\r"; }
if (paragon_packrunner){
SWD+="<img src=box.gif>Wolfskin [Pack Runner Level 12 Utility][minor action]<br>\r"; }

if (paragon_gatecrasher){
SWD+="<img src=box.gif>Trickster's Gate [Gatecrasher Level 12 Utility][move action]<br>\r"; }

if (paragon_knightofcelestia){
SWD+="<img src=box.gif>Brilliant Guardians [Knight of Celestia Level 12 Utility]<br>\r"; }

if (paragon_shadowcaptain){
SWD+="<img src=box.gif>Shadow Guardians [Shadow Captain Level 12 Utility]<br>\r"; }

if (paragon_soulguide){
SWD+="<img src=box.gif>Shadowbane Circle [Soul Guide Level 12 Utility]<br>\r"; }


if (paragon_adroitexplorer){
SWD+="<img src=box.gif>Bloodied Greatness [Adroit Explorer Level 12 Utility][immediate reaction]<br>\r";}
if (paragon_ancestralincarnate){
SWD+="<img src=box.gif>Past-Life Servant [Ancestral Incarnate Level 12 Utility][minor action]<br>\r";}
if (paragon_bloodfurysavage){
SWD+="<img src=box.gif>Frothing Madness [Blood Fury Savage Level 12 Utility][minor action]<br>\r";}
if (paragon_feybeguiler){
SWD+="<img src=box.gif>Clever Versatilty: Rogue or Wizard Utility 10th level or under.  Your choice:<br>\r";}
if (paragon_firstbornofmoradin){
SWD+="<img src=box.gif>Earthsense [Firstborn of Moradin Level 12 Utility][minor action]<br>\r";}
if (paragon_moonstalker){
SWD+="<img src=box.gif>Unleash the Silent Predator [Moonstalker Level 12 Utility][minor action]<br>\r";}
if (paragon_shiereknight){
SWD+="<img src=box.gif>Fey Escape [Shiere Knight Level 12 Utility][immediate interrupt]<br>\r";}
if (paragon_turathihighborn){
SWD+="<img src=box.gif>Infernal Nova [Turathi Highborn Level 12 Utility][minor action]<br>\r";}
if (paragon_twilightguardian){
SWD+="<img src=box.gif>Twilight Stealth [Twilight Guardian Level 12 Utility][minor action]<br>\r";}
if (paragon_oathsworn){
SWD+="<img src=box.gif>Sworn Crusade [Oathsworn Level 12 Utility][minor action]<br>\r";}
if (paragon_zealousassassin){
SWD+="<img src=box.gif>Avenging Shadow [Zealous Assassin Level 12 Utility][minor action]<br>\r";}
if (paragon_bearwarrior){
SWD+="<img src=box.gif>Bestial Vigor [Bear Warrior Level 12 Utility][minor action]<br>\r";}
if (paragon_fearbringerthane){
SWD+="<img src=box.gif>Fearsome Presence [Fearbringer Thane Level 12 Utility][minor action]<br>\r";}
if (paragon_frenziedberserker){
SWD+="<img src=box.gif>Deathless Frenzy [Frenzied Berserker Level 12 Utility][immediate interrupt]<br>\r";}
if (paragon_studentoftheseven){
SWD+="<img src=box.gif>Versatile Glamor [Student of the Seven Level 12 Utility][minor action]<br>\r";}
if (paragon_summerrhymer){
SWD+="<img src=box.gif>Song of Spiral Paths [Summer Rhymer Level 12 Utility][minor action]<br>\r";}
if (paragon_voiceofthunder){
SWD+="<img src=box.gif>Doom Echo [Voice of Thunder Level 12 Utility][minor action]<br>\r";}
if (paragon_bloodmoonstalker){
SWD+="<img src=box.gif>Feral Accuracy [Bloodmoon Stalker Level 12 Utility][minor action]<br>\r";}
if (paragon_guardianofthelivinggate){
SWD+="<img src=box.gif>Second Ward of the Living Gate [Guardian of the Living Gate Level 12 Utility][minor action]<br>\r";}
if (paragon_keeperofthehiddenflame){
SWD+="<img src=box.gif>Spark of Fury [Keeper of the Hidden Flame Level 12 Utility][minor action]<br>\r";}
if (paragon_angelicaspect){
SWD+="<img src=box.gif>Shielding Nimbus [Angelic Aspect Level 12 Utility][minor action]<br>\r";}
if (paragon_blightspeaker){
SWD+="<img src=box.gif>False Life [Blight Speaker Level 12 Utility][minor action]<br>\r";}
if (paragon_flameofhope){
SWD+="<img src=box.gif>Blinding Ward [Flame of Hope Level 12 Utility][immediate interrupt]<br>\r";}
if (paragon_demonskinadept){
SWD+="<img src=box.gif>Demonic Wrath [Demonskin Adept Level 12 Utility][minor action]<br>\r";}
if (paragon_dragonsoulheir){
SWD+="<img src=box.gif>Dragon's Revenge [Dragonsoul Heir Level 12 Utility][minor action]<br>\r";}
if (paragon_wildmage){
SWD+="<img src=box.gif>Torrent of Power [Wild Mage Level 12 Utility][minor action]<br>\r";}
if (paragon_bloodwrathguardian){
SWD+="<img src=box.gif>Warding Frenzy [Bloodwrath Guardian Level 12 Utility][minor action]<br>\r";}
if (paragon_verdantlord){
SWD+="<img src=box.gif>Awaken the Forest [Verdant Lord Level 12 Utility][standard action]<br>\r";}


// kurwa daily 12

if (paragon_other){SWD+="<img src=box.gif>"+document.form1.otherparagonpath.value+" special ability [Level 12 Utility] (if daily):<br>\r"; }

}


if (document.form1.holyspark_box.checked){SWD+="<img src=box.gif>Holy Spark [Level 15]<br>\r"; }
if (document.form1.purifyingfire_box.checked){SWD+="<img src=box.gif>Purifying Fire [Level 15]<br>\r"; }
if (document.form1.sealofwarding_box.checked){SWD+="<img src=box.gif>Seal of Warding [Level 15]<br>\r"; }
if (document.form1.dragonsfangs_box.checked){SWD+="<img src=box.gif>Dragon's Fangs [Level 15]<br>\r"; }
if (document.form1.serpentdancestrike_box.checked){SWD+="<img src=box.gif>Serpent Dance Strike [Level 15]<br>\r"; }
if (document.form1.unyieldingavalanche_box.checked){SWD+="<img src=box.gif>Unyielding Avalanche [Level 15][minor action]<br>\r"; }
if (document.form1.bloodiedretribution_box.checked){SWD+="<img src=box.gif>Bloodied Retribution [Level 15]<br>\r"; }
if (document.form1.breakthewall_box.checked){SWD+="<img src=box.gif>Break the Wall [Level 15]<br>\r"; }
if (document.form1.truenemesis_box.checked){SWD+="<img src=box.gif>True Nemesis [Level 15]<br>\r"; }
if (document.form1.bladecascade_box.checked){SWD+="<img src=box.gif>Blade Cascade [Level 15]<br>\r"; }
if (document.form1.bleedingwounds_box.checked){SWD+="<img src=box.gif>Bleeding Wounds [Level 15]<br>\r"; }
if (document.form1.confoundingarrows_box.checked){SWD+="<img src=box.gif>Confounding Arrows [Level 15]<br>\r"; }
if (document.form1.stunningsteel_box.checked){SWD+="<img src=box.gif>Stunning Steel [Level 15]<br>\r"; }
if (document.form1.bloodfrenzyranger_box.checked){SWD+="<img src=box.gif>&nbsp;Blood Frenzy (ranger) [Level 15]<br>\r";}
if (document.form1.scentoffear_box.checked){SWD+="<img src=box.gif>&nbsp;Scent of Fear [Level 15]<br>\r";}
if (document.form1.bloodypath_box.checked){SWD+="<img src=box.gif>Bloody Path [Level 15]<br>\r"; }
if (document.form1.garottegrip_box.checked){SWD+="<img src=box.gif>Garotte Grip [Level 15][minor action if already grabbed][reliable]<br>\r"; }
if (document.form1.slayingstrike_box.checked){SWD+="<img src=box.gif>Slaying Strike [Level 15]<br>\r"; }
if (document.form1.curseofthegoldenmist_box.checked){SWD+="<img src=box.gif>Curse of the Golden Mist [Level 15]<br>\r"; }
if (document.form1.fireswarm_box.checked){SWD+="<img src=box.gif>Fireswarm [Level 15]<br>\r"; }
if (document.form1.tendrilsofthuban_box.checked){SWD+="<img src=box.gif>Tendrils of Thuban [Level 15]<br>\r"; }
if (document.form1.thirstingmaw_box.checked){SWD+="<img src=box.gif>Thirsting Maw [Level 15]<br>\r"; }
if (document.form1.makethembleed_box.checked){SWD+="<img src=box.gif>Make Them Bleed [Level 15]<br>\r"; }
if (document.form1.renewthetroops_box.checked){SWD+="<img src=box.gif>Renew the Troops [Level 15]<br>\r"; }
if (document.form1.warlordsgambit_box.checked){SWD+="<img src=box.gif>Warlord's Gambit [Level 15]<br>\r"; }
if (document.form1.bigbysgraspinghands_box.checked){SWD+="<img src=box.gif>Bigby's Grasping Hands [Level 15]<br>\r"; }
if (document.form1.blastofcold_box.checked){SWD+="<img src=box.gif>Blast of Cold [Level 15]<br>\r"; }
if (document.form1.otilukesresilientsphere_box.checked){SWD+="<img src=box.gif>Otiluke's Resilient Sphere [Level 15]<br>\r"; }
if (document.form1.prismaticbeams_box.checked){SWD+="<img src=box.gif>Prismatic Beams [Level 15]<br>\r"; }
if (document.form1.wallofice_box.checked){SWD+="<img src=box.gif>Wall of Ice [Level 15]<br>\r"; }






if (document.form1.aspectoffury_box.checked){SWD+="<img src=box.gif>Aspect of Fury [Level 15]<br>\r";}
if (document.form1.bondofthesacredduel_box.checked){SWD+="<img src=box.gif>Bond of the Sacred Duel [Level 15]<br>\r";}
if (document.form1.oathofdivinelightning_box.checked){SWD+="<img src=box.gif>Oath of Divine Lightning [Level 15]<br>\r";}
if (document.form1.sigilofcarceri_box.checked){SWD+="<img src=box.gif>Sigil of Carceri [Level 15]<br>\r";}
if (document.form1.flameheartrage_box.checked){SWD+="<img src=box.gif>Flameheart Rage [Level 15]<br>\r";}
if (document.form1.huntinglionrage_box.checked){SWD+="<img src=box.gif>Hunting Lion Rage [Level 15]<br>\r";}
if (document.form1.ironhammerrage_box.checked){SWD+="<img src=box.gif>Iron Hammer Rage [Level 15]<br>\r";}
if (document.form1.thunderfuryrage_box.checked){SWD+="<img src=box.gif>Thunder Fury Rage [Level 15]<br>\r";}
if (document.form1.confusingchorus_box.checked){SWD+="<img src=box.gif>Confusing Chorus [Level 15]<br>\r";}
if (document.form1.danceofbiringwind_box.checked){SWD+="<img src=box.gif>Dance of Biting Wind [Level 15]<br>\r";}
if (document.form1.menacingthunder_box.checked){SWD+="<img src=box.gif>Menacing Thunder [Level 15]<br>\r";}
if (document.form1.quicksteeldance_box.checked){SWD+="<img src=box.gif>Quick Steel Dance [Level 15]<br>\r";}
if (document.form1.balefulpolymorph_box.checked){SWD+="<img src=box.gif>Baleful Polymorph [Level 15]<br>\r";}
if (document.form1.calllightningstorm_box.checked){SWD+="<img src=box.gif>Call Lightning Storm [Level 15]<br>\r";}
if (document.form1.devouringice_box.checked){SWD+="<img src=box.gif>Devouring Ice [Level 15]<br>\r";}
if (document.form1.revitalizingpounce_box.checked){SWD+="<img src=box.gif>.Rrevitalizing Pounce [Level 15]<br>\r";}
if (document.form1.slashingclaws_box.checked){SWD+="<img src=box.gif>Slashing Claws [Level 15]<br>\r";}
if (document.form1.godhammer_box.checked){SWD+="<img src=box.gif>God Hammer [Level 15]<br>\r";}
if (document.form1.markofanathema_box.checked){SWD+="<img src=box.gif>Mark of Anathema [Level 15]<br>\r";}
if (document.form1.threebeaconsoftwilight_box.checked){SWD+="<img src=box.gif>Three Beacons of Twilight [Level 15]<br>\r";}
if (document.form1.wallofblades_box.checked){SWD+="<img src=box.gif>Wall of Blades [Level 15]<br>\r";}
if (document.form1.guardianoftheprimalcopse_box.checked){SWD+="<img src=box.gif>Guardian of the Primal Copse [Level 15]<br>\r";}
if (document.form1.searingwindofthesouth_box.checked){SWD+="<img src=box.gif>Searing Wind of the South [Level 15]<br>\r";}
if (document.form1.spiritofthewolfpack_box.checked){SWD+="<img src=box.gif>Spirit of the Wolf Pack [Level 15]<br>\r";}
if (document.form1.stormguardianspirit_box.checked){SWD+="<img src=box.gif>Storm Guardian Spirit [Level 15]<br>\r";}
if (document.form1.frosteddies_box.checked){SWD+="<img src=box.gif>Frost Eddies [Level 15]<br>\r";}
if (document.form1.hostilitycharm_box.checked){SWD+="<img src=box.gif>Hostility Charm [Level 15]<br>\r";}
if (document.form1.scintillatingstarburst_box.checked){SWD+="<img src=box.gif>Scintillating Starburst [Level 15]<br>\r";}
if (document.form1.spitfirefurnace_box.checked){SWD+="<img src=box.gif>Spitfire Furnace [Level 15]<br>\r";}
if (document.form1.formofsummerfire_box.checked){SWD+="<img src=box.gif>Form of Summer Fire [Level 15]<br>\r";}
if (document.form1.formofthechargingboar_box.checked){SWD+="<img src=box.gif>Form of the Charging Boar [Level 15]<br>\r";}
if (document.form1.formoftherowansentinel_box.checked){SWD+="<img src=box.gif>Form of the Rowan Sentinel [Level 15]<br>\r";}
if (document.form1.formofthestonecrusher_box.checked){SWD+="<img src=box.gif>Form of the Stonecrusher [Level 15]<br>\r";}







if (document.form1.acidforblood_box.checked){SWD+="<img src=box.gif>Acid for Blood [FRPG; Level 15]<br>\r";}
if (document.form1.infernossword_box.checked){SWD+="<img src=box.gif>Inferno's Sword [FRPG; Level 15]<br>\r";}
if (document.form1.freethestormwithin_box.checked){SWD+="<img src=box.gif>Free the Storm Within [FRPG; Level 15][minor action]<br>\r";}
if (document.form1.kimmerielssmile_box.checked){SWD+="<img src=box.gif>Kimmeriel's Smile [FRPG; Level 15]<br>\r";}
if (document.form1.darkladysgift_box.checked){SWD+="<img src=box.gif>Dark Lady's Gift [FRPG; Level 15]<br>\r";}
if (document.form1.vestigeofleraje_box.checked){SWD+="<img src=box.gif>Vestige of Leraje [AP; Level 15]<br>\r";}
if (document.form1.vestigeofsolis_box.checked){SWD+="<img src=box.gif>Vestige of Solis [AP; Level 15]<br>\r";}
if (document.form1.inflictionoftheflamemist_box.checked){SWD+="<img src=box.gif>Infliction of the Flame Mist [FRPG; Level 15]<br>\r";}
if (document.form1.rabidchainofsteel_box.checked){SWD+="<img src=box.gif>Rabid Chain of Steel [FRPG; Level 15]<br>\r";}


if (document.form1.other15daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other15daily.value+" [Level 15]:<br>\r"; }


if (document.form1.cloakofpeace_box.checked){SWD+="<img src=box.gif>Cloak of Peace [Level 16 Utility]<br>\r"; }
if (document.form1.divinearmor_box.checked){SWD+="<img src=box.gif>Divine Armor [Level 16 Utility]<br>\r"; }
if (document.form1.hallowedground_box.checked){SWD+="<img src=box.gif>Hallowed Ground [Level 16 Utility]<br>\r"; }
if (document.form1.ironwarrior_box.checked){SWD+="<img src=box.gif>Iron Warrior [Level 16 Utility][minor action]<br>\r"; }
if (document.form1.angelicintercession_box.checked){SWD+="<img src=box.gif>Angelic Intercession [Level 16 Utility][immediate interrupt]<br>\r"; }
if (document.form1.deathward_box.checked){SWD+="<img src=box.gif>Death Ward [Level 16 Utility]<br>\r"; }
if (document.form1.evadetheblow_box.checked){SWD+="<img src=box.gif>Evade the Blow [Level 16 Utility][immediate interrupt]<br>\r"; }
if (document.form1.longstrider_box.checked){SWD+="<img src=box.gif>Long Strider [Level 16 Utility][minor action]<br>\r"; }
if (document.form1.momentaryrespite_box.checked){SWD+="<img src=box.gif>Momentary Respite [Level 16 Utility]<br>\r"; }
if (document.form1.foilthelock_box.checked){SWD+="<img src=box.gif>Foil the Lock [Level 16 Utility][minor action]<br>\r"; }
if (document.form1.raisethestakes_box.checked){SWD+="<img src=box.gif>Raise the Stakes [Level 16 Utility][minor action]<br>\r"; }
if (document.form1.eyeofthewarlock_box.checked){SWD+="<img src=box.gif>Eye of the Warlock [Level 16 Utility][minor action]<br>\r"; }
if (document.form1.herosdefiance_box.checked){SWD+="<img src=box.gif>Hero's Defiance [Level 16 Utility]<br>\r"; }
if (document.form1.whiteravenformation_box.checked){SWD+="<img src=box.gif>White Raven Formation [Level 16 Utility]<br>\r"; }
if (document.form1.fly_box.checked){SWD+="<img src=box.gif>Fly [Level 16 Utility]<br>\r"; }
if (document.form1.greaterinvisibility_box.checked){SWD+="<img src=box.gif>Greater Invisibility [Level 16 Utility]<br>\r"; }
if (document.form1.stoneskin_box.checked){SWD+="<img src=box.gif>Stoneskin [Level 16 Utility]<br>\r"; }




if (document.form1.vengefulrevenant_box.checked){SWD+="<img src=box.gif>Vvengeful Revenant [Level 16 Utility][no action]<br>\r";}
if (document.form1.greatstomp_box.checked){SWD+="<img src=box.gif>Great Stomp [Level 16 Utility][minor action]<br>\r";}
if (document.form1.primalresistance_box.checked){SWD+="<img src=box.gif>Primal Resistance [Level 16 Utility][minor action]<br>\r";}
if (document.form1.spurthecycle_box.checked){SWD+="<img src=box.gif>Spur the Cycle [Level 16 Utility][freeaction]<br>\r";}
if (document.form1.blinkzone_box.checked){SWD+="<img src=box.gif>Blink Zone [Level 16 Utility][standard action]<br>\r";}
if (document.form1.chorusofrecovery_box.checked){SWD+="<img src=box.gif>Chorus of Recovery [Level 16 Utility][minor action]<br>\r";}
if (document.form1.elegyoftheundefeated_box.checked){SWD+="<img src=box.gif>Elegy of the Undefeated [Level 16 Utility][standard action]<br>\r";}
if (document.form1.songofsublimesnowfall_box.checked){SWD+="<img src=box.gif>Song of Sublime Snowfall [Level 16 Utility][standard action]<br>\r";}
if (document.form1.howlofthewild_box.checked){SWD+="<img src=box.gif>Howl of the Wild [Level 16 Utility][minor action][beast form]<br>\r";}
if (document.form1.insectplague_box.checked){SWD+="<img src=box.gif>Insect Plague [Level 16 Utility][free action]<br>\r";}
if (document.form1.primalrestoration_box.checked){SWD+="<img src=box.gif>Primal Restoration [Level 16 Utility][standard action]<br>\r";}
if (document.form1.wallofstone_box.checked){SWD+="<img src=box.gif>Wall of Stone [Level 16 Utility][standard action]<br>\r";}
if (document.form1.covenantoflife_box.checked){SWD+="<img src=box.gif>Covenant of Life [Level 16 Utility][minor action]<br>\r";}
if (document.form1.iconlflife_box.checked){SWD+="<img src=box.gif>Icon of Life [Level 16 Utility][minor action]<br>\r";}
if (document.form1.walkbetweenworlds_box.checked){SWD+="<img src=box.gif>Walk Between Worlds [Level 16 Utility][minor action]<br>\r";}
if (document.form1.forgethechainsoflife_box.checked){SWD+="<img src=box.gif>Forge the Chains of Life [Level 16 Utility][immediate interrupt]<br>\r";}
if (document.form1.spiritsofthedancingzephyr_box.checked){SWD+="<img src=box.gif>Spirits of the Dancing Zephyr [Level 16 Utility][minor action]<br>\r";}
if (document.form1.chaosechoes_box.checked){SWD+="<img src=box.gif>Chaos Echoes [Level 16 Utility][immediate reaction]<br>\r";}
if (document.form1.comradesmantle_box.checked){SWD+="<img src=box.gif>Comrade's Mantle [Level 16 Utility][minor action]<br>\r";}
if (document.form1.verdantlife_box.checked){SWD+="<img src=box.gif>Verdant Life [Level 16 Utility][minor action]<br>\r";}




if (document.form1.bolsteringwarding_box.checked){SWD+="<img src=box.gif>Bolstering Warding [FRPG; Level 16 Utility][minor action]<br>\r";}
if (document.form1.elementalprotection_box.checked){SWD+="<img src=box.gif>Elemental Protection [FRPG; Level 16 Utility][minor action]<br>\r";}
if (document.form1.ironskin_box.checked){SWD+="<img src=box.gif>Ironskin [FRPG; Level 16 Utility][minor action]<br>\r";}
if (document.form1.suddenescape_box.checked){SWD+="<img src=box.gif>Sudden Escape [FRPG; Level 16 Utility][immediate interrupt]<br>\r";}
if (document.form1.ruinousresistance_box.checked){SWD+="<img src=box.gif>Ruinous Resistance [FRPG; Level 16 Utility][minor action]<br>\r";}
if (document.form1.sharedhealing_box.checked){SWD+="<img src=box.gif>&nbsp;Shared Healing [Level 16][minor action]<br>\r";}

if (document.form1.other16daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other16daily.value+" [Level 16 Utility]:<br>\r"; }


if (document.form1.firestorm_box.checked){SWD+="<img src=box.gif>Firestorm [Level 19]<br>\r"; }
if (document.form1.holywrath_box.checked){SWD+="<img src=box.gif>Holywrath [Level 19]<br>\r"; }
if (document.form1.indominitablespirit_box.checked){SWD+="<img src=box.gif>Indominitablespirit [Level 19]<br>\r"; }
if (document.form1.knightofglory_box.checked){SWD+="<img src=box.gif>Knight of Glory [Level 19]<br>\r"; }
if (document.form1.devastationswake_box.checked){SWD+="<img src=box.gif>Devastation's Wake [Level 19]<br>\r"; }
if (document.form1.reavingstrike_box.checked){SWD+="<img src=box.gif>Reaving Strike [Level 19][reliable]<br>\r"; }
if (document.form1.strikeofthewatchfulguard_box.checked){SWD+="<img src=box.gif>Strike of the Watchful Guard [Level 19]<br>\r"; }
if (document.form1.coronaofblindingradiance_box.checked){SWD+="<img src=box.gif>Corona of Blinding Radiance [Level 19]<br>\r"; }
if (document.form1.crusadersboon_box.checked){SWD+="<img src=box.gif>Crusader's Boon [Level 19]<br>\r"; }
if (document.form1.righteousinferno_box.checked){SWD+="<img src=box.gif>Righteous Inferno [Level 19]<br>\r"; }
if (document.form1.cruelcageofsteel_box.checked){SWD+="<img src=box.gif>Cruel Cage of Steel [Level 19]<br>\r"; }
if (document.form1.greatramarrow_box.checked){SWD+="<img src=box.gif>Great Ram Arrow [Level 19]<br>\r"; }
if (document.form1.twoinoneshot_box.checked){SWD+="<img src=box.gif>Two in One Shot [Level 19]<br>\r"; }
if (document.form1.woundingwhirlwind_box.checked){SWD+="<img src=box.gif>Wounding Whirlwind [Level 19]<br>\r"; }
if (document.form1.ferociousroar_box.checked){SWD+="<img src=box.gif>&nbsp;Ferocious Roar [Level 19]<br>\r";}
if (document.form1.gnawingassault_box.checked){SWD+="<img src=box.gif>&nbsp;Gnawing Assault [Level 19]<br>\r";}
if (document.form1.feintingflurry_box.checked){SWD+="<img src=box.gif>Feinting Flurry [Level 19]<br>\r"; }
if (document.form1.flyingfoe_box.checked){SWD+="<img src=box.gif>Flying Foe [Level 19]<br>\r"; }
if (document.form1.snakesretreat_box.checked){SWD+="<img src=box.gif>Snake's Retreat [Level 19]<br>\r"; }
if (document.form1.delusionsofloyalty_box.checked){SWD+="<img src=box.gif>Delusions of Loyalty [Level 19]<br>\r"; }
if (document.form1.minionsofmalbolge_box.checked){SWD+="<img src=box.gif>Minions of Malbolge [Level 19]<br>\r"; }
if (document.form1.wrathofacamar_box.checked){SWD+="<img src=box.gif>Wrath of Acamar [Level 19]<br>\r"; }
if (document.form1.breakthetempo_box.checked){SWD+="<img src=box.gif>Break the Tempo [Level 19]<br>\r"; }
if (document.form1.victorysurge_box.checked){SWD+="<img src=box.gif>Victory Surge [Level 19]<br>\r"; }
if (document.form1.windmillofdoom_box.checked){SWD+="<img src=box.gif>Windmill of Doom [Level 19]<br>\r"; }
if (document.form1.acidwave_box.checked){SWD+="<img src=box.gif>Acid Wave [Level 19]<br>\r"; }
if (document.form1.cloudkill_box.checked){SWD+="<img src=box.gif>Cloudkill [Level 19]<br>\r"; }
if (document.form1.disintegrate_box.checked){SWD+="<img src=box.gif>Disintegrate [Level 19]<br>\r"; }
if (document.form1.evardsblacktentacles_box.checked){SWD+="<img src=box.gif>Evard's Black Tentacles [Level 19]<br>\r"; }


if (document.form1.aspectofawe_box.checked){SWD+="<img src=box.gif>Aspect of Awe [Level 19]<br>\r";}
if (document.form1.oathoftheinevitableblade_box.checked){SWD+="<img src=box.gif>Oath of the Inevitable Blade [Level 19]<br>\r";}
if (document.form1.templeofrespite_box.checked){SWD+="<img src=box.gif>Temple of Respite [Level 19]<br>\r";}
if (document.form1.vengefulrecovery_box.checked){SWD+="<img src=box.gif>Vengeful Recovery [Level 19]<br>\r";}
if (document.form1.ghostviperrage_box.checked){SWD+="<img src=box.gif>Ghost Viper Rage [Level 19]<br>\r";}
if (document.form1.hydrarage_box.checked){SWD+="<img src=box.gif>Hydra Rage [Level 19]<br>\r";}
if (document.form1.stormdrakerage_box.checked){SWD+="<img src=box.gif>Storm Drake Rage [Level 19]<br>\r";}
if (document.form1.winterphoenixrage_box.checked){SWD+="<img src=box.gif>Winter Phoenix Rage [Level 19]<br>\r";}
if (document.form1.encirclingdance_box.checked){SWD+="<img src=box.gif>Encircling Dance [Level 19]<br>\r";}
if (document.form1.increasingthetempo_box.checked){SWD+="<img src=box.gif>Increasing the Tempo [Level 19]<br>\r";}
if (document.form1.irresistibledance_box.checked){SWD+="<img src=box.gif>Irresistible Dance [Level 19]<br>\r";}
if (document.form1.satireofprowess_box.checked){SWD+="<img src=box.gif>Satire of Prowess [Level 19]<br>\r";}
if (document.form1.entanglingthorns_box.checked){SWD+="<img src=box.gif>Entangling Thorns [Level 19]<br>\r";}
if (document.form1.lungeandvanish_box.checked){SWD+="<img src=box.gif>Lunge and Vanish [Level 19]<br>\r";}
if (document.form1.primalbear_box.checked){SWD+="<img src=box.gif>Primal Bear [Level 19]<br>\r";}
if (document.form1.winterhailstorm_box.checked){SWD+="<img src=box.gif>Winter Hailstorm [Level 19]<br>\r";}
if (document.form1.astraltempest_box.checked){SWD+="<img src=box.gif>Astral Tempest [Level 19]<br>\r";}
if (document.form1.maledictionofgartak_box.checked){SWD+="<img src=box.gif>Malediction of Gartak [Level 19]<br>\r";}
if (document.form1.summonangeloflight_box.checked){SWD+="<img src=box.gif>Summon Angel of Light [Level 19]<br>\r";}
if (document.form1.tombofmagrym_box.checked){SWD+="<img src=box.gif>Tomb of Magrym [Level 19]<br>\r";}
if (document.form1.greatbearguardian_box.checked){SWD+="<img src=box.gif>Great Bear Guardian [Level 19]<br>\r";}
if (document.form1.hornsoftheundefeatedkhan_box.checked){SWD+="<img src=box.gif>Horns of the Undefeated Khan [Level 19]<br>\r";}
if (document.form1.spiritoftheshieldbreaker_box.checked){SWD+="<img src=box.gif>Spirit of the Shield Breaker [Level 19]<br>\r";}
if (document.form1.tendrilsofthefateweaver_box.checked){SWD+="<img src=box.gif>Tendrils of the Fate Weaver [Level 19]<br>\r";}
if (document.form1.balefulgazeofthebasilisk_box.checked){SWD+="<img src=box.gif>Baleful Gaze of the Basilisk [Level 19]<br>\r";}
if (document.form1.blackfireserpent_box.checked){SWD+="<img src=box.gif>Black Fire Serpent [Level 19]<br>\r";}
if (document.form1.prismaticexplsion_box.checked){SWD+="<img src=box.gif>Prismatic Explosion [Level 19]<br>\r";}
if (document.form1.splitstrike_box.checked){SWD+="<img src=box.gif>Split Strike [Level 19]<br>\r";}
if (document.form1.blizzardstrike_box.checked){SWD+="<img src=box.gif>Blizzard Strike [Level 19]<br>\r";}
if (document.form1.direbeastassault_box.checked){SWD+="<img src=box.gif>Dire Beast Assault [Level 19]<br>\r";}
if (document.form1.lightningbarrage_box.checked){SWD+="<img src=box.gif>Lightning Barrage [Level 19]<br>\r";}
if (document.form1.thunderingbolts_box.checked){SWD+="<img src=box.gif>Thundering Bolts [Level 19]<br>\r";}











if (document.form1.baneblade_box.checked){SWD+="<img src=box.gif>Baneblade [FRPG; Level 19]<br>\r";}
if (document.form1.hellsownblade_box.checked){SWD+="<img src=box.gif>Hell's Own Blade [FRPG; Level 19]<br>\r";}
if (document.form1.lightningrod_box.checked){SWD+="<img src=box.gif>Lightning Rod [FRPG; Level 19]<br>\r";}
if (document.form1.explosivecontagion_box.checked){SWD+="<img src=box.gif>Explosive Contagion [FRPG; Level 19]<br>\r";}
if (document.form1.passionatebetrayal_box.checked){SWD+="<img src=box.gif>Passionate Betrayal [FRPG; Level 19]<br>\r";}
if (document.form1.vestigeofamaan_box.checked){SWD+="<img src=box.gif>Vestige of Amaan [AP; Level 19]<br>\r";}
if (document.form1.vestigeoftheburnedemperors_box.checked){SWD+="<img src=box.gif>Vestige of the Burned Emperors [AP; Level 19]<br>\r";}
if (document.form1.gravityofmoment_box.checked){SWD+="<img src=box.gif>Gravity of Moment [FRPG; Level 19]<br>\r";}
if (document.form1.spellcurse_box.checked){SWD+="<img src=box.gif>Spellcurse [FRPG; Level 19]<br>\r";}

if (document.form1.other19daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other19daily.value+" [Level 19]:<br>\r"; }


if (total_levels>=20)
{
if (paragon_angelicavenger){
SWD+="<img src=box.gif>Angel Ascendant [Angelic Avenger Level 20]<br>\r"; }
if (paragon_divineoracle){
SWD+="<img src=box.gif>Hammer of Fate [Divine Oracle Level 20]<br>\r"; }
if (paragon_radiantservant){
SWD+="<img src=box.gif>Radiant Brilliance [Radiant Servant Level 20]<br>\r"; }
if (paragon_warpriest){
SWD+="<img src=box.gif>Battle Pyres [War Priest Level 20]<br>\r"; }
if (paragon_ironvanguard){
SWD+="<img src=box.gif>Indominatable Strength [Iron Vanguard Level 20]<br>\r"; }
if (paragon_kensei){
SWD+="<img src=box.gif>Weaponsoul Dance [Kensei Level 20]<br>\r"; }
if (paragon_pitfighter){
SWD+="<img src=box.gif>Lion of Battle [Pit Fighter Level 20]<br>\r"; }
if (paragon_swordmaster){
SWD+="<img src=box.gif>Crescendo Sword [Sword Master Level 20]<br>\r"; }
if (paragon_astralweapon){
SWD+="<img src=box.gif>Astral Whirlwind [Astral Weapon Level 20]<br>\r"; }
if (paragon_championoforder){
SWD+="<img src=box.gif>Rule of Order [Champion of Order Level 20]<br>\r"; }
if (paragon_hospitaler){
SWD+="<img src=box.gif>Life-Giving Smite [Hospitaler Level 20]<br>\r"; }
if (paragon_justiciar){
SWD+="<img src=box.gif>Challenge the Unjust [Justiciar Level 20]<br>\r"; }
if (paragon_battlefieldarcher){
SWD+="<img src=box.gif>Quarry's Bane [Battlefield Archer Level 20]<br>\r"; }
if (paragon_beaststalker){
SWD+="<img src=box.gif>Beast Stalker's Target [Beast Stalker Level 20]<br>\r"; }
if (paragon_pathfinder){
SWD+="<img src=box.gif>Slasher's Mark [Pathfinder Level 20]<br>\r"; }
if (paragon_stormwarden){
SWD+="<img src=box.gif>Cold Steel Hurricane [Storm Warden Level 20]<br>\r"; }
if (paragon_catburglar){
SWD+="<img src=box.gif>Redirected Death [Cat Burglar Level 20][immediate interrupt]]<br>\r"; }
if (paragon_daggermaster){
SWD+="<img src=box.gif>Deep Dagger Wound [Dagger Master Level 20]<br>\r"; }
if (paragon_masterinfiltrator){
SWD+="<img src=box.gif>Painful Puncture [Master Infiltrator Level 20]<br>\r"; }
if (paragon_shadowassassin){
SWD+="<img src=box.gif>Final Blow [Shadow Assassin Level 20]<br>\r"; }
if (paragon_doomsayer){
SWD+="<img src=box.gif>Long Fall Into Darkness [Doomsayer Level 20]<br>\r"; }
if (paragon_feytouched){
SWD+="<img src=box.gif>Whispers of the Fey [Feytouched Level 20; attac rather than utility as per errata 7/2/08]<br>\r"; }
if (paragon_lifestealer){
SWD+="<img src=box.gif>Soultheft [Life Stealer Level 20]<br>\r"; }
if (paragon_battlecaptain){
SWD+="<img src=box.gif>Cunning Flurry [Battle Captain Level 20]<br>\r"; }
if (paragon_combatveteran){
SWD+="<img src=box.gif>Superior Tactics [Combat Veteran Level 20]<br>\r"; }
if (paragon_knightcommander){
SWD+="<img src=box.gif>Control the Field [Knight Commander Level 20]<br>\r"; }
if (paragon_swordmarshal){
SWD+="<img src=box.gif>Diamond Blade of Victory [Sword Marshal Level 20]<br>\r"; }
if (paragon_battlemage){
SWD+="<img src=box.gif>Closing Spell [Battle Mage Level 20]<br>\r"; }
if (paragon_bloodmage){
SWD+="<img src=box.gif>Dextructive Salutation [Blood Mage Level 20]<br>\r"; }
if (paragon_spellstormmage){
SWD+="<img src=box.gif>Maelstrom of Chaos [Spellstorm Mage Level 20]<br>\r"; }
if (paragon_wizardofthespiraltower){
SWD+="<img src=box.gif>Carellon's Blade [Wizard of the Spiral Tower Level 20]<br>\r"; }
if (paragon_anarchofshyr){
SWD+="<img src=box.gif>Sharyn Cataclysm [Anarch of Shyr Level 20]<br>\r"; }
if (paragon_coronalguard){
SWD+="<img src=box.gif>Avaunt Foe [Coronal Guard Level 20]<br>\r"; }
if (paragon_darkwalker){
SWD+="<img src=box.gif>Wraithform Blast [Darkwalker Level 20]<br>\r"; }
if (paragon_doomguide){
SWD+="<img src=box.gif>Kelemvor's Sword [Doomguide Level 20]<br>\r"; }
if (paragon_drowwanderer){
SWD+="<img src=box.gif>Darkblade [Drow Wanderer Level 20]<br>\r"; }
if (paragon_eartheartdefender){
SWD+="<img src=box.gif>Earthsurge [Eartheart Defender Level 20]<br>\r"; }
if (paragon_elementaltempest){
SWD+="<img src=box.gif>Elemental Fury [Elemental Tempest Level 20]<br>\r"; }
if (paragon_evermeetwarlock){
SWD+="<img src=box.gif>Moonflower Inspiration [Evermeet Warlock Level 20]<br>\r"; }



if (paragon_ghostofeventide){
SWD+="<img src=box.gif>Robed in Shadow [Ghost of Eventide Level 20]<br>\r"; }
if (paragon_heartwarder){
SWD+="<img src=box.gif>Sune's Kiss [Heartwarder Level 20]<br>\r"; }
if (paragon_highforestscout){
SWD+="<img src=box.gif>Blinding Arrows [High Forest Scout Level 20]<br>\r"; }
if (paragon_impilturandemonslayer){
SWD+="<img src=box.gif>Demonbane Fury [Impiltran Demonslayer Level 20]<br>\r"; }
if (paragon_morninglord){
SWD+="<img src=box.gif>Lance of Dawn [Morninglord Level 20]<br>\r"; }
if (paragon_purpledragonknight){
SWD+="<img src=box.gif>For Cormyr! [Purple Dragon Knight Level 20]<br>\r"; }
if (paragon_silverstar){
SWD+="<img src=box.gif>Moonfire [Silverstar Level 20]<br>\r"; }
if (paragon_simbarchofaglarond){
SWD+="<img src=box.gif>Simbul's Tempest [Simbarch of Aglarond Level 20]<br>\r"; }
if (paragon_spellguardwizard){
SWD+="<img src=box.gif>Mythal Spark [Spellguard Wizard Level 20]<br>\r"; }
if (paragon_steelskyliberator){
SWD+="<img src=box.gif>Break the Chains [Steelsky Liberator Level 20]<br>\r"; }
if (paragon_swordcoastcorsair){
SWD+="<img src=box.gif>Keelhaul [Sword Coast Corsair Level 20]<br>\r"; }
if (paragon_umbriri){
SWD+="<img src=box.gif>Shadowed Psyche [Umbriri Level 20]<br>\r"; }
if (paragon_wanderingswordmage){
SWD+="<img src=box.gif>Heritage of Blades [Wandering Swordmage Level 20]<br>\r"; }
if (paragon_warwizardofcormyr){
SWD+="<img src=box.gif>Storm of Victory [War Wizard of Cormyr Level 20]<br>\r"; }
if (paragon_whirlwindgenasi){
SWD+="<img src=box.gif>Whirlwind Genasi [Windsoul WhIrlwind Level 20]<br>\r"; }
if (paragon_wildfiregenasi){
SWD+="<img src=box.gif>Firesoul Conflagration [Wildfire Genasi Level 20]<br>\r"; }
if (paragon_feralspirit){
SWD+="<img src=box.gif>Twin-Soul Strike [Feral Spirit Level 20]<br>\r"; }
if (paragon_packrunner){
SWD+="<img src=box.gif>Neck-Bite Pounce [Pack Runner Level 20]<br>\r"; }
if (paragon_wildcatstalker){
SWD+="<img src=box.gif>Panther Pounce [Wildcat Stalker Level 20]<br>\r"; }

if (paragon_bladeofcendriane){
SWD+="<img src=box.gif>Feywild Tempest [Blade of Cendriane Level 20]<br>\r"; }
if (paragon_doomguardmarauder){
SWD+="<img src=box.gif>Arm of Dissolution [Doomguard Marauder Level 20]<br>\r"; }
if (paragon_gatecrasher){
SWD+="<img src=box.gif>Boltportal Strike [Gatecrasher Level 20]<br>\r"; }
if (paragon_knightofcelestia){
SWD+="<img src=box.gif>Purifying Radiance [Knight of Celestia Level 20]<br>\r"; }
if (paragon_maleckethjanissary){
SWD+="<img src=box.gif>Elemental Scourge [Malek-Keth Janissary Level 20]<br>\r"; }
if (paragon_planeshifter){
SWD+="<img src=box.gif>Dimensional Cascade [Planeshifter Level 20]<br>\r"; }
if (paragon_shadowcaptain){
SWD+="<img src=box.gif>Shadow Turncoat [Shadow Captain Level 20]<br>\r"; }
if (paragon_soulguide){
SWD+="<img src=box.gif>Soul Brand [Soul Guide Level 20]<br>\r"; }



if (paragon_adroitexplorer){
SWD+="<img src=box.gif>Bloodied Greatness [Adroit Explorer Level 20][immediate interrupt]<br>\r";}
if (paragon_ancestralincarnate){
SWD+="<img src=box.gif>Past-Life Vanguard [Ancestral Incarnate Level 20]<br>\r";}
if (paragon_bloodfurysavage){
SWD+="<img src=box.gif>Murderous Rage [Blood Fury Savage Level 20]<br>\r";}
if (paragon_feybeguiler){
SWD+="<img src=box.gif>Beguiling Bolt [Fey Beguiler Level 20]<br>\r";}
if (paragon_firstbornofmoradin){
SWD+="<img src=box.gif>Mountain Stance Strike [Firstborn of Moradin Level 20]<br>\r";}
if (paragon_halflingscoundrel){
SWD+="<img src=box.gif>Halfling's Taunt [Halfling Scoundrel Level 20]<br>\r";}
if (paragon_moonstalker){
SWD+="<img src=box.gif>Circle the Prey [Moonstalker Level 20]<br>\r";}
if (paragon_scionofarkhosia){
SWD+="<img src=box.gif>Clinging Breath [Scion of Arkhosia Level 20]<br>\r";}
if (paragon_shiereknight){
SWD+="<img src=box.gif>Imperious Presence [Shiere Knight Level 20]<br>\r";}
if (paragon_stoneblessed){
SWD+="<img src=box.gif>Avalanche Assault [Stoneblessed Level 20]<br>\r";}
if (paragon_turathihighborn){
SWD+="<img src=box.gif>Thrall of Turath [Turathi Highborn Level 20]<br>\r";}
if (paragon_twilightguardian){
SWD+="<img src=box.gif>Nature's Rage [Twilight Guardian Level 20]<br>\r";}
if (paragon_hammerofjudgment){
SWD+="<img src=box.gif>Hammer of the Final Pronouncement [Hammer of Judgment Level 20]<br>\r";}
if (paragon_oathsworn){
SWD+="<img src=box.gif>Oath Bond [Oathsworn Level 20]<br>\r";}
if (paragon_unveiledvisage){
SWD+="<img src=box.gif>Divine Aspect [Unveiled Visage Level 20]<br>\r";}
if (paragon_zealousassassin){
SWD+="<img src=box.gif>Blade of the Zealot [Zealous Assassin Level 20]<br>\r";}
if (paragon_bearwarrior){
SWD+="<img src=box.gif>Rampaging Bear [Bear Warrior Level 20]<br>\r";}
if (paragon_fearbringerthane){
SWD+="<img src=box.gif>Tide of Battle [Fearbringer Thane Level 20]<br>\r";}
if (paragon_frenziedberserker){
SWD+="<img src=box.gif>Final Confrontation [Frenzied Berserker Level 20]<br>\r";}
if (paragon_wildrunner){
SWD+="<img src=box.gif>Wildrunner's Rage [Wildrunner Level 20]<br>\r";}
if (paragon_studentoftheseven){
SWD+="<img src=box.gif>Voice of the Seven [Student of the Seven Level 20]<br>\r";}
if (paragon_summerrhymer){
SWD+="<img src=box.gif>Song of the High Court [Summer Rhymer Level 20]<br>\r";}
if (paragon_voiceofthunder){
SWD+="<img src=box.gif>Song of Thunder [Voice of Thunder Level 20]<br>\r";}
if (paragon_warchanter){
SWD+="<img src=box.gif>Visions of Victory [War Chanter Level 20]<br>\r";}
if (paragon_bloodmoonstalker){
SWD+="<img src=box.gif>Nture's Grave [Bloodmoon Stalker Level 20]<br>\r";}
if (paragon_guardianofthelivinggate){
SWD+="<img src=box.gif>Third Ward of the Living Gate [Guardian of the Living Gate Level 20]<br>\r";}
if (paragon_keeperofthehiddenflame){
SWD+="<img src=box.gif>Spirit of the Beast [Keeper of the Hidden Flame Level 20]<br>\r";}
if (paragon_skyhunter){
SWD+="<img src=box.gif>Primal Eagle [Sky Hunter Level 20]<br>\r";}
if (paragon_angelicaspect){
SWD+="<img src=box.gif>Coldfire Pillar [Angelic Aspect Level 20]<br>\r";}
if (paragon_blightspeaker){
SWD+="<img src=box.gif>Endbringer [Blight Speaker Level 20]<br>\r";}
if (paragon_flameofhope){
SWD+="<img src=box.gif>Sunburst Bulwark [Flame of Hope Level 20]<br>\r";}
if (paragon_hammerofvengeance){
SWD+="<img src=box.gif>Warding Thunder [Hammer of Vengeance Level 20]<br>\r";}
if (paragon_discipleoftheworldserpent){
SWD+="<img src=box.gif>Crush of the Serpent [Disciple of the World Serpent Level 20]<br>\r";}
if (paragon_ghostpanther){
SWD+="<img src=box.gif>Ghost Panther Spiral [Ghost Panther Level 20]<br>\r";}
if (paragon_greatbearshaman){
SWD+="<img src=box.gif>Call to the Great Bear [Great Bear Shaman Level 20]<br>\r";}
if (paragon_spirittempest){
SWD+="<img src=box.gif>Spirit Storm [Spirit Tempest Level 20]<br>\r";}
if (paragon_arcanewellspring){
SWD+="<img src=box.gif>Sorcerous Metamorphosis [Arcane Wellspring Level 20]<br>\r";}
if (paragon_demonskinadept){
SWD+="<img src=box.gif>Swords of the Marilith [Demonskin Adept Level 20]<br>\r";}
if (paragon_dragonsoulheir){
SWD+="<img src=box.gif>Veil of the Dragon [Dragonsoul Heir Level 20]<br>\r";}
if (paragon_wildmage){
SWD+="<img src=box.gif>Prismatic Bolt [Wild Mage Level 20]<br>\r";}
if (paragon_bloodwrathguardian){
SWD+="<img src=box.gif>Form of the Primal Beast [Bloodwrath Guardian Level 20]<br>\r";}
if (paragon_hornedchampion){
SWD+="<img src=box.gif>Form of the Leaping Stag [Horned Champion Level 20]<br>\r";}
if (paragon_stormsentinel){
SWD+="<img src=box.gif>Form of the Storm's Wrath [Storm Sentinel Level 20]<br>\r";}
if (paragon_verdantlord){
SWD+="<img src=box.gif>Form of the Verdant Lord [Verdant Lord Level 20]<br>\r";}


// kurwa daily 20

if (paragon_other){SWD+="<img src=box.gif>"+document.form1.otherparagonpath.value+" special ability [Level 20] (most are daily attacks)<br>\r"; }

}

if (document.form1.angeloftheelevenwinds_box.checked){SWD+="<img src=box.gif>Angel of the Eleven Winds [Level 22 Utility]<br>\r"; }
if (document.form1.clarioncalloftheastralsea_box.checked){SWD+="<img src=box.gif>Clarion Call of the Astral Sea [Level 22 Utility]<br>\r"; }
if (document.form1.cloudchariot_box.checked){SWD+="<img src=box.gif>Cloud Chariot [Level 22 Utility]<br>\r"; }
if (document.form1.purify_box.checked){SWD+="<img src=box.gif>Purify [Level 22 Utility]<br>\r"; }
if (document.form1.spiritofhealth_box.checked){SWD+="<img src=box.gif>Spirit of Health [Level 22 Utility]<br>\r"; }
if (document.form1.actofdesperation_box.checked){SWD+="<img src=box.gif>Act of Desperation [Level 22 Utility][minor action]<br>\r"; }
if (document.form1.nosurrender_box.checked){SWD+="<img src=box.gif>No Surrender [Level 22 Utility][no action, as per errata 7/2/08]<br>\r"; }
if (document.form1.angelicrescue_box.checked){SWD+="<img src=box.gif>Angelic Rescue [Level 22 Utility]<br>\r"; }
if (document.form1.cleansingburst_box.checked){SWD+="<img src=box.gif>Cleansing Burst [Level 22 Utility][minor action]<br>\r"; }
if (document.form1.giftoflife_box.checked){SWD+="<img src=box.gif>Gift of Life [Level 22 Utility]<br>\r"; }
if (document.form1.unitedinfaith_box.checked){SWD+="<img src=box.gif>United in Faith [Level 22 Utility][minor action]<br>\r"; }
if (document.form1.forestghost_box.checked){SWD+="<img src=box.gif>Forest Ghost [Level 22 Utility]<br>\r"; }
if (document.form1.hitthedirt_box.checked){SWD+="<img src=box.gif>Hit the Dirt [Level 22 Utility][immediate interrupt]<br>\r"; }
if (document.form1.masterofthehunt_box.checked){SWD+="<img src=box.gif>Master of the Hunt [Level 22 Utility][minor action]<br>\r"; }
if (document.form1.hidefromthelight_box.checked){SWD+="<img src=box.gif>Hide from the Light [Level 22 Utility][minor action]<br>\r"; }
if (document.form1.ravensglamor_box.checked){SWD+="<img src=box.gif>Raven's Glamor [Level 22 Utility][move action]<br>\r"; }
if (document.form1.wingsofthefiend_box.checked){SWD+="<img src=box.gif>Wings of the Fiend [Level 22 Utility][minor action]<br>\r"; }
if (document.form1.heartofthetitan_box.checked){SWD+="<img src=box.gif>Heart of the Titan [Level 22 Utility]<br>\r"; }
if (document.form1.heroicsurge_box.checked){SWD+="<img src=box.gif>Heroic Surge [Level 22 Utility][immediate reaction]<br>\r"; }
if (document.form1.ownthebattlefield_box.checked){SWD+="<img src=box.gif>Own the Battlefield [Level 22 Utility]<br>\r"; }
if (document.form1.massfly_box.checked){SWD+="<img src=box.gif>Mass Fly [Level 22 Utility]<br>\r"; }
if (document.form1.mordenkainensmansion_box.checked){SWD+="<img src=box.gif>Mordenkainen's Mansion [Level 22 Utility]<br>\r"; }
if (document.form1.timestop_box.checked){SWD+="<img src=box.gif>Time Stop [Level 22 Utility][minor action]<br>\r"; }

if (document.form1.ghostlyvengeance_box.checked){SWD+="<img src=box.gif>Ghostly Vengeance [Level 22 Utility][minor action]<br>\r";}
if (document.form1.indomitableresolve_box.checked){SWD+="<img src=box.gif>Indomitable Resolve [Level 22 Utility][free action]<br>\r";}
if (document.form1.oathofthefinalstrike_box.checked){SWD+="<img src=box.gif>Oath of the Final Strike [Level 22 Utility][minor action]<br>\r";}
if (document.form1.twinstep_box.checked){SWD+="<img src=box.gif>Twin Step [Level 22 Utility][standard action]<br>\r";}
if (document.form1.laststand_box.checked){SWD+="<img src=box.gif>Last Stand [Level 22 Utility][immediate interrupt]<br>\r";}
if (document.form1.primalinstinct_box.checked){SWD+="<img src=box.gif>Primal Instinct [Level 22 Utility][minor action]<br>\r";}
if (document.form1.primalvigor_box.checked){SWD+="<img src=box.gif>Primal Vigor [Level 22 Utility][immediate interrupt]<br>\r";}
if (document.form1.untouched_box.checked){SWD+="<img src=box.gif>Untouched [Level 22 Utility][minor action]<br>\r";}
if (document.form1.elegyunwritten_box.checked){SWD+="<img src=box.gif>Elegy Unwritten [Level 22 Utility][immediate interrupt]<br>\r";}
if (document.form1.mirroredentourage_box.checked){SWD+="<img src=box.gif>Mirrored Entourage [Level 22 Utility][minor action]<br>\r";}
if (document.form1.songoftransition_box.checked){SWD+="<img src=box.gif>Song of Transition [Level 22 Utility][minor action]<br>\r";}
if (document.form1.phantombeast_box.checked){SWD+="<img src=box.gif>Phantom Beast [Level 22 Utility][minor action][beast form]<br>\r";}
if (document.form1.skytalon_box.checked){SWD+="<img src=box.gif>Sky Talon [Level 22 Utility][free action]<br>\r";}
if (document.form1.unseenbeast_box.checked){SWD+="<img src=box.gif>Unseen Beast [Level 22 Utility][minor action]<br>\r";}
if (document.form1.unyieldingroots_box.checked){SWD+="<img src=box.gif>Unyielding Roots [Level 22 Utility][standard action]<br>\r";}
if (document.form1.covenantofvengeance_box.checked){SWD+="<img src=box.gif>Covenant of Vengeance [Level 22 Utility][minor action]<br>\r";}
if (document.form1.invokeangelicform_box.checked){SWD+="<img src=box.gif>Invoke Angelic Form [Level 22 Utility][minor action]<br>\r";}
if (document.form1.invokeheroism_box.checked){SWD+="<img src=box.gif>Invoke Heroism [Level 22 Utility][minor action]<br>\r";}
if (document.form1.wardofdivinelight_box.checked){SWD+="<img src=box.gif>Ward of Divine Light [Level 22 Utility][standard action]<br>\r";}
if (document.form1.bountyoflife_box.checked){SWD+="<img src=box.gif>Bounty of Life [Level 22 Utility][minor action]<br>\r";}
if (document.form1.callthedead_box.checked){SWD+="<img src=box.gif>Call the Dead [Level 22 Utility][standard action]<br>\r";}
if (document.form1.doorwaytothespiritworld_box.checked){SWD+="<img src=box.gif>Doorway to the Spirit World [Level 22 Utility][minor action]<br>\r";}
if (document.form1.spiritoftheworldhealer_box.checked){SWD+="<img src=box.gif>Spirit of the World Healer [Level 22 Utility][minor action]<br>\r";}
if (document.form1.platinumscales_box.checked){SWD+="<img src=box.gif>Platinum Scales [Level 22 Utility][immediate interrupt]<br>\r";}
if (document.form1.sharedsorcery_box.checked){SWD+="<img src=box.gif>Shared Sorcery [Level 22 Utility][minor action]<br>\r";}
if (document.form1.eagleswings_box.checked){SWD+="<img src=box.gif>Eagle's Wings [Level 22 Utility][minor action]<br>\r";}
if (document.form1.panacea_box.checked){SWD+="<img src=box.gif>Panacea [Level 22 Utility][minor action]<br>\r";}
if (document.form1.renewal_box.checked){SWD+="<img src=box.gif>Renewal [Level 22 Utility][minor action]<br>\r";}
if (document.form1.wellspringoflife_box.checked){SWD+="<img src=box.gif>Wellspring of Life [Level 22 Utility][minor action]<br>\r";}




if (document.form1.eyesofthemage_box.checked){SWD+="<img src=box.gif>Eyes of the Mage [FRPG; Level 22 Utility][minor action]<br>\r";}
if (document.form1.giantsmight_box.checked){SWD+="<img src=box.gif>Giant's Might [FRPG; Level 22 Utility][minor action]<br>\r";}
if (document.form1.shackledwarding_box.checked){SWD+="<img src=box.gif>Shackled Warding [FRPG; Level 22 Utility][minor action]<br>\r";}
if (document.form1.expedientsacrifice_box.checked){SWD+="<img src=box.gif>Expedient Sacrifice [FRPG; Level 22 Utility][minor action]<br>\r";}
if (document.form1.donningthemudflesh_box.checked){SWD+="<img src=box.gif>Donning the Mudflesh [FRPG; Level 22 Utility][minor action]<br>\r";}
if (document.form1.spellplagueguardians_box.checked){SWD+="<img src=box.gif>Spellplague Guardians [FRPG; Level 22 Utility]<br>\r";}
if (document.form1.selflesssacrifice_box.checked){SWD+="<img src=box.gif>&nbsp;Selfless Sacrifice [Level 22][immediate interrupt]<br>\r";}
if (document.form1.wilddash_box.checked){SWD+="<img src=box.gif>&nbsp;Wild Dash [Level 22][immediate reaction]<br>\r";}

if (document.form1.other22daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other22daily.value+" [Level 22 Utility]:<br>\r"; }


if (document.form1.nimbusofdoom_box.checked){SWD+="<img src=box.gif>Nimbus of Doom [Level 25]<br>\r"; }
if (document.form1.sacredword_box.checked){SWD+="<img src=box.gif>Sacred Word [Level 25]<br>\r"; }
if (document.form1.sealofbinding_box.checked){SWD+="<img src=box.gif>Seal of Binding [Level 25]<br>\r"; }
if (document.form1.sealofprotection_box.checked){SWD+="<img src=box.gif>Seal of Protection [Level 25]<br>\r"; }
if (document.form1.reapersstance_box.checked){SWD+="<img src=box.gif>Reaper's Stance [Level 25][minor action]<br>\r"; }
if (document.form1.reignofterror_box.checked){SWD+="<img src=box.gif>Reign of Terror [Level 25][reliable]<br>\r"; }
if (document.form1.supremacyofsteel_box.checked){SWD+="<img src=box.gif>Supremacy of Steel [Level 25][reliable]<br>\r"; }
if (document.form1.exaltedretribution_box.checked){SWD+="<img src=box.gif>Exalted Retribution [Level 25]<br>\r"; }
if (document.form1.totheninehellswithyou_box.checked){SWD+="<img src=box.gif>To the Nine Hells With You [Level 25]<br>\r"; }
if (document.form1.bloodstorm_box.checked){SWD+="<img src=box.gif>Blood Storm [Level 25]<br>\r"; }
if (document.form1.tigersreflex_box.checked){SWD+="<img src=box.gif>Tiger's Reflex [Level 25][minor action / immediate interrupt]<br>\r"; }
if (document.form1.unstoppablearrows_box.checked){SWD+="<img src=box.gif>Unstoppable Arrows [Level 25]<br>\r"; }
if (document.form1.primalrampage_box.checked){SWD+="<img src=box.gif>&nbsp;Primal Rampage [Level 25]<br>\r";}
if (document.form1.pursuitofthewildhunt_box.checked){SWD+="<img src=box.gif>&nbsp;Pursuit of the Wild Hunt [Level 25]<br>\r";}
if (document.form1.bitingassault_box.checked){SWD+="<img src=box.gif>Biting Assault [Level 25]<br>\r"; }
if (document.form1.ghostonthewind_box.checked){SWD+="<img src=box.gif>Ghost on the Wind [Level 25]<br>\r"; }
if (document.form1.hamstring_box.checked){SWD+="<img src=box.gif>Hamstring [Level 25]<br>\r"; }
if (document.form1.curseofthetwinprinces_box.checked){SWD+="<img src=box.gif>Curse of the Twin Princes [Level 25]<br>\r"; }
if (document.form1.tartareantomb_box.checked){SWD+="<img src=box.gif>Tartarean Tomb [Level 25]<br>\r"; }
if (document.form1.thirteenbalefulstars_box.checked){SWD+="<img src=box.gif>Thirteen Baleful Stars [Level 25]<br>\r"; }
if (document.form1.relentlessassault_box.checked){SWD+="<img src=box.gif>Relentless Assault [Level 25]<br>\r"; }
if (document.form1.stirthehornetsnest_box.checked){SWD+="<img src=box.gif>Stir the Hornet's Nest [Level 25]<br>\r"; }
if (document.form1.whiteravenscall_box.checked){SWD+="<img src=box.gif>White Raven's Call [Level 25]<br>\r"; }
if (document.form1.elementalmaw_box.checked){SWD+="<img src=box.gif>Elemental Maw [Level 25]<br>\r"; }
if (document.form1.maze_box.checked){SWD+="<img src=box.gif>Maze [Level 25]<br>\r"; }
if (document.form1.necroticweb_box.checked){SWD+="<img src=box.gif>Necrotic Web [Level 25]<br>\r"; }
if (document.form1.prismaticspray_box.checked){SWD+="<img src=box.gif>Prismatic Spray [Level 25]<br>\r"; }




if (document.form1.aspectofdeath_box.checked){SWD+="<img src=box.gif>Aspect of Death [Level 25]<br>\r";}
if (document.form1.bondofdestiny_box.checked){SWD+="<img src=box.gif>Bond of Destiny [Level 25]<br>\r";}
if (document.form1.executionersjustice_box.checked){SWD+="<img src=box.gif>Executioner's Justice [Level 25]<br>\r";}
if (document.form1.sigilofdamnation_box.checked){SWD+="<img src=box.gif>Sigil of Damnation [Level 25]<br>\r";}
if (document.form1.ashhammerrage_box.checked){SWD+="<img src=box.gif>Ash Hammer Rage [Level 25]<br>\r";}
if (document.form1.blodhungerrage_box.checked){SWD+="<img src=box.gif>Blood Hunger Rage [Level 25]<br>\r";}
if (document.form1.bluedragonrage_box.checked){SWD+="<img src=box.gif>Blue Dragon Rage [Level 25]<br>\r";}
if (document.form1.stonetempestrage_box.checked){SWD+="<img src=box.gif>Stone Tempest Rage [Level 25]<br>\r";}
if (document.form1.adversarialsong_box.checked){SWD+="<img src=box.gif>Adversarial Song [Level 25]<br>\r";}
if (document.form1.fraughtwithfailure_box.checked){SWD+="<img src=box.gif>Fraught With Failure [Level 25]<br>\r";}
if (document.form1.frenziedrhythm_box.checked){SWD+="<img src=box.gif>Frenzied Rhythm [Level 25]<br>\r";}
if (document.form1.visiondistortion_box.checked){SWD+="<img src=box.gif>Vision Distortion [Level 25]<br>\r";}
if (document.form1.ferociousmaul_box.checked){SWD+="<img src=box.gif>Ferocious Maul [Level 25]<br>\r";}
if (document.form1.feylure_box.checked){SWD+="<img src=box.gif>Fey Lure [Level 25]<br>\r";}
if (document.form1.primalstorm_box.checked){SWD+="<img src=box.gif>Primal Storm [Level 25]<br>\r";}
if (document.form1.primaltiger_box.checked){SWD+="<img src=box.gif>Primal Tiger [Level 25]<br>\r";}
if (document.form1.anthemofthefirstdawn_box.checked){SWD+="<img src=box.gif>Anthem of the First Dawn [Level 25]<br>\r";}
if (document.form1.invokethefallen_box.checked){SWD+="<img src=box.gif>Invoke the Fallen [Level 25]<br>\r";}
if (document.form1.rackinginvocationofpain_box.checked){SWD+="<img src=box.gif>Racking Invocation of Pain [Level 25]<br>\r";}
if (document.form1.rainofcolorlessfire_box.checked){SWD+="<img src=box.gif>Rain of Colorless Fire [Level 25]<br>\r";}
if (document.form1.ironbornspirit_box.checked){SWD+="<img src=box.gif>Ironborn Spirit [Level 25]<br>\r";}
if (document.form1.spiritofthelaughingwanderer_box.checked){SWD+="<img src=box.gif>Spirit of the Laughing Wanderer [Level 25]<br>\r";}
if (document.form1.spiritoftheworldserpent_box.checked){SWD+="<img src=box.gif>Spirit of the World Serpent [Level 25]<br>\r";}
if (document.form1.westernwindofstorms_box.checked){SWD+="<img src=box.gif>Western Wind of Storms [Level 25]<br>\r";}
if (document.form1.draconicincarnation_box.checked){SWD+="<img src=box.gif>Draconic Incarnation [Level 25]<br>\r";}
if (document.form1.forcestorm_box.checked){SWD+="<img src=box.gif>Force Storm [Level 25]<br>\r";}
if (document.form1.wordsofchaos_box.checked){SWD+="<img src=box.gif>Words of Chaos [Level 25]<br>\r";}
if (document.form1.formoftheblackwolf_box.checked){SWD+="<img src=box.gif>Form of the Black Wolf [Level 25]<br>\r";}
if (document.form1.formofthedisplacerbeast_box.checked){SWD+="<img src=box.gif>Form of the Displacer Beast [Level 25]<br>\r";}
if (document.form1.formofthejunglelord_box.checked){SWD+="<img src=box.gif>Form of the Jungle Lord [Level 25]<br>\r";}
if (document.form1.formoftheautumnreaper_box.checked){SWD+="<img src=box.gif>Form of the Autumn Reaper [Level 25]<br>\r";}





if (document.form1.boundinglightning_box.checked){SWD+="<img src=box.gif>Bounding Lightning [FRPG; Level 25]<br>\r";}
if (document.form1.icyshackles_box.checked){SWD+="<img src=box.gif>Icy Shackles [FRPG; Level 25][reliable]<br>\r";}
if (document.form1.quicksilverblade_box.checked){SWD+="<img src=box.gif>Quicksilver Blade [FRPG; Level 25][minor action]<br>\r";}
if (document.form1.thunderingheart_box.checked){SWD+="<img src=box.gif>Thundering Heart [FRPG; Level 25][reliable]<br>\r";}
if (document.form1.invisibledeath_box.checked){SWD+="<img src=box.gif>Invisible Death [FRPG; Level 25]<br>\r";}
if (document.form1.ringoftorment_box.checked){SWD+="<img src=box.gif>Ring of Torment [FRPG; Level 25]<br>\r";}
if (document.form1.vestigeoflandssoul_box.checked){SWD+="<img src=box.gif>Vestige of Land's Soul [AP; Level 25]<br>\r";}
if (document.form1.vestigeofthequeenofnamhar_box.checked){SWD+="<img src=box.gif>Vestige of the Queen of Namhar [AP; Level 25]<br>\r";}
if (document.form1.malignantgrowth_box.checked){SWD+="<img src=box.gif>Malignant Growth [FRPG; Level 25]<br>\r";}
if (document.form1.contagionflame_box.checked){SWD+="<img src=box.gif>Contagion Flame [FRPG; Level 25]<br>\r";}

if (document.form1.other25daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other25daily.value+" [Level 25]:<br>\r"; }


if (total_levels>=26)
{
if (epic_archmage){
SWD+="<img src=box.gif>Shape Magic [Archmage Level 26 Utility]<br>\r"; }
if (epic_deadlytrickster){
SWD+="<img src=box.gif>Epic Trick [Deadly Trickster Level 26 Utility]<br>\r"; }
if (epic_demigod){
SWD+="<img src=box.gif>Divine Regeneration [Demigod Level 26 Utility]<br>\r"; }
if (epic_chosen){
SWD+="<img src=box.gif>Special Sect Utility [Chosen Level 26 Utility]<br>\r"; }
if (epic_other){
SWD+="<img src=box.gif>Special ["+document.form1.otherepicdestiny.value+" Level 26 Utility] (? frequency)<br>\r"; }


if (epic_adamantinesoldier){
SWD+="<img src=box.gif>Inexorable Advance [Adamantine Soldier Level 26 Utility][minor action]<br>\r"; }
if (epic_darkwanderer){
SWD+="<img src=box.gif>Never at a Loss [Dark Wanderer Level 26 Utility][minor action]<br>\r"; }
if (epic_eternaldefender){
SWD+="<img src=box.gif>Implacable Destruction [Eternal Defender Level 26 Utility][minor action]<br>\r"; }
if (epic_godhunter){
SWD+="<img src=box.gif>Deicidal Eye [Godhunter Level 26 Utility][minor action]<br>\r"; }
if (epic_legendarygeneral){
SWD+="<img src=box.gif>Legendary Exploits [Legendary General Level 26 Utility]<br>\r"; }
if (epic_warmaster){
SWD+="<img src=box.gif>Spring the Trap [Warmaster Level 26 Utility]<br>\r"; }
if (epic_fatesinger){
SWD+="<img src=box.gif>qqq [Fatesinger Level 26 Utility]<br>\r";}
if (epic_harbingerofdoom){
SWD+="<img src=box.gif>qqq [Harbinger of Doom Level 26 Utility]<br>\r";}
if (epic_primalavatar){
SWD+="<img src=box.gif>qqq [Primal Avatar Level 26 Utility]<br>\r";}
if (epic_reveredone){
SWD+="<img src=box.gif>qqq [Revered One Level 26 Utility]<br>\r";}

}

if (document.form1.astralstorm_box.checked){SWD+="<img src=box.gif>Astral Storm [Level 29]<br>\r"; }
if (document.form1.godstrike_box.checked){SWD+="<img src=box.gif>Godstrike [Level 29]<br>\r"; }
if (document.form1.forcethebattle_box.checked){SWD+="<img src=box.gif>Force the Battle [Level 29][minor action]<br>\r"; }
if (document.form1.nomercy_box.checked){SWD+="<img src=box.gif>No Mercy [Level 29][reliable]<br>\r"; }
if (document.form1.stormofdestruction_box.checked){SWD+="<img src=box.gif>Storm of Destruction [Level 29]<br>\r"; }
if (document.form1.evenhandofjustice_box.checked){SWD+="<img src=box.gif>Even Hand of Justice [Level 29]<br>\r"; }
if (document.form1.powerfulfaith_box.checked){SWD+="<img src=box.gif>Powerful Faith [Level 29]<br>\r"; }
if (document.form1.followupblow_box.checked){SWD+="<img src=box.gif>Follow-up Blow [Level 29][minor action]<br>\r"; }
if (document.form1.threeinoneshot_box.checked){SWD+="<img src=box.gif>Three in One Shot [Level 29]<br>\r"; }
if (document.form1.weaveawebofsteel_box.checked){SWD+="<img src=box.gif>Weave a Web of Steel [Level 29][immediate interrupt]<br>\r"; }
if (document.form1.huntmastersmauling_box.checked){SWD+="<img src=box.gif>&nbsp;Huntmaster's Mauling [Level 29]<br>\r";}
if (document.form1.assassinspoint_box.checked){SWD+="<img src=box.gif>Assassin's Point [Level 29]<br>\r"; }
if (document.form1.immobilizingstrike_box.checked){SWD+="<img src=box.gif>Immobilizing Strike [Level 29]<br>\r"; }
if (document.form1.movingtarget_box.checked){SWD+="<img src=box.gif>Moving Target [Level 29][immediate interrupt]<br>\r"; }
if (document.form1.curseofthedarkdelirium_box.checked){SWD+="<img src=box.gif>Curse of the Dark Delirium [Level 29]<br>\r"; }
if (document.form1.doomofdelban_box.checked){SWD+="<img src=box.gif>Doom of Delban [Level 29]<br>\r"; }
if (document.form1.hurlthroughhell_box.checked){SWD+="<img src=box.gif>Hurl Through Hell [Level 29]<br>\r"; }
if (document.form1.defydeath_box.checked){SWD+="<img src=box.gif>Defy Death [Level 29][immediate interrupt]<br>\r"; }
if (document.form1.standinvincible_box.checked){SWD+="<img src=box.gif>Stand Invincible [Level 29]<br>\r"; }
if (document.form1.greatericestorm_box.checked){SWD+="<img src=box.gif>Greater Ice Storm [Level 29]<br>\r"; }
if (document.form1.legionshold_box.checked){SWD+="<img src=box.gif>Legion's Hold [Level 29]<br>\r"; }
if (document.form1.meteorswarm_box.checked){SWD+="<img src=box.gif>Meteor Swarm [Level 29]<br>\r"; }


if (document.form1.aspectofterror_box.checked){SWD+="<img src=box.gif>Aspect of Terror [Level 29]<br>\r";}
if (document.form1.fieryvengeance_box.checked){SWD+="<img src=box.gif>Fiery Vengeance [Level 29]<br>\r";}
if (document.form1.finaloath_box.checked){SWD+="<img src=box.gif>Final Oath [Level 29]<br>\r";}
if (document.form1.templeofresolution_box.checked){SWD+="<img src=box.gif>Temple of Resolution [Level 29]<br>\r";}
if (document.form1.crimsonphoenixrage_box.checked){SWD+="<img src=box.gif>Crimson Phoenix Rage [Level 29]<br>\r";}
if (document.form1.rageoftheprimalbeast_box.checked){SWD+="<img src=box.gif>Rage of the Primal Beast [Level 29]<br>\r";}
if (document.form1.winterghostrage_box.checked){SWD+="<img src=box.gif>Winter Ghost Rage [Level 29]<br>\r";}
if (document.form1.worldserpentrage_box.checked){SWD+="<img src=box.gif>World Serpent Rage [Level 29]<br>\r";}
if (document.form1.herosbeacon_box.checked){SWD+="<img src=box.gif>Hero's Beacon [Level 29]<br>\r";}
if (document.form1.satireofleadership_box.checked){SWD+="<img src=box.gif>Satire of Leadership [Level 29]<br>\r";}
if (document.form1.spellbind_box.checked){SWD+="<img src=box.gif>Spellbind [Level 29]<br>\r";}
if (document.form1.blindingblizzard_box.checked){SWD+="<img src=box.gif>Blinding Blizzard [Level 29]<br>\r";}
if (document.form1.gazeofthebeast_box.checked){SWD+="<img src=box.gif>Gaze of the Beast [Level 29]<br>\r";}
if (document.form1.lifeleechthorns_box.checked){SWD+="<img src=box.gif>Life Leech Thorns [Level 29]<br>\r";}
if (document.form1.primalarchetype_box.checked){SWD+="<img src=box.gif>Primal Archetype [Level 29]<br>\r";}
if (document.form1.firesofthesilvergate_box.checked){SWD+="<img src=box.gif>Fires of the Silver Gate [Level 29]<br>\r";}
if (document.form1.invoketheabsolutedark_box.checked){SWD+="<img src=box.gif>Invoke the Absolute Dark [Level 29]<br>\r";}
if (document.form1.summonangelofvictory_box.checked){SWD+="<img src=box.gif>Summon Angel of Victory [Level 29]<br>\r";}
if (document.form1.wordofthegods_box.checked){SWD+="<img src=box.gif>Word of the Gods [Level 29]<br>\r";}
if (document.form1.deathspirit_box.checked){SWD+="<img src=box.gif>Death Spirit [Level 29]<br>\r";}
if (document.form1.seaofserpents_box.checked){SWD+="<img src=box.gif>Sea of Serpents [Level 29]<br>\r";}
if (document.form1.spiritsofmist_box.checked){SWD+="<img src=box.gif>Spirits of Mist [Level 29]<br>\r";}
if (document.form1.spiritoftheunbrokenvow_box.checked){SWD+="<img src=box.gif>Spirit of the Unbroken Vow [Level 29]<br>\r";}
if (document.form1.endlessacid_box.checked){SWD+="<img src=box.gif>Endless Acid [Level 29]<br>\r";}
if (document.form1.entropicwhirlwind_box.checked){SWD+="<img src=box.gif>Entropic Whirlwind [Level 29]<br>\r";}
if (document.form1.prismaticstorm_box.checked){SWD+="<img src=box.gif>Prismatic Storm [Level 29]<br>\r";}
if (document.form1.formofthechimera_box.checked){SWD+="<img src=box.gif>Form of the Chimera [Level 29]<br>\r";}
if (document.form1.formofspringrenewal_box.checked){SWD+="<img src=box.gif>Form of Spring Renewal [Level 29]<br>\r";}
if (document.form1.formofthestarmetalwarrior_box.checked){SWD+="<img src=box.gif>Form of the Star Metal Warrior [Level 29]<br>\r";}
if (document.form1.formofthesoulserpent_box.checked){SWD+="<img src=box.gif>Form of the Soul Serpent [Level 29]<br>\r";}




if (document.form1.astralthunderblade_box.checked){SWD+="<img src=box.gif>Astral Thunderblade [FRPG; Level 29]<br>\r";}
if (document.form1.obliteratingblaze_box.checked){SWD+="<img src=box.gif>Obliterating Blaze [FRPG; Level 29]<br>\r";}
if (document.form1.vorpaldoom_box.checked){SWD+="<img src=box.gif>Vorpal Doom [FRPG; Level 29][reliable]<br>\r";}
if (document.form1.onefinalsacrifice_box.checked){SWD+="<img src=box.gif>One Final Sacrifice [FRPG; Level 29]<br>\r";}
if (document.form1.spreadthecorrosion_box.checked){SWD+="<img src=box.gif>Spread the Corrosion [FRPG; Level 29]<br>\r";}
if (document.form1.vestigeofthemasterofthehiddenflame_box.checked){SWD+="<img src=box.gif>Vestige of the Master of the Hidden Flame [AP; Level 29]<br>\r";}
if (document.form1.vestigeofzuriel_box.checked){SWD+="<img src=box.gif>Vestige of Zuriel [AP; Level 29]<br>\r";}
if (document.form1.echoesofvalor_box.checked){SWD+="<img src=box.gif>Echoes of Valor [FRPG; Level 29][reliable]<br>\r";}
if (document.form1.metamorphosisofspellflame_box.checked){SWD+="<img src=box.gif>Metamorphosis of Spellflame [FRPG; Level 29]<br>\r";}
if (document.form1.other29daily_box.checked){SWD+="<img src=box.gif>"+document.form1.other29daily.value+" [Level 29]:<br>\r"; }



SWD +="</ul><p>"; 

// the problem is not here




if (class_wizard)
 {
  SWD+="Reminder to Level "+total_levels+" Wizards: Each day (i.e., after extended rest), you prepare "; 
  if (total_levels<5){SWD+="one daily non-utility power and "; }
  else if (total_levels<9){SWD+="two daily non-utility powers and "; }
  else if (total_levels<20){SWD+="three daily non-utility powers and "; }
  else {SWD+="four daily non-utility powers and "; }
  if (total_levels<6){SWD+="one utility power from your spellbook.  "; }
  else if (total_levels<10){SWD+="two utility powers from your spellbook.  "; }
  else if (total_levels<12){SWD+="three utility powers from your spellbook.  "; }
  else if (total_levels<16){SWD+="four utility powers from your spellbook.  "; }
  else if (total_levels<22){SWD+="five utility powers from your spellbook.  "; }
  else if (total_levels<26){SWD+="six utility powers from your spellbook.  "; }
  else {SWD+="seven utility powers from your spellbook.  "; }
  if (total_levels>10){SWD+="Paragon path powers "; }
  if (total_levels>20){SWD+="and epic destiny powers "; }
  if (total_levels>10){SWD+="are in addition, and do not need to be prepared. "; }
  SWD+="<p>\r"; 
 }












if (race_human)
 {
  SWD +="Human<p><ul>"
  SWD +="<li>One extra at-will power from your class (already included)</li>\r"
  SWD +="<li>One bonus feat at 1st level (already included)</li>\r"
  SWD +="<li>One bonus skill from the skill class list (already included)</li>\r"
  SWD +="<li>+1 to fortitude, reflex, and will defenses</li>\r"
  SWD +="</ul>"
 }
if (race_dragonborn)
 {
  SWD +="Dragonborn<p><ul>"
  SWD +="<li>+2 Strength, +2 Charisma (already included)</li>\r"
  SWD +="<li>+2 History, +2 Intimidate</li>\r"
  SWD +="<li>Dragonborn Fury (when bloodied, +1 on attacks)</li>\r"
  SWD +="<li>Dragonborn Heritage (healing surge includes constitution bonus)</li>\r"
  SWD +="<li>Dragon Breath</li>\r"
  SWD +="</ul>"
 }
if (race_dwarf)
 {
  SWD +="Dwarf<p><ul>"
  SWD +="<li>+2 Constitution, +2 Wisdom (already included)</li>\r"
  
  SWD +="<li>Cast-Iron Stomach (+5 saves vs poison)</li>\r"
  SWD +="<li>Dwarven Resilience (second wind is minor rather than standard action)</li>\r"
  SWD +="<li>Dwarven Weapon Proficiency (throwing hammer, warhammer)</li>\r"
  SWD +="<li>Encumbered Speed</li>\r"
  SWD +="<li>Stand your Ground (forced moves are 1 square less; immediate save vs. being knocked prone)</li>\r"
  SWD +="</ul>"
 }
if (race_eladrin)
 {
  SWD +="Eladrin<p><ul>"
  SWD +="<li>+2 Dexterity, +2 Intelligence (already included)</li>\r"
  SWD +="<li>+2 Arcana, +2 History</li>\r"
  SWD +="<li>Eladrin Education (already included)</li>\r"
  SWD +="<li>Eladrin Will (+1 on will defense, +5 vs charms)</li>\r"
  SWD +="<li>Fey Origin</li>\r"
  SWD +="<li>Trance</li>\r"
  SWD +="<li>Fey Step</li>\r"
  SWD +="</ul>"
 }
if (race_elf)
 {
  SWD +="Elf<p><ul>"
  SWD +="<li>+2 Dexterity, +2 Wisdom (already included)</li>\r"
  SWD +="<li>+2 Nature, +2 Perception</li>\r"
  SWD +="<li>Elven Weapon Proficiency (longbow, shortbow)</li>\r"
  SWD +="<li>Fey Origin</li>\r"
  SWD +="<li>Group Awareness (allies within 5 squares get +1 on perception)</li>\r"
  SWD +="<li>Wild Step (ignore difficult terrain when shifting)</li>\r"
  SWD +="<li>Elven Accuracy (once/encounter, may reroll attack roll)</li>\r"
  SWD +="</ul>"
 }
if (race_halfelf)
 {
  SWD +="Half-Elf<p><ul>"
  SWD +="<li>+2 Constitution, +2 Charisma (already included)</li>\r"
  SWD +="<li>+2 Diplomacy, +2 Insight</li>\r"
  SWD +="<li>Dilettante -- at-will power from another class as encounter power</li>\r"
  SWD +="<li>Dual Heritage (may use feats etc. for humans or elves)</li>\r"
  SWD +="<li>Group Diplomacy (allies within 5 squares get +1 on diplomacy)</li>\r"
  SWD +="</ul>"
 }
if (race_halfling)
 {
  SWD +="Halfling<p><ul>"
  SWD +="<li>+2 Dexterity, +2 Charisma (already included)</li>\r"
  SWD +="<li>+2 Acrobatics, +2 Thievery</li>\r"
  SWD +="<li>Bold: +5 on saves vs fear</li>\r"
  SWD +="<li>Nimble Reaction: +2 on AC vs opportunity attacks</li>\r"
  SWD +="<li>Second Chance (once per encounter, if hit, force opponent to re-roll attack)</li>\r"
  SWD +="</ul>"
 }
if (race_tiefling)
 {
  SWD +="Tiefling<p><ul>"
  SWD +="<li>+2 Intelligence, +2 Charisma (already included)</li>\r"
  SWD +="<li>+2 Bluff, +2 Stealth</li>\r"
  SWD +="<li>Bloodhunt (+1 on attack rolls vs. bloodied foes)</li>\r"
  SWD +="<li>Fire Resistance (resist fire 5 + half your level)</li>\r"
  SWD +="<li>Infernal Wrath</li>\r"
  SWD +="</ul>"
 }

if (race_bugbear)
 {
   SWD+="Bugbear<p><ul>"
   SWD+="<li>+2 Strength, +2 Dexterity (already included)</li>\r"
   SWD+="<li>+2 Intimidate, +2 Stealth</li>\r"
   SWD+="<li>Oversized (see Monster Manual; talk with your referee about getting oversized weapons)</li>\r"
   SWD+="<li>Predatory Eye (see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_doppelganger)
 {
   SWD+="Doppelganger<p><ul>"
   SWD+="<li>+2 Intelligence, +2 Charisma (already included)</li>\r"
   SWD+="<li>+2 Bluff, +2 Insight</li>\r"
   SWD+="<li>Mental Defense (+1 will save)</li>\r"
   SWD+="<li>Change Shape (see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_drow)
 {
   SWD+="Drow<p><ul>"
   SWD+="<li>+2 Dexterity, +2 Charisma (already included)</li>\r"
   SWD+="<li>+2 Intimidate, +2 Stealth</li>\r"
   SWD+="<li>Trance</li>\r"
   SWD+="<li>Cloud of Darkness / Darkfire once per encounter (see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_bladeling)
 {
   SWD+="Bladeling<p><ul>"
   SWD+="<li>+2 Dexterity, +2 Wisdom (already included)</li>\r"
   SWD+="<li>+2 Intimidate</li>\r"
   if (feat_improvedrazorswarm){SWD+="<li>Improved Razor Swarm (damage 1d8, close burst 2) once per encounter (see Manual of the Planes)</li>\r"}
   else {SWD+="<li>Razor Swarm once per encounter (see Manual of the Planes)</li>\r"}
   SWD+="</ul>"
 }


if (race_deva)
 {
   SWD+="Deva<p><ul>"
   SWD+="<li>+2 Intelligence, +2 Wisdom (already included)</li>\r"
   SWD+="<li>+2 History, +2 Religion</li>\r"
   SWD+="<li>Astral Majesty</li>\r"
   SWD+="<li>Astral Resistance</li>\r"
   SWD+="<li>Immortal Origin</li>\r"
   SWD+="<li>Memory of a Thousand Lifetimes once per encounter</li>\r"
   SWD+="</ul>"
 }

if (race_halforc)
 {
   SWD+="Half-Orc<p><ul>"
   SWD+="<li>+2 Strength, +2 Dexterity (already included)</li>\r"
   SWD+="<li>+2 Endurance, +2 Intimidate</li>\r"
   SWD+="<li>Half-Orc Resilience</li>\r"
   SWD+="<li>Swift Charge</li>\r"
   SWD+="<li>Furious Assault once/encounter</li>\r"
   SWD+="</ul>"
 }

if (race_goliath)
 {
   SWD+="Goliath<p><ul>"
   SWD+="<li>+2 Strength, +2 Constitution (already included)</li>\r"
   SWD+="<li>+2 Athletics, +2 Nature</li>\r"
   SWD+="<li>Mountain's Tenacity (+1 will, included)</li>\r"
   SWD+="<li>Powerful Athlete</li>\r"
   SWD+="<li>Stone's Endurance once/encounter</li>\r"
   SWD+="</ul>"
 }

if (race_genasi)
 {
  x=5; 
  if (total_levels>10){x=10; }
  if (total_levels>20){x=15; }
   SWD+="Genasi<p><ul>"
   SWD+="<li>+2 Strength, +2 Intelligence (already included)</li>\r"
   SWD+="<li>+2 Endurance, +2 Nature</li>\r"
   SWD+="<li>Elemental Origin</li>\r"
   if (genasi_earthsoul){SWD+="<li>This genasi chose the earthsoul manifestation first.  This gives +1 on fortitude defense, +1 on saving throws, and the earthshock power.</li>\r"; }
   if (genasi_firesoul){SWD+="<li>This genasi chose the firesoul manifestation first.  This gives +1 on reflex defense, resist "+x+" fire, and the firepulse power.</li>\r"; }
   if (genasi_stormsoul){SWD+="<li>This genasi chose the stormsoul manifestation first.  This gives +2 on fortitude defense, resist "+x+" lightning, and the promise of storm power.</li>\r"; }
   if (genasi_watersoul){SWD+="<li>This genasi chose the watersoul manifestation first.  This gives the ability to breathe under water, +2 on saving throws against ongoing damage, and the swiftcurrent power.</li>\r"; }
   if (genasi_windsoul){SWD+="<li>This genasi chose the windsoul manifestation first.  This gives resist "+x+" cold and the windwalker power.</li>\r"; }
   if (feat_extramanifestationearthsoul){SWD+="<li>In earthsoul manifestation, the genasi instead has +1 on fortitude defense, +1 on saving throws, and the earthshock power.</li>\r"; }
   if (feat_extramanifestationfiresoul){SWD+="<li>In firesoul manifestation, the genasi instead has +1 on reflex defense, resist "+x+" fire, and the firepulse power.</li>\r"; }
   if (feat_extramanifestationstormsoul){SWD+="<li>In stormsoul manifestation, the genasi instead has +2 on fortitude defense, resist "+x+" lightning, and the promise of storm power.</li>\r"; }
   if (feat_extramanifestationwatersoul){SWD+="<li>In watersoul manifestation, the genasi instead has the ability to breathe under water, +2 on saving throws against ongoing damage, and the swiftcurrent power.</li>\r"; }
   if (feat_extramanifestationwindsoul){SWD+="<li>In windsoul manifestation, the genasi instead has resist "+x+" cold and the windwalker power.</li>\r"; }
   SWD+="</ul>"
 }

if (race_githyanki)
 {
   SWD+="Githyanki<p><ul>"
   SWD+="<li>+2 Constitution, +2 Intelligence (already included)</li>\r"
   SWD+="<li>+2 History</li>"
   SWD+="<li>Danger Sense (+2 initiative)</li>\r"
   SWD+="<li>+1 on will saves, +2 more vs. charm</li>"
   SWD+="<li>Telekinetic Leap (see Monster Manual)</li>\r"
   SWD+="<li></li>\r"
   SWD+="</ul>"
 }

if (race_githzerai)
 {
   SWD+="Githzerai<p><ul>"
   SWD+="<li>+2 Dexterity, +2 Wisdom (already included)</li>\r"
   SWD+="<li>+2 Acrobatics, +2 Athletics</li>\r"
   SWD+="<li>Danger Sense (+2 initiative)</li>\r"
   SWD+="<li>Iron Mind (see Monster Manual)</li>\r"
   SWD+="<li></li>\r"
   SWD+="</ul>"
 }

if (race_gnoll)
 {
   SWD+="Gnoll<p><ul>"
   SWD+="<li>+2 Constitution, +2 Dexterity (already included)</li>\r"
   SWD+="<li>+2 Intimidate</li>\r"
   SWD+="<li>Blood Fury  (see Monster Manual)</li>\r"; 
   SWD+="<li>Ferocious Charge</li>\r"
   SWD+="</ul>"
 }

if (race_gnome)
 {
   SWD+="Gnome<p><ul>"
   SWD+="<li>+2 Intelligence, +2 Charisma (already included)</li>\r"
   SWD+="<li>+2 Arcana, +2 Stealth</li>\r"
   SWD+="<li>Reactive Stealth (see Monster Manual)</li>\r"
   SWD+="<li>Fade Away (see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_goblin)
 {
   SWD+="Goblin<p><ul>"
   SWD+="<li>+2 Dexterity, +2 Charisma (already included)</li>\r"
   SWD+="<li>+2 Stealth, +2 Thievery</li>\r"
   SWD+="<li>Goblin Reflexes (+1 on reflex saves)</li>\r"
   SWD+="<li>Goblin Tactics (shift one square whenever a melee attack misses, at will, see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_hobgoblin)
 {
   SWD+="Hobgoblin<p><ul>"
   SWD+="<li>+2 Constitution, +2 Charisma (already included)</li>\r"
   SWD+="<li>+2 Athletics, +2 History</li>\r"
   SWD+="<li>Battle Ready (+2 on initiative)</li>\r"
   SWD+="<li>Hobgoblin Resilience (immediate saving throw, see Monster Manual)</li>\r"
   SWD+="<li></li>\r"
   SWD+="</ul>"
 }

if (race_kobold)
 {
   SWD+="Kobold<p><ul>"
   SWD+="<li>+2 Constitution, +2 Dexterity (already included)</li>\r"
   SWD+="<li>+2 Stealth, +2 Thievery</li>\r"
   SWD+="<li>Trap Sense (+2 on defense against traps)</li>\r"
   SWD+="<li>Shifty (shifting one square is a minor action; see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_minotaur)
 {
   SWD+="Minotaur<p><ul>"
   SWD+="<li>+2 Strength, +2 Constitution (already included)</li>\r"
   SWD+="<li>+2 Nature, +2 Perception</li>\r"
   SWD+="<li>Ferocity (free basic melee attack at 0&nbsp; hp before falling; see Monster Manual)</li>\r"
   SWD+="<li>Oversized (see Monster Manual; talk with your referee about getting oversized weapons)</li>\r"
   SWD+="<li>Goring Charge (see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_orc)
 {
   SWD+="Orc<p><ul>"
   SWD+="<li>+2 Strength, +2 Constitution (already included)</li>\r"
   SWD+="<li>Evidently no skill bonuses</li>\r"
   SWD+="<li>Running Charge (add 2 to charge speed; see Monster Manual)</li>\r"
   SWD+="<li>Warrior's Surge (see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_shadarkai)
 {
   SWD+="Shadar-Kai<p><ul>"
   SWD+="<li>+2 Dexterity, +2 Intelligence (already included)</li>\r"
   SWD+="<li>+2 Acrobatics, +2 Stealth</li>\r"
   SWD+="<li>Winterkin (+1 on fortitude defense)</li>\r"
   SWD+="<li>Shadow Jaunt (see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_shifterlongtooth)
 {
   SWD+="Longtooth Shifter<p><ul>"
   SWD+="<li>+2 Strength, +2 Wisdom (already included)</li>\r"
   SWD+="<li>+2 Athletics, +2 Endurance</li>\r"
   SWD+="<li>Longtooth Shifting (when bloodied; see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_shifterrazorclaw)
 {
   SWD+="Razorclaw Shifter<p><ul>"
   SWD+="<li>+2 Dexterity, +2 Wisdom (already included)</li>\r"
   SWD+="<li>+2 Acrobatics, +2 Stealth</li>\r"
   SWD+="<li>Razorclaw Shifting (when bloodied; see Monster Manual)</li>\r"
   SWD+="</ul>"
 }

if (race_warforged)
 {
   SWD+="Warforged (see Dragon 264 for feats, paths, etc.)<p><ul>"
   SWD+="<li>+2 Strength, +2 Constitution (already included)</li>\r"
   SWD+="<li>+2 Endurance, +2 on saves vs. ongoing damage</li>\r"
   SWD+="<li>Living Construct (see Monster Manual)</li>\r"
   SWD+="<li>Warforged Resolve (when bloodied, gain 3 + level/2 temporary hp; see Monster Manual)</li>\r"
   SWD+="<li>Warforged Mind: +1 on Will defense</li>\r"
   SWD+="<li>On death saving throws, take the better of yor die roll or 10.</li>\r"
   SWD+="<li>May be genderless or assume a male or female personality.</li>\r"
   SWD+="</ul>"
 }

if (race_other)
 {
  SWD+=document.form1.other_race_name.value+": Describe below:<p><img src=\"spellbar.gif\"><p>"; 
 }

//greenwood
if (frb_aglarond){SWD+="Player characters from Aglarond all know Elven, have perception as a class skill option, and gain +1 bonus to perception checks.<p>\r"; }
if (frb_akanul){SWD+="Player characters from Akanul gain an extra +2 resistance to cold, fire, and thunder, increasing to +3 at paragon tier and +5 at epic tiers.<p>\r"; }
if (frb_amn){SWD+="Player characters from Amn get Streetise and Thievery as class skills, and +1 on streetwise and thievery checks.<p>\r"; }
if (frb_baldursgate){SWD+="Player characters from Baldur's Gate get to choose one additional language, have streetwise as a class skill option, and get +2 on streetwise checks.<p>\r"; }
if (frb_calimshan){SWD+="Player characters from Calimshan get +4 on fire resistance, increasing to +7 at 11th level and +10 at 21st level.  They get +5 on endurance checks to resist the effects of thirst.<p>\r"; }
if (frb_chessenta){SWD+="Player characters from Chessenta get +1 on all rolls made during an extra action from a spent action point.<p>\r"; }
if (frb_cormyr){SWD+="Player characters from Cormyr all have insight as a class skill option, get a +2 bonus on insight checks, and get a +2 bonus on saves vs. fear.<p>\r"; }
if (frb_dalelands){SWD+="Player characters from the Dalelands can reroll any Nature check but must take the second result.  They also get +1 on initiative checks.<p>\r"; }
if (frb_dragoncoast){SWD+="Player characters from the Dragon Coast get to choose one additional language, and can reroll any insight check but must take the second result.<p>\r"; }
if (frb_durpar){SWD+="Player characters from Durpar get +2 on all perception checks.<p>\r"; }
if (frb_eastrift){SWD+="Player characters from the Deep Rift all know Deep Speech, have dungeoneering as a class skill option, and get +2 on dungeoneering checks.<p>\r"; }
if (frb_elfharrow){SWD+="Player characters from athletics and nature as class skills, and +1 on athletics and nature checks.<p>\r"; }
if (frb_grayvale){SWD+="Player characters from the Gray Vale get a bonus language of their choice, Nature as a class skill, and +2 on nature checks.<p>\r"; }
if (frb_greatdale){SWD+="Player characters from the Great Dale get arcana and nature as class skills, and +1 on nature and arcana checks.<p>\r"; }
if (frb_highimaskar){SWD+="Player characters from High Imskar can reroll any Arcana check, but must take the second roll.<p>\r"; }
if (frb_impiltur){SWD+="Player characters from Impiltur may add their wisdom score instead of their constitution score in determining initial hit points.<p>\r"; }
if (frb_luruar){SWD+="Player characters from Luruar get to choose one additional language, and can reroll any history checks but must take the second result.<p>\r"; }
if (frb_luskan){SWD+="Player characters from Luskan get stealth and thievery as class skills, and +1 on all stealth and thievery checks.<p>\r"; }
if (frb_moonshaeisles){SWD+="Player characters from the Moonshae Isles all know Elven. amd get +2 on saves against charm and fear effects.<p>\r"; }
if (frb_mythdrannor){SWD+="Player characters from Myth Drannor get a free re-roll of a failed saving throw against a charm effect once per encounter.<p>\r"; }
if (frb_narfell){SWD+="Player characters from Narfell get endurance as a class skill, and +3 on endurance checks.<p>\r"; }
if (frb_nelantherisles){SWD+="Player characters from the Nelanther Isles get acrobatics and athletics as class skills, and +1 on acrobatics and athletics checks.<p>\r"; }
if (frb_netheril){SWD+="Player characters from Netheril get arcana and history as class skills, and +1 on arcana and history checks.<p>\r"; }
if (frb_thay){SWD+="Player characters from Thay can use intelligence instead of constitution for starting hit points.<p>\r"; }
if (frb_tymanther){SWD+="Player characters from Tymanther all have athletics as a class skill option, and get a +2 bonus on athletics checks.<p>\r"; }
if (frb_vilhonwilds){SWD+="Player characters from the Vilhon Wilds can reroll any dungeoneering check, but must keep the second result.  They get +1 on initiative.<p>\r"; }
if (frb_waterdeep){SWD+="Player characters from Waterdeep get to choose one additional language, have diplomacy as a class skill option, and get a +2 bonus to diplomacy checks.<p>\r"; }
if (frb_wheloon){SWD+="Player characters from Wheloon get thievery as a class skill option, and get a +2 bonus to thievery checks.<p>\r"; }



if (class_cleric)
 {
  SWD +="Cleric<p><ul>"
  SWD +="<li>Channel Divinity -- Divine Fortune</li>\r"
  stringy="1d10";
  if (total_levels>=5){stringy="2d10";}
  if (total_levels>=11){stringy="3d10";}
  if (total_levels>=15){stringy="4d10";}
  if (total_levels>=21){stringy="5d10";}
  if (total_levels>=25){stringy="6d10";}
  stringy="(push 3+charisma modifier and damage "+stringy+"+wisdom modifier at level "+total_levels+")";

  SWD +="<li>Channel Divinity -- Turn Undead "+stringy+"</li>\r"
  SWD +="<li>Healer's Lore (add your wisdom bonus to healing granted by a power)</li>\r"
  stringy="1d6";
  if (total_levels>=6){stringy="2d6";}
  if (total_levels>=11){stringy="3d6";}
  if (total_levels>=16){stringy="4d6";}
  if (total_levels>=21){stringy="5d6";}
  if (total_levels>=26){stringy="6d6";}
  stringy="(target spends healing surge and gains an additional"+stringy+" at level "+total_levels+")";
  SWD +="<li>Healing Word "+stringy+"</li>\r"
  if (!feat_alchemistswap){SWD +="<li>Ritual Casting [bonus feat, not listed above]</li>\r"}
  SWD +="</ul>"
 }
if (class_fighter)
 {
  SWD +="Fighter<p><ul>"
  SWD +="<li>Combat Challenge (mark enemy)</li>\r"
  SWD +="<li>Combat Superiority (bonus on opportunity attacks equal to your wisdom modifier, and an enemy struck by opportunity attack stops moving)</li>\r"
  if (fighter_onehand){SWD +="<li>This fighter chose the one-handed style [already included].</li>\r"}
  if (fighter_twohand){SWD +="<li>This fighter chose the two-handed style [already included].</li>\r"}
  if (fighter_battlerager){SWD +="<li>This fighter chose the battlerager style [remember the free temporary hit points and accompanying combat bonuses].</li>\r"}
  if (fighter_tempesttechnique){SWD +="<li>This fighter chose the tempest technique [free Two Weapon Defense feat, NOT listed above; remember the +1 AC and reflex bonuses when holding a weapon in each hand.]</li>\r"}
  SWD +="</ul>"
 }

if (class_paladin)
 {
  SWD +="Paladin<p><ul>"
  SWD +="<li>Channel Divinity -- Divine Strength (add your strength modifier to damage on your next attack)</li>\r"
  SWD +="<li>Channel Divinity -- Divine Mettle (target makes saving throw with your charisma modifier as a bonus)</li>\r"
  SWD +="<li>Divine Challenge (mark target)</li>\r"
  SWD +="<li>Lay On Hands (sacrifice one of your healing surges to enable another to heal as if they had spent a surge)</li>\r"
  SWD +="</ul>"
 }


if (class_ranger)
 {
  SWD +="Ranger<p><ul>"
  if (ranger_archer){SWD +="<li>This ranger chose the archer style.  This gives the equivalent of the defensive mobility feat [not listed above].</li>\r"}
  if (ranger_twoblade){SWD +="<li>This ranger chose the two-blade style.  This gives the equivalent of the toughness feat [not listed above].</li>\r"}
  if (ranger_beastmaster){SWD +="<li>This ranger chose the beastmaster class feature.  Beastmasters give up Prime Shot.</li>\r"}
  SWD +="<li>Hunter's Quarry "+HuntersQuarryDamage()+" [minor action]</li>\r"
  if (!ranger_beastmaster){SWD +="<li>Prime Shot</li>\r"}
  SWD +="</ul>"
 }

if (class_rogue)
 {
  SWD +="Rogue<p><ul>"
  SWD +="<li>First Strike</li>\r"
  SWD +="<li>Rogue Weapon Talent</li>\r"
  if (rogue_artfuldodger){SWD +="<li>This rogue chose the artful dodger style. Remember to add your charisma modifier to AC against opportunity attacks.</li>\r"}
  if (rogue_brutalscoundrel){SWD +="<li>This rogue chose the brutal scoundrel style.  Remember to add your strength modifier to sneak attack damage.</li>\r"}
  if (rogue_ruthlessruffian){SWD +="<li>This rogue chose the ruthless ruffian style.  Remember to add your strength modifier to damage using clubs or maces to attacks that rattle.</li>\r"}
  if (total_levels<=10)
   {
    if (feat_backstabber){stringy="[+2d8 at level "+total_levels+"]"; }
     else {stringy="[+2d6 at level "+total_levels+"]"; }
   }
  else if (total_levels<=20)
   {
    if (feat_backstabber){stringy="[+3d8 at level "+total_levels+"]"; }
     else {stringy="[+3d6 at level "+total_levels+"]"; }
   }
  else
   {
    if (feat_backstabber){stringy="[+5d8 at level "+total_levels+"]"; }
     else {stringy="[+5d6 at level "+total_levels+"]"; }
   }
  SWD +="<li>Sneak Attack "+stringy+" [once per round with combat advantage]</li>\r"
  SWD +="</ul>"
 }

if (class_warlock)
 {
  SWD +="Warlock<p><ul>"
  SWD +="<li>Eldritch Blast</li>\r"
  if (warlock_fey){SWD +="<li>This warlock's pact is fey, with the Misty Step pact boon.</li>\r"}
  if (warlock_infernal){SWD +="<li>This warlock's pact is infernal, with the Dark One's Blessing pact boon.</li>\r"}
  if (warlock_star){SWD +="<li>This warlock's pact is to the far realm / stars, with the Fate of the Void pact boon.</li>\r"}
  if (warlock_dark){SWD +="<li>This warlock's pact is dark, with the Darkspiral Aura pact boon.</li>\r"}
  if (warlock_vestige){SWD +="<li>This warlock's pact is vestige, with variable pact boons.</li>\r"}
  if (warlock_other){SWD +="<li>This warlock's pact is to the "+document.form1.otherwarlockpact.value+" with some pact boon.</li>\r"}
  SWD +="<li>Prime Shot (+1 on ranged attacks if no ally is nearer)</li>\r"
  SWD +="<li>Shadow Walk (if you move at least 3 squares, gain concealment until the end of your next turn)</li>\r"
  SWD +="<li>Warlock's Curse (extra damage to any creature you have cursed during this encounter)</li>\r"
  SWD +="</ul>"
 }

if (class_warlord)
 {
  SWD +="Warlord<p><ul>"
  SWD +="<li>Combat Leader (+2 initiative for self and all allies within ten squares)</li>\r"
  if (warlord_inspiring){SWD +="<li>This warlord chose the inspiring presence.  Any ally in sight who spends an action point to attack regains hit points equal to half your level plus your charisma modifier.</li>\r"}
  if (warlord_tactical){SWD +="<li>This warlord chose the tactical presence.  Any ally in sight who spends an action point to attack gets a bonus on attack roll equal to half your intelligence modifier.</li>\r"}
  if (warlord_bravura){SWD +="<li>This warlord chose the bravura presence.  Any ally in sight who spends an action point to attack andhits can make a basic attack or move as a free action</li>\r"}
  if (warlord_resourceful){SWD +="<li>This warlord chose the resourceful presence.  Any ally in sight who spends an action point to attack and hits does extra damage equal to half your level plus your charisma modifier.</li>\r"}
  stringy="1d6";
  if (total_levels>=6){stringy="2d6";}
  if (total_levels>=11){stringy="3d6";}
  if (total_levels>=16){stringy="4d6";}
  if (total_levels>=21){stringy="5d6";}
  if (total_levels>=26){stringy="6d6";}
  stringy="(target spends healing surge and gains an additional"+stringy+" at level "+total_levels+")";
  SWD +="<li>Inspiring Word "+stringy+"</li>\r"
  SWD +="</ul>"
 }

if (class_wizard)
 {
  SWD +="Wizard<p><ul>"
  if (orbofimposition){SWD +="<li>This wizard chose the Orb of Imposition mastery.  Remember the option to give a penalty on saving throws equal to your wisdom modifier, or maintain an at-will power for an extra turn.</li>\r"}
  if (staffofdefense){SWD +="<li>This wizard chose the Staff of Defense mastery.  In addition to a +1 AC bonus, you can choose a bonus to your AC equal to your constitution modifier as an immediate interrupt, even after damage has been announced.</li>\r"}
  if (wandofaccuracy){SWD +="<li>This wizard chose the Wand of Accuracy mastery.  Remember your once-per-encounter dexterity modifier bonus on an attack roll.</li>\r"}
  if (orbofdeception){SWD +="<li>This wizard chose the Orb of Deception mastery.  Remember your once-per-encounter opportunity to target another enemy with an illusion power, with an attack bonus equal to your charisma modifier.</li>\r"}
  if (tomeofbinding){SWD +="<li>This wizard chose the Tome of Binding mastery.  Remember your once-per-encounter opportunity to give your summoned creatures a bonus on damage rolls equal to your constitution modifier.</li>\r"}
  if (tomeofreadiness){SWD +="<li>This wizard chose the Tome of Readiness mastery.  You can store a spare wizard encounter power in your tome for emergency use.</li>\r"}
  SWD +="<li>Cantrips</li>\r"
  if (!feat_alchemistswap){SWD +="<li>Ritual Casting [bonus feat, not listed above]</li>\r"}
  SWD +="<li>Spellbook</li>\r"
  SWD +="</ul>"
 }

if (class_swordmage)
 {
  SWD +="Swordmage<p><ul>"
  if (swordmage_assault){SWD +="<li>This swordmage chose the Aegis of Assault.</li>\r"}
  if (swordmage_shielding){SWD +="<li>This swordmage chose the Aegis of Shielding.</li>\r"}
  if (swordmage_ensnarement){SWD +="<li>This swordmage chose the Aegis of Ensnarement.</li>\r"}
  SWD +="<li>Swordbond</li>\r"
  SWD +="<li>Swordmage Warding [+3 on AC assumes blade in one hand, other hand free; wielding a blade without the other hand free gives +1 on AC]</li>\r"
  SWD +="</ul>"
 }

if (class_avenger)
 {
  SWD +="Avenger<p><ul>"    
  if (avenger_pursuit){SWD +="<li>This avenger chose the Censure of Pursuit option.</li>\r"}
  if (avenger_retribution){SWD +="<li>This avenger chose the Censure of Retribution option.</li>\r"}
  SWD +="<li>Channel Divinity</li>\r"
  SWD +="<li>Oath of Enmity</li>\r"
  ph2class();
  SWD +="</ul>"
 }

if (class_barbarian)
 {
  SWD +="Barbarian<p><ul>"
  if (barbarian_rageblood){SWD +="<li>This barbarian chose the Rageblood Vigor feral might option.</li>\r"}
  if (barbarian_thaneborn){SWD +="<li>This barbarian chose the Thaneborn Triumph feral might option.</li>\r"}
  SWD +="<li>Barbarian Agility</li>\r"
  SWD +="<li>Rage</li>\r"
  SWD +="<li>Rampage</li>\r"
  ph2class();
  SWD +="</ul>"
 }

if (class_bard)
 {
  SWD +="Bard<p><ul>"
  if (bard_cunning){SWD +="<li>This bard chose the Virtue of Cunning option; usable once/round.</li>\r"}
  if (bard_valor){SWD +="<li>This bard chose the Virtue of Valor option; usable once/round.</li>\r"}
  if (bard_prescience){SWD +="<li>This bard chose the Virtue of Prescience option (Arcane Power); usable once/encounter.</li>\r"}
  SWD +="<li>Bardic Training</li>\r"
  SWD +="<li>Majestic Word</li>\r"
  SWD +="<li>Sorry -- I could not program multiclass versatility!</li>\r"
  SWD +="<li>Skill Versatility</li>\r"
  SWD +="<li>Song of Rest</li>\r"
  SWD +="<li>Words of Friendship</li>\r"
  SWD +="<li>Ritual Caster  [bonus feat, not listed above]</li>\r";
  ph2class();
  SWD +="</ul>"
 }

if (class_druid)
 {
  SWD +="Druid<p><ul>"
  if (druid_guardian){SWD +="<li>This druid chose the Guardian primal aspect.</li>\r"}
  if (druid_predator){SWD +="<li>This druid chose the Predator primal aspect.</li>\r"}
  SWD +="<li>Balance of Nature</li>\r"
  SWD +="<li>Ritual Casting --  [bonus feat, not listed above; the ritual book can take most any form]</li>\r"
  SWD +="<li>Wild Shape</li>\r"
  ph2class();
  SWD +="</ul>"
 }

if (class_invoker)
 {
  SWD +="Invoker<p><ul>"
  if (invoker_preservation){SWD +="<li>This invoker chose the Covenant of Preservation.</li>\r"}
  if (invoker_wrath){SWD +="<li>This invoker chose the Covernant of Wrath.</li>\r"}
  SWD +="<li>Channel Divinity</li>\r"
  SWD +="<li>Ritual Caster [bonus feat, not listed above]</li>\r"
  ph2class();
  SWD +="</ul>"
 }

if (class_shaman)
 {
  SWD +="Shaman<p><ul>"
  if (shaman_protector){SWD +="<li>This shaman chose the Protector Spirit option.</li>\r"}
  if (shaman_stalker){SWD +="<li>This shaman chose the Stalker Spirit option.</li>\r"}
  SWD +="<li>Healing Spirt</li>\r"
  SWD +="<li>Speak with Spirt</li>\r"
  ph2class();
  SWD +="</ul>"
 }

if (class_sorcerer)
 {
  SWD +="Sorcerer<p><ul>"
  if (sorcerer_dragonsoul){SWD +="<li>This sorcerer chose the Dragon Magic option -- draconic power, draconic resilience, dragon soul, scales of the dragon.</li>\r"}
  if (sorcerer_wildmagic){SWD +="<li>This sorcerer chose the Wild Magic option -- chaos burst, chaos power, unfettered power, wild soul.</li>\r"}
  if (sorcerer_stormmagic){SWD +="<li>This sorcerer chose the Storm Magic option -- storm power, storm soul, storm's embrace.</li>\r"}
  if (sorcerer_cosmicmagic){SWD +="<li>This sorcerer chose the Cosmic Magic option -- cosmic persistence, cosmic power, soul of the cosmic cycle.</li>\r"}
//  SWD+="Ritual caster [bonus feat, not listed above]</li>\r";
  ph2class();
  SWD +="</ul>"
 }

if (class_warden)
 {
  SWD +="Warden<p><ul>"
  if (warden_earthstrength){SWD +="<li>This warden chose the Earthstrength might option.</li>\r"}
  if (warden_wildblood){SWD +="<li>This warden chose the Wildblood might option.</li>\r"}
  SWD +="<li>Font of Life</li>\r"
  SWD +="<li>Nature's Wrath</li>\r"
  ph2class();
  SWD +="</ul>"
 }


if (class_other){SWD+=document.form1.other_class_name.value+": Details here<p><img src=\"spellbar.gif\"><p>"; }


stringy="";
if (feat_sharedspeed){stringy="+1 [shared speed]";}


if (fam_bat)
 {
  SWD+="<p>Familiar: Bat<ul>Blindsight 5; Speed 2"+stringy+" fly 6"+stringy+" [hover]<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to perception and stealth checks </li>\r"
  SWD+="<p></ul>Active Benefits: See the Unseen [minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_bookimp)
 {
  SWD+="<p>Familiar: Book Imp<ul>Speed 5"+stringy+" fly 3"+stringy+" [hover]<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to arcana and history checks </li>\r"
  SWD+="<li>You can read and speak Infernal</li>\r"
  SWD+="<li>Resist fire 5, or increase by 2 if you already have resist fire; increase by 2 more if bloodied</li>\r"
  SWD+="<p></ul>Active Benefits: Deceptive move [minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_bounddemon)
 {
  SWD+="<p>Familiar: Bound Demon<ul>Speed 5"+stringy+" fly 6"+stringy+" [hover]<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to Intimidate checks </li>\r"
  SWD+="<li>You can read and speak Abyssal</li>\r"
  SWD+="<p></ul>Active Benefits: Alchemical synergy [1/encounter]";
  ff();SWD+="</ul><p>"
 }

if (fam_cat)
 {
  SWD+="<p>Familiar: Cat<ul>Low-light vision; Speed 6"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to Acrobatics checks , and can make an acrobatics check to reduce damage from a fall even if you are untrained</li>\r"
  SWD+="<p></ul>Active Benefits: Independent spirit; Silent predator";
  ff();SWD+="</ul><p>"
 }

if (fam_crafterhomunculus)
 {
  SWD+="<p>Familiar: Crafter Homunculus<ul>Speed 5"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to arcana checks </li>\r"
  SWD+="<li>+2 bonus to rituals in the creation category</li>\r"
  SWD+="<p></ul>Active Benefits: Blood Feast";
  ff();SWD+="</ul><p>"
 }

if (fam_dragonling)
 {
  SWD+="<p>Familiar: Dragonling<ul>5"+stringy+" fly 6"+stringy+" [hover]<p>Constant Benefits:<ul>";
  SWD+="<li>You can read and speak draconic</li>\r"
  SWD+="<li>Additional hp when spend a healing surge</li>\r"
  SWD+="<p></ul>Active Benefits: Dragon's breath [1/encounter]";
  ff();SWD+="</ul><p>"
 }

if (fam_falcon)
 {
  SWD+="<p>Familiar: Falcon<ul>2"+stringy+" fly 6"+stringy+" [hover]<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus on perception checks </li>\r"
  SWD+="<li>+2 bonus to all defenses against opportunity attacks</li>\r"
  SWD+="<p></ul>Active Benefits: Hunting falcon [1/encounter]; Soaring spirit";
  ff();SWD+="</ul><p>"
 }

if (fam_owl)
 {
  SWD+="<p>Familiar: Owl<ul>Low-light vision; Speed 2"+stringy+" fly 6"+stringy+" [hover]<p>Constant Benefits:<ul>";
  SWD+="<li>Owl's Counsel: Add 1d4 to all perception and insight checks</li>\r"
  SWD+="<p></ul>Active Benefits: Owl's eyes [standard action]";
  ff();SWD+="</ul><p>"
 }

if (fam_rat)
 {
  SWD+="<p>Familiar: Rat<ul>Speed 6"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to stealth checks </li>\r"
  SWD+="<p></ul>Active Benefits: Rat's cunning";
  ff();SWD+="</ul><p>"
 }

if (fam_raven)
 {
  SWD+="<p>Familiar: Raven<ul>Low-light vision; Speed 2"+stringy+" fly 6"+stringy+" [hover]<p>Constant Benefits:<ul>";
  SWD+="<li>+4 bonus to perception checks to find hidden objects</li>\r"
  SWD+="<p></ul>Active Benefits: Raven's speech";
  ff();SWD+="</ul><p>"
 }

if (fam_serpent)
 {
  SWD+="<p>Familiar: Serpent<ul>Speed 6"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to bluff checks </li>\r"
  SWD+="<li>When you shift, you can ignore 1 square of difficult terrain</li>\r"
  SWD+="<p></ul>Active Benefits: Serpent's startle [1/encounter, minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_spider)
 {
  SWD+="<p>Familiar: Spider<ul>Speed 4"+stringy+" climb 4"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to climb checks</li>\r"
  SWD+="<li>Enemies take =1 penalty to arcane powers that immobilize / slow </li>\r"
  SWD+="<p></ul>Active Benefits: Spider's web [minor action]";
  ff();SWD+="</ul><p>"
 }




if (fam_arcaneeye)
 {
  SWD+="<p>Familiar: Arcane Eye [Dragon 374]<ul>Low light vision; speed fly 6"+stringy+" [hover]<p>Constant Benefits:<ul>";
  SWD+="<li>+2 to perception checks </li>\r"
  SWD+="<li>+2 to skill bonuses for scrying rituals</li>\r"
  SWD+="<p></ul>Active Benefits: See All [1/encounter]";
  ff();SWD+="</ul><p>"
 }

if (fam_badger)
 {
  SWD+="<p>Familiar: Badger [Dragon 374]<ul>Speed 5"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 to intimidate checks </li>\r"
  SWD+="<li>+1 to damage rolls when bloodied; +2 at 1th level, +3 at 21st level</li>\r"
  SWD+="<p></ul>Active Benefits: Devoted Minion";
  ff();SWD+="</ul><p>"
 }

if (fam_canineconstruct)
 {
  SWD+="<p>Familiar: Canine Construct [Dragon 374]<ul>Speed 7"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to athletics checks </li>\r"
  SWD+="<li>+2 bonus to skill checks for warding rituals</li>\r"
  SWD+="<p></ul>Active Benefits: Tenacious Guard";
  ff();SWD+="</ul><p>"
 }

if (fam_disembodiedhand)
 {
  SWD+="<p>Familiar: Disembodied Hand [Dragon 374]<ul>Speed 6"+stringy+" climb 2"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>Can retrieve / stow an item as a free action instead of a minor action</li>\r"
  SWD+="<p></ul>Active Benefits: Agile Digits";
  ff();SWD+="</ul><p>"
 }

if (fam_firelizard)
 {
  SWD+="<p>Familiar: Fire Lizard [Dragon 374]<ul>Low-light vision; speed 6"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus on athletics and endurance checks </li>\r"
  SWD+="<li>Resist fire 5, or increase by 2 if you already have resist fire; increase by 2 more if bloodied</li>\r"
  SWD+="<p></ul>Active Benefits: Lizard is immune to fire";
  ff();SWD+="</ul><p>"
 }

if (fam_lightninglizard)
 {
  SWD+="<p>Familiar: Lightning Lizard [Dragon 374]<ul>Low-light vision; speed 6"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus on acrobatics and athletics checks </li>\r"
  SWD+="<li>Resist lightning 5, or increase by 2 if you already have resist lightning; increase by 2 more if bloodied</li>\r"
  SWD+="<p></ul>Active Benefits: Lizard is immune to lightning";
  ff();SWD+="</ul><p>"
 }

if (fam_ooze)
 {
  SWD+="<p>Familiar: Ooze [Dragon 374]<ul>Tremorsense 5; speed 5"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 to dungeoneering checks </li>\r"
  SWD+="<li>Resist acid 5.  If already acid resistant, increase it by 2.</li>\r"
  SWD+="<p></ul>Active Benefits: Oze malleability";
  ff();SWD+="</ul><p>"
 }

if (fam_parrot)
 {
  SWD+="<p>Familiar: Parrot [Dragon 374]<ul>Low-light vision; speed 2"+stringy+" fly 5"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to dipomacy and streetwise checks </li>\r"
  SWD+="<p></ul>Active Benefits: Parrot's speech";
  ff();SWD+="</ul><p>"
 }

if (fam_rootling)
 {
  SWD+="<p>Familiar: Rootling [Dragon 374]<ul>Speed 6"+stringy+", climb 4"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to nature checks </li>\r"
  SWD+="<li>Forest walk</li>\r"
  SWD+="<p></ul>Active Benefits: Rootling Camouflage";
  ff();SWD+="</ul><p>"
 }

if (fam_scouthomunculus)
 {
  SWD+="<p>Familiar: Scout Homunculus [Dragon 374]<ul>Low-light vision; speed 6"+stringy+" climb 4"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to stealth </li>\r"
  SWD+="<li>+2 bonus to scrying rituals</li>\r"
  SWD+="<p></ul>Active Benefits: Glamered Scout";
  ff();SWD+="</ul><p>"
 }

if (fam_skull)
 {
  SWD+="<p>Familiar: Skull [Dragon 374]<ul>Speed 6"+stringy+", fly 3"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to arcana and intimidate checks </li>\r"
  SWD+="<p></ul>Active Benefits: Skull's gaze [1/encounter]";
  ff();SWD+="</ul><p>"
 }

if (fam_toad)
 {
  SWD+="<p>Familiar: Toad [Dragon 374]<ul>Speed fly 4"+stringy+", hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to endurance checks </li>\r"
  SWD+="<li>+2 bonus to healing surge value</li>\r"
  SWD+="<p></ul>Active Benefits: Toad's Healing [1/encounter]";
  ff();SWD+="</ul><p>"
 }

if (fam_weasel)
 {
  SWD+="<p>Familiar: Weasel [Dragon 374]<ul>Low-light vision; speed 6"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to acrobatics and bluff checks </li>\r"
  SWD+="<p></ul>Active Benefits: Silent Predator / Weasel's Sleekness";
  ff();SWD+="</ul><p>"
 }

if (fam_airmephit)
 {
  SWD+="<p>Familiar: Air Mephit [Dragon 374]<ul>Speed 4"+stringy+", fly 7"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 to bluff checks [add to above</li>\r"
  SWD+="<li>You can read and speak primordial]</li>\r"
  SWD+="<li>Resist lightning 5, or increase by 2 if you already have resist lightning</li>\r"
  SWD+="<p></ul>Active Benefits: Form of Air [minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_arcanewisp)
 {
  SWD+="<p>Familiar: Arcane Wisp [Dragon 374]<ul>Speed fly 8"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to stealth checks </li>\r"
  SWD+="<li>When you teleport, add +1 to the distance you teleport</li>\r"
  SWD+="<p></ul>Active Benefits: Wisp's Escape";
  ff();SWD+="</ul><p>"
 }

if (fam_beholderkin)
 {
  SWD+="<p>Familiar: Beholder Kin [Dragon 374]<ul>Low-light vision; speed fly "+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to perception checks </li>\r"
  SWD+="<li>You can read and speak Deep Speech</li>\r"
  SWD+="<p></ul>Active Benefits: Beholderkin Eye Ray [1/encounter]";
  ff();SWD+="</ul><p>"
 }

if (fam_blackspawndarkling)
 {
  SWD+="<p>Familiar: Blackspawn Darkling [Dragon 374]<ul>Darkvision; speed 8"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to stealth checks </li>\r"
  SWD+="<li>You can read and speak Draconic</li>\r"
  SWD+="<li>Resist acid 5, or increase by 2 if you already have resist acid</li>\r"
  SWD+="<p></ul>Active Benefits: Blackspawn Stealth";
  ff();SWD+="</ul><p>"
 }

if (fam_bluespawnnimblespark)
 {
  SWD+="<p>Familiar: Bluespawn Nimblespark [Dragon 374]<ul>Low-light vision; speed 6"+stringy+", fly 6"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to athletics and nature checks </li>\r"
  SWD+="<li>You can read and speak draconic</li>\r"
  SWD+="<li>Resist lightning 5, or increase by 2 if you already have resist lightning</li>\r"
  SWD+="<p></ul>Active Benefits: Bluespawn Shock";
  ff();SWD+="</ul><p>"
 }

if (fam_earthmephit)
 {
  SWD+="<p>Familiar: Earth Mephit [Dragon 374]<ul>Speed 5"+stringy+", fly 4"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to bluff and endurance checks </li>\r"
  SWD+="<li>You can read and speak primordial</li>\r"
  SWD+="<li>When you would be pushed, puled or slid, reduce distance by 1</li>\r"
  SWD+="<p></ul>Active Benefits: Form of Earth [1/encounter, minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_firemephit)
 {
  SWD+="<p>Familiar: Fire Mephit [Dragon 374]<ul>Speed 5"+stringy+", fly 6"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to bluff checks </li>\r"
  SWD+="<li>You can read and speak primordial</li>\r"
  SWD+="<li>Resist fire 5, or increase by 2 if you already have resist fire</li>\r"
  SWD+="<p></ul>Active Benefits: Form of Fire [minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_grayspawnshortfang)
 {
  SWD+="<p>Familiar: Grayspawn Shortfang [Dragon 374]<ul>Low-light vision; senses 7"+stringy+" fly 6"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to arcana and intimidate checks </li>\r"
  SWD+="<li>You can read and speak draconic</li>\r"
  SWD+="<li>Resist acid 5, or increase by 2 if you already have resist acid</li>\r"
  SWD+="<p></ul>Active Benefits: Grayspawn Toughness";
  ff();SWD+="</ul><p>"
 }

if (fam_greenspawnbanespike)
 {
  SWD+="<p>Familiar: Greenspawn Banespike [Dragon 374]<ul>Low-light vision; senses 8"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to bluff checks </li>\r"
  SWD+="<li>You can read and speak draconic</li>\r"
  SWD+="<li>Resist poison 5, or increase by 2 if you already have resist poison</li>\r"
  SWD+="<p></ul>Active Benefits: Greenspawn's Diversion [1/encounter, minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_icemephit)
 {
  SWD+="<p>Familiar: Ice Mephit [Dragon 374]<ul>Speed 5"+stringy+", fly 4"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to bluff checks </li>\r"
  SWD+="<li>You can read and speak primordial</li>\r"
  SWD+="<li>Resist cold 5, or increase by 2 if you already have resist cold</li>\r"
  SWD+="<p></ul>Active Benefits: Form of Ice [1/encounter, minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_rakshasaclaw)
 {
  SWD+="<p>Familiar: Rakshasa Claw [Dragon 374]<ul>Speed 7"+stringy+", climb 3"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to arcana checks </li>\r"
  SWD+="<li>+2 to insight to recognize illusions</li>\r"
  SWD+="<li>Can retrieve / stow an item as a free action rather than a minor action</li>\r"
  SWD+="<p></ul>Active Benefits: Agile Digits";
  ff();SWD+="</ul><p>"
 }

if (fam_redspawnspitfire)
 {
  SWD+="<p>Familiar: Redspawn Spitfire [Dragon 374]<ul>Low-light vision; speed 6"+stringy+"; fly 5"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to intimidate checks </li>\r"
  SWD+="<li>You can read and speak draconic</li>\r"
  SWD+="<li>Resist fire 5, or increase by 2 if you already have resist fire</li>\r"
  SWD+="<p></ul>Active Benefits: Redspawn Toughness";
  ff();SWD+="</ul><p>"
 }

if (fam_stonefowl)
 {
  SWD+="<p>Familiar: Stone Fowl [Dragon 374]<ul>Speed 5"+stringy+", fly 2"+stringy+"<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to dungeoneering checks </li>\r"
  SWD+="<li>Resist poison 5, or increase by 2 if you already have resist poison</li>\r"
  SWD+="<p></ul>Active Benefits: Cockatrice's Defense [1/encounter]";
  ff();SWD+="</ul><p>"
 }

if (fam_whitespawnsnowstepper)
 {
  SWD+="<p>Familiar: Whitespawn Snowstepper [Dragon 374]<ul>Low-light vision; speed 7"+stringy+" ice walk, fly 3"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>You can read and speak draconic</li>\r"
  SWD+="<li>Ice walk</li>\r"
  SWD+="<li>Resist cold 5, or increase by 2 if you already have resist cold</li>\r"
  SWD+="<p></ul>Active Benefits: Whitespawn Minion";
  ff();SWD+="</ul><p>"
 }

if (fam_blazingskull)
 {
  SWD+="<p>Familiar: Blazing Skull [Dragon 374]<ul>Speed fly 10"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to arcana and stealth checks </li>\r"
  SWD+="<li>Resist fire 5, or increase by 2 if you already have resist fire</li>\r"
  SWD+="<p></ul>Active Benefits: Skull's Gaze [1/encounter]; Fire Light [minor action]";
  ff();SWD+="</ul><p>"
 }

if (fam_chaosshard)
 {
  SWD+="<p>Familiar: Chaos Shard [Dragon 374]<ul>Blindsight 3; speed fly 6"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to arcana checks </li>\r"
  SWD+="<li>+2 bonus to save vs. being dominated</li>\r"
  SWD+="<p></ul>Active Benefits: Chaos Echo [1/encounter]";
  ff();SWD+="</ul><p>"
 }

if (fam_gibberingpet)
 {
  SWD+="<p>Familiar: Gibbering Pet [Dragon 374]<ul>All-around vision; speed 4"+stringy+", fly 6"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>Roll dice after each extended rest to determine which language you know, and which two skill bonus you get</li>\r"
  SWD+="<p></ul>Active Benefits: Gibbeing Utterances";
  ff();SWD+="</ul><p>"
 }

if (fam_shadowincarnate)
 {
  SWD+="<p>Familiar: Shadow Incarnate [Dragon 374]<ul>Darkvision; speed 8"+stringy+", fly 8"+stringy+" hover<p>Constant Benefits:<ul>";
  SWD+="<li>+2 bonus to stealth checks </li>\r"
  SWD+="<li>You gain darkvision</li>\r"
  SWD+="<p></ul>Active Benefits: Shadow Shroud; Shadowcast [1/encounter, minor action]";
  ff();SWD+="</ul><p>"
 }




if (paragon_angelicavenger)
 {
  SWD+="<p>Angelic Avenger<p><ul>"; 
  SWD+="<li>Angelic Action [Level 11]</li>\r"; 
  SWD+="<li>Astral Vibrance [Level 11]</li>\r"; 
  SWD+="<li>Weapon Training [Level 11]</li>\r"; 
  SWD+="<li>Blood and Radiance [Level 16]</li>\r"; 
  SWD+="<li>Astral Wave [paragon attack 11]</li>\r"; 
  SWD+="<li>Angelic Presence [paragon utility 12]</li>\r"; 
  SWD+="<li>Angel Ascendant [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_divineoracle)
 {
  SWD+="<p>Divine Oracle<p><ul>"; 
  SWD+="<li>Foresight [Level 11]</li>\r"; 
  SWD+="<li>Prophetic Action [Level 11]</li>\r"; 
  SWD+="<li>Terrifying Insight [Level 16]</li>\r"; 
  SWD+="<li>Prophecy of Doom [paragon attack 11]</li>\r"; 
  SWD+="<li>Good Omens [paragon utility 12]</li>\r"; 
  SWD+="<li>Hammer of Fate [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_radiantservant)
 {
  SWD+="<p>Radiant Servant<p><ul>"; 
  SWD+="<li>Illuminating Attacks [Level 11]</li>\r"; 
  SWD+="<li>Radiant Action [Level 11]</li>\r"; 
  SWD+="<li>Lasting Light [Level 16]</li>\r"; 
  SWD+="<li>Solar Wrath [paragon attack 11]</li>\r"; 
  SWD+="<li>Healing Sun [paragon utility 12]</li>\r"; 
  SWD+="<li>Radiant Brilliance [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_warpriest)
 {
  SWD+="<p>War Priest<p><ul>"; 
  SWD+="<li>Extra Damage Action [Level 11]</li>\r"; 
  SWD+="<li>Warpriest's Strategy [Level 11]</li>\r"; 
  SWD+="<li>Warpriest's Training [Level 11]</li>\r"; 
  SWD+="<li>Warpriest's Challenge [Level 16]</li>\r"; 
  SWD+="<li>Battle Cry [paragon attack 11]</li>\r"; 
  SWD+="<li>Battle Favor [paragon utility 12]</li>\r"; 
  SWD+="<li>Battle Pyres [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_ironvanguard)
 {
  SWD+="<p>Iron Vanguard<p><ul>"; 
  SWD+="<li>Enduring Warrior [Level 11]</li>\r"; 
  SWD+="<li>Ferocious Reaction [Level 11]</li>\r"; 
  SWD+="<li>Trample the Fallen [Level 16]</li>\r"; 
  SWD+="<li>Frontline Surge [paragon attack 11]</li>\r"; 
  SWD+="<li>Inexorable Shift [paragon utility 12]</li>\r"; 
  SWD+="<li>Indominitable Strength [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_kensei)
 {
  SWD+="<p>Kensei<p><ul>"; 
  SWD+="<li>Kensei Control Action [Level 11]</li>\r"; 
  SWD+="<li>Kensei Focus [Level 11] Weapon choice:</li>\r"; 
  SWD+="<li>Kensei Mastery [Level 16]</li>\r"; 
  SWD+="<li>Masterstroke [paragon attack 11]</li>\r"; 
  SWD+="<li>Ultimate Parry [paragon utility 12]</li>\r"; 
  SWD+="<li>Weaponsoul Dance [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_pitfighter)
 {
  SWD+="<p>Pit Fighter<p><ul>"; 
  SWD+="<li>Armor Optimization [Level 11]</li>\r"; 
  SWD+="<li>Extra Damage Action [Level 11]</li>\r"; 
  SWD+="<li>Dirty Fighting [Level 16]</li>\r"; 
  SWD+="<li>All Bets Are Off [paragon attack 11]</li>\r"; 
  SWD+="<li>Deadly Payback [paragon utility 12]</li>\r"; 
  SWD+="<li>Lion of Battle [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_swordmaster)
 {
  SWD+="<p>Swordmaster<p><ul>"; 
  SWD+="<li>Steel Defense Action [Level 11]</li>\r"; 
  SWD+="<li>Steel Grace [Level 11]</li>\r"; 
  SWD+="<li>Steel BLitz [Level 16]</li>\r"; 
  SWD+="<li>Precision Cut [paragon attack 11]</li>\r"; 
  SWD+="<li>Fantastic Flourish [paragon utility 12]</li>\r"; 
  SWD+="<li>Crescendo Sword [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_astralweapon)
 {
  SWD+="<p>Astral Weapon<p><ul>"; 
  SWD+="<li>Astral Judgment [Level 11]</li>\r"; 
  SWD+="<li>Astral Rejuvenation [Level 11]</li>\r"; 
  SWD+="<li>Courage from on High [Level 16]</li>\r"; 
  SWD+="<li>Carving a Path of Light [paragon attack 11]</li>\r"; 
  SWD+="<li>Pray for ore [paragon utility 12]</li>\r"; 
  SWD+="<li>Astral Whirlwind [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_championoforder)
 {
  SWD+="<p>Champion of Order<p><ul>"; 
  SWD+="<li>Champion's Action [Level 11]</li>\r"; 
  SWD+="<li>In Defense of Order [Level 11]</li>\r"; 
  SWD+="<li>Champion's Hammer [Level 16]</li>\r"; 
  SWD+="<li>Certain Justice [paragon attack 11]</li>\r"; 
  SWD+="<li>None Shall Pass [paragon utility 12]</li>\r"; 
  SWD+="<li>Rule of Order [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_hospitaler)
 {
  SWD+="<p>Hospitaler<p><ul>"; 
  SWD+="<li>Hospitaler's Blessing [Level 11]</li>\r"; 
  SWD+="<li>Hospitaler's Action [Level 11]</li>\r"; 
  SWD+="<li>Hospitaler's Care [Level 16]</li>\r"; 
  SWD+="<li>Warding Blow [paragon attack 11]</li>\r"; 
  SWD+="<li>Healing Font [paragon utility 12]</li>\r"; 
  SWD+="<li>Life-Giving Smite [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_justiciar)
 {
  SWD+="<p>Justiciar<p><ul>"; 
  SWD+="<li>Just Action [Level 11]</li>\r"; 
  SWD+="<li>Just Spirit [Level 11]</li>\r"; 
  SWD+="<li>Just SHelter [Level 16]</li>\r"; 
  SWD+="<li>Just Radiance [paragon attack 11]</li>\r"; 
  SWD+="<li>Strike Me Instead [paragon utility 12]</li>\r"; 
  SWD+="<li>Challenge the Unjust [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_battlefieldarcher)
 {
  SWD+="<p>Battlefield Archer<p><ul>"; 
  SWD+="<li>Archer's Action [Level 11]</li>\r"; 
  SWD+="<li>Battlefield Experience [Level 11]</li>\r"; 
  SWD+="<li>Battle Surge [Level 16]</li>\r"; 
  SWD+="<li>Combined Fire [paragon attack 11]</li>\r"; 
  SWD+="<li>Archer's Glory [paragon utility 12]</li>\r"; 
  SWD+="<li>Quarry's Bane [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_beaststalker)
 {
  SWD+="<p>Beast Stalker<p><ul>"; 
  SWD+="<li>Beast Stalker's Action [Level 11]</li>\r"; 
  SWD+="<li>Chosen Prey [Level 11]</li>\r"; 
  SWD+="<li>Action Shift [Level 16]</li>\r"; 
  SWD+="<li>Pinpointing Arrow [paragon attack 11]</li>\r"; 
  SWD+="<li>Hunter's Grace [paragon utility 12]</li>\r"; 
  SWD+="<li>Beast Stalker's Target [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_pathfinder)
 {
  SWD+="<p>Pathfinder<p><ul>"; 
  SWD+="<li>Battlehoned [Level 11]</li>\r"; 
  SWD+="<li>Pathfinder's Action [Level 11]</li>\r"; 
  SWD+="<li>Cruel Recovery [Level 16]</li>\r"; 
  SWD+="<li>Wrong Step [paragon attack 11]</li>\r"; 
  SWD+="<li>Act Together [paragon utility 12]</li>\r"; 
  SWD+="<li>Slasher's Mark [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_stormwarden)
 {
  SWD+="<p>Stormwarden<p><ul>"; 
  SWD+="<li>Blade Storm [Level 11]</li>\r"; 
  SWD+="<li>Stormstep Action [Level 11]</li>\r"; 
  SWD+="<li>Twin-Blade Storm [Level 16]</li>\r"; 
  SWD+="<li>Clearing the Ground [paragon attack 11]</li>\r"; 
  SWD+="<li>Throw Caution to the Wind [paragon utility 12]</li>\r"; 
  SWD+="<li>Cold Steel Hurricane [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_catburglar)
 {
  SWD+="<p>Cat Burglar<p><ul>"; 
  SWD+="<li>Acrobatic Action [Level 11]</li>\r"; 
  SWD+="<li>Body Control [Level 11]</li>\r"; 
  SWD+="<li>Athletic Master [Level 16]</li>\r"; 
  SWD+="<li>Cat Burglar's Gambit [paragon attack 11]</li>\r"; 
  SWD+="<li>Instant Escape [paragon utility 12]</li>\r"; 
  SWD+="<li>Redirected Death [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_daggermaster)
 {
  SWD+="<p>Dagger Master<p><ul>"; 
  SWD+="<li>Daggermaster's Action [Level 11]</li>\r"; 
  SWD+="<li>Dagger Precision [Level 11]</li>\r"; 
  SWD+="<li>Dagger Advantage [Level 16]</li>\r"; 
  SWD+="<li>Critical Opportunity [paragon attack 11]</li>\r"; 
  SWD+="<li>Meditation of the Blade [paragon utility 12]</li>\r"; 
  SWD+="<li>Deep Dagger Wound [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_masterinfiltrator)
 {
  SWD+="<p>Master Infiltrator<p><ul>"; 
  SWD+="<li>Infiltrator's Action [Level 11]</li>\r"; 
  SWD+="<li>Skillful Infiltrator [Level 11]</li>\r"; 
  SWD+="<li>Invisible Infiltrator [Level 16]</li>\r"; 
  SWD+="<li>Distracting Wound [paragon attack 11]</li>\r"; 
  SWD+="<li>Impossible to Catch [paragon utility 12]</li>\r"; 
  SWD+="<li>Painful Puncture [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_shadowassassin)
 {
  SWD+="<p>Shadow Assassin<p><ul>"; 
  SWD+="<li>Shadow Assassin's Action [Level 11]</li>\r"; 
  SWD+="<li>Shadow Assassin's Riposte [Level 11]</li>\r"; 
  SWD+="<li>Bloody Evisceration [Level 16]</li>\r"; 
  SWD+="<li>Killer's Eye [paragon attack 11]</li>\r"; 
  SWD+="<li>Bad Idea, Friend [paragon utility 12]</li>\r"; 
  SWD+="<li>Final Blow [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_doomsayer)
 {
  SWD+="<p>Doomsayer<p><ul>"; 
  SWD+="<li>Doomsayer's Action [Level 11]</li>\r"; 
  SWD+="<li>Doomsayer's Proclamation [Level 11]</li>\r"; 
  SWD+="<li>Doomsayer's Oath [Level 16]</li>\r"; 
  SWD+="<li>Fates Entwined [paragon attack 11]</li>\r"; 
  SWD+="<li>Accursed Shroud [paragon utility 12]</li>\r"; 
  SWD+="<li>Long Fall into Darkness [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_feytouched)
 {
  SWD+="<p>Feytouched<p><ul>"; 
  SWD+="<li>Feytouched Action [Level 11]</li>\r"; 
  SWD+="<li>Slashing Wake [Level 11]</li>\r"; 
  SWD+="<li>Patron's Favor [Level 16]</li>\r"; 
  SWD+="<li>Will of the Feywild [paragon attack 11]</li>\r"; 
  SWD+="<li>Twilight Teleport [paragon utility 12]</li>\r"; 
  SWD+="<li>Whispers of the Fey [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_lifestealer)
 {
  SWD+="<p>Lifestealer<p><ul>"; 
  SWD+="<li>Infernal Action [Level 11]</li>\r"; 
  SWD+="<li>Collect Life Spark [Level 11]</li>\r"; 
  SWD+="<li>Sustain Life Spark [Level 16]</li>\r"; 
  SWD+="<li>Soul Scorch [paragon attack 11]</li>\r"; 
  SWD+="<li>Life Spark Summons [paragon utility 12]</li>\r"; 
  SWD+="<li>Soultheft [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_battlecaptain)
 {
  SWD+="<p>Battle Captain<p><ul>"; 
  SWD+="<li>Battle Action [Level 11]</li>\r"; 
  SWD+="<li>Cry Havoc [Level 11]</li>\r"; 
  SWD+="<li>Battle Inspiration [Level 16]</li>\r"; 
  SWD+="<li>Force Retreat [paragon attack 11]</li>\r"; 
  SWD+="<li>Bolt of Genius [paragon utility 12]</li>\r"; 
  SWD+="<li>Cunning Flurry [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_combatveteran)
 {
  SWD+="<p>Combat Veteran<p><ul>"; 
  SWD+="<li>Combat Veteran's Action [Level 11]</li>\r"; 
  SWD+="<li>Tough as Nails [Level 11]</li>\r"; 
  SWD+="<li>Battle Healer [Level 16]</li>\r"; 
  SWD+="<li>Skirmish Ploy [paragon attack 11]</li>\r"; 
  SWD+="<li>Miss Me Once [paragon utility 12]</li>\r"; 
  SWD+="<li>Superior Tactics [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_knightcommander)
 {
  SWD+="<p>Knight Commander<p><ul>"; 
  SWD+="<li>Honor and Glory [Level 11]</li>\r"; 
  SWD+="<li>Knight Commander's Action [Level 11]</li>\r"; 
  SWD+="<li>Press of Arms [Level 16]</li>\r"; 
  SWD+="<li>Slash and Press [paragon attack 11]</li>\r"; 
  SWD+="<li>Break Their Nerve [paragon utility 12]</li>\r"; 
  SWD+="<li>Control the Field [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_swordmarshal)
 {
  SWD+="<p>Sword Marshal<p><ul>"; 
  SWD+="<li>Disciplined Blade [Level 11]</li>\r"; 
  SWD+="<li>Sword Marshal's Action [Level 11]</li>\r"; 
  SWD+="<li>Skewer the Weak [Level 16]</li>\r"; 
  SWD+="<li>Blade Flurry [paragon attack 11]</li>\r"; 
  SWD+="<li>Sword Marshal's Boon [paragon utility 12]</li>\r"; 
  SWD+="<li>Diamong Blade of Victory [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_battlemage)
 {
  SWD+="<p>Battle Mage<p><ul>"; 
  SWD+="<li>Arcane Riposte [Level 11]</li>\r"; 
  SWD+="<li>Battle Mage Action [Level 11]</li>\r"; 
  SWD+="<li>Battle Edge [Level 16]</li>\r"; 
  SWD+="<li>Forceful Retort [paragon attack 11]</li>\r"; 
  SWD+="<li>Arcane Rejuvenation [paragon utility 12]</li>\r"; 
  SWD+="<li>Closing Spell [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_bloodmage)
 {
  SWD+="<p>Blood Mage<p><ul>"; 
  SWD+="<li>Blood Action [Level 11]</li>\r"; 
  SWD+="<li>Bolstering Blood [Level 11]</li>\r"; 
  SWD+="<li>Burning Blood [Level 16]</li>\r"; 
  SWD+="<li>Blood Pulse [paragon attack 11]</li>\r"; 
  SWD+="<li>Soul Burn [paragon utility 12]</li>\r"; 
  SWD+="<li>Destructive Salutation [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_spellstormmage)
 {
  SWD+="<p>Spellstorm Mage<p><ul>"; 
  SWD+="<li>Extra Damage Action [Level 11]</li>\r"; 
  SWD+="<li>Storm Spell [Level 11]</li>\r"; 
  SWD+="<li>Storm Fury [Level 16]</li>\r"; 
  SWD+="<li>Storm Cage [paragon attack 11]</li>\r"; 
  SWD+="<li>Sudden Storm [paragon utility 12]</li>\r"; 
  SWD+="<li>Maelstrom of Chaos [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }
if (paragon_wizardofthespiraltower)
 {
  SWD+="<p>Wizard of the Spiral Tower<p><ul>"; 
  SWD+="<li>Corellon's Implement [Level 11]</li>\r"; 
  SWD+="<li>Spiral Tower Action [Level 11]</li>\r"; 
  SWD+="<li>Radiant Censure [Level 16]</li>\r"; 
  SWD+="<li>The One Sword [paragon attack 11]</li>\r"; 
  SWD+="<li>Shape the Dream [paragon utility 12]</li>\r"; 
  SWD+="<li>Corellon's Blade [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_anarchofshyr)
 {
  SWD+="<p>Anarch of Shyr<p><ul>"; 
  SWD+="<li>Blade Flurry Action [Level 11]</li>\r"; 
  SWD+="<li>Empowered Aegis of Assault [Level 11]</li>\r"; 
  SWD+="<li>Empowered Aegis [Level 16]</li>\r"; 
  SWD+="<li>Lightning Clutch [paragon attack 11]</li>\r"; 
  SWD+="<li>Stance of Chaos [paragon utility 12]</li>\r"; 
  SWD+="<li>Shyran Cataclysm [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_coronalguard)
 {
  SWD+="<p>Coronal Guard<p><ul>"; 
  SWD+="<li>Swordshield Action [Level 11]</li>\r"; 
  SWD+="<li>Improved Silver Shield [Level 11]</li>\r"; 
  SWD+="<li>Improved Swordmage Armor [Level 16]</li>\r"; 
  SWD+="<li>Countering Thundersclap [paragon attack 11]</li>\r"; 
  SWD+="<li>Dragon Scales [paragon utility 12]</li>\r"; 
  SWD+="<li>Avaunt Foe [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_darkwalker)
 {
  SWD+="<p>Darkwalker<p><ul>"; 
  SWD+="<li>Deadly Absence [Level 11]</li>\r"; 
  SWD+="<li>Darkwalker Action [Level 11]</li>\r"; 
  SWD+="<li>Ghostken [Level 16]</li>\r"; 
  SWD+="<li>Ghostly Bane [paragon attack 11]</li>\r"; 
  SWD+="<li>Fading Spiral [paragon utility 12]</li>\r"; 
  SWD+="<li>Wraithform Blast [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_doomguide)
 {
  SWD+="<p>Doomguide<p><ul>"; 
  SWD+="<li>Blessings of Kelemvor [Level 11]</li>\r"; 
  SWD+="<li>Doomguide's Geas [Level 11]</li>\r"; 
  SWD+="<li>Doomguide's Resolve [Level 16]</li>\r"; 
  SWD+="<li>Kelemvor's Circle [paragon attack 11]</li>\r"; 
  SWD+="<li>Unsullied Heart [paragon utility 12]</li>\r"; 
  SWD+="<li>Kelemvor's Sword [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_drowwanderer)
 {
  SWD+="<p>Drow Wanderer<p><ul>"; 
  SWD+="<li>Ambusher Action [Level 11]</li>\r"; 
  SWD+="<li>Stone Sense [Level 11]</li>\r"; 
  SWD+="<li>Firemotes [Level 16]</li>\r"; 
  SWD+="<li>From out of Nowhere [paragon attack 11]</li>\r"; 
  SWD+="<li>Strength in Darkness [paragon utility 12]</li>\r"; 
  SWD+="<li>Darkblade [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_eartheartdefender)
 {
  SWD+="<p>Eartheart Defender<p><ul>"; 
  SWD+="<li>Eartheart Determination [Level 11]</li>\r"; 
  SWD+="<li>Heart of Earth [Level 11]</li>\r"; 
  SWD+="<li>Great Heart [Level 16]</li>\r"; 
  SWD+="<li>Gain Heart [paragon attack 11]</li>\r"; 
  SWD+="<li>Earthsight [paragon utility 12]</li>\r"; 
  SWD+="<li>Earthsurge [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_elementaltempest)
 {
  SWD+="<p>Elemental Tempest<p><ul>"; 
  SWD+="<li>Dual Manifestation [Level 11]</li>\r"; 
  SWD+="<li>Elemental Attacks [Level 11]</li>\r"; 
  SWD+="<li>Elemental Surge [Level 11]</li>\r"; 
  SWD+="<li>Tempest Lord [Level 16]</li>\r"; 
  SWD+="<li>Tempest Burst [paragon attack 11]</li>\r"; 
  SWD+="<li>Absorb Elements [paragon utility 12]</li>\r"; 
  SWD+="<li>Elemental Fury [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_evermeetwarlock)
 {
  SWD+="<p>Evermeet Warlock<p><ul>"; 
  SWD+="<li>Feywld Wake [Level 11]</li>\r"; 
  SWD+="<li>Mercurial Action [Level 11]</li>\r"; 
  SWD+="<li>Mastery of Passage [Level 16]</li>\r"; 
  SWD+="<li>Blinding Beacon [paragon attack 11]</li>\r"; 
  SWD+="<li>Feylights [paragon utility 12]</li>\r"; 
  SWD+="<li>Moonflower Inspiration [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }


if (paragon_ghostofeventide)
 {
  SWD+="<p>Ghost of Eventide<p><ul>"; 
  SWD+="<li>Shadowed Action [Level 11]</li>\r"; 
  SWD+="<li>Twilight Accuracy [Level 11]</li>\r"; 
  SWD+="<li>Twilight Vision [Level 16]</li>\r"; 
  SWD+="<li>Shadow Hand Attack [paragon attack 11]</li>\r"; 
  SWD+="<li>Twilight Escape [paragon utility 12]</li>\r"; 
  SWD+="<li>Robed in Shadow [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_heartwarder)
 {
  SWD+="<p>Heartwarder<p><ul>"; 
  SWD+="<li>Tears of Evergod [Level 11]</li>\r"; 
  SWD+="<li>Sune's Touch [Level 11]</li>\r"; 
  SWD+="<li>Instinctive Remorse [Level 16]</li>\r"; 
  SWD+="<li>Siren Voice [paragon attack 11]</li>\r"; 
  SWD+="<li>Sune's Shield [paragon utility 12]</li>\r"; 
  SWD+="<li>Sune's Kiss [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_highforestscout)
 {
  SWD+="<p>High Forest Scout<p><ul>"; 
  SWD+="<li>Binding Sight [Level 11]</li>\r"; 
  SWD+="<li>Plagueslayer [Level 11]</li>\r"; 
  SWD+="<li>Forest Walk [Level 16]</li>\r"; 
  SWD+="<li>Argent Arrow [paragon attack 11]</li>\r"; 
  SWD+="<li>Unrestricted Movement [paragon utility 12]</li>\r"; 
  SWD+="<li>Binding Arrows [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_impilturandemonslayer)
 {
  SWD+="<p>Impulterian Demonslayer<p><ul>"; 
  SWD+="<li>Demonslayer Blade [Level 11]</li>\r"; 
  SWD+="<li>Demonslayer's Wrath [Level 11]</li>\r"; 
  SWD+="<li>Demon's Misfortune [Level 16]</li>\r"; 
  SWD+="<li>Demonslayer's HIndrance [paragon attack 11]</li>\r"; 
  SWD+="<li>Demonward [paragon utility 12]</li>\r"; 
  SWD+="<li>Demonbane Flurry [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_morninglord)
 {
  SWD+="<p>Morninglord<p><ul>"; 
  SWD+="<li>Minitant Dawn [Level 11]</li>\r"; 
  SWD+="<li>Unflagging Energy [Level 11]</li>\r"; 
  SWD+="<li>Burning Radiance [Level 16]</li>\r"; 
  SWD+="<li>Pure Glow [paragon attack 11]</li>\r"; 
  SWD+="<li>Rising Sun [paragon utility 12]</li>\r"; 
  SWD+="<li>Lance of Dawn [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_purpledragonknight)
 {
  SWD+="<p>Purple Dragon Knight<p><ul>"; 
  SWD+="<li>Cormyrian Knight Training [Level 11]</li>\r"; 
  SWD+="<li>Purple Dragon Focus [Level 11]</li>\r"; 
  SWD+="<li>Purple Dragon Aura [Level 16]</li>\r"; 
  SWD+="<li>Rallying Attack [paragon attack 11]</li>\r"; 
  SWD+="<li>Rallying Cry [paragon utility 12]</li>\r"; 
  SWD+="<li>For Cormyr! [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_silverstar)
 {
  SWD+="<p>Silverstar<p><ul>"; 
  SWD+="<li>Goddess of Changes [Level 11]</li>\r"; 
  SWD+="<li>Moonsparked [Level 11]</li>\r"; 
  SWD+="<li>Open Discipline [Level 11]</li>\r"; 
  SWD+="<li>Moon Oracle [Level 16]</li>\r"; 
  SWD+="<li>Tears of Selune [paragon attack 11]</li>\r"; 
  SWD+="<li>Moonglow [paragon utility 12]</li>\r"; 
  SWD+="<li>Moonfire [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_simbarchofaglarond)
 {
  SWD+="<p>Simbarch of Aglarond<p><ul>"; 
  SWD+="<li>Sorcerous Vitality [Level 11]</li>\r";
  SWD+="<li>Arcane Healing [Level 11]</li>\r"; 
  SWD+="<li>Determined Mage [Level 16]</li>\r"; 
  SWD+="<li>Silver Fire [paragon attack 11]</li>\r"; 
  SWD+="<li>Synostodweomer [paragon utility 12]</li>\r"; 
  SWD+="<li>Simbul's Tempest [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_spellguardwizard)
 {
  SWD+="<p>Spellguard Wizard<p><ul>"; 
  SWD+="<li>Spellguard Training [Level 11]</li>\r"; 
  SWD+="<li>Spellguard Action [Level 11]</li>\r"; 
  SWD+="<li>Spellguard Combat Toughness [Level 16]</li>\r"; 
  SWD+="<li>Sellguard Force Lash [paragon attack 11]</li>\r"; 
  SWD+="<li>Mythal Splinter [paragon utility 12]</li>\r"; 
  SWD+="<li>Mythal Spark [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_spellscarredsavant)
 {
  SWD+="<p>Spellscarred Savant<p><ul>"; 
  SWD+="<li>Plague Familiarity [Level 11]</li>\r"; 
  SWD+="<li>Plague Mastery: Get one spellscarred encounter power up through level&nbsp;7 [Level 11]</li>\r"; 
  SWD+="<li>Plague Mastery: Get spellfire healing [Level 12]</li>\r"; 
  SWD+="<li>Plague Mastery: Get one spellscarred encounter power up through level&nbsp;19 [Level 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_steelskyliberator)
 {
  SWD+="<p>Steelsky Liberator<p><ul>"; 
  SWD+="<li>Draonic Ememy [Level 11]</li>\r"; 
  SWD+="<li>Steelsky Heritage [Level 11]</li>\r"; 
  SWD+="<li>Liberator's Resolve [Level 16]</li>\r"; 
  SWD+="<li>Liverator's Blow [paragon attack 11]</li>\r"; 
  SWD+="<li>Steelsky Stance [paragon utility 12]</li>\r"; 
  SWD+="<li>Break the Chains [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_swordcoastcorsair)
 {
  SWD+="<p>Sword Coast Corsair Exploits<p><ul>"; 
  SWD+="<li>Expert Mariner [Level 11]</li>\r"; 
  SWD+="<li>Sea Legs [Level 11]</li>\r"; 
  SWD+="<li>Bold Attacker [Level 16]</li>\r"; 
  SWD+="<li>Strike Terror [paragon attack 11]</li>\r"; 
  SWD+="<li>Nerves of Steel [paragon utility 12]</li>\r"; 
  SWD+="<li>Keelhaul [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_umbriri)
 {
  SWD+="<p>Umbriri<p><ul>"; 
  SWD+="<li>Shadow Action [Level 11]</li>\r"; 
  SWD+="<li>Shadow Defense [Level 11]</li>\r"; 
  SWD+="<li>Shadow Shroud [Level 16]</li>\r"; 
  SWD+="<li>Assassin Shadow [paragon attack 11]</li>\r"; 
  SWD+="<li>Concealing Umbra [paragon utility 12]</li>\r"; 
  SWD+="<li>Shadowed Psyche [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_wanderingswordmage)
 {
  SWD+="<p>Wandering Swordmage<p><ul>"; 
  SWD+="<li>Aegis Insight [Level 11]</li>\r"; 
  SWD+="<li>People's History [Level 11]</li>\r"; 
  SWD+="<li>Teleportation Action [Level 11]</li>\r"; 
  SWD+="<li>Learn from Experience [Level 16]</li>\r"; 
  SWD+="<li>Four Corners Attack [paragon attack 11]</li>\r"; 
  SWD+="<li>Arcane Tanglestep [paragon utility 12]</li>\r"; 
  SWD+="<li>Heritage of Blades [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_warwizardofcormyr)
 {
  SWD+="<p>War Wizard of Cormyr<p><ul>"; 
  SWD+="<li>War Wizard's Training [Level 11]</li>\r"; 
  SWD+="<li>Arcane Fundamentals [Level 11]</li>\r"; 
  SWD+="<li>War Wizard's Decimation [Level 16]</li>\r"; 
  SWD+="<li>Lightning Ripple [paragon attack 11]</li>\r"; 
  SWD+="<li>One-Way Barrier [paragon utility 12]</li>\r"; 
  SWD+="<li>Storm of Victory [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_whirlwindgenasi)
 {
  SWD+="<p>Whirlwind Genasi<p><ul>"; 
  SWD+="<li>Whirlwind Action [Level 11]</li>\r"; 
  SWD+="<li>Whirlwind Breeze [Level 11]</li>\r"; 
  SWD+="<li>Whirlwind Counterforce [Level 16]</li>\r"; 
  SWD+="<li>Tumbling Gale [paragon attack 11]</li>\r"; 
  SWD+="<li>Windsoul Zephyr [paragon utility 12]</li>\r"; 
  SWD+="<li>Windsoul Whirlwind [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_wildfiregenasi)
 {
  SWD+="<p>Wildfire Genasi<p><ul>"; 
  SWD+="<li>Fiery Surge [Level 11]</li>\r"; 
  SWD+="<li>Control the Flames [Level 11]</li>\r"; 
  SWD+="<li>Firesoul Aura [Level 16]</li>\r"; 
  SWD+="<li>Firesoul Combustion [paragon attack 11]</li>\r"; 
  SWD+="<li>Embers of Life [paragon utility 12]</li>\r"; 
  SWD+="<li>Firesoul Conflagration [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }


if (paragon_feralspirit)
 {
  SWD+="<p>Feral Spirit<p><ul>"; 
  SWD+="<li>Fearsome Partnership [Level 11]</li>\r"; 
  SWD+="<li>Feral Action [Level 11]</li>\r"; 
  SWD+="<li>Spirit Link [Level 16]</li>\r"; 
  SWD+="<li>Feral Diversion [paragon attack 11]</li>\r"; 
  SWD+="<li>Swiftness of Spirit [paragon utility 12]</li>\r"; 
  SWD+="<li>Twin-Soul Strike [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_packrunner)
 {
  SWD+="<p>Pack Runner<p><ul>"; 
  SWD+="<li>Runner's Action [Level 11]</li>\r"; 
  SWD+="<li>Pack Chase [Level 11]</li>\r"; 
  SWD+="<li>Canine's Cunning [Level 16]</li>\r"; 
  SWD+="<li>Pack Runner Assault [paragon attack 11]</li>\r"; 
  SWD+="<li>Wolfskin [paragon utility 12]</li>\r"; 
  SWD+="<li>Neck-Bite Pounce [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_wildcatstalker)
 {
  SWD+="<p>Wildcat Stalker<p><ul>"; 
  SWD+="<li>Neck Seeker [Level 11]</li>\r"; 
  SWD+="<li>Prowling Action [Level 11]</li>\r"; 
  SWD+="<li>Cat's Quarry [Level 16]</li>\r"; 
  SWD+="<li>Cat-Eyed Strike [paragon attack 11]</li>\r"; 
  SWD+="<li>Lurk Unseen [paragon utility 12]</li>\r"; 
  SWD+="<li>Panther Pounce [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }


if (paragon_bladeofcendriane)
 {
  SWD+="<p>Blade of Cendriane<p><ul>"; 
  SWD+="<li>Fey Step Assault [Level 11]</li>\r"; 
  SWD+="<li>Cell of Cendriane [Level 11]</li>\r"; 
  SWD+="<li>Blademaster of Legacy [Level 16]</li>\r"; 
  SWD+="<li>Forcing the Portal [paragon attack 11]</li>\r"; 
  SWD+="<li>Ethereal Hunter [paragon utility 12]</li>\r"; 
  SWD+="<li>Feywild Tempest [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_doomguardmarauder)
 {
  SWD+="<p>Doomguard Marauder<p><ul>"; 
  SWD+="<li>Ruin's Reward [Level 11]</li>\r"; 
  SWD+="<li>Destructive Action [Level 11]</li>\r"; 
  SWD+="<li>Inevitable Doom [Level 16]</li>\r"; 
  SWD+="<li>Entropic Blow [paragon attack 11]</li>\r"; 
  SWD+="<li>Strike of Unmaking [paragon utility 12]</li>\r"; 
  SWD+="<li>Arm of Dissolution [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_gatecrasher)
 {
  SWD+="<p>Gatecrasher<p><ul>"; 
  SWD+="<li>Portal Alteration [Level 11]</li>\r"; 
  SWD+="<li>Gatecrasher Action [Level 11]</li>\r"; 
  SWD+="<li>Gatecrasher Advantage [Level 16]</li>\r"; 
  SWD+="<li>Striker's Gate [paragon attack 11]</li>\r"; 
  SWD+="<li>Trickster's Gate [paragon utility 12]</li>\r"; 
  SWD+="<li>Boltportal Strike [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_knightofcelestia)
 {
  SWD+="<p>Knight of Celestia<p><ul>"; 
  SWD+="<li>Aura of Menace [Level 11]</li>\r"; 
  SWD+="<li>Blessing of the Gods [Level 11]</li>\r"; 
  SWD+="<li>Dedicated Foe [Level 16]</li>\r"; 
  SWD+="<li>Celestia's Challenge [paragon attack 11]</li>\r"; 
  SWD+="<li>Brilliant Guardians [paragon utility 12]</li>\r"; 
  SWD+="<li>Purifying Radiance [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_maleckethjanissary)
 {
  SWD+="<p>Malec-Keth Janissary<p><ul>"; 
  SWD+="<li>Devshirme Training [Level 11]</li>\r"; 
  SWD+="<li>Malec-Keth Action [Level 11]</li>\r"; 
  SWD+="<li>Chant of War [Level 11]</li>\r"; 
  SWD+="<li>Primordial Blade [Level 16]</li>\r"; 
  SWD+="<li>Loyal Unto Death [paragon attack 11]</li>\r"; 
  SWD+="<li>Ever-Present Escort [paragon utility 12]</li>\r"; 
  SWD+="<li>Elemental Scourge [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_planeshifter)
 {
  SWD+="<p>Planeshifter<p><ul>"; 
  SWD+="<li>Study of the Planes [Level 11]</li>\r"; 
  SWD+="<li>Planeshifter's Action [Level 11]</li>\r"; 
  SWD+="<li>Location Mastery [Level 16]</li>\r"; 
  SWD+="<li>Sequester [paragon attack 11]</li>\r"; 
  SWD+="<li>Quick Portal [paragon utility 12]</li>\r"; 
  SWD+="<li>Dimensional Cascade [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_shadowcaptain)
 {
  SWD+="<p>Shadow Captain<p><ul>"; 
  SWD+="<li>Shadow's Reconnoitering  [Level 11]</li>\r"; 
  SWD+="<li>Shadow Captain's Action [Level 11]</li>\r"; 
  SWD+="<li>Inspiring the Invisible Lesion [Level 16]</li>\r"; 
  SWD+="<li>Underworld Gambit [paragon attack 11]</li>\r"; 
  SWD+="<li>Shadow Guardian [paragon utility 12]</li>\r"; 
  SWD+="<li>Shadow Turncoat [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }

if (paragon_soulguide)
 {
  SWD+="<p>Soul Guide<p><ul>"; 
  SWD+="<li>Rebuke Soul [channel divinity] [Level 11]</li>\r"; 
  SWD+="<li>Spiritual Guidance [Level 11]</li>\r"; 
  SWD+="<li>Weighty Soul [Level 16]</li>\r"; 
  SWD+="<li>Soul's Enthrallment [paragon attack 11]</li>\r"; 
  SWD+="<li>Shadowbane Circle [paragon utility 12]</li>\r"; 
  SWD+="<li>Soul Brand [paragon attack 20]</li>\r"; 
  SWD+="</ul><p>"
 }





if (paragon_adroitexplorer)
 {
  SWD+="<p>Adroit Explorer<p><ul>";
  SWD+="<li>Abitious Effort [Level 11].  Your choice:</li>\r";
  SWD+="<li>Bloody Determination [Level 11]</li>\r";
  SWD+="<li>Heroic Action [Level 11]</li>\r";
  SWD+="<li>Champion of Humanity [Level 16]</li>\r";
  SWD+="<li>Destined for Greatness [paragon utility 12]</li>\r";
  SWD+="<li>Bloodied Greatness [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_ancestralincarnate)
 {
  SWD+="<p>Ancestral Incarnate<p><ul>";
  SWD+="<li>Resurgent Action [Level 11]</li>\r";
  SWD+="<li>Serene Countenance [Level 11]</li>\r";
  SWD+="<li>Past-Life Acolytes [Level 16]</li>\r";
  SWD+="<li>Past-Life Guardian [paragon attack 11]</li>\r";
  SWD+="<li>Past-Life Servant [paragon utility 12]</li>\r";
  SWD+="<li>Past-Life Vanguage [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_bloodfurysavage)
 {
  SWD+="<p>Blood Fury Savage<p><ul>";
  SWD+="<li>Eager Action [Level 11]</li>\r";
  SWD+="<li>Fearson Disposition [Level 11]</li>\r";
  SWD+="<li>Savage Resilience [Level 16]</li>\r";
  SWD+="<li>Unbound Assault [paragon attack 11]</li>\r";
  SWD+="<li>Frothing Madness [paragon utility 12]</li>\r";
  SWD+="<li>MurderousRage [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_feybeguiler)
 {
  SWD+="<p>Fey Beguiler<p><ul>";
  SWD+="<li>Skill Learning [Level 11][already included]</li>\r";
  SWD+="<li>Disappearing Trick [Level 11]</li>\r";
  SWD+="<li>Clever Versatility [Level 12]  Your choice, hand-edit: </li>\r";
  SWD+="<li>Sneaky Gnome [Level 16]</li>\r";
  SWD+="<li>Bedazzling Orb [paragon attack 11]</li>\r";
  SWD+="<li>Beguiling Bolt [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_firstbornofmoradin)
 {
  SWD+="<p>Firstborn of Moradin<p><ul>";
  SWD+="<li>Stonebones [Level 11]</li>\r";
  SWD+="<li>Strength of the Earth [Level 11]</li>\r";
  SWD+="<li>Dwarven Resurgence [Level 16]</li>\r";
  SWD+="<li>Receive the Charge [paragon attack 11]</li>\r";
  SWD+="<li>Earthsense [paragon utility 12]</li>\r";
  SWD+="<li>Mountain Stance Strike [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_halflingscoundrel)
 {
  SWD+="<p>Halfling Scoundrel<p><ul>";
  SWD+="<li>Fearless Scoundrel [Level 11]</li>\r";
  SWD+="<li>Resourceful Action [Level 11]</li>\r";
  SWD+="<li>Crafty Combatant [Level 16]</li>\r";
  SWD+="<li>Sly Offensive [paragon attack 11]</li>\r";
  SWD+="<li>Problem Solver [paragon utility 12]</li>\r";
  SWD+="<li>Halfling's Taunt [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_moonstalker)
 {
  SWD+="<p>Moonstalker<p><ul>";
  SWD+="<li>Hunter Action [Level 11]</li>\r";
  SWD+="<li>Go for the Throat [Level 11]</li>\r";
  SWD+="<li>Pack Tactics [Level 16]</li>\r";
  SWD+="<li>Call to the Moon [paragon attack 11]</li>\r";
  SWD+="<li>Unleash the SIlent Predator [paragon utility 12]</li>\r";
  SWD+="<li>Circle the Prey [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_scionofarkhosia)
 {
  SWD+="<p>Scion of Arkhosia<p><ul>";
  SWD+="<li>Versatile Breath [Level 11]</li>\r";
  SWD+="<li>Draconic Outburst [Level 11]</li>\r";
  SWD+="<li>Blood of Io [Level 16]</li>\r";
  SWD+="<li>Dragon's Wrath [paragon attack 11]</li>\r";
  SWD+="<li>Dragon Wings [paragon utility 12]</li>\r";
  SWD+="<li>Clinging Breath [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_shiereknight)
 {
  SWD+="<p>Shiere Knight<p><ul>";
  SWD+="<li>Blessed of the Fey [Level 11]</li>\r";
  SWD+="<li>Fey Leap Action [Level 11]</li>\r";
  SWD+="<li>Cloaked in Magic [Level 16]</li>\r";
  SWD+="<li>Ensorcelled Mind [paragon attack 11]</li>\r";
  SWD+="<li>Fey Escape [paragon utility 12]</li>\r";
  SWD+="<li>Imperious Presence [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_stoneblessed)
 {
  SWD+="<p>Stoneblessed<p><ul>";
  SWD+="<li>Stonehide Action [Level 11]</li>\r";
  SWD+="<li>Unusual Reach [Level 11]</li>\r";
  SWD+="<li>Mountain Crush [Level 16]</li>\r";
  SWD+="<li>Mountain Sweep [paragon attack 11]</li>\r";
  SWD+="<li>Summit Advantage [paragon utility 12]</li>\r";
  SWD+="<li>Avalanche Assault [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_turathihighborn)
 {
  SWD+="<p>Turathi Highborn<p><ul>";
  SWD+="<li>Turathi Frenzy [Level 11]</li>\r";
  SWD+="<li>Helfire Action [Level 11]</li>\r";
  SWD+="<li>Kneel before the Turathi [Level 16]</li>\r";
  SWD+="<li>Bolts of Bedevilment [paragon attack 11]</li>\r";
  SWD+="<li>Infernal Nova [paragon utility 12]</li>\r";
  SWD+="<li>Thrall of Turath [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_twilightguardian)
 {
  SWD+="<p>Twilight Guardian<p><ul>";
  SWD+="<li>Elfsight [Level 11]</li>\r";
  SWD+="<li>Accurate Action [Level 11]</li>\r";
  SWD+="<li>Twilight Walk [Level 16]</li>\r";
  SWD+="<li>Bonds of Life [paragon attack 11]</li>\r";
  SWD+="<li>Twilight Stealth [paragon utility 12]</li>\r";
  SWD+="<li>Nature's Rage [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_hammerofjudgment)
 {
  SWD+="<p>Hammer of Judgment<p><ul>";
  SWD+="<li>Avalanche Action [Level 11]</li>\r";
  SWD+="<li>Bone Crusher [Level 11]</li>\r";
  SWD+="<li>Bloodthirsty Hammer [Level 16]</li>\r";
  SWD+="<li>Thunder Hammer [paragon attack 11]</li>\r";
  SWD+="<li>Resolve of Steel [paragon utility 12]</li>\r";
  SWD+="<li>Hammer of the Final Pronouncement [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_oathsworn)
 {
  SWD+="<p>Oathsworn<p><ul>";
  SWD+="<li>Blood Oath [Level 11]</li>\r";
  SWD+="<li>Sworn Action [Level 11]</li>\r";
  SWD+="<li>Enduring Oath [Level 16]</li>\r";
  SWD+="<li>Oath of Weakness [paragon attack 11]</li>\r";
  SWD+="<li>Sworn Crusade [paragon utility 12]</li>\r";
  SWD+="<li>Oath Bond [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_unveiledvisage)
 {
  SWD+="<p>Unveiled Visage<p><ul>";
  SWD+="<li>Unveiled Action [Level 11]</li>\r";
  SWD+="<li>Soaring Change [Level 11]</li>\r";
  SWD+="<li>Bloodied Might [Level 16]</li>\r";
  SWD+="<li>Radiant Visage [paragon attack 11]</li>\r";
  SWD+="<li>Divine Vigilance [paragon utility 12]</li>\r";
  SWD+="<li>Divine Aspect [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_zealousassassin)
 {
  SWD+="<p>Zealous Assassin<p><ul>";
  SWD+="<li>Divine Shroud Action [Level 11]</li>\r";
  SWD+="<li>Finishing Technique [Level 11]</li>\r";
  SWD+="<li>Zealot's Veil [Level 16]</li>\r";
  SWD+="<li>Strike from Empty Air [paragon attack 11]</li>\r";
  SWD+="<li>Avenging Shadow [paragon utility 12]</li>\r";
  SWD+="<li>Blade of the Zealot [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_bearwarrior)
 {
  SWD+="<p>Bear Warrior<p><ul>";
  SWD+="<li>Bear's Toughness [Level 11]</li>\r";
  SWD+="<li>Bear Form [Level 11]</li>\r";
  SWD+="<li>Wild Push [Level 16]</li>\r";
  SWD+="<li>Mauling Bear [paragon attack 11]</li>\r";
  SWD+="<li>Bestial Vigor [paragon utility 12]</li>\r";
  SWD+="<li>Rampaging Bear [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_fearbringerthane)
 {
  SWD+="<p>Fearbringer Thane<p><ul>";
  SWD+="<li>Staggering Fury [Level 11]</li>\r";
  SWD+="<li>Inspire Ferocity [Level 11]</li>\r";
  SWD+="<li>Doinating Presence [Level 16]</li>\r";
  SWD+="<li>Screaming Hawk Strike [paragon attack 11]</li>\r";
  SWD+="<li>Fearsome PResence [paragon utility 12]</li>\r";
  SWD+="<li>Tide of Battle [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_frenziedberserker)
 {
  SWD+="<p>Frenzied Berserker<p><ul>";
  SWD+="<li>Frenzied Blood [Level 11]</li>\r";
  SWD+="<li>Warpath [Level 11]</li>\r";
  SWD+="<li>Unfeeling Rage [Level 16]</li>\r";
  SWD+="<li>Persistent Frenzy [paragon attack 11]</li>\r";
  SWD+="<li>Deathless Frenzy [paragon utility 12]</li>\r";
  SWD+="<li>Final COnfrontation [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_wildrunner)
 {
  SWD+="<p>Wildrunner<p><ul>";
  SWD+="<li>Hunter's Fury [Level 11]</li>\r";
  SWD+="<li>Wildrunner's Swiftness [Level 11]</li>\r";
  SWD+="<li>Wild Resilience [Level 16]</li>\r";
  SWD+="<li>Shifting WIlds Strike [paragon attack 11]</li>\r";
  SWD+="<li>Press the Kill [paragon utility 12]</li>\r";
  SWD+="<li>Wildrunner's Rage [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_studentoftheseven)
 {
  SWD+="<p>Student of the Seven<p><ul>";
  SWD+="<li>Daily Mastery [Level 11]</li>\r";
  SWD+="<li>Versatile Action [Level 11]</li>\r";
  SWD+="<li>Compensatory Insight [Level 16]</li>\r";
  SWD+="<li>Anyspell [paragon attack 11]</li>\r";
  SWD+="<li>Versatile Glamor [paragon utility 12]</li>\r";
  SWD+="<li>Voice of the Seven [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_summerrhymer)
 {
  SWD+="<p>Summer Rhymer<p><ul>";
  SWD+="<li>Feypath [Level 11]</li>\r";
  SWD+="<li>The Queen's Grace [Level 11]</li>\r";
  SWD+="<li>Judgment of the Summer Court [Level 16]</li>\r";
  SWD+="<li>Song of the Queen's Protection [paragon attack 11]</li>\r";
  SWD+="<li>Song of Spiral Paths [paragon utility 12]</li>\r";
  SWD+="<li>Song of the High Court [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_voiceofthunder)
 {
  SWD+="<p>Voice of Thunder<p><ul>";
  SWD+="<li>Voice of Thunder [Level 11]</li>\r";
  SWD+="<li>Voice to Wake the Dead [Level 11]</li>\r";
  SWD+="<li>Booming Words [Level 16]</li>\r";
  SWD+="<li>Rolling Echo [paragon attack 11]</li>\r";
  SWD+="<li>Doom Echo [paragon utility 12]</li>\r";
  SWD+="<li>Song of Thunder [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_warchanter)
 {
  SWD+="<p>War Chanter<p><ul>";
  SWD+="<li>Inspire by Example [Level 11]</li>\r";
  SWD+="<li>Inspire by Word [Level 11]</li>\r";
  SWD+="<li>Inspire by Deed [Level 16]</li>\r";
  SWD+="<li>Victorious Smite [paragon attack 11]</li>\r";
  SWD+="<li>Battle Chant [paragon utility 12]</li>\r";
  SWD+="<li>Visoins of Victory [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_bloodmoonstalker)
 {
  SWD+="<p>Bloodmoon Stalker<p><ul>";
  SWD+="<li>Blood Moon Action [Level 11]</li>\r";
  SWD+="<li>Blood Moon Hunger [Level 11]</li>\r";
  SWD+="<li>Frenzied Claws [Level 16]</li>\r";
  SWD+="<li>Blood Moon Frenzy [paragon attack 11]</li>\r";
  SWD+="<li>Feral Accuracy [paragon utility 12]</li>\r";
  SWD+="<li>Nature's Grave [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_guardianofthelivinggate)
 {
  SWD+="<p>Guardian of the Living Gate<p><ul>";
  SWD+="<li>Guardian Action [Level 11]</li>\r";
  SWD+="<li>Entwining Evocation [Level 11]</li>\r";
  SWD+="<li>Enduring Spirit [Level 16]</li>\r";
  SWD+="<li>First Ward of the Living Gate [paragon attack 11]</li>\r";
  SWD+="<li>Second Ward of the Living Gate [paragon utility 12]</li>\r";
  SWD+="<li>Third Ward of the Living Gate [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_keeperofthehiddenflame)
 {
  SWD+="<p>Keeper of the Hidden Flame<p><ul>";
  SWD+="<li>Keeper's Action [Level 11]</li>\r";
  SWD+="<li>Fury of the Hidden Flame [Level 11]</li>\r";
  SWD+="<li>Leap to the Fray [Level 16]</li>\r";
  SWD+="<li>Summon the Beast [paragon attack 11]</li>\r";
  SWD+="<li>Spark of Fury [paragon utility 12]</li>\r";
  SWD+="<li>Sprit of the Beast [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_skyhunter)
 {
  SWD+="<p>Sky Hunter<p><ul>";
  SWD+="<li>Sky Hunter's Action [Level 11]</li>\r";
  SWD+="<li>Master of Wings [Level 11]</li>\r";
  SWD+="<li>Beast Senses [Level 16]</li>\r";
  SWD+="<li>Blinding Talons [paragon attack 11]</li>\r";
  SWD+="<li>Soaring Falcon [paragon utility 12]</li>\r";
  SWD+="<li>Primal Eagle [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_angelicaspect)
 {
  SWD+="<p>Angelic Aspect<p><ul>";
  SWD+="<li>Wings of Action [Level 11]</li>\r";
  SWD+="<li>Angelic Resistance [Level 11]</li>\r";
  SWD+="<li>Angelic Emanation [Level 16]</li>\r";
  SWD+="<li>Angelic Blades [paragon attack 11]</li>\r";
  SWD+="<li>Shielding Nimbus [paragon utility 12]</li>\r";
  SWD+="<li>Coldfire Pillar [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_blightspeaker)
 {
  SWD+="<p>Blight Speaker<p><ul>";
  SWD+="<li>Blighting Action [Level 11]</li>\r";
  SWD+="<li>Dissolution's Call [Level 11]</li>\r";
  SWD+="<li>Echoed Malediction [Level 16]</li>\r";
  SWD+="<li>Chains of Death [paragon attack 11]</li>\r";
  SWD+="<li>False Life [paragon utility 12]</li>\r";
  SWD+="<li>Endbringer [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_flameofhope)
 {
  SWD+="<p>Flame of Hope<p><ul>";
  SWD+="<li>Inspiring Attack Action [Level 11]</li>\r";
  SWD+="<li>Enduring Hope [Level 11]</li>\r";
  SWD+="<li>Righteous Resurgence [Level 16]</li>\r";
  SWD+="<li>Numinous Cascade [paragon attack 11]</li>\r";
  SWD+="<li>Blinding Ward [paragon utility 12]</li>\r";
  SWD+="<li>Sunburst Bulwark [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_hammerofvengeance)
 {
  SWD+="<p>Hammer of Vengeance<p><ul>";
  SWD+="<li>Lingering Rebuke [Level 11]</li>\r";
  SWD+="<li>Enduring Castigation [Level 11]</li>\r";
  SWD+="<li>Penance [Level 16]</li>\r";
  SWD+="<li>Mark of Castigation [paragon attack 11]</li>\r";
  SWD+="<li>THundering Summons [paragon utility 12]</li>\r";
  SWD+="<li>Warding Thunder [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_discipleoftheworldserpent)
 {
  SWD+="<p>Disciple of the World Serpent<p><ul>";
  SWD+="<li>Grasping Spirit [Level 11]</li>\r";
  SWD+="<li>Spirit Shaman's Bounty [Level 11]</li>\r";
  SWD+="<li>Spirit Venom [Level 16]</li>\r";
  SWD+="<li>Serpent's Rebuke [paragon attack 11]</li>\r";
  SWD+="<li>Seal of the SErpent [paragon utility 12]</li>\r";
  SWD+="<li>Crush of the Serpent [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_ghostpanther)
 {
  SWD+="<p>Ghost Panther<p><ul>";
  SWD+="<li>Ghost Panther's Wisdom [Level 11]</li>\r";
  SWD+="<li>Ghost Panther Action [Level 11]</li>\r";
  SWD+="<li>Panther Ancestors [Level 16]</li>\r";
  SWD+="<li>Predator Spirit [paragon attack 11]</li>\r";
  SWD+="<li>Great Cat's Dodge [paragon utility 12]</li>\r";
  SWD+="<li>Ghost Panther Spiral [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_greatbearshaman)
 {
  SWD+="<p>Great Bear Shaman<p><ul>";
  SWD+="<li>Great Protector's Prowess [Level 11]</li>\r";
  SWD+="<li>Great Bear's Action [Level 11]</li>\r";
  SWD+="<li>Looming Presence [Level 16]</li>\r";
  SWD+="<li>Bear Fang Defense [paragon attack 11]</li>\r";
  SWD+="<li>Galvanizing Bellow [paragon utility 12]</li>\r";
  SWD+="<li>Call to the Great Bear [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_spirittempest)
 {
  SWD+="<p>Spirit Tempest<p><ul>";
  SWD+="<li>Spirit Wind Action [Level 11]</li>\r";
  SWD+="<li>Healing Guides [Level 11]</li>\r";
  SWD+="<li>Spirit Combatant [Level 16]</li>\r";
  SWD+="<li>Spirit Tide [paragon attack 11]</li>\r";
  SWD+="<li>Spirit Flow [paragon utility 12]</li>\r";
  SWD+="<li>Spirit Storm [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_arcanewellspring)
 {
  SWD+="<p>Arcane Wellspring<p><ul>";
  SWD+="<li>Double Resistance [Level 11]</li>\r";
  SWD+="<li>Split Spell Action [Level 11]</li>\r";
  SWD+="<li>Antagonistic Transposition [Level 16]</li>\r";
  SWD+="<li>Twin Bolt [paragon attack 11]</li>\r";
  SWD+="<li>Sorcerous Wings [paragon utility 12]</li>\r";
  SWD+="<li>Sorcerous Metamorphosis [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_demonskinadept)
 {
  SWD+="<p>Demonskin Adept<p><ul>";
  SWD+="<li>Demon Fury [Level 11]</li>\r";
  SWD+="<li>Variable Resistance  [Level 11]</li>\r";
  SWD+="<li>Glimpse of the Abyss [Level 16]</li>\r";
  SWD+="<li>Demon-Soul Bolts [paragon attack 11]</li>\r";
  SWD+="<li>Demonic Wrath [paragon utility 12]</li>\r";
  SWD+="<li>Swords of the Marilith [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_dragonsoulheir)
 {
  SWD+="<p>Dragonsoul Heir<p><ul>";
  SWD+="<li>Draconic Durability [Level 11]</li>\r";
  SWD+="<li>Draconic Resilience [Level 11]</li>\r";
  SWD+="<li>Dragon Soul Resistance [Level 16]</li>\r";
  SWD+="<li>Breath of the Dragon Soul [paragon attack 11]</li>\r";
  SWD+="<li>Dragon's Revenge [paragon utility 12]</li>\r";
  SWD+="<li>Veil of the Dragon [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_wildmage)
 {
  SWD+="<p>Wild Mage<p><ul>";
  SWD+="<li>Chaos Action [Level 11]</li>\r";
  SWD+="<li>Wild Surge [Level 11]</li>\r";
  SWD+="<li>Critical Surge [Level 16]</li>\r";
  SWD+="<li>Tempest Surge [paragon attack 11]</li>\r";
  SWD+="<li>Torrent of Power [paragon utility 12]</li>\r";
  SWD+="<li>Prismatic Bolt [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_bloodwrathguardian)
 {
  SWD+="<p>Bloodwrath Guardian<p><ul>";
  SWD+="<li>Furious Action [Level 11]</li>\r";
  SWD+="<li>Bloodwrath Stride  [Level 11]</li>\r";
  SWD+="<li>Bloodwrath Fury [Level 16]</li>\r";
  SWD+="<li>Bloodwrath Strike [paragon attack 11]</li>\r";
  SWD+="<li>Warding Frenzy [paragon utility 12]</li>\r";
  SWD+="<li>Form of the Primal Beast [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_hornedchampion)
 {
  SWD+="<p>Horned Champion<p><ul>";
  SWD+="<li>Vicious Action [Level 11]</li>\r";
  SWD+="<li>Fervent Pursuit [Level 11]</li>\r";
  SWD+="<li>Blessing of SPring [Level 16]</li>\r";
  SWD+="<li>Zealous Strike [paragon attack 11]</li>\r";
  SWD+="<li>IMpetuous Stride [paragon utility 12]</li>\r";
  SWD+="<li>Form of the Leaping Stag [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_stormsentinel)
 {
  SWD+="<p>Storm Sentinel<p><ul>";
  SWD+="<li>Invigorating Action [Level 11]</li>\r";
  SWD+="<li>Critical Jolt [Level 11]</li>\r";
  SWD+="<li>Undying Wind [Level 16]</li>\r";
  SWD+="<li>Thunder Smash [paragon attack 11]</li>\r";
  SWD+="<li>Storm Step [paragon utility 12]</li>\r";
  SWD+="<li>Form of Storm's Wrath [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}

if (paragon_verdantlord)
 {
  SWD+="<p>Verdant Lord<p><ul>";
  SWD+="<li>Reaching Action [Level 11]</li>\r";
  SWD+="<li>Writhing Roots [Level 11]</li>\r";
  SWD+="<li>Iron Boughs [Level 16]</li>\r";
  SWD+="<li>Falling Tre Strike [paragon attack 11]</li>\r";
  SWD+="<li>Awaken the Forest [paragon utility 12]</li>\r";
  SWD+="<li>Form of the Verdant Lord [paragon attack 20]</li>\r";
  SWD+="</ul><p>"}



// kurwa describe it

//if (paragon_xxx)
// {
//  SWD+="<p>xxx<p><ul>"; 
//  SWD+="<li>xxx [Level 11]</li>\r"; 
//  SWD+="<li>xxx [Level 11]</li>\r"; 
//  SWD+="<li>xxx [Level 16]</li>\r"; 
//  SWD+="<li>xxx [paragon attack 11]</li>\r"; 
//  SWD+="<li>xxx [paragon utility 12]</li>\r"; 
//  SWD+="<li>xxx [paragon attack 20]</li>\r"; 
//  SWD+="</ul><p>"
// }






if (paragon_multiclass)
 {
  SWD+="<p>Multiclass Paragon<p><ul>";
  stringy="a sideclass";
  if (feat_versatilemaster){stringy="any class's"}
  SWD+="<li>Swap out a class for a sideclass at-will power [Level 11]</li>\r"; 
  SWD+="<li>Choose "+stringy+" encounter power of level 7 or less [Level 11]</li>\r"; 
  SWD+="<li>Choose "+stringy+" utility power of level 10 or less [Level 12]</li>\r"; 
  SWD+="<li>Choose "+stringy+" daily power of level 19 or less [Level 20]</li>\r";
  SWD+="<li>This will take some hand-editing!  Thanks for understanding.</li>\r";
  SWD+="</ul><p>"
 }

if (paragon_other)
 {
  SWD+="<p>"+document.form1.otherparagonpath.value+":<p><img src=spellbar.gif>"; 
 }

if (epic_archmage)
 {
  SWD+="<p>Archmage:<p><ul>"; 
  SWD+="<li>Spell Recall [Level 21]</li>\r"; 
  SWD+="<li>Arcane Spirit [Level 24]</li>\r"; 
  SWD+="<li>Shape Magic [Level 26 Utility]</li>\r"; 
  SWD+="<li>Archspell [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }

if (epic_deadlytrickster)
 {
  SWD+="<p>Deadly Trickster:<p><ul>"; 
  SWD+="<li>Sly Fortune's Favor [Level 21]</li>\r"; 
  SWD+="<li>Trickster's Control [Level 24]</li>\r"; 
  SWD+="<li>Epic Trick [Level 26 Utility]</li>\r"; 
  SWD+="<li>Trickster's Disposition [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }

if (epic_demigod)
 {
  SWD+="<p>Demigod:<p><ul>"; 
  SWD+="<li>Divine Spark [Level 21, already included]</li>\r"; 
  SWD+="<li>Divine Recovery [Level 24]</li>\r"; 
  SWD+="<li>Divine Regeneration [Level 26 Utility]</li>\r"; 
  SWD+="<li>Divine Miracle [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }

if (epic_chosen)
 {
  SWD+="<p>Chosen:<p><ul>"; 
  SWD+="<li>Divine Spark [Level 21, already included]</li>\r"; 
  SWD+="<li>Divine Recovery [Level 24]</li>\r"; 
  SWD+="<li>Special Sect Utility [Level 26 Utility]</li>\r"; 
  SWD+="<li>Divine Miracle [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }

if (epic_eternalseeker)
 {
  SWD+="<p>Eternal Seeker:<p><ul>"; 
  SWD+="<li>Seeker of the Many Paths [Level 21]</li>\r"; 
  SWD+="<li>Eternal Action [Level 24]</li>\r"; 
  SWD+="<li>Seeker's Lore [Level 26]</li>\r"; 
  SWD+="<li>Seeking Destiny [Level 30]  Your choice:</li>\r"; 
  SWD+="</ul><p>"
 }

if (epic_adamantinesoldier)
 {
  SWD+="<p>Adamantine Soldier:<p><ul>"; 
  SWD+="<li>Armor Supremacy [Level 21]</li>\r"; 
  SWD+="<li>Unbreakable Skin [Level 24]</li>\r"; 
  SWD+="<li>Inexorable Advance [Level 26 Utility]</li>\r"; 
  SWD+="<li>Hard to Kill [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }


if (epic_beastlord)
 {
  SWD+="<p>Beastlord:<p><ul>"; 
  SWD+="<li>Ultimate Understanding [Level 21]</li>\r"; 
  SWD+="<li>Fused Fate [Level 24]</li>\r"; 
  SWD+="<li>QUickened Companion [Level 26 Utility]</li>\r"; 
  SWD+="<li>Shared Life [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }


if (epic_darkwanderer)
 {
  SWD+="<p>Dark Wanderer:<p><ul>"; 
  SWD+="<li>Not My Destiny [Level 21]</li>\r"; 
  SWD+="<li>Dark Road [Level 24]</li>\r"; 
  SWD+="<li>Never at a Loss [Level 26 Utility]</li>\r"; 
  SWD+="<li>Long Walk Back [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }


if (epic_eternaldefender)
 {
  SWD+="<p>Eternal Defender:<p><ul>"; 
  SWD+="<li>Unending Strength [Level 21]</li>\r"; 
  SWD+="<li>Godlike Stature [Level 24]</li>\r"; 
  SWD+="<li>Implacable Destruction [Level 26 Utility]</li>\r"; 
  SWD+="<li>Great Power [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }

if (epic_godhunter)
 {
  SWD+="<p>Godhunter:<p><ul>"; 
  SWD+="<li>Peerless Predator [Level 21]</li>\r"; 
  SWD+="<li>Deific Agony [Level 24]</li>\r"; 
  SWD+="<li>Deicidal Eye [Level 26 Utility]</li>\r"; 
  SWD+="<li>Blasphenous Recovery [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }


if (epic_legendarygeneral)
 {
  SWD+="<p>Legendary General:<p><ul>"; 
  SWD+="<li>Mythic Inspiration [Level 21]</li>\r"; 
  SWD+="<li>Legendary Tactical Action [Level 24]</li>\r"; 
  SWD+="<li>Legendary Exploits [Level 26 Utility]</li>\r"; 
  SWD+="<li>Unyielding Company [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }


if (epic_martialarchetype)
 {
  SWD+="<p>Martial Archetype:<p><ul>"; 
  SWD+="<li>Archetype's Edge [Level 21]</li>\r"; 
  SWD+="<li>Reliable Warrior [Level 24]</li>\r"; 
  SWD+="<li>Warrior's Ascent [Level 26 Utility]</li>\r"; 
  SWD+="<li>Perfect Warrior [Level 30].  The program assumes you will want an extra level 20+ power.</li>\r"; 
  SWD+="</ul><p>"
 }

if (epic_undyingwarrior)
 {
  SWD+="<p>Undying Warrior:<p><ul>"; 
  SWD+="<li>Wounded Resurgence [Level 21]</li>\r"; 
  SWD+="<li>Undying Stamina [Level 24]</li>\r"; 
  SWD+="<li>Unding Enmity [Level 26 Utility]</li>\r"; 
  SWD+="<li>Spontaneous Resurrection [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }


if (epic_warmaster)
 {
  SWD+="<p>Epic Warmaster:<p><ul>"; 
  SWD+="<li>Tactical Awareness [Level 21]</li>\r"; 
  SWD+="<li>Shock and Awe [Level 24]</li>\r"; 
  SWD+="<li>Spring the Trap [Level 26 Utility]</li>\r"; 
  SWD+="<li>Tactical Genius [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }


if (epic_perfectassassin)
 {
  SWD+="<p>Perfect Assassin:<p><ul>"; 
  SWD+="<li>Death's Eye [Level 21]</li>\r"; 
  SWD+="<li>Assassin's Advantage [Level 24]</li>\r"; 
  SWD+="<li>Spirit of Death [Level 26 Utility]</li>\r"; 
  SWD+="<li>Pierce the Weakness [Level 30]</li>\r"; 
  SWD+="</ul><p>"
 }


if (epic_fatesinger)
 {
  SWD+="<p>Fatesinger:<p><ul>";
  SWD+="<li>Destiny Fulfilled [Level 21]</li>\r";
  SWD+="<li>Fate's Clarity [Level 24]</li>\r";
  SWD+="<li>Fragment of the Song [Level 26 Utility]</li>\r";
  SWD+="<li>Heroic Inspiration [Level 30]</li>\r";
  SWD+="</ul><p>"
  }

if (epic_gloriousspirit)
 {
  SWD+="<p>Glorious Spirit:<p><ul>";
  SWD+="<li>Worthy Foe [Level 21]</li>\r";
  SWD+="<li>Seeker of Foes [Level 24]</li>\r";
  SWD+="<li>Spirit Steed [Level 26 Utility]</li>\r";
  SWD+="<li>Bearer of Doom [Level 30]</li>\r";
  SWD+="</ul><p>"
  }

if (epic_harbingerofdoom)
 {
  SWD+="<p>Harbinger of Doom:<p><ul>";
  SWD+="<li>Shield of Ill Fortune [Level 21]</li>\r";
  SWD+="<li>Master of Ill Fortune [Level 24]</li>\r";
  SWD+="<li>Cloak ofDoom [Level 26 Utility]</li>\r";
  SWD+="<li>Dom's Reward [Level 30]</li>\r";
  SWD+="</ul><p>"
  }

if (epic_lorekeeper)
 {
  SWD+="<p>Lorekeeper:<p><ul>";
  SWD+="<li>Lorekeeper'sWisdom [Level 21]</li>\r";
  SWD+="<li>Lorekeeper's Cunning [Level 24]</li>\r";
  SWD+="<li>True Name [Level 26 Utility]</li>\r";
  SWD+="<li>Lorekeeper's Revelation [Level 30]</li>\r";
  SWD+="</ul><p>"
  }

if (epic_primalavatar)
 {
  SWD+="<p>Primal Avatar:<p><ul>";
  SWD+="<li>Primal Travel [Level 21]</li>\r";
  SWD+="<li>SpiritBoon [Level 24]</li>\r";
  SWD+="<li>Walk with the Spirits [Level 26 Utility]</li>\r";
  SWD+="<li>Eternal Return [Level 30]</li>\r";
  SWD+="</ul><p>"
  }

if (epic_reveredone)
 {
  SWD+="<p>Revered One:<p><ul>";
  SWD+="<li>Immortal Foe [Level 21]</li>\r";
  SWD+="<li>Manifest the Divine [Level 24]</li>\r";
  SWD+="<li>Serene Protection [Level 26 Utility]</li>\r";
  SWD+="<li>Bestow Grace [Level 30]</li>\r";
  SWD+="</ul><p>"
  }



//if (epic_xxx)
// {
//  SWD+="<p>xxx:<p><ul>"; 
//  SWD+="<li>xxx [Level 21]</li>\r"; 
//  SWD+="<li>xxx [Level 24]</li>\r"; 
//  SWD+="<li>xxx [Level 26 Utility]</li>\r"; 
//  SWD+="<li>xxx [Level 30]</li>\r"; 
//  SWD+="</ul><p>"
// }




if (epic_other)
 {
  SWD+="<p>"+document.form1.otherepicdestiny.value+" [hand-edit] :<p><ul>";
  
  if (raise_str_otherepic){SWD+="<li>+2 to strength [Level 21]</li>\r";}
  if (raise_con_otherepic){SWD+="<li>+2 to constitution [Level 21]</li>\r";}
  if (raise_dex_otherepic){SWD+="<li>+2 to dexterity [Level 21]</li>\r";}
  if (raise_int_otherepic){SWD+="<li>+2 to intelligence [Level 21]</li>\r";}
  if (raise_wis_otherepic){SWD+="<li>+2 to wisdom [Level 21]</li>\r";}
  if (raise_chr_otherepic){SWD+="<li>+2 to charisma [Level 21]</li>\r";}
  SWD+="</ul><img src=spellbar.gif><p>";
 }

   SWD +="</table>\r<p><table width=100%><tr width=100%><td align=\"center\"><img src=\"portrait.gif\"></td><td align=\"center\"><img src=\"insignia.gif\"></td></tr></table>\r<p>"
   



   if (document.form1.moniker.value==""){SWD +="Equipment:<p><ul><p>"}
   else {SWD +=document.form1.moniker.value + "'s Equipment:<p><ul><p>"}


SWD +="<table><tr><td align=\"right\"><font face=\"Arial\">"
x=Math.ceil(wt);  
SWD +=x + " lb<br>\r"; 
if (document.form1.arrows.selectedIndex>0)
 {x=Math.ceil(3*document.form1.arrows.selectedIndex); 
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.crossbowbolts.selectedIndex>0)
 {x=2*Math.ceil(1*document.form1.crossbowbolts.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.slingbullets.selectedIndex>0)
 {x=Math.ceil(5*document.form1.slingbullets.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }


if (document.form1.backpack.checked==true)
 {x=2; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.barrel.checked==true)
 {x=30; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.basket.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.bedroll.checked==true)
 {x=5; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.bell.checked==true)
 {SWD +="<br>\r"}
if (document.form1.blanketwinter_list.selectedIndex>0)
 {
  x=Math.ceil(3*document.form1.blanketwinter_list.selectedIndex)
//  if (small==true){x=Math.ceil(0.75*document.form1.blanketwinter_list.selectedIndex)}
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.blockandtackle.checked==true)
 {x=5; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.bottle.checked==true)
 {SWD +="<br>\r"}
if (document.form1.bucket.checked==true)
 {x=2; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.caltrops.checked==true)
 {x=2; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.candle.checked==true)
 {SWD +="<br>\r"}
if (document.form1.canvas.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.casemaporscroll.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.chain.selectedIndex>0)
 {x=Math.ceil(2*document.form1.chain.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.chalk.checked==true)
 {SWD +="<br>\r"}
if (document.form1.chest.checked==true)
 {x=25; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.crowbar.checked==true)
 {x=5; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.everburningtorch.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.firewood.selectedIndex>0)
 {x=Math.ceil(20*document.form1.firewood.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.fishhook.checked==true)
 {SWD +="<br>\r"}
if (document.form1.fishingnet.checked==true)
 {x=5; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.flask.selectedIndex>0)
 {x=Math.ceil(1.5*document.form1.flask.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.flintandsteel.checked==true)
 {SWD +="<br>\r"}
if (document.form1.grapplinghook.checked==true)
 {x=4; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.hammer.checked==true)
 {x=2; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.inkvial.checked==true)
 {SWD +="<br>\r"}
if (document.form1.inkpen.checked==true)
 {SWD +="<br>\r"}
if (document.form1.journeybread.selectedIndex>0)
 {x=document.form1.journeybread.selectedIndex; 
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.jugclay.checked==true)
 {x=9; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.ladder.checked==true)
 {x=20; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.lampcommon.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}

if (document.form1.lanternbullseye.checked==true)
 {x=3; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.lanternhooded.checked==true)
 {x=2; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.lanternoil.selectedIndex>0)
 {x=Math.ceil(1*document.form1.lanternoil.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.lock.selectedIndex>0)
 {x=Math.ceil(1*document.form1.lock.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.manacles.selectedIndex>0)
 {x=Math.ceil(2*document.form1.manacles.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.mirror.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.mug.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.oilflask.selectedIndex>0)
 {x=Math.ceil(1*document.form1.oilflask.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.paper.selectedIndex>0)
 {x=Math.ceil(0*document.form1.paper.selectedIndex)
  SWD +="<br>\r"; wt +=0; }
if (document.form1.parchment.selectedIndex>0)
 {x=Math.ceil(0*document.form1.parchment.selectedIndex)
  SWD +="<br>\r"; wt +=0; }
if (document.form1.pick.checked==true)
 {x=10; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.pitcher.checked==true)
 {x=5; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.pitons.selectedIndex>0)
 {x=5*document.form1.pitons.selectedIndex; 
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.pole.checked==true)
 {x=8; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.pot.checked==true)
 {x=10; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.beltpouch.selectedIndex>0)
 {
  x=Math.ceil(0.5*document.form1.beltpouch.selectedIndex)
//  if (small==true){x=Math.ceil(0.125*document.form1.beltpouch.selectedIndex)}
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.ram.checked==true)
 {x=20; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.rations.selectedIndex>0)
 {
  x=Math.ceil(1*document.form1.rations.selectedIndex)
  //if (small==true){x=Math.ceil(0.25*document.form1.rations.selectedIndex)}
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.ropehempen.selectedIndex>0)
 {x=Math.ceil(10*document.form1.ropehempen.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.ropesilk.selectedIndex>0)
 {x=Math.ceil(5*document.form1.ropesilk.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.sack.selectedIndex>0)
 {x=Math.ceil(0.5*document.form1.sack.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }

if (document.form1.sealingwax.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.sewingneedle.checked==true)
 {SWD +="<br>\r"}
if (document.form1.signalwhistle.checked==true)
 {SWD +="<br>\r"}
if (document.form1.signetring.checked==true)
 {SWD +="<br>\r"}
if (document.form1.sledge.checked==true)
 {x=10; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.soap.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.spadeorshovel.checked==true)
 {x=8; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.spyglass.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.sunrods.selectedIndex>0)
 {x=Math.ceil(document.form1.sunrods.selectedIndex); 
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.tent.checked==true)
 {
  x=20; 
//  if (small==true){x=5; }
  wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.torch.selectedIndex>0)
 {x=Math.ceil(1*document.form1.torch.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.vialinkorpotion.selectedIndex>0)
 {x=Math.ceil(0.1*document.form1.vialinkorpotion.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.waterskin.selectedIndex>0)
 {
  x=Math.ceil(4*document.form1.waterskin.selectedIndex)
//  if (small==true){x=Math.ceil(1*document.form1.waterskin.selectedIndex)}
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.whetstone.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.alchemistlab.checked==true)
 {x=40; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.artisantools.checked==true)
 {x=5; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.disguisekit.checked==true)
 {
  x=8; 
   //if (small==true){x=2; }
   wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.healerkit.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.hollyandmistletoe.checked==true)
 {SWD +="<br>\r"}
if (document.form1.holysymbolwooden.checked==true)
 {SWD +="<br>\r"}
if (document.form1.holysymbolsilver.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.hourglass.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.magnifyingglass.checked==true)
 {SWD +="<br>\r"}
if (document.form1.musicalinstrument.checked==true)
 {
  x=3; 
  // if (small==true){x=1; }
   wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.orb_box.checked==true)
 { x=2; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.ritualbook.selectedIndex>0)
 {x=Math.ceil(3*document.form1.ritualbook.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.spellcomponentpouch.checked==true)
 {SWD +="<br>\r"}
if (document.form1.rod_box.checked==true)
 {x=2; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.scale.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.spellbook.selectedIndex>0)
 {x=Math.ceil(3*document.form1.spellbook.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.thievestools.checked==true)
 {x=1; wt +=x; SWD +=x + " lb<br>\r"}
if (document.form1.tool.selectedIndex>0)
 {x=Math.ceil(2*document.form1.tool.selectedIndex)
  SWD +=x + " lb<br>\r"; wt +=x; }
if (document.form1.wand_box.checked==true)
 {SWD+="<br>\r"}
x=Math.ceil(wt);  
SWD +="_____<br>\r" + x + " lb"; 


SWD +="</td><td><font face=\"Arial\">"
SWD +="Weapons / Armor / Shield (from above)<br>\r"; 
if (document.form1.arrows.selectedIndex>0)
 {SWD +="Arrows (quiver of 30) x" + document.form1.arrows.selectedIndex + "<br>\r"; }
if (document.form1.crossbowbolts.selectedIndex>0)
 {SWD +="Crossbow bolts (quiver of 20) x" + document.form1.crossbowbolts.selectedIndex + "<br>\r"; }
if (document.form1.slingbullets.selectedIndex>0)
 {SWD +="Sling bullets (group of 20) x" + document.form1.slingbullets.selectedIndex + "<br>\r"; }


if (document.form1.backpack.checked==true)
 {SWD +="Backpack<br>\r"}
if (document.form1.barrel.checked==true)
 {SWD +="Barrel<br>\r"}
if (document.form1.basket.checked==true)
 {SWD +="Basket<br>\r"}
if (document.form1.bedroll.checked==true)
 {SWD +="Bedroll<br>\r"}
if (document.form1.bell.checked==true)
 {SWD +="Bell<br>\r"}
if (document.form1.blanketwinter_list.selectedIndex>0)
 {SWD +="Blanket, winter x" + document.form1.blanketwinter_list.selectedIndex + "<br>\r"; }
if (document.form1.blockandtackle.checked==true)
 {SWD +="Block and tackle<br>\r"}
if (document.form1.bottle.checked==true)
 {SWD +="Bottle<br>\r"}
if (document.form1.bucket.checked==true)
 {SWD +="Bucket<br>\r"}
if (document.form1.caltrops.checked==true)
 {SWD +="Caltrops<br>\r"}
if (document.form1.candle.checked==true)
 {SWD +="Candle<br>\r"}
if (document.form1.canvas.checked==true)
 {SWD +="Canvas (10 x 10)<br>\r"}
if (document.form1.casemaporscroll.checked==true)
 {SWD +="Case (for map or scroll)<br>\r"}
if (document.form1.chain.selectedIndex>0)
 {SWD +="Chain (10 feet) x" + document.form1.chain.selectedIndex + "<br>\r"; }
if (document.form1.chalk.checked==true)
 {SWD +="Chalk<br>\r"}
if (document.form1.chest.checked==true)
 {SWD +="Chest<br>\r"}
if (document.form1.crowbar.checked==true)
 {SWD +="Crowbar<br>\r"}
if (document.form1.everburningtorch.checked==true)
 {SWD +="Everburning torch<br>\r"}
if (document.form1.firewood.selectedIndex>0)
 {SWD +="Firewood (1 day) x" + document.form1.firewood.selectedIndex + "<br>\r"; }
if (document.form1.fishhook.checked==true)
 {SWD +="Fishhook<br>\r"}
if (document.form1.fishingnet.checked==true)
 {SWD +="Fishing net<br>\r"}
if (document.form1.flask.selectedIndex>0)
 {SWD +="Flasks x" + document.form1.flask.selectedIndex + "<br>\r"; }
if (document.form1.flintandsteel.checked==true)
 {SWD +="Flint and steel<br>\r"}
if (document.form1.grapplinghook.checked==true)
 {SWD +="Grappling hook<br>\r"}
if (document.form1.hammer.checked==true)
 {SWD +="Hammer<br>\r"}
if (document.form1.inkvial.checked==true)
 {SWD +="Ink vial<br>\r"}
if (document.form1.inkpen.checked==true)
 {SWD +="Ink pen<br>\r"}
if (document.form1.journeybread.selectedIndex>0)
 {SWD +="Journeybread x" + (10*document.form1.journeybread.selectedIndex) + "<br>\r"; }
if (document.form1.jugclay.checked==true)
 {SWD +="Jug (clay)<br>\r"}
if (document.form1.ladder.checked==true)
 {SWD +="Ladder<br>\r"}
if (document.form1.lampcommon.checked==true)
 {SWD +="Lamp (common)<br>\r"}
if (document.form1.lanternbullseye.checked==true)
 {SWD +="Lantern (bullseye)<br>\r"}
if (document.form1.lanternhooded.checked==true)
 {SWD +="Lantern (hooded)<br>\r"}
if (document.form1.lanternoil.selectedIndex>0)
 {SWD +="Lantern oil (pints) x" + document.form1.lanternoil.selectedIndex + "<br>\r"; }
if (document.form1.lock.selectedIndex>0)
 {SWD +="Locks x" + document.form1.lock.selectedIndex + "<br>\r"; }
if (document.form1.manacles.selectedIndex>0)
 {SWD +="Manacles x" + document.form1.manacles.selectedIndex + "<br>\r"; }
if (document.form1.mirror.checked==true)
 {SWD +="Mirror<br>\r"}
if (document.form1.mug.checked==true)
 {SWD +="Mug<br>\r"}
if (document.form1.oilflask.selectedIndex>0)
 {SWD +="Oil flasks x" + document.form1.oilflask.selectedIndex + "<br>\r"; }
if (document.form1.paper.selectedIndex>0)
 {SWD +="Paper sheets x" + document.form1.paper.selectedIndex + "<br>\r"; }
if (document.form1.parchment.selectedIndex>0)
 {SWD +="Parchment sheets x" + document.form1.parchment.selectedIndex + "<br>\r"; }
if (document.form1.pick.checked==true)
 {SWD +="Pick<br>\r"}
if (document.form1.pitcher.checked==true)
 {SWD +="Pitcher<br>\r"}
if (document.form1.pitons.selectedIndex>0)
 {SWD +="Pitons x" + (10*document.form1.pitons.selectedIndex) + "<br>\r"; }
if (document.form1.pole.checked==true)
 {SWD +="Pole<br>\r"}
if (document.form1.pot.checked==true)
 {SWD +="Pot<br>\r"}
if (document.form1.beltpouch.selectedIndex>0)
 {SWD +="Pouch (belt) x" + document.form1.beltpouch.selectedIndex + "<br>\r"; }
if (document.form1.ram.checked==true)
 {SWD +="Ram<br>\r"}
if (document.form1.rations.selectedIndex>0)
 {SWD +="Rations (1 day) x" + document.form1.rations.selectedIndex + "<br>\r"; }
if (document.form1.ropehempen.selectedIndex>0)
 {SWD +="Rope (50', hempen) x" + document.form1.ropehempen.selectedIndex + "<br>\r"; }
if (document.form1.ropesilk.selectedIndex>0)
 {SWD +="Rope (50', silk) x" + document.form1.ropesilk.selectedIndex + "<br>\r"; }
if (document.form1.sack.selectedIndex>0)
 {SWD +="Sacks x" + document.form1.sack.selectedIndex + "<br>\r"; }

if (document.form1.sealingwax.checked==true)
 {SWD +="Sealing wax<br>\r"}
if (document.form1.sewingneedle.checked==true)
 {SWD +="Sewing needle<br>\r"}
if (document.form1.signalwhistle.checked==true)
 {SWD +="Signal whistle<br>\r"}
if (document.form1.signetring.checked==true)
 {SWD +="Signet ring<br>\r"}
if (document.form1.sledge.checked==true)
 {SWD +="Sledge<br>\r"}
if (document.form1.soap.checked==true)
 {SWD +="Soap<br>\r"}
if (document.form1.spadeorshovel.checked==true)
 {SWD +="Spade / shovel<br>\r"}
if (document.form1.spyglass.checked==true)
 {SWD +="Spyglass<br>\r"}
if (document.form1.sunrods.selectedIndex>0)
 {SWD +="Sunrods x" + document.form1.sunrods.selectedIndex + "<br>\r"; }
if (document.form1.tent.checked==true)
 {SWD +="Tent<br>\r"}
if (document.form1.torch.selectedIndex>0)
 {SWD +="Torches x" + document.form1.torch.selectedIndex + "<br>\r"; }
if (document.form1.vialinkorpotion.selectedIndex>0)
 {SWD +="Vial (for ink or potions) x" + document.form1.vialinkorpotion.selectedIndex + "<br>\r"; }
if (document.form1.waterskin.selectedIndex>0)
 {SWD +="Waterskins x" + document.form1.waterskin.selectedIndex + "<br>\r"; }
if (document.form1.whetstone.checked==true)
 {SWD +="Whetstone<br>\r"}
if (document.form1.alchemistlab.checked==true)
 {SWD +="Alchemist lab<br>\r"}
if (document.form1.artisantools.checked==true)
 {SWD +="Artisan tools<br>\r"}
if (document.form1.disguisekit.checked==true)
 {SWD +="Disguise kit<br>\r"}
if (document.form1.healerkit.checked==true)
 {SWD +="Healer kit<br>\r"}
if (document.form1.hollyandmistletoe.checked==true)
 {SWD +="Holly and mistletoe<br>\r"}
if (document.form1.holysymbolwooden.checked==true)
 {SWD +="Holy symbol (wooden)<br>\r"}
if (document.form1.holysymbolsilver.checked==true)
 {SWD +="Holy symbol (silver)<br>\r"}
if (document.form1.hourglass.checked==true)
 {SWD +="Hourglass<br>\r"}
if (document.form1.magnifyingglass.checked==true)
 {SWD +="Magnifying glass<br>\r"}
if (document.form1.musicalinstrument.checked==true)
 {SWD +="Musical instrument<br>\r"}
if (document.form1.orb_box.checked==true)
 {SWD +="Orb<br>\r"}
if (document.form1.ritualbook.selectedIndex>0)
 {SWD +="Ritual book x" + document.form1.ritualbook.selectedIndex + "<br>\r"; }
if (document.form1.rod_box.checked==true)
 {SWD +="Rod<br>\r"}
if (document.form1.scale.checked==true)
 {SWD +="Scale, merchant's<br>\r"}
if (document.form1.spellcomponentpouch.checked==true)
 {SWD +="Ritual components<br>\r"}
if (document.form1.spellbook.selectedIndex>0)
 {SWD +="Spellbook x" + document.form1.spellbook.selectedIndex + "<br>\r"; }
if (document.form1.thievestools.checked==true)
 {SWD +="Thieves' tools<br>\r"}
if (document.form1.tool.selectedIndex>0)
 {SWD +="Tools (miscellaneous) x" + document.form1.tool.selectedIndex + "<br>\r"; }
if (document.form1.wand_box.checked==true)
 {SWD +="Wand<br>\r"}


SWD +="<br>Total<br></td></tr></table><p>"


if (document.form1.additionalEquipment.value!="")
 {SWD+="Also...<p><ul>"+document.form1.additionalEquipment.value+"</ul><p>"; 
 }


SWD +="<p></ul><img src=\"spellbar.gif\">"
 SWD+="Magic items:<p><ul>"; 
 SWD+="<img src=box.gif>Weapon:<br>\r"; 
 SWD+="<img src=box.gif>Weapon:<br>\r"; 
 SWD+="<img src=box.gif>Weapon:<br>\r"; 
 SWD+="<img src=box.gif>Weapon:<br>\r"; 
 SWD+="<img src=box.gif>Armor:<br>\r"; 
 SWD+="<img src=box.gif>Shield:<br>\r"; 
 SWD+="<img src=box.gif>Arms:<br>\r"; 
 SWD+="<img src=box.gif>Feet:<br>\r"; 
 SWD+="<img src=box.gif>Hands:<br>\r"; 
 SWD+="<img src=box.gif>Head:<br>\r"; 
 SWD+="<img src=box.gif>Neck:<br>\r"; 
 SWD+="<img src=box.gif>Ring:<br>\r"; 
 SWD+="<img src=box.gif>Ring:<br>\r"; 
 SWD+="<img src=box.gif>Waist:<br>\r"; 
 SWD+="<img src=box.gif>&nbsp;<br>\r"; 
 SWD+="<img src=box.gif>&nbsp;<br>\r"; 
 SWD+="<img src=box.gif>&nbsp;<br>\r"; 
 SWD+="<img src=box.gif>&nbsp;<br>\r"; 
 SWD+="<img src=box.gif>&nbsp;<br>\r"; 
 SWD+="<img src=box.gif>&nbsp;<br>\r"; 
 SWD+="<img src=box.gif>&nbsp;<br>\r"; 
 SWD+="<img src=box.gif>&nbsp;<p></ul>"; 
 SWD+="Resistances:<p>Action Point Tally:<p>"; 
 if (total_levels<=10){SWD+="Daily Item Powers Per Day: Heroic Tier <img src=box.gif>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \rMilestones:&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif><p>\r"; }
 else if (total_levels<=10){SWD+="Daily Item Powers Per Day: Paragon Tier <img src=box.gif><img src=box.gif>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \rMilestone&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif><p>"; }
 else {SWD+="Daily Item Powers Per Day: Epic Tier <img src=box.gif><img src=box.gif><img src=box.gif>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \rMilestone&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif>/&nbsp; <img src=box.gif><p>"; }
 SWD+="Death Saving Throw Failures:&nbsp; <img src=box.gif><img src=box.gif><img src=box.gif><p>\r";
 {
  if (ranger_beastmaster)
   {
    stringy+="Companion animal:<p><ul>";
    if (beast_bear){stringy+="Bear<br>";b_strength=16;b_constitution=14;b_dexterity=12;b_intelligence=6;b_wisdom=12;b_charisma=6;}
    if (beast_boar){stringy+="Boar<br>";b_strength=16;b_constitution=16;b_dexterity=14;b_intelligence=6;b_wisdom=12;b_charisma=6;}
    if (beast_cat){stringy+="Cat<br>";b_strength=14;b_constitution=12;b_dexterity=16;b_intelligence=6;b_wisdom=14;b_charisma=6;}
    if (beast_lizard){stringy+="Lizard<br>";b_strength=16;b_constitution=14;b_dexterity=16;b_intelligence=6;b_wisdom=12;b_charisma=6;}
    if (beast_raptor){stringy+="Raptor<br>";b_strength=12;b_constitution=12;b_dexterity=18;b_intelligence=6;b_wisdom=12;b_charisma=6;}
    if (beast_serpent){stringy+="Serpent<br>";b_strength=14;b_constitution=14;b_dexterity=16;b_intelligence=6;b_wisdom=12;b_charisma=6;}
    if (beast_spider){stringy+="Spider<br>";b_strength=14;b_constitution=12;b_dexterity=16;b_intelligence=6;b_wisdom=12;b_charisma=6;}
    if (beast_wolf){stringy+="Wolf<br>";b_strength=14;b_constitution=14;b_dexterity=14;b_intelligence=6;b_wisdom=14;b_charisma=6;}
    if (b_raise_str_04){b_strength++;}
    if (b_raise_con_04){b_constitution++;}
    if (b_raise_dex_04){b_dexterity++;}
    if (b_raise_int_04){b_intelligence++;}
    if (b_raise_wis_04){b_wisdom++;}
    if (b_raise_chr_04){b_charisma++;}
    if (b_raise_str_08){b_strength++;}
    if (b_raise_con_08){b_constitution++;}
    if (b_raise_dex_08){b_dexterity++;}
    if (b_raise_int_08){b_intelligence++;}
    if (b_raise_wis_08){b_wisdom++;}
    if (b_raise_chr_08){b_charisma++;}
    if (b_raise_str_14){b_strength++;}
    if (b_raise_con_14){b_constitution++;}
    if (b_raise_dex_14){b_dexterity++;}
    if (b_raise_int_14){b_intelligence++;}
    if (b_raise_wis_14){b_wisdom++;}
    if (b_raise_chr_14){b_charisma++;}
    if (b_raise_str_18){b_strength++;}
    if (b_raise_con_18){b_constitution++;}
    if (b_raise_dex_18){b_dexterity++;}
    if (b_raise_int_18){b_intelligence++;}
    if (b_raise_wis_18){b_wisdom++;}
    if (b_raise_chr_18){b_charisma++;}
    if (b_raise_str_24){b_strength++;}
    if (b_raise_con_24){b_constitution++;}
    if (b_raise_dex_24){b_dexterity++;}
    if (b_raise_int_24){b_intelligence++;}
    if (b_raise_wis_24){b_wisdom++;}
    if (b_raise_chr_24){b_charisma++;}
    if (b_raise_str_28){b_strength++;}
    if (b_raise_con_28){b_constitution++;}
    if (b_raise_dex_28){b_dexterity++;}
    if (b_raise_int_28){b_intelligence++;}
    if (b_raise_wis_28){b_wisdom++;}
    if (b_raise_chr_28){b_charisma++;}
    stringy+="Ability Scores: Strength "+b_strength+", Constitution "+b_constitution+", Dexterity "+b_dexterity+", Intelligence "+b_intelligence+", Wisdom "+b_wisdom+" Charisma "+b_charisma+"<br>";
    if (beast_raptor){stringy+="Size: Small<br>Speed: "} else {stringy+="Size: Medium<br>Speed: ";}
    if (beast_bear){stringy+="5 squares";}
    if (beast_boar){stringy+="6 squares, 8 squares when charging";}
    if (beast_cat){stringy+="7 squares";}
    if (beast_lizard){stringy+="6 squares";}
    if (beast_raptor){stringy+="2 squares, fly 7 squares (hover)";}
    if (beast_serpent){stringy+="5 squares, swim 5 squares";}
    if (beast_spider){stringy+="6 squares, clmb 6 squares (spider climb)";}
    if (beast_wolf){stringy+="7 squares";}
    stringy+="<br>Defenses: AC ";
    if (beast_bear)
     {
      x=12+total_levels+hashbm();
      stringy+=x+", Fortitude ";
      x=14+total_levels+hashbm();
      stringy+=x+", Reflex ";
      x=10+total_levels+hashbm();
      stringy+=x+", Will ";
      x=12+total_levels+hashbm();
      stringy+=x+"<br>Hit points: ";
      x=16+10*total_levels+sturdybear();
      stringy+=x+"; Bloodied "+Math.floor(x/2)+"; Surge Value "+Math.floor(x/4)+"<br>Attack bonus: ";
      x=2+total_levels;
      stringy+=x+"<br>Damage: 1d12<br>Melee Basic Attack: Claw; "+x+" vs. AC; 1d12+";
      stringy+=modifier_number(b_strength)+" damage<br>";
//      stringy+="Trained Skills: Athletics +"+(modifier_number(b_strength)+half_total_level()+5)+", Endurance +"+(modifier_number(b_constitution)+half_total_level()+5)+"<br>";
     }
    if (beast_boar)
     {
      x=12+total_levels+hashbm();
      stringy+=x+", Fortitude ";
      x=14+total_levels+hashbm();
      stringy+=x+", Reflex ";
      x=10+total_levels+hashbm();
      stringy+=x+", Will ";
      x=12+total_levels+hashbm();
      stringy+=x+"<br>Hit points: ";
      x=14+8*total_levels+sturdybear();if (has_thundertuskcompanion){x+=total_levels;}
//      stringy+=x+"<br>Attack bonus: ";
      stringy+=x+"; Bloodied "+Math.floor(x/2)+"; Surge Value "+Math.floor(x/4)+"<br>Attack bonus: ";
      x=4+total_levels;
      stringy+=x+"<br>Damage: 1d8<br>Melee Basic Attack: Gore; "+x+" vs. AC; 1d8+";
      stringy+=modifier_number(b_strength)+" damage<br>";
//      stringy+="Trained Skills: Endurance +"+(modifier_number(b_constitution)+half_total_level()+5)+"<br>";
     }
    if (beast_cat)
     {
      x=14+total_levels+hashbm();
      stringy+=x+", Fortitude ";
      x=11+total_levels+hashbm();
      stringy+=x+", Reflex ";
      x=13+total_levels+hashbm();
      stringy+=x+", Will ";
      x=12+total_levels+hashbm();
      stringy+=x+"<br>Hit points: ";
      x=14+8*total_levels+sturdybear();
      stringy+=x+"; Bloodied "+Math.floor(x/2)+"; Surge Value "+Math.floor(x/4)+"<br>Attack bonus: ";
  //    stringy+=x+"<br>Attack bonus: ";
      x=4+total_levels;
      stringy+=x+"<br>Damage: 1d8<br>Melee Basic Attack: Claw; "+x+" vs. AC; 1d8+";
      stringy+=modifier_number(b_dexterity)+" damage<br>";
//      stringy+="Trained Skills: Athletics +"+(modifier_number(b_strength)+half_total_level()+5)+", Stealth +"+(modifier_number(b_dexterity)+half_total_level()+5)+"<br>";
     }
    if (beast_lizard)
     {
      x=15+total_levels+hashbm();
      stringy+=x+", Fortitude ";
      x=12+total_levels+hashbm();
      stringy+=x+", Reflex ";
      x=12+total_levels+hashbm();
      stringy+=x+", Will ";
      x=10+total_levels+hashbm();
      stringy+=x+"<br>Hit points: ";
      x=14+8*total_levels+sturdybear();
      stringy+=x+"; Bloodied "+Math.floor(x/2)+"; Surge Value "+Math.floor(x/4)+"<br>Attack bonus: ";
    //  stringy+=x+"<br>Attack bonus: ";
      x=4+total_levels;
      stringy+=x+"<br>Damage: 1d8<br>Melee Basic Attack: Bite or claw; "+x+" vs. AC; 1d8+";
      stringy+=modifier_number(b_strength)+" damage<br>";
//      stringy+="Trained Skills: Athletics +"+(modifier_number(b_strength)+half_total_level()+5)+", Endurance +"+(modifier_number(b_constitution)+half_total_level()+5)+"<br>";
     }
    if (beast_raptor)
     {
      x=14+total_levels+hashbm();
      stringy+=x+", Fortitude ";
      x=10+total_levels+hashbm();
      stringy+=x+", Reflex ";
      x=14+total_levels+hashbm();
      stringy+=x+", Will ";
      x=12+total_levels+hashbm();
      stringy+=x+"<br>Hit points: ";
      x=12+6*total_levels+sturdybear();
      stringy+=x+"; Bloodied "+Math.floor(x/2)+"; Surge Value "+Math.floor(x/4)+"<br>Attack bonus: ";
//      stringy+=x+"<br>Attack bonus: ";
      x=5+total_levels;
      stringy+=x+"<br>Damage: 1d6<br>Melee Basic Attack: Claw; "+x+" vs. AC; 1d6+";
      stringy+=modifier_number(b_dexterity)+" damage<br>";
//      stringy+="Trained Skills: Perception +"+(modifier_number(b_wisdom)+half_total_level()+5)+"<br>";
     }
    if (beast_serpent)
     {
      x=14+total_levels+hashbm();
      stringy+=x+", Fortitude ";
      x=12+total_levels+hashbm();
      stringy+=x+", Reflex ";
      x=13+total_levels+hashbm();
      stringy+=x+", Will ";
      x=12+total_levels+hashbm();
      stringy+=x+"<br>Hit points: ";
      x=14+8*total_levels+sturdybear();
      stringy+=x+"; Bloodied "+Math.floor(x/2)+"; Surge Value "+Math.floor(x/4)+"<br>Attack bonus: ";
  //    stringy+=x+"<br>Attack bonus: ";
      x=4+total_levels;
      stringy+=x+"<br>Damage: 1d8<br>Melee Basic Attack: Bite; "+x+" vs. AC; 1d8+";
      stringy+=modifier_number(b_dexterity)+" damage<br>";
//      stringy+="Trained Skills: Stealth +"+(modifier_number(b_dexterity)+half_total_level()+5)+"<br>";
     }
    if (beast_spider)
     {
      x=14+total_levels+hashbm();
      stringy+=x+", Fortitude ";
      x=11+total_levels+hashbm();
      stringy+=x+", Reflex ";
      x=12+total_levels+hashbm();
      stringy+=x+", Will ";
      x=12+total_levels+hashbm();
      stringy+=x+"<br>Hit points: ";
      x=14+8*total_levels+sturdybear();
    //  stringy+=x+"<br>Attack bonus: ";
      stringy+=x+"; Bloodied "+Math.floor(x/2)+"; Surge Value "+Math.floor(x/4)+"<br>Attack bonus: ";
      x=4+total_levels;
      stringy+=x+"<br>Damage: 1d8<br>Melee Basic Attack: Bite; "+x+" vs. AC; 1d8+";
      stringy+=modifier_number(b_dexterity)+" damage<br>";
//      stringy+="Trained Skills: Athletics +"+(modifier_number(b_strength)+half_total_level()+5)+", Stealth +"+(modifier_number(b_dexterity)+half_total_level()+5)+"<br>";
     }
    if (beast_wolf)
     {
      x=14+total_levels+hashbm();
      stringy+=x+", Fortitude ";
      x=12+total_levels+hashbm();
      stringy+=x+", Reflex ";
      x=12+total_levels+hashbm();
      stringy+=x+", Will ";
      x=13+total_levels+hashbm();
      stringy+=x+"<br>Hit points: ";
      x=14+8*total_levels+sturdybear();
//      stringy+=x+"<br>Attack bonus: ";
      stringy+=x+"; Bloodied "+Math.floor(x/2)+"; Surge Value "+Math.floor(x/4)+"<br>Attack bonus: ";
      x=4+total_levels;
      stringy+=x+"<br>Damage: 1d8<br>Melee Basic Attack: Bite; "+x+" vs. AC; 1d8+";
      stringy+=modifier_number(b_dexterity)+" damage<br>";
//      stringy+="Trained Skills: Endurance +"+(modifier_number(b_constitution)+half_total_level()+5)+", Perception +"+(modifier_number(b_wisdom)+half_total_level()+5)+"<br>";
     }
   stringy+="Trained Skills: ";
   if ((feat_beasttrainingathletics)|(beast_bear)|(beast_cat)|(beast_lizard)|(beast_spider))
    {
     x=5+half_total_level()+modifier_number(b_strength);
     if (feat_beastguidance){x+=2;}
     stringy+="Athletics +"+x+"&nbsp;&nbsp;&nbsp;"
    }
   if ((feat_beasttrainingendurance)|(beast_bear)|(beast_boar)|(beast_lizard)|(beast_wolf))
    {
     x=5+half_total_level()+modifier_number(b_constitution);
     if (feat_beastguidance){x+=2;}
     stringy+="Endurance +"+x+"&nbsp;&nbsp;&nbsp;"
    }
   if ((feat_beasttrainingperception)|(beast_raptor)|(beast_wolf))
    {
     x=5+half_total_level()+modifier_number(b_wisdom);
     if (feat_beastguidance){x+=2;}
     stringy+="Perception +"+x+"&nbsp;&nbsp;&nbsp;"
    }
   if ((feat_beasttrainingstealth)|(beast_cat)|(beast_serpent)|(beast_spider))
    {
     x=5+half_total_level()+modifier_number(b_dexterity);
     if (feat_beastguidance){x+=2;}
     stringy+="Stealth +"+x+"&nbsp;&nbsp;&nbsp;"
    }
 if (feat_sturdybeast){stringy+="<br>Three Healing Surges / Day: <img src=box.gif><img src=box.gif><img src=box.gif><br>";}
  else {stringy+="<br>Two Healing Surges / Day: <img src=box.gif><img src=box.gif><br>";}
  stringy+="Death Saving Throw Failures:&nbsp; <img src=box.gif><img src=box.gif><img src=box.gif><p>\r";

   stringy+="</ul><p>"
    SWD+=stringy;

   }
 }

   if (document.form1.moniker.value==""){SWD+="More about this character:<ul><p>"}
   else {SWD+="More about "+document.form1.moniker.value+":<p><ul>"}
   SWD+=document.form1.moreAbout.value; 
   SWD+="</ul></body></html>"; 



   SecondWindow.document.write(SWD)
   SecondWindow.document.close()
//alert("CLOSED IT OUT");
 }


function HuntersQuarryDamage(){
 if (feat_lethalhunter)
 {
 if (total_levels>20){return "-- bonus damage 3d8"; }
 if (total_levels>10){return "-- bonus damage 2d8"; }
 return "-- bonus damage 1d8"; 
 }
 if (total_levels>20){return "-- bonus damage 3d6"; }
 if (total_levels>10){return "-- bonus damage 2d6"; }
 return "-- bonus damage 1d6"; 
 }
  
function RewriteLockedAbilityAssignments(){
 ClearAllAbilityAssignments(); 
 document.form1.firststat[firststatwentto].checked=true; 
 document.form1.secondstat[secondstatwentto].checked=true; 
 document.form1.thirdstat[thirdstatwentto].checked=true; 
 document.form1.fourthstat[fourthstatwentto].checked=true; 
 document.form1.fifthstat[fifthstatwentto].checked=true; 
 document.form1.sixthstat[sixthstatwentto].checked=true; 
 }

function setCase (caseSelection){
 if (caseSelection=="upper"){
  document.form1.moniker.value=
   document.form1.moniker.value.toUpperCase()
  document.form1.playerName.value=
   document.form1.playerName.value.toUpperCase()
  }
 else {
  document.form1.firstName.value=
    document.form1.firstName.value.toLowerCase()
  document.form1.lastName.value=
    document.form1.lastName.value.toLowerCase()
 }
 }



function NegateFeats(){
//  alert("Entering NegateFeats"); 
  feat_actionsurge=false; 
  feat_agilehunter=false; 
  feat_alertness=false; 
  feat_armorofbahamut=false; 
  feat_armorproficiencychainmail=false; 
  feat_armorproficiencyleather=false; 
  feat_armorproficiencyhide=false; 
  feat_armorproficiencyplate=false; 
  feat_armorproficiencyscale=false; 
  feat_astralfire=false; 
  feat_avandrasrescue=false; 
  feat_backstabber=false; 
  feat_bladeopportunist=false; 
  feat_burningblizzard=false; 
  feat_combatreflexes=false; 
  feat_corellonsgrace=false; 
  feat_darkfury=false; 
  feat_defensivemobility=false; 
  feat_distractingshield=false; 
  feat_dodgegiants=false; 
  feat_dragonbornfrenzy=false; 
  feat_dragonbornsenses=false; 
  feat_durable=false; 
  feat_dwarvenweapontraining=false; 
  feat_eladrinsoldier=false; 
  feat_elvenprecision=false; 
  feat_enlargeddragonbreath=false; 
  feat_escapeartist=false; 
  feat_expandedspellbook=false; 
  feat_farshot=false; 
  feat_farthrow=false; 
  feat_fastrunner=false; 
  feat_ferociousrebuke=false; 
  feat_groupinsight=false; 
  feat_halflingagility=false; 
  feat_harmonyoferathis=false; 
  feat_healinghands=false; 
  feat_hellfireblood=false; 
  feat_humanperseverance=false; 
  feat_improveddarkonesblessing=false; 
  feat_improvedfateofthevoid=false; 
  feat_improvedinitiative=false; 
  feat_improvedmistystep=false; 
  feat_inspiredrecovery=false; 
  feat_iounspoise=false; 
  feat_jackofalltrades=false; 
  feat_kordsfavor=false; 
  feat_lethalhunter=false; 
  feat_lightstep=false; 
  feat_linguist=0; document.form1.linguist_list.selectedIndex=0; 
  feat_longjumper=false; 
  feat_longinthecrowd=false; 
  feat_melorastide=false; 
  feat_moradinsresolve=false; 
  feat_mountedcombat=false; 
  feat_nimbleblade=false; 
  feat_pelorsradiance=false; 
  feat_potentchallenge=false; 
  feat_powerattack=false; 
  feat_powerfulcharge=false; 
  feat_precisehunter=false; 
  feat_presstheadvantage=false; 
  feat_quickdraw=false; 
  feat_ragingstorm=false; 
  feat_ravenqueensblessing=false; 
  feat_ritualcaster=false; 
  feat_sehaninesreversal=false;
 feat_angharradhsfavor=false;
 feat_avoweddragonfoe=false;
 feat_berronarssalve=false;
 feat_blessingofsilvanus=false;
 feat_brokenshackles=false;
 feat_chaunteasblessing=false;
 feat_clutchofdarkness=false;
 feat_elementalassault=false;
 feat_escalatingassault=false;
 feat_extramanifestationearthsoul=false;
 feat_extramanifestationfiresoul=false;
 feat_extramanifestationstormsoul=false;
 feat_extramanifestationwatersoul=false;
 feat_extramanifestationwindsoul=false;
 feat_eyesofselune=false;
 feat_fleetnessofmielikki=false;
 feat_ghostwiseheritage=false;
 feat_glittergoldsgambit=false;
 feat_golddwarfpride=false;
 feat_gondscraft=false;
 feat_ilmatersmartyrdom=false;
 feat_improvedswordbond=false;
 feat_intelligentblademaster=false;
 feat_kelemvorsjudgment=false;
 feat_manifestresistance=false;
 feat_improvedrazorswarm=false;
 feat_moonelfresilience=false;
 feat_oghmasrecall=false;
 feat_powerofamaunator=false;
 feat_retributiveshield=false;
 feat_righteousrageoftempus=false;
 feat_ruthlesshunter=false;
 feat_scionofthegods=false;
 feat_sheelaperyroylsgift=false;
 feat_shieldofshadows=false;
 feat_shieldthefallen=false;
 feat_stubbornsurvivor=false;
 feat_studentofswordmagic=false;
 feat_sunelfgrace=false;
 feat_sunestouch=false;
 feat_tormsjustice=false;
 feat_tymorascoin=false;
 feat_versatileresistance=false;
 feat_waukeenssilvertongue=false;
 feat_alchemist=false;
 feat_alchemistswap=false;
 feat_wildelfluck=false;
 feat_woodelfagility=false;
 feat_demonwebspiral=false;
 feat_distantswordbond=false;
 feat_doubleaegis=false;
 feat_improveddarkspiralaura=false;
 feat_masteroffireanddarkness=false;
 feat_mercilesskiller=false;
 feat_moongleamoath=false;
 feat_shockingflame=false;
 feat_stoneguard=false;
 feat_stormrider=false;
 feat_venemousheritage=false;
 feat_warwizardry=false;
 feat_agileopportunist=false;
 feat_quickrecovery=false;
 feat_paragondefenses=false;
 feat_reservemaneuver=false;
 feat_doublemanifestation=false;
 feat_totalaegis=false;


  feat_aggressiveassault=false;
  feat_anklecutter=false;
  feat_beastguidance=false;
  feat_beastprotector=false;
  feat_beasttrainingathletics=false;
  feat_beasttrainingendurance=false;
  feat_beasttrainingperception=false;
  feat_beasttrainingstealth=false;
  feat_bloodiedinvigoration=false;
  feat_bolsteringinspiration=false;
  feat_bracingbreath=false;
  feat_bravuraspirit=false;
  feat_breathresistantbeast=false;
  feat_brutalaccuracy=false;
  feat_brutalteamwork=false;
  feat_brutalwound=false;
  feat_camouflage=false;
  feat_commandthedarkness=false;
  feat_coordinatedopportunity=false;
  feat_cunningambusher=false;
  feat_darkfiretargeting=false;
  feat_deepgash=false;
  feat_defensiveresilience=false;
  feat_devotedchallenge=false;
  feat_dirtyfighting=false;
  feat_draggingflail=false;
  feat_drowbeastmastery=false;
  feat_dwarfstoneblood=false;
  feat_dwarftrapsmith=false;
  feat_elvenbeastmastery=false;
  feat_experttracker=false;
  feat_feyblades=false;
  feat_feycommand=false;
  feat_feyborncompanion=false;
  feat_fiendishcompanion=false;
  feat_groupassault=false;
  feat_groupquarry=false;
  feat_grouprattling=false;
  feat_halflingstalwart=false;
  feat_humanbeastmastery=false;
  feat_hunterofwindandwave=false;
  feat_huntersaim=false;
  feat_improvedbravura=false;
  feat_improvedinspiration=false;
  feat_improvedinspiringword=false;
  feat_improvedresources=false;
  feat_improvedtactics=false;
  feat_improvedvigor=false;
  feat_inspireddefense=false;
  feat_inspiredtactics=false;
  feat_intothefraymp=false;
  feat_keeperofstorm=false;
  feat_leadingfire=false;
  feat_lendmight=false;
  feat_lingeringwrath=false;
  feat_longswordfinesse=false;
  feat_luckyskirmisher=false;
  feat_martialalacrity=false;
  feat_martialfreedom=false;
  feat_masterofrumblingearth=false;
  feat_nimblecompanion=false;
  feat_offensiveresilience=false;
  feat_opportunisticaccuracy=false;
  feat_polearmmomentum=false;
  feat_predatoryaction=false;
  feat_primestrike=false;
  feat_rashsneakattack=false;
  feat_rattlingwrath=false;
  feat_reapingblade=false;
  feat_recklessscramble=false;
  feat_ruthlessinjury=false;
  feat_savinginspiration=false;
  feat_secureencampment=false;
  feat_shielddefense=false;
  feat_sidewaysdefense=false;
  feat_slayingaction=false;
  feat_sneakyaccuracy=false;
  feat_speedyresponse=false;
  feat_streetthug=false;
  feat_surprisingcharge=false;
  feat_tacticalinspiration=false;
  feat_takemeasure=false;
  feat_thunderhammer=false;
  feat_thundertuskcompanion=false;
  feat_trapsense=false;
  feat_tunnelstalker=false;
  feat_twofistedshooter=false;
  feat_unbalancingwrath=false;
  feat_vengefulbeast=false;
  feat_victorsconfidence=false;
  feat_wielderofpiercingflame=false;

    feat_advantageofcunning=false;
    feat_angerunleashed=false;
    feat_arcanespellfury=false;
    feat_auspiciouslineage=false;
    feat_bardicknowledge=false;
    feat_blurringclaws=false;
    feat_combatmedic=false;
    feat_coordinatedexplosion=false;
    feat_crushingearthstrength=false;
    feat_deadlyrage=false;
    feat_disciplinedwildsoul=false;
    feat_distantadvantage=false;
    feat_echoesofthunder=false;
    feat_enragedboarform=false;
    feat_expertritualist=false;
    feat_ferocioustigerform=false;
    feat_feytrickster=false;
    feat_goliathgreatweaponprowess=false;
    feat_gorebrutecharge=false;
    feat_groupstealth=false;
    feat_guaranteedretribution=false;
    feat_implementexpertiseholysymbol=false;
    feat_implementexpertiseorb=false;
    feat_implementexpertiserod=false;
    feat_implementexpertisestaff=false;
    feat_implementexpertisewand=false;
    feat_implementexpertisedagger=false;
    feat_implementexpertisemusic=false;
    feat_implementexpertisetome=false;
    feat_implementexpertisetotem=false;
    feat_improvedarmoroffaith=false;
    feat_improvedbullrush=false;
    feat_improveddragonsoul=false;
    feat_improvedgrab=false;
    feat_improvedmajesticword=false;
    feat_improvedragebloodvigor=false;
    feat_improvedroaroftriumph=false;
    feat_insightfulpreservation=false;
    feat_invigoratingpursuit=false;
    feat_invokerdefense=false;
    feat_markingsoftheblessed=false;
    feat_markingsofthevictor=false;
    feat_meleetraining=false;
    feat_oncomingstorm=false;
    feat_potentrebirth=false;
    feat_primalfury=false;
    feat_primalinstinct=false;
    feat_protectorspiritadept=false;
    feat_radiantpower=false;
    feat_resonatingcovenant=false;
    feat_restfulhealing=false;
    feat_revitalizingfontoflife=false;
    feat_risingfury=false;
    feat_savageassault=false;
    feat_scouringwrath=false;
    feat_shadowskulk=false;
    feat_sharedhealingspirit=false;
    feat_sorcerousbladechanneling=false;
    feat_speedloader=false;
    feat_spritspeaker=false;
    feat_stalkerspiritadept=false;
    feat_strengthofvalor=false;
    feat_suddenroots=false;
    feat_surgingflame=false;
    feat_thirstforbattle=false;
    feat_timelyrespite=false;
    feat_twoweaponthreat=false;
    feat_twoweaponopening=false;
    feat_versatilemaster=false;
    feat_weaponexpertiseaxe=false;
    feat_weaponexpertisebow=false;
    feat_weaponexpertisecrossbow=false;
    feat_weaponexpertiseflail=false;
    feat_weaponexpertisehammer=false;
    feat_weaponexpertiseheavyblade=false;
    feat_weaponexpertiselightblade=false;
    feat_weaponexpertisemace=false;
    feat_weaponexpertisepick=false;
    feat_weaponexpertisepolearm=false;
    feat_weaponexpertisesling=false;
    feat_weaponexpertisespear=false;
    feat_weaponexpertisestaff=false;
    feat_weaponexpertiseunarmed=false;
    feat_wildbloodcunning=false;
    feat_wildsenses=false;
    feat_arcaneimplementproficiencydagger=false;
    feat_arcaneimplementproficiencymusic=false;
    feat_arcaneimplementproficiencyorb=false;
    feat_arcaneimplementproficiencyrod=false;
    feat_arcaneimplementproficiencystaff=false;
    feat_arcaneimplementproficiencytome=false;
    feat_arcaneimplementproficiencywand=false;
    feat_dualimplementspellcaster=false;


  feat_agiletempest=false;
  feat_avandrasgift=false;
  feat_avengingspirit=false;
  feat_bleedingbackstab=false;
  feat_bleedingprecision=false;
  feat_bloodyinspiration=false;
  feat_bloodytenacity=false;
  feat_chainmailagility=false;
  feat_combatopening=false;
  feat_culltheweak=false;
  feat_darkhunter=false;
  feat_darkjumper=false;
  feat_dauntingchallenge=false;
  feat_defensivesurge=false;
  feat_distractingcompanion=false;
  feat_draconicarrogance=false;
  feat_dragonbreathwarrior=false;
  feat_elementalcompanions=false;
  feat_elementalguardian=false;
  feat_enduringwallop=false;
  feat_evasivefootwork=false;
  feat_feycharge=false;
  feat_feygambit=false;
  feat_feytactics=false;
  feat_fiendishdefender=false;
  feat_grit=false;
  feat_groupflanking=false;
  feat_halflingbeastmastery=false;
  feat_huntersadvantage=false;
  feat_huntersresurgence=false;
  feat_impetuouscharger=false;
  feat_infernalsneakattack=false;
  feat_markedscourge=false;
  feat_mightybattlerage=false;
  feat_opportunisticarcher=false;
  feat_opportunisticsneakattack=false;
  feat_phalanxwarrior=false;
  feat_preternaturalsenses=false;
  feat_primequarry=false;
  feat_primeslayer=false;
  feat_protectivebeast=false;
  feat_recklessattacker=false;
  feat_reliableresources=false;
  feat_rogueweaponmastery=false;
  feat_roundaboutcharge=false;
  feat_steadfasttacatics=false;
  feat_stonefootreprisal=false;
  feat_sturdybeast=false;
  feat_vitalinspiration=false;
  feat_warlordsformation=false;
  feat_wrathfulhunter=false;
  feat_actiongrant=false;
  feat_aggressiveleadership=false;
  feat_artfulprovocation=false;
  feat_boldspirit=false;
  feat_brutaladvantage=false;
  feat_calltoglory=false;
  feat_channeledbattlerage=false;
  feat_correctingaim=false;
  feat_darkfirewarrior=false;
  feat_dragonwarrior=false;
  feat_elementalwarrior=false;
  feat_epicrecovery=false;
  feat_feywildwarrior=false;
  feat_fortuneswarrior=false;
  feat_hawkeyewarrior=false;
  feat_improvedprimeshot=false;
  feat_infernalwarrior=false;
  feat_invigoratingexploit=false;
  feat_knockbackswing=false;
  feat_lastingadvantage=false;
  feat_martialmastery=false;
  feat_martialresolve=false;
  feat_mobilewarrior=false;
  feat_onewithshadow=false;
  feat_peerlesshunter=false;
  feat_practicedreliability=false;
  feat_primehunter=false;
  feat_protectiveleadership=false;
  feat_quickbeastcommand=false;
  feat_rattlingexploit=false;
  feat_reachingwhirlwind=false;
  feat_rendingtempest=false;
  feat_ruthlessterror=false;
  feat_staggeringshot=false;
  feat_stoneheartwarrior=false;
  feat_supremeinspiration=false;
  feat_surpriseaction=false;
  feat_tacticalcunning=false;
  feat_tacticalinsight=false;
  feat_timelyrevival=false;
  feat_unstoppablecharge=false;
  feat_whirlwindsneakattack=false;
  feat_bowmastery=false;
  feat_epicfortitude=false;
  feat_epicreflexes=false;
  feat_epicwill=false;
  feat_indomitablewill=false;
  feat_opportunereflexes=false;
  feat_robustdefenses=false;
  feat_unyieldingfortitude=false;
  feat_battleacumen=false;
  feat_battleinstructor=false;
  feat_courageousshooter=false;
  feat_firstin=false;
  feat_arcanefamiliar=false;
  feat_alertfamiliar=false;
  feat_aggressivefamiliar=false;
  feat_bondedfamiliar=false;
  feat_shieldingfamiliar=false;
  feat_spellseerfamiliar=false;
  feat_quickfamiliar=false;
  feat_sharedspeed=false;

  
  feat_other01=false; 
  feat_other02=false; 
  feat_other03=false; 
  feat_other04=false; 
  feat_other05=false; 
  feat_other06=false; 
  feat_other07=false; 
  feat_shieldproficiencyheavy=false; 
  feat_shieldproficiencylight=false; 
  feat_shieldpush=false; 
  feat_skillfocusacrobatics=false; 
  feat_skillfocusarcana=false; 
  feat_skillfocusathletics=false; 
  feat_skillfocusbluff=false; 
  feat_skillfocusdiplomacy=false; 
  feat_skillfocusdungeoneering=false; 
  feat_skillfocusendurance=false; 
  feat_skillfocusheal=false; 
  feat_skillfocushistory=false; 
  feat_skillfocusinsight=false; 
  feat_skillfocusintimidate=false; 
  feat_skillfocusnature=false; 
  feat_skillfocusperception=false; 
  feat_skillfocusreligion=false; 
  feat_skillfocusstealth=false; 
  feat_skillfocusstreetwise=false; 
  feat_skillfocusthievery=false; 
  feat_skilltrainingacrobatics=false; 
  feat_skilltrainingarcana=false; 
  feat_skilltrainingathletics=false; 
  feat_skilltrainingbluff=false; 
  feat_skilltrainingdiplomacy=false; 
  feat_skilltrainingdungeoneering=false; 
  feat_skilltrainingendurance=false; 
  feat_skilltrainingheal=false; 
  feat_skilltraininghistory=false; 
  feat_skilltraininginsight=false; 
  feat_skilltrainingintimidate=false; 
  feat_skilltrainingnature=false; 
  feat_skilltrainingperception=false; 
  feat_skilltrainingreligion=false; 
  feat_skilltrainingstealth=false; 
  feat_skilltrainingstreetwise=false; 
  feat_skilltrainingthievery=false; 
  feat_sureclimber=false; 
  feat_surpriseknockdown=false; 
  feat_tacticalassault=false; 
  feat_toughness=false; 
  feat_twoweapondefense=false; 
  feat_twoweaponfighting=false; 
  feat_weaponfocusaxe=false; 
  feat_weaponfocusbow=false; 
  feat_weaponfocuscrossbow=false; 
  feat_weaponfocusflail=false; 
  feat_weaponfocushammer=false; 
  feat_weaponfocusheavyblade=false; 
  feat_weaponfocuslightblade=false; 
  feat_weaponfocusmace=false; 
  feat_weaponfocuspick=false; 
  feat_weaponfocuspolearm=false; 
  feat_weaponfocussling=false; 
  feat_weaponfocusspear=false; 
  feat_weaponfocusstaff=false; 
  feat_weaponfocusunarmed=false; 
  feat_weaponproficiencyclub=false; 
  feat_weaponproficiencydagger=false; 
  feat_weaponproficiencyjavelin=false; 
  feat_weaponproficiencymace=false; 
  feat_weaponproficiencysickle=false; 
  feat_weaponproficiencyothersimplemeleeweapons=false; 
  feat_weaponproficiencyothermilitarymeleeweapons=false; 
  feat_weaponproficiencyothersuperiormeleeweapons=false; 
  feat_weaponproficiencyothersimplerangedweapons=false; 
  feat_weaponproficiencyothersuperiorrangedweapons=false; 
  feat_weaponproficiencyspear=false; 
  feat_weaponproficiencygreatclub=false; 
  feat_weaponproficiencymorningstar=false; 
  feat_weaponproficiencyquarterstaff=false; 
  feat_weaponproficiencyscythe=false; 
  feat_weaponproficiencybattleaxe=false; 
  feat_weaponproficiencyflail=false; 
  feat_weaponproficiencyhandaxe=false; 
  feat_weaponproficiencylongsword=false; 
  feat_weaponproficiencyscimitar=false; 
  feat_weaponproficiencyshortsword=false; 
  feat_weaponproficiencythrowinghammer=false; 
  feat_weaponproficiencywarhammer=false; 
  feat_weaponproficiencywarpick=false; 
  feat_weaponproficiencyfalchion=false; 
  feat_weaponproficiencyglaive=false; 
  feat_weaponproficiencygreataxe=false; 
  feat_weaponproficiencygreatsword=false; 
  feat_weaponproficiencyhalberd=false; 
  feat_weaponproficiencyheavyflail=false; 
  feat_weaponproficiencylongspear=false; 
  feat_weaponproficiencymaul=false; 
  feat_weaponproficiencybastardsword=false; 
  feat_weaponproficiencykatar=false; 
  feat_weaponproficiencyrapier=false; 
  feat_weaponproficiencyspikedchain=false; 
  feat_weaponproficiencyhandcrossbow=false; 
  feat_weaponproficiencysling=false; 
  feat_weaponproficiencycrossbow=false; 
  feat_weaponproficiencylongbow=false; 
  feat_weaponproficiencyshortbow=false; 
  feat_weaponproficiencyshuriken=false; 
  feat_wintertouched=false; 
  feat_actionrecovery=false; 
  feat_agileathlete=false; 
  feat_arcanereach=false; 
  feat_armorspecializationchainmail=false; 
  feat_armorspecializationhide=false; 
  feat_armorspecializationplate=false; 
  feat_armorspecializationscale=false; 
  feat_backtothewall=false; 
  feat_bloodthirst=false; 
  feat_combatanticipation=false; 
  feat_combatcommander=false; 
  feat_dangersense=false; 
  feat_deadlyaxe=false; 
  feat_defensiveadvantage=false; 
  feat_devastatingcritical=false; 
  feat_distantshot=false; 
  feat_dwarvendurability=false; 
  feat_empowereddragonbreath=false; 
  feat_evasion=false; 
  feat_feywildprotection=false; 
  feat_fieryrebuke=false; 
  feat_fleetfooted=false; 
  feat_greatfortitude=false; 
  feat_hammerrhythm=false; 
  feat_heavybladeopportunity=false; 
  feat_improvedsecondwind=false; 
  feat_inescapableforce=false; 
  feat_ironwill=false; 
  feat_lastingfrost=false; 
  feat_lightbladeprecision=false; 
  feat_lightningarc=false; 
  feat_lightningreflexes=false; 
  feat_mettle=false; 
  feat_pointblankshot=false; 
  feat_polearmgamble=false; 
  feat_psychiclock=false; 
  feat_resoundingthunder=false; 
  feat_runningshot=false; 
  feat_scimitardance=false; 
  feat_secondimplementorb=false; 
  feat_secondimplementstaff=false; 
  feat_secondimplementwand=false; 
  feat_secretstride=false; 
  feat_seizethemoment=false; 
  feat_shieldspecialization=false; 
  feat_slyhunter=false; 
  feat_solidsound=false; 
  feat_spearpush=false; 
  feat_spellfocus=false; 
  feat_steadyshooter=false; 
  feat_sweepingflail=false; 
  feat_twofoldcurse=false; 
  feat_uncannydodge=false; 
  feat_underfoot=false; 
  feat_arcanemastery=false; 
  feat_axemastery=false; 
  feat_blindfight=false; 
  feat_bludgeonmastery=false; 
  feat_epicresurgence=false; 
  feat_flailmastery=false; 
  feat_flankingmaneuver=false; 
  feat_fontofradiance=false; 
  feat_heavyblademastery=false; 
  feat_irresistableflame=false; 
  feat_lightblademastery=false; 
  feat_pickmastery=false; 
  feat_spearmastery=false; 
  feat_spellaccuracy=false; 
  feat_triumphantattack=false; 
  feat_twoweaponflurry=false; 
  feat_unfetteredstride=false; 
  feat_multiclasspowerswapencounter=false; 
  feat_multiclasspowerswaputility=false; 
  feat_multiclasspowerswapdaily=false; 
 }


function CalculateHitPoints(){
//alert("Entering CalculateHitPoints"); 
 if (class_cleric){x=12+constitution+5*(total_levels-1); }
 if (class_fighter){x=15+constitution+6*(total_levels-1); }
 if (class_paladin){x=15+constitution+6*(total_levels-1); }
 if (class_ranger){x=12+constitution+5*(total_levels-1); }
 if (class_rogue){x=12+constitution+5*(total_levels-1); }
 if (class_warlock){x=12+constitution+5*(total_levels-1); }
 if (class_warlord){x=12+constitution+5*(total_levels-1); }
 if (class_wizard){x=10+constitution+4*(total_levels-1); }
 if (class_swordmage){x=15+constitution+6*(total_levels-1); }
 if (class_avenger){x=14+constitution+6*(total_levels-1); }
 if (class_barbarian){x=15+constitution+6*(total_levels-1); }
 if (class_bard){x=12+constitution+5*(total_levels-1); }
 if (class_druid){x=12+constitution+5*(total_levels-1); }
 if (class_invoker){x=10+constitution+4*(total_levels-1); }
 if (class_shaman){x=12+constitution+5*(total_levels-1); }
 if (class_sorcerer){x=12+constitution+5*(total_levels-1); }
 if (class_warden){x=17+constitution+7*(total_levels-1); }
 if (otherclass_hitpoints==10){x=10+constitution+4*(total_levels-1); }
 if (otherclass_hitpoints==12){x=12+constitution+5*(total_levels-1); }
 if (otherclass_hitpoints==15){x=15+constitution+6*(total_levels-1); }
 if ((feat_toughness) | (ranger_twoblade)) 
  {
   x+=5; 
   if (total_levels>10){x+=5; }
   if (total_levels>20){x+=5; }
  }
 if ((frb_impiltur)&(wisdom>constitution)){x=x-constitution+wisdom; }
 if ((frb_thay)&(intelligence>constitution)){x=x-constitution+intelligence; }
 total_hit_points=x; 
 bloodied_hit_points=Math.floor(total_hit_points/2); 
 surge_hit_points=Math.floor(total_hit_points/4); 
 if ((race_dragonborn)&(constitution>11)){surge_hit_points+=modifier_number(constitution); }
 if (class_cleric){surges_per_day=7+modifier_number(constitution); }
 if (class_fighter){surges_per_day=9+modifier_number(constitution); }
 if (class_paladin){surges_per_day=10+modifier_number(constitution); }
 if (class_ranger){surges_per_day=6+modifier_number(constitution); }
 if (class_rogue){surges_per_day=6+modifier_number(constitution); }
 if (class_warlock){surges_per_day=6+modifier_number(constitution); }
 if (class_warlord){surges_per_day=7+modifier_number(constitution); }
 if (class_wizard){surges_per_day=6+modifier_number(constitution); }
 if (class_swordmage){surges_per_day=8+modifier_number(constitution); }
 if (class_avenger){surges_per_day=7+modifier_number(constitution); }
 if (class_barbarian){surges_per_day=8+modifier_number(constitution); }
 if (class_bard){surges_per_day=7+modifier_number(constitution); }
 if (class_druid){surges_per_day=7+modifier_number(constitution); }
 if (class_invoker){surges_per_day=6+modifier_number(constitution); }
 if (class_shaman){surges_per_day=7+modifier_number(constitution); }
 if (class_sorcerer){surges_per_day=6+modifier_number(constitution); }
 if (class_warden){surges_per_day=9+modifier_number(constitution); }
 if (class_other){surges_per_day=otherclass_surges+modifier_number(constitution); }
 if (feat_durable){surges_per_day+=2; }
 if (paragon_dragonsoulheir){surges_per_day+=2; }
 if (feat_thirstforbattle){surges_per_day+=1; }
 if (paragon_pathfinder){surges_per_day+=2; }
 if (paragon_combatveteran){surges_per_day+=1; }
 if (paragon_simbarchofaglarond){surges_per_day+=2; }
 if ((paragon_spellguardwizard)&(total_levels>=16)){surges_per_day+=2; }
 }

function half_total_level(){
 return Math.floor(total_levels/2); 
 }

function CalculateArmorClass(){

  BaseArmorClass();
  if ((!document.form1.armor_radio[3].checked)
     &(!document.form1.armor_radio[4].checked)
     &(!document.form1.armor_radio[5].checked))
     {
      if ((dexterity>11) | (intelligence>11))
       {

        if (dexterity>intelligence)
         {
          total_armor_class+=modifier_number(dexterity); 
          armor_class_string+=" + "+modifier_number(dexterity)+" [dexterity]"; 
         }
        else
         {
          total_armor_class+=modifier_number(intelligence); 
          armor_class_string+=" + "+modifier_number(intelligence)+" [intelligence]"; 
         }
       }
      if ( ((druid_guardian)|(warden_earthstrength))&(!wearing_heavy_armor())&(constitution>dexterity)&(constitution>intelligence))
         {
          BaseArmorClass();
          total_armor_class+=modifier_number(constitution); 
          armor_class_string+=" + "+modifier_number(constitution)+" [constitution]"; 
         }
      if (((sorcerer_dragonsoul)|(sorcerer_cosmicmagic))&(!wearing_heavy_armor())&(strength>dexterity)&(strength>intelligence))
         {
          BaseArmorClass();
          total_armor_class+=modifier_number(strength); 
          armor_class_string+=" + "+modifier_number(strength)+" [strength]"; 
         }
      if ((warden_wildblood)&(!wearing_heavy_armor())&(wisdom>dexterity)&(wisdom>intelligence))
         {
          BaseArmorClass();
          total_armor_class+=modifier_number(wisdom); 
          armor_class_string+=" + "+modifier_number(wisdom)+" [wisdom]"; 
         }
      if ((class_barbarian)&(!wearing_heavy_armor()))
         {
          x=1;
          if (total_levels>=11){x=2;}
          if (total_levels>=21){x=3;}
          total_armor_class+=x; 
          armor_class_string+=" + "+x+" [barbarian agility]"; 
         }
      if (class_avenger)
         {
          total_armor_class+=3; 
          armor_class_string+=" + 3 [armor of faith]";
          if (feat_improvedarmoroffaith)
          {
           if (total_levels>20)
            {
             total_armor_class+=3; 
             armor_class_string+=" + 3 [improved armor of faith]";
            }
           else if (total_levels>10)
            {
             total_armor_class+=2; 
             armor_class_string+=" + 2 [improved armor of faith]";
            }
           else
            {
             total_armor_class+=1; 
             armor_class_string+=" + 1 [improved armor of faith]";
            }
          }
         }
     }


  if ((staffofdefense) | (feat_secondimplementstaff))
   {
    total_armor_class+=1; 
    armor_class_string+=" + 1 [wizard staff] "; 
   }
  if (class_swordmage){total_armor_class+=3; armor_class_string+=" + 3 [assume swordmage warding] "; }
  if (document.form1.armor_radio[1].checked)
   {
    total_armor_class+=2; 
    armor_class_string+=" + 2 [leather] "; 
   }
  if (document.form1.armor_radio[2].checked)
   {
    if (feat_armorspecializationhide)
    {
    total_armor_class+=4; 
    armor_class_string+=" + 4 [hide, specialized] "; 
    }
    else
    {
    total_armor_class+=3; 
    armor_class_string+=" + 3 [hide] "; 
    }
   }
  if (document.form1.armor_radio[3].checked)
   {
    if (feat_armorspecializationchainmail)
    {
    total_armor_class+=7; 
    armor_class_string+=" + 7 [chainmail, specialized] "; 
    }
    else
    {
    total_armor_class+=6; 
    armor_class_string+=" + 6 [chainmail] "; 
    }
   }
  if (document.form1.armor_radio[4].checked)
   {
    if (feat_armorspecializationscale)
    {
    total_armor_class+=8; 
    armor_class_string+=" + 8 [scale, specialized] "; 
    }
    else
    {
    total_armor_class+=7; 
    armor_class_string+=" + 7 [scale] "; 
    }
   }
  if (document.form1.armor_radio[5].checked)
   {
    if (feat_armorspecializationplate)
    {
    total_armor_class+=9; 
    armor_class_string+=" + 9 [plate, specialized] "; 
    }
    else
    {
    total_armor_class+=8; 
    armor_class_string+=" + 8 [plate] "; 
    }
   }
  if ((document.form1.shield_radio[1].checked)|(document.form1.spikedshield_box.checked))
   {
    total_armor_class+=1; 
    armor_class_string+=" + 1 [if carrying light shield] "; 
    if ((feat_shieldspecialization)&((already_knows_lightshield) | (feat_shieldproficiencylight)))
     {
      total_armor_class++; 
      armor_class_string+=" + 1 [shield specialization] "; 
     }
   }
  if (document.form1.shield_radio[2].checked)
   {
     total_armor_class+=2; 
    armor_class_string+=" + 2 [if carrying heavy shield] "; 
    if ((feat_shieldspecialization)&((already_knows_heavyshield) | (feat_shieldproficiencyheavy)))
     {
      total_armor_class++; 
      armor_class_string+=" + 1 [shield specialization] "; 
     }
   }
  if (feat_combatanticipation)
   {
    total_armor_class+=1; 
    armor_class_string+=" + 1 [combat anticipation] "; 
   }
  if ((total_levels>=11)&(paragon_warpriest))
   {
    if ((document.form1.armor_radio[3].checked)
       | (document.form1.armor_radio[4].checked)
       | (document.form1.armor_radio[5].checked))
       {
        total_armor_class+=1; 
        armor_class_string+=" + 1 [warpriest's training] "; 
        
       }
   }

  if ((total_levels>=11)&(paragon_pitfighter))
   {
    if ((document.form1.armor_radio[1].checked)
       | (document.form1.armor_radio[2].checked)
       | (document.form1.armor_radio[3].checked)
       | (document.form1.armor_radio[4].checked)
       | (document.form1.armor_radio[5].checked))
       {
        total_armor_class+=1; 
        armor_class_string+=" + 1 [armor optimization] "; 
        
       }
   }

  speed_squares=6; 
   speed_string=""
  if ((race_elf)|(race_gnoll)){speed_squares=7; }
  if ((race_dwarf)|(race_gnome)){speed_squares=5; }
  if ((document.form1.armor_radio[3].checked==true) |
     ((document.form1.armor_radio[4].checked==true)&(!feat_armorspecializationscale)) |
     (document.form1.armor_radio[5].checked==true))

     {
      if ((!race_dwarf)&(!epic_adamantinesoldier)){speed_squares--; speed_string=" [includes armor penalty]"; }
     }
   else
     {
      if (druid_predator){speed_squares++; speed_string+=" [includes druid predator bonus]";}
     }
   if (feat_fleetfooted){speed_squares++; speed_string+=" [includes fleet-footed bonus]"; }
   if (feat_sharedspeed){speed_squares++; speed_string+=" [includes shared-speed bonus]"; }
   speed_string=speed_squares + " squares" + speed_string; 


  size_string="Medium"; 
  if (race_halfling){size_string="Small"; }

  vision_string="Normal"; 
  if ((otherrace_lowlight) | (race_dwarf) | (race_eladrin) | (race_elf) | (race_halfelf) | (race_tiefling) | (race_bugbear) | (race_gnoll) | (race_gnome) | (race_goblin) | (race_hobgoblin) | (race_orc) | (race_shadarkai) | (race_shifterlongtooth) | (race_shifterrazorclaw)){vision_string="Low-light"; }
  if (feat_dragonbornsenses){vision_string="Low-light [dragonborn senses]"; }
  if (fam_shadowincarnate){vision_string="Darkvision [shadow incarnate";}
  if ((otherrace_darkvision) | (race_drow)){vision_string="Darkvision"; }
  initiative_modifier=half_total_level()+modifier_number(dexterity); 
  initiative_string_2=" = "; 
  if (total_levels>1){initiative_string_2+=" + "+half_total_level()+" [half level]"; }
  if (modifier_number(dexterity)>=0){initiative_string_2+=" + " + modifier_number(dexterity)+" [dexterity]"; }
  if (modifier_number(dexterity)<0){initiative_string_2+= modifier_number(dexterity)+" [dexterity]"; }
  if (feat_improvedinitiative==true)
   {
    initiative_modifier +=4; 
    initiative_string_2 +="  + 4 [improved initiative] "
   }
  if (feat_thirstforbattle==true)
   {
    initiative_modifier +=3; 
    initiative_string_2 +="  + 3 [thirst for battle] "
   }
  if (feat_wildsenses==true)
   {
    initiative_modifier +=3; 
    initiative_string_2 +="  + 3 [wild senses] "
   }
  if (feat_quickdraw==true)
   {
    initiative_modifier +=2; 
    initiative_string_2 +="  + 2 [quick draw] "
   }
  if (frb_vilhonwilds)
   {
    initiative_modifier +=1; 
    initiative_string_2 +="  + 1 [Vilhon WILds] "
   }
  if (race_githyanki==true)
   {
    initiative_modifier +=2; 
    initiative_string_2 +="  + 2 [Githyanki] "
   }
  if (frb_dalelands==true)
   {
    initiative_modifier +=1; 
    initiative_string_2 +="  + 1 [Dalelands] "
   }
  if (race_githzerai==true)
   {
    initiative_modifier +=2; 
    initiative_string_2 +="  + 2 [Githzerai] "
   }
  if (race_hobgoblin==true)
   {
    initiative_modifier +=2; 
    initiative_string_2 +="  + 2 [Hobgoblin] "
   }
  if (class_warlord==true)
   {
    initiative_modifier +=2; 
    initiative_string_2 +="  + 2 [combat leader] "
   }
  initiative_string_1=initiative_modifier; 
  initiative_string_1="1d20 "; 
  if (initiative_modifier>=0){initiative_string_1+="+"; }
  initiative_string_1+=initiative_modifier; 

//greenwood                         

  acrobatics_bonus=half_total_level()+modifier_number(dexterity);
  if (race_halfling){acrobatics_bonus+=2; }
  if (feat_lightstep){acrobatics_bonus+=1; }
  if (race_githzerai){acrobatics_bonus+=2; }
  if (race_shadarkai){acrobatics_bonus+=2; }
  if (race_shifterrazorclaw){acrobatics_bonus+=2; }
  if (otherrace_acrobatics){acrobatics_bonus+=2; }
  if (paragon_ghostpanther){acrobatics_bonus+=modifier_number(wisdom);}
  if (frb_nelantherisles){acrobatics_bonus+=1;}
  // if (race_xxx){acrobatics_bonus+=2; }
  // if (race_xxx){acrobatics_bonus+=2; }
  // if (race_xxx){acrobatics_bonus+=2; }
  if (eladrin_acrobatics){acrobatics_bonus+=5; } else
  if (trained_acrobatics){acrobatics_bonus+=5; } else
  if (multi_trained_acrobatics){acrobatics_bonus+=5; } else
  if (feat_skilltrainingacrobatics){acrobatics_bonus+=5; } else
  {
   if (feat_jackofalltrades){acrobatics_bonus+=2; }
   if (class_bard){acrobatics_bonus++;}
  }










  if (fam_cat){acrobatics_bonus+=2;}
  if (fam_weasel){acrobatics_bonus+=2;}
  if (fam_lightninglizard){acrobatics_bonus+=2;}
  if (feat_skillfocusacrobatics){acrobatics_bonus+=3; }
  if (paragon_masterinfiltrator){acrobatics_bonus+=2; }
  acrobatics_bonus+=ArmorCheckPenalty()+ShieldCheckPenalty(); 
  acrobatics_string_1=acrobatics_bonus; 
  if (acrobatics_bonus>=0){acrobatics_string_1="+"+acrobatics_bonus; }
  acrobatics_string_2=" = "+modifier_number(dexterity)+" [dexterity] "; 
  if (total_levels>1){acrobatics_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_halfling){acrobatics_string_2+=" + 2 [Halfling] "; }
  if (race_githzerai){acrobatics_string_2+=" + 2 [Githzerai] "; }
  if (race_shadarkai){acrobatics_string_2+=" + 2 [Shadar-Kai] "; }
  if (race_shifterrazorclaw){acrobatics_string_2+=" + 2 [Razorclaw Shifter] "; }
  if (otherrace_acrobatics){acrobatics_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  // if (race_xxx){acrobatics_string_2+=" + 2 [xxx] "; }
  // if (frb_nelantherisles){acrobatics_string_2+=" + 1 [Nelanther Isles] "; }
  if (feat_lightstep){acrobatics_string_2+=" + 1 [light step]"; }
  if (paragon_ghostpanther){acrobatics_string_2+=" "+modifier_string(wisdom)+" [ghost panther]"; }
  if (fam_cat){acrobatics_string_2+=" + 2 [cat] ";}
  if (fam_weasel){acrobatics_string_2+=" + 2 [weasel] ";}
  if (fam_lightninglizard){acrobatics_string_2+=" + 2 [lightning lizard] ";}
  if (eladrin_acrobatics){acrobatics_string_2+=" + 5 [eladrin education]"; } else
  if (trained_acrobatics){acrobatics_string_2+=" + 5 [class training]"; } else
  if (multi_trained_acrobatics){acrobatics_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingacrobatics){acrobatics_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){acrobatics_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){acrobatics_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (paragon_masterinfiltrator){acrobatics_string_2+=" + 2 [skillful infiltrator]"; } 
  if (feat_skillfocusacrobatics){acrobatics_string_2+=" + 3 [skill focus]"; }
  if (ArmorCheckPenalty()!=0){acrobatics_string_2+=ArmorCheckPenalty()+" [armor]"; }
  if (ShieldCheckPenalty()!=0){acrobatics_string_2+=ShieldCheckPenalty()+" [shield]"; }

  arcana_bonus=half_total_level()+modifier_number(intelligence); 
  if (feat_bardicknowledge){arcana_bonus+=2; }
  if (race_eladrin){arcana_bonus+=2; }
  if (race_gnome){arcana_bonus+=2; }
  if (otherrace_arcana){arcana_bonus+=2; }
  if (frb_greatdale){arcana_bonus+=1; }
  if (frb_netheril){arcana_bonus+=+1; }
  // if (race_xxx){arcana_bonus+=2; }
  // if (race_xxx){arcana_bonus+=2; }
  // if (race_xxx){arcana_bonus+=2; }
  if (eladrin_arcana){arcana_bonus+=5; } else
  if (trained_arcana){arcana_bonus+=5; } else
  if (multi_trained_arcana){arcana_bonus+=5; } else
  if (feat_skilltrainingarcana){arcana_bonus+=5; } else
  {
  if (feat_jackofalltrades){arcana_bonus+=2; }
   if (class_bard){arcana_bonus++;}
  }
  if (feat_skillfocusarcana){arcana_bonus+=3; }
  if (fam_bookimp){arcana_bonus+=2;}
  if (fam_skull){arcana_bonus+=2;}
  if (fam_crafterhomunculus){arcana_bonus+=2;}
  if (fam_grayspawnshortfang){arcana_bonus+=2;}
  if (fam_rakshasaclaw){arcana_bonus+=2;}
  if (fam_blazingskull){arcana_bonus+=2;}
  if (fam_chaosshard){arcana_bonus+=2;}
  arcana_string_1=arcana_bonus; 
  if (arcana_bonus>=0){arcana_string_1="+"+arcana_bonus; }
  arcana_string_2=" = "+modifier_number(intelligence)+" [intelligence] "; 
  if (total_levels>1){arcana_string_2+=" + "+half_total_level()+" [half level]"; }
  if (feat_bardicknowledge){arcana_string_2+=" + 2 [bardic knowledge] "; }
  if (race_eladrin){arcana_string_2+=" + 2 [Eladrin] "; }
  if (race_gnome){arcana_string_2+=" + 2 [Gnome] "; }
  if (otherrace_arcana){arcana_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (frb_greatdale){arcana_string_2+=" + 1 [Great Dale] "; }
  if (frb_netheril){arcana_string_2+=" + 1 [Netheril] "; }
  if (fam_bookimp){arcana_string_2+=" + 2 [book imp] ";}
  if (fam_skull){arcana_string_2+=" + 2 [skull] ";}
  if (fam_crafterhomunculus){arcana_string_2+=" + 2 [crafter homunculus] ";}
  if (fam_grayspawnshortfang){arcana_string_2+=" + 2 [grayspawn shortfang] ";}
  if (fam_rakshasaclaw){arcana_string_2+=" + 2 [rakshasa claw] ";}
  if (fam_blazingskull){arcana_string_2+=" + 2 [blazing skull] ";}
  if (fam_chaosshard){arcana_string_2+=" + 2 [chaos shard] ";}
  // if (race_xxx){arcana_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){arcana_string_2+=" + 2 [xxx] "; }
  if (eladrin_arcana){arcana_string_2+=" + 5 [eladrin education]"; } else
  if (trained_arcana){arcana_string_2+=" + 5 [class training]"; } else
  if (multi_trained_arcana){arcana_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingarcana){arcana_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){arcana_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){arcana_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusarcana){arcana_string_2+=" + 3 [skill focus]"; }

  athletics_bonus=half_total_level()+modifier_number(strength); 
  if (race_goliath){athletics_bonus+=2; }
  if (race_githzerai){athletics_bonus+=2; }
  if (race_hobgoblin){athletics_bonus+=2; }
  if (race_shifterlongtooth){athletics_bonus+=2; }
  if (otherrace_athletics){athletics_bonus+=2; }
  if (paragon_ghostpanther){athletics_bonus+=modifier_number(wisdom);}
  if (frb_tymanther){athletics_bonus+=2; }
  if (frb_elfharrow){athletics_bonus+=1; }
  if (frb_nelantherisles){athletics_bonus+=1; }
  // if (race_xxx){athletics_bonus+=2; }
  // if (race_xxx){athletics_bonus+=2; }
  // if (race_xxx){athletics_bonus+=2; }
  // if (race_xxx){athletics_bonus+=2; }
  if (eladrin_athletics){athletics_bonus+=5; } else
  if (trained_athletics){athletics_bonus+=5; } else
  if (multi_trained_athletics){athletics_bonus+=5; } else
  if (feat_skilltrainingathletics){athletics_bonus+=5; } else
  {
  if (feat_jackofalltrades){athletics_bonus+=2; }
   if (class_bard){athletics_bonus++;}
  }

  if (fam_canineconstruct){athletics_bonus+=2;}
  if (fam_lightninglizard){athletics_bonus+=2;}
  if (fam_firelizard){athletics_bonus+=2;}
  if (fam_bluespawnnimblespark){athletics_bonus+=2;}


  if (feat_skillfocusathletics){athletics_bonus+=3; }
  if (feat_longjumper){athletics_bonus++; }
  if (feat_sureclimber){athletics_bonus++; }
  if (paragon_masterinfiltrator){athletics_bonus+=2; }
  athletics_bonus+=ArmorCheckPenalty()+ShieldCheckPenalty(); 
  athletics_string_1=athletics_bonus; 
  if (athletics_bonus>=0){athletics_string_1="+"+athletics_bonus; }
  athletics_string_2=" = "+modifier_number(strength)+" [strength] "; 
  if (total_levels>1){athletics_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_githzerai){athletics_string_2+=" + 2 [Githzerai] "; }
  if (race_hobgoblin){athletics_string_2+=" + 2 [Hobgoblin] "; }
  if (race_goliath){athletics_string_2+=" + 2 [Goliath] "; }
  if (race_shifterlongtooth){athletics_string_2+=" + 2 [Longtooth Shifter] "; }
  if (otherrace_athletics){athletics_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (frb_tymanther){athletics_string_2+=" + 2 [Tymanther] "; }
  if (frb_elfharrow){athletics_string_2+=" + 1 [Elfharrow] "; }
  if (frb_nelantherisles){athletics_string_2+=" + 1 [Nelanther Isles] "; }
  // if (race_xxx){athletics_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){athletics_string_2+=" + 2 [xxx] "; }
  if (paragon_ghostpanther){athletics_string_2+=" "+modifier_string(wisdom)+" [ghost panther]"; }
  if (fam_canineconstruct){athletics_string_2+=" + 2 [canine construct] ";}
  if (fam_lightninglizard){athletics_string_2+=" + 2 [lightning lizard] ";}
  if (fam_firelizard){athletics_string_2+=" + 2 [fire lizard] ";}
  if (fam_bluespawnnimblespark){athletics_string_2+=" + 2 [bluespawn nimblespark] ";}

  if (eladrin_athletics){athletics_string_2+=" + 5 [eladrin education]"; } else
  if (trained_athletics){athletics_string_2+=" + 5 [class training]"; } else
  if (multi_trained_athletics){athletics_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingathletics){athletics_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){athletics_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){athletics_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusathletics){athletics_string_2+=" + 3 [skill focus]"; }
  if (feat_longjumper){athletics_string_2+=" + 1 [long jumper]"; }
  if (feat_sureclimber){athletics_string_2+=" + 1 [sure climber]"; }
  if (paragon_masterinfiltrator){athletics_string_2+=" + 2 [skillful infiltrator]"; }
  if (ArmorCheckPenalty()!=0){athletics_string_2+=ArmorCheckPenalty()+" [armor]"; }
  if (ShieldCheckPenalty()!=0){athletics_string_2+=ShieldCheckPenalty()+" [shield]"; }


  bluff_bonus=half_total_level()+modifier_number(charisma); 
  if (race_tiefling){bluff_bonus+=2; }
  if (race_doppelganger){bluff_bonus+=2; }
  if (otherrace_bluff){bluff_bonus+=2; }
  // if (race_xxx){bluff_bonus+=2; }
  // if (race_xxx){bluff_bonus+=2; }
  if (eladrin_bluff){bluff_bonus+=5; } else
  if (trained_bluff){bluff_bonus+=5; } else
  if (multi_trained_bluff){bluff_bonus+=5; } else
  if (feat_skilltrainingbluff){bluff_bonus+=5; } else
  {
  if (feat_jackofalltrades){bluff_bonus+=2; }
   if (class_bard){bluff_bonus++;}
  }
  if (feat_skillfocusbluff){bluff_bonus+=3; }
  if (fam_serpent){bluff_bonus+=2;}
  if (fam_weasel){bluff_bonus+=2;}
  if (fam_airmephit){bluff_bonus+=2;}
  if (fam_earthmephit){bluff_bonus+=2;}
  if (fam_firemephit){bluff_bonus+=2;}
  if (fam_greenspawnbanespike){bluff_bonus+=2;}
  if (fam_icemephit){bluff_bonus+=2;}


  bluff_string_1=bluff_bonus; 
  if (bluff_bonus>=0){bluff_string_1="+"+bluff_bonus; }
  bluff_string_2=" = "+modifier_number(charisma)+" [charisma] "; 
  if (total_levels>1){bluff_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_tiefling){bluff_string_2+=" + 2 [Tiefling] "; }
  if (race_doppelganger){bluff_string_2+=" + 2 [Doppelganger] "; }
  if (fam_serpent){bluff_string_2+=" + 2 [serpent] ";}
  if (fam_weasel){bluff_string_2+=" + 2 [weasel] ";}
  if (fam_airmephit){bluff_string_2+=" + 2 [air mephit] ";}
  if (fam_earthmephit){bluff_string_2+=" + 2 [earth mephit] ";}
  if (fam_firemephit){bluff_string_2+=" + 2 [fire mephit] ";}
  if (fam_greenspawnbanespike){bluff_string_2+=" + 2 [greenspawn banespike] ";}
  if (fam_icemephit){bluff_string_2+=" + 2 [ice mephit] ";}
  if (otherrace_bluff){bluff_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  // if (race_xxx){bluff_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){bluff_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){bluff_string_2+=" + 2 [xxx] "; }
  if (eladrin_bluff){bluff_string_2+=" + 5 [eladrin education]"; } else
  if (trained_bluff){bluff_string_2+=" + 5 [class training]"; } else
  if (multi_trained_bluff){bluff_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingbluff){bluff_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){bluff_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){bluff_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusbluff){bluff_string_2+=" + 3 [skill focus]"; }

  diplomacy_bonus=half_total_level()+modifier_number(charisma); 
  if (race_halfelf){diplomacy_bonus+=2; }
  if (otherrace_diplomacy){diplomacy_bonus+=2; }
  if (frb_waterdeep){diplomacy_bonus+=2; }
  if (fam_parrot){diplomacy_bonus+=2;}

  // if (race_xxx){diplomacy_bonus+=2; }
  // if (race_xxx){diplomacy_bonus+=2; }
  // if (race_xxx){diplomacy_bonus+=2; }
  if (eladrin_diplomacy){diplomacy_bonus+=5; } else
  if (trained_diplomacy){diplomacy_bonus+=5; } else
  if (multi_trained_diplomacy){diplomacy_bonus+=5; } else
  if (feat_skilltrainingdiplomacy){diplomacy_bonus+=5; } else
  {
  if (feat_jackofalltrades){diplomacy_bonus+=2; }
   if (class_bard){diplomacy_bonus++;}
  }
  if (feat_skillfocusdiplomacy){diplomacy_bonus+=3; }
  diplomacy_string_1=diplomacy_bonus; 
  if (diplomacy_bonus>=0){diplomacy_string_1="+"+diplomacy_bonus; }
  diplomacy_string_2=" = "+modifier_number(charisma)+" [charisma] "; 
  if (total_levels>1){diplomacy_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_halfelf){diplomacy_string_2+=" + 2 [half-elf] "; }
  if (otherrace_diplomacy){diplomacy_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (frb_waterdeep){diplomacy_string_2+=" + 2 [Waterdeep] "; }
  if (fam_parrot){diplomacy_string_2+=" + 2 [parrot] ";}
  // if (race_xxx){diplomacy_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){diplomacy_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){diplomacy_string_2+=" + 2 [xxx] "; }
  if (eladrin_diplomacy){diplomacy_string_2+=" + 5 [eladrin education]"; } else
  if (trained_diplomacy){diplomacy_string_2+=" + 5 [class training]"; } else
  if (multi_trained_diplomacy){diplomacy_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingdiplomacy){diplomacy_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){diplomacy_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){diplomacy_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusdiplomacy){diplomacy_string_2+=" + 3 [skill focus]"; }

  dungeoneering_bonus=half_total_level()+modifier_number(wisdom); 
  if (feat_bardicknowledge){dungeoneering_bonus+=2; }
  if (race_dwarf){dungeoneering_bonus+=2; }
  if (otherrace_dungeoneering){dungeoneering_bonus+=2; }
  if (fam_ooze){dungeoneering_bonus+=2;}
  if (fam_stonefowl){dungeoneering_bonus+=2;}
  if (frb_eastrift){dungeoneering_bonus+=2; }
  // if (race_xxx){dungeoneering_bonus+=2; }
  // if (race_xxx){dungeoneering_bonus+=2; }
  if (eladrin_dungeoneering){dungeoneering_bonus+=5; } else
  if (trained_dungeoneering){dungeoneering_bonus+=5; } else
  if (multi_trained_dungeoneering){dungeoneering_bonus+=5; } else
  if (feat_skilltrainingdungeoneering){dungeoneering_bonus+=5; } else
  {
  if (feat_jackofalltrades){dungeoneering_bonus+=2; }
   if (class_bard){dungeoneering_bonus++;}
  }
  if (feat_skillfocusdungeoneering){dungeoneering_bonus+=3; }
  dungeoneering_string_1=dungeoneering_bonus; 
  if (dungeoneering_bonus>=0){dungeoneering_string_1="+"+dungeoneering_bonus; }
  dungeoneering_string_2=" = "+modifier_number(wisdom)+" [wisdom] "; 
  if (total_levels>1){dungeoneering_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_dwarf){dungeoneering_string_2+=" + 2 [Dwarf] "; }
  if (feat_bardicknowledge){dungeoneering_string_2+=" + 2 [bardic knowledge] "; }
  if (otherrace_dungeoneering){dungeoneering_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (fam_ooze){dungeoneering_string_2+=" + 2 [ooze] ";}
  if (fam_stonefowl){dungeoneering_string_2+=" + 2 [stone fowl] ";}
  if (frb_eastrift){dungeoneering_string_2+=" + 2 [East Rift] "; }
  // if (race_xxx){dungeoneering_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){dungeoneering_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){dungeoneering_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){dungeoneering_string_2+=" + 2 [xxx] "; }
  if (eladrin_dungeoneering){dungeoneering_string_2+=" + 5 [eladrin education]"; } else
  if (trained_dungeoneering){dungeoneering_string_2+=" + 5 [class training]"; } else
  if (multi_trained_dungeoneering){dungeoneering_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingdungeoneering){dungeoneering_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){dungeoneering_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){dungeoneering_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusdungeoneering){dungeoneering_string_2+=" + 3 [skill focus]"; }

  endurance_bonus=half_total_level()+modifier_number(constitution); 
  if (race_dwarf){endurance_bonus+=2; }
  if (race_shifterlongtooth){endurance_bonus+=2; }
  if (race_warforged){endurance_bonus+=2; }
  if (race_halforc){endurance_bonus+=2; }
  if (race_genasi){endurance_bonus+=2; }
  if (otherrace_endurance){endurance_bonus+=2; }
  if (fam_firelizard){endurance_bonus+=2;}
  if (fam_toad){endurance_bonus+=2;}
  if (fam_earthmephit){endurance_bonus+=2;}
  if (frb_narfell){endurance_bonus+=3; }
  // if (race_xxx){endurance_bonus+=2; }
  if (eladrin_endurance){endurance_bonus+=5; } else
  if (trained_endurance){endurance_bonus+=5; } else
  if (multi_trained_endurance){endurance_bonus+=5; } else
  if (feat_skilltrainingendurance){endurance_bonus+=5; } else
  {
  if (feat_jackofalltrades){endurance_bonus+=2; }
   if (class_bard){endurance_bonus++;}
  }
  if (feat_skillfocusendurance){endurance_bonus+=3; }
  endurance_bonus+=ArmorCheckPenalty()+ShieldCheckPenalty(); 
  endurance_string_1=endurance_bonus; 
  if (endurance_bonus>=0){endurance_string_1="+"+endurance_bonus; }
  endurance_string_2=" = "+modifier_number(constitution)+" [constitution] "; 
  if (total_levels>1){endurance_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_dwarf){endurance_string_2+=" + 2 [Dwarf] "; }
  if (race_shifterlongtooth){endurance_string_2+=" + 2 [Longtooth Shifter] "; }
  if (race_warforged){endurance_string_2+=" + 2 [Warforged] "; }
  if (race_halforc){endurance_string_2+=" + 2 [Half-Orc] "; }
  if (race_genasi){endurance_string_2+=" + 2 [Genasi] "; }
  if (otherrace_endurance){endurance_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (frb_narfell){endurance_string_2+=" + 3 [Narfell] "; }
  if (fam_firelizard){endurance_string_2+=" + 2 [fire lizard] ";}
  if (fam_toad){endurance_string_2+=" + 2 [toad] ";}
  if (fam_earthmephit){endurance_string_2+=" + 2 [earth mephit] ";}
  // if (race_xxx){endurance_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){endurance_string_2+=" + 2 [xxx] "; }
  if (eladrin_endurance){endurance_string_2+=" + 5 [eladrin education]"; } else
  if (trained_endurance){endurance_string_2+=" + 5 [class training]"; } else
  if (multi_trained_endurance){endurance_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingendurance){endurance_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){endurance_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){endurance_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusendurance){endurance_string_2+=" + 3 [skill focus]"; }
  if (ArmorCheckPenalty()!=0){endurance_string_2+=ArmorCheckPenalty()+" [armor]"; }
  if (ShieldCheckPenalty()!=0){endurance_string_2+=ShieldCheckPenalty()+" [shield]"; }

  heal_bonus=half_total_level()+modifier_number(wisdom); 
  if (otherrace_heal){heal_bonus+=2; }
  if (feat_combatmedic){heal_bonus+=2;}
  // if (race_xxx){heal_bonus+=2; }
  if (eladrin_heal){heal_bonus+=5; } else
  if (trained_heal){heal_bonus+=5; } else
  if (multi_trained_heal){heal_bonus+=5; } else
  if (feat_skilltrainingheal){heal_bonus+=5; } else
  {
  if (feat_jackofalltrades){heal_bonus+=2; }
   if (class_bard){heal_bonus++;}
  }
  if (feat_skillfocusheal){heal_bonus+=3; }
  heal_string_1=heal_bonus; 
  if (heal_bonus>=0){heal_string_1="+"+heal_bonus; }
  heal_string_2=" = "+modifier_number(wisdom)+" [wisdom] "; 
  if (total_levels>1){heal_string_2+=" + "+half_total_level()+" [half level]"; }
  if (otherrace_heal){heal_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (feat_combatmedic){heal_string_2+=" + 2 [combat medic] "; }
  // if (race_xxx){heal_string_2+=" + 2 [xxx] "; }
  if (eladrin_heal){heal_string_2+=" + 5 [eladrin education]"; } else
  if (trained_heal){heal_string_2+=" + 5 [class training]"; } else
  if (multi_trained_heal){heal_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingheal){heal_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){heal_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){heal_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusheal){heal_string_2+=" + 3 [skill focus]"; }

  history_bonus=half_total_level()+modifier_number(intelligence); 
  if (feat_bardicknowledge){history_bonus+=2; }
  if (race_dragonborn){history_bonus+=2; }
  if (race_deva){history_bonus+=2; }
  if (race_eladrin){history_bonus+=2; }
  if (race_githyanki){history_bonus+=2; }
  if (race_hobgoblin){history_bonus+=2; }
  if (otherrace_history){history_bonus+=2; }
  if (fam_bookimp){history_bonus+=2;}
  if (frb_netheril){history_bonus+=1; }
  // if (race_xxx){history_bonus+=2; }
  // if (race_xxx){history_bonus+=2; }
  // if (race_xxx){history_bonus+=2; }
  if (eladrin_history){history_bonus+=5; } else
  if (trained_history){history_bonus+=5; } else
  if (multi_trained_history){history_bonus+=5; } else
  if (feat_skilltraininghistory){history_bonus+=5; } else
  {
  if (feat_jackofalltrades){history_bonus+=2; }
   if (class_bard){history_bonus++;}
  }
  if (feat_skillfocushistory){history_bonus+=3; }
  history_string_1=history_bonus; 
  if (history_bonus>=0){history_string_1="+"+history_bonus; }
  history_string_2=" = "+modifier_number(intelligence)+" [intelligence] "; 
  if (total_levels>1){history_string_2+=" + "+half_total_level()+" [half level]"; }
  if (feat_bardicknowledge){history_string_2+=" + 2 [bardicknowledge] "; }
  if (race_dragonborn){history_string_2+=" + 2 [Dragonborn] "; }
  if (race_deva){history_string_2+=" + 2 [Deva] "; }
  if (race_eladrin){history_string_2+=" + 2 [Eladrin] "; }
  if (race_githyanki){history_string_2+=" + 2 [Githyanki] "; }
  if (race_hobgoblin){history_string_2+=" + 2 [Hobgoblin] "; }
  if (otherrace_history){history_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (fam_bookimp){history_string_2+=" + 2 [book imp] ";}
  // if (race_xxx){history_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){history_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){history_string_2+=" + 2 [xxx] "; }
  if (frb_netheril){history_string_2+=" + 1 [Netheril]"; } else
  if (eladrin_history){history_string_2+=" + 5 [eladrin education]"; } else
  if (trained_history){history_string_2+=" + 5 [class training]"; } else
  if (multi_trained_history){history_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltraininghistory){history_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){history_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){history_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocushistory){history_string_2+=" + 3 [skill focus]"; }

  insight_bonus=half_total_level()+modifier_number(wisdom); 
  if (race_doppelganger){insight_bonus+=2; }
  if (race_halfelf){insight_bonus+=2; }
  if (otherrace_insight){insight_bonus+=2; }
  if (frb_cormyr){insight_bonus+=2; }
  // if (race_xxx){insight_bonus+=2; }
  // if (race_xxx){insight_bonus+=2; }
  if (eladrin_insight){insight_bonus+=5; } else
  if (trained_insight){insight_bonus+=5; } else
  if (multi_trained_insight){insight_bonus+=5; } else
  if (feat_skilltraininginsight){insight_bonus+=5; } else
  {
  if (feat_jackofalltrades){insight_bonus+=2; }
   if (class_bard){insight_bonus++;}
  }
  if (feat_skillfocusinsight){insight_bonus+=3; }
  insight_string_1=insight_bonus; 
  if (insight_bonus>=0){insight_string_1="+"+insight_bonus; }
  insight_string_2=" = "+modifier_number(wisdom)+" [wisdom] "; 
  if (total_levels>1){insight_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_doppelganger){insight_string_2+=" + 2 [Doppelganger] "; }
  if (race_halfelf){insight_string_2+=" + 2 [half-elf] "; }
  if (otherrace_insight){insight_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (frb_cormyr){insight_string_2+=" + 2 [Cormyr] "; }
  // if (race_xxx){insight_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){insight_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){insight_string_2+=" + 2 [xxx] "; }
  if (eladrin_insight){insight_string_2+=" + 5 [eladrin education]"; } else
  if (trained_insight){insight_string_2+=" + 5 [class training]"; } else
  if (multi_trained_insight){insight_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltraininginsight){insight_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){insight_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){insight_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusinsight){insight_string_2+=" + 3 [skill focus]"; }

  intimidate_bonus=half_total_level()+modifier_number(charisma); 
  if (race_dragonborn){intimidate_bonus+=2; }
  if (race_drow){intimidate_bonus+=2; }
  if (race_gnoll){intimidate_bonus+=2; }
  if (race_halforc){intimidate_bonus+=2; }
  if (race_bugbear){intimidate_bonus+=2; }
  if (race_bladeling){intimidate_bonus+=2; }
  if (otherrace_intimidate){intimidate_bonus+=2; }
  if (fam_bounddemon){intimidate_bonus+=2;}
  if (fam_badger){intimidate_bonus+=2;}
  if (fam_skull){intimidate_bonus+=2;}
  if (fam_grayspawnshortfang){intimidate_bonus+=2;}
  if (fam_redspawnspitfire){intimidate_bonus+=2;}
  // if (race_xxx){intimidate_bonus+=2; }
  // if (race_xxx){intimidate_bonus+=2; }
  // if (race_xxx){intimidate_bonus+=2; }
  if (eladrin_intimidate){intimidate_bonus+=5; } else
  if (trained_intimidate){intimidate_bonus+=5; } else
  if (multi_trained_intimidate){intimidate_bonus+=5; } else
  if (feat_skilltrainingintimidate){intimidate_bonus+=5; } else
  {
  if (feat_jackofalltrades){intimidate_bonus+=2; }
   if (class_bard){intimidate_bonus++;}
  }
  if (feat_skillfocusintimidate){intimidate_bonus+=3; }
  intimidate_string_1=intimidate_bonus; 
  if (intimidate_bonus>=0){intimidate_string_1="+"+intimidate_bonus; }
  intimidate_string_2=" = "+modifier_number(charisma)+" [charisma] "; 
  if (total_levels>1){intimidate_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_dragonborn){intimidate_string_2+=" + 2 [Dragonborn] "; }
  if (race_drow){intimidate_string_2+=" + 2 [Drow] "; }
  if (race_gnoll){intimidate_string_2+=" + 2 [Gnoll] "; }
  if (race_halforc){intimidate_string_2+=" + 2 [Half-Orc] "; }
  if (race_bugbear){intimidate_string_2+=" + 2 [Bugbear] "; }
  if (race_bladeling){intimidate_string_2+=" + 2 [Bladeling] "; }
  if (otherrace_intimidate){intimidate_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (fam_bounddemon){intimidate_string_2+=" + 2 [bound demon] ";}
  if (fam_badger){intimidate_string_2+=" + 2 [badger] ";}
  if (fam_skull){intimidate_string_2+=" + 2 [skull] ";}
  if (fam_grayspawnshortfang){intimidate_string_2+=" + 2 [grayspawn shortfang] ";}
  if (fam_redspawnspitfire){intimidate_string_2+=" + 2 [redspawn spitfire] ";}
  // if (race_xxx){intimidate_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){intimidate_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){intimidate_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){intimidate_string_2+=" + 2 [xxx] "; }
  if (eladrin_intimidate){intimidate_string_2+=" + 5 [eladrin education]"; } else
  if (trained_intimidate){intimidate_string_2+=" + 5 [class training]"; } else
  if (multi_trained_intimidate){intimidate_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingintimidate){intimidate_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){intimidate_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){intimidate_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusintimidate){intimidate_string_2+=" + 3 [skill focus]"; }

  nature_bonus=half_total_level()+modifier_number(wisdom); 
  if (feat_bardicknowledge){nature_bonus+=2; }
  if (race_elf){nature_bonus+=2; }
  if (race_goliath){nature_bonus+=2; }
  if (race_minotaur){nature_bonus+=2; }
  if (race_genasi){nature_bonus+=2; }
  if (otherrace_nature){nature_bonus+=2; }
  if (fam_rootling){nature_bonus+=2;}
  if (fam_bluespawnnimblespark){nature_bonus+=2;}
  // if (race_xxx){nature_bonus+=2; }
  // if (race_xxx){nature_bonus+=2; }
  // if (race_xxx){nature_bonus+=2; }
  if (frb_elfharrow){nature_bonus+=1; }
  if (frb_grayvale){nature_bonus+=2; }
  if (frb_greatdale){nature_bonus+=1; }
  if (eladrin_nature){nature_bonus+=5; } else
  if (trained_nature){nature_bonus+=5; } else
  if (multi_trained_nature){nature_bonus+=5; } else
  if (feat_skilltrainingnature){nature_bonus+=5; } else
  {
  if (feat_jackofalltrades){nature_bonus+=2; }
   if (class_bard){nature_bonus++;}
  }
  if (feat_skillfocusnature){nature_bonus+=3; }
  nature_string_1=nature_bonus; 
  if (nature_bonus>=0){nature_string_1="+"+nature_bonus; }
  nature_string_2=" = "+modifier_number(wisdom)+" [wisdom] "; 
  if (total_levels>1){nature_string_2+=" + "+half_total_level()+" [half level]"; }
  if (feat_bardicknowledge){nature_string_2+=" + 2 [bardic knowledge] "; }
  if (race_elf){nature_string_2+=" + 2 [Elf] "; }
  if (race_goliath){nature_string_2+=" + 2 [Goliath] "; }
  if (race_minotaur){nature_string_2+=" + 2 [Minotaur] "; }
  if (race_genasi){nature_string_2+=" + 2 [Genasi] "; }
  if (otherrace_nature){nature_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (frb_elfharrow){nature_string_2+=" + 1 [Elfharrow] "; }
  if (frb_grayvale){nature_string_2+=" + 2 [Gray Vale] "; }
  if (frb_greatdale){nature_string_2+=" + 1 [Great Dale] "; }
  if (fam_rootling){nature_string_2+=" + 2 [rootling] ";}
  if (fam_bluespawnnimblespark){nature_string_2+=" + 2 [bluespawn nimblespark] ";}
  // if (race_xxx){nature_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){nature_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){nature_string_2+=" + 2 [xxx] "; }
  if (eladrin_nature){nature_string_2+=" + 5 [eladrin education]"; } else
  if (trained_nature){nature_string_2+=" + 5 [class training]"; } else
  if (multi_trained_nature){nature_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingnature){nature_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){nature_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){nature_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusnature){nature_string_2+=" + 3 [skill focus]"; }

  perception_bonus=half_total_level()+modifier_number(wisdom); 
  if (race_elf){perception_bonus+=2; }
  if (feat_alertness){perception_bonus+=2; }
  if (feat_dragonbornsenses){perception_bonus+=2; }
  if (race_minotaur){perception_bonus+=2; }
  if (otherrace_perception){perception_bonus+=2; }
  if (fam_bat){perception_bonus+=2;}
  if (fam_falcon){perception_bonus+=2;}
  if (fam_arcaneeye){perception_bonus+=2;}
  if (fam_beholderkin){perception_bonus+=2;}
  if (frb_aglarond){perception_bonus+=1; }
  if (frb_durpar){perception_bonus+=2; }
  // if (race_xxx){perception_bonus+=2; }
  // if (race_xxx){perception_bonus+=2; }
  // if (race_xxx){perception_bonus+=2; }
  if (eladrin_perception){perception_bonus+=5; } else
  if (trained_perception){perception_bonus+=5; } else
  if (multi_trained_perception){perception_bonus+=5; } else
  if (feat_skilltrainingperception){perception_bonus+=5; } else
  {
  if (feat_jackofalltrades){perception_bonus+=2; }
   if (class_bard){perception_bonus++;}
  }
  if (feat_skillfocusperception){perception_bonus+=3; }
  perception_string_1=perception_bonus; 
  if (perception_bonus>=0){perception_string_1="+"+perception_bonus; }
  perception_string_2=" = "+modifier_number(wisdom)+" [wisdom] "; 
  if (total_levels>1){perception_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_elf){perception_string_2+=" + 2 [Elf] "; }
  if (feat_dragonbornsenses){perception_string_2+=" + 1 [dragonborn senses] "; }
  if (feat_alertness){perception_string_2+=" + 2 [alertness] "; }
  if (race_minotaur){perception_string_2+=" + 2 [Minotaur] "; }
  if (otherrace_perception){perception_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (fam_bat){perception_string_2+=" + 2 [bat] ";}
  if (fam_falcon){perception_string_2+=" + 2 [falcon] ";}
  if (fam_arcaneeye){perception_string_2+=" + 2 [arcane eye] ";}
  if (fam_beholderkin){perception_string_2+=" + 2 [beholderkin] ";}
  if (frb_aglarond){perception_string_2+=" + 1 [Aglarond] "; }
  if (frb_durpar){perception_string_2+=" + 2 [Durpar] "; }
  // if (race_xxx){perception_string_2+=" + 2 [xxx] "; }
  if (eladrin_perception){perception_string_2+=" + 5 [eladrin education]"; } else
  if (trained_perception){perception_string_2+=" + 5 [class training]"; } else
  if (multi_trained_perception){perception_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingperception){perception_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){perception_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){perception_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusperception){perception_string_2+=" + 3 [skill focus]"; }

  religion_bonus=half_total_level()+modifier_number(intelligence); 
  if (otherrace_religion){religion_bonus+=2; }
  // if (race_xxx){religion_bonus+=2; }
  if (race_deva){religion_bonus+=2; }
  if (feat_bardicknowledge){religion_bonus+=2; }
  if (eladrin_religion){religion_bonus+=5; } else
  if (trained_religion){religion_bonus+=5; } else
  if (multi_trained_religion){religion_bonus+=5; } else
  if (feat_skilltrainingreligion){religion_bonus+=5; } else
  {
  if (feat_jackofalltrades){religion_bonus+=2; }
   if (class_bard){religion_bonus++;}
  }
  if (feat_skillfocusreligion){religion_bonus+=3; }
  religion_string_1=religion_bonus; 
  if (race_deva){religion_string_2+=" + 2 [Deva] "; }
  if (religion_bonus>=0){religion_string_1="+"+religion_bonus; }
  religion_string_2=" = "+modifier_number(intelligence)+" [intelligence] "; 
  if (total_levels>1){religion_string_2+=" + "+half_total_level()+" [half level]"; }
  if (otherrace_religion){religion_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  // if (race_xxx){religion_string_2+=" + 2 [xxx] "; }
  if (eladrin_religion){religion_string_2+=" + 5 [eladrin education]"; } else
  if (trained_religion){religion_string_2+=" + 5 [class training]"; } else
  if (multi_trained_religion){religion_string_2+=" + 5 [multiclass training]"; } else
  if (feat_bardicknowledge){religion_string_2+=" + 2 [bardic knowledge] "; }
  if (feat_skilltrainingreligion){religion_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){religion_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){religion_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusreligion){religion_string_2+=" + 3 [skill focus]"; }

  stealth_bonus=half_total_level()+modifier_number(dexterity); 
  if (race_tiefling){stealth_bonus+=2; }
  if (race_bugbear){stealth_bonus+=2; }
  if (race_drow){stealth_bonus+=2; }
  if (race_gnome){stealth_bonus+=2; }
  if (race_goblin){stealth_bonus+=2; }
  if (race_kobold){stealth_bonus+=2; }
  if (race_shadarkai){stealth_bonus+=2; }
  if (race_shifterrazorclaw){stealth_bonus+=2; }
  if (paragon_ghostpanther){stealth_bonus+=modifier_number(wisdom);}
  if (otherrace_stealth){stealth_bonus+=2; }
  if (fam_bat){stealth_bonus+=2;}
  if (fam_rat){stealth_bonus+=2;}
  if (fam_arcanewisp){stealth_bonus+=2;}
  if (fam_scouthomunculus){stealth_bonus+=2;}
  if (fam_blackspawndarkling){stealth_bonus+=2;}
  if (fam_blazingskull){stealth_bonus+=2;}
  if (fam_shadowincarnate){stealth_bonus+=2;}
  if (frb_luskan){stealth_bonus+=1; }
  // if (race_xxx){stealth_bonus+=2; }
  // if (race_xxx){stealth_bonus+=2; }
  if (eladrin_stealth){stealth_bonus+=5; } else
  if (trained_stealth){stealth_bonus+=5; } else
  if (multi_trained_stealth){stealth_bonus+=5; } else
  if (feat_skilltrainingstealth){stealth_bonus+=5; } else
  {
  if (feat_jackofalltrades){stealth_bonus+=2; }
   if (class_bard){stealth_bonus++;}
  }
  if (feat_skillfocusstealth){stealth_bonus+=3; }
  if (feat_lightstep){stealth_bonus++; }
  if (paragon_masterinfiltrator){stealth_bonus+=2; }
  stealth_bonus+=ArmorCheckPenalty()+ShieldCheckPenalty(); 
  stealth_string_1=stealth_bonus; 
  if (stealth_bonus>=0){stealth_string_1="+"+stealth_bonus; }
  stealth_string_2=" = "+modifier_number(dexterity)+" [dexterity] "; 
  if (total_levels>1){stealth_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_tiefling){stealth_string_2+=" + 2 [Tiefling] "; }
  if (race_bugbear){stealth_string_2+=" + 2 [Bugbear] "; }
  if (race_drow){stealth_string_2+=" + 2 [Drow] "; }
  if (race_gnome){stealth_string_2+=" + 2 [Gnome] "; }
  if (race_goblin){stealth_string_2+=" + 2 [Goblin] "; }
  if (race_kobold){stealth_string_2+=" + 2 [kobold] "; }
  if (race_shadarkai){stealth_string_2+=" + 2 [Shadar-kai] "; }
  if (race_shifterrazorclaw){stealth_string_2+=" + 2 [Razorclaw Shifter] "; }
  if (otherrace_stealth){stealth_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (fam_bat){stealth_string_2+=" + 2 [bat] ";}
  if (fam_rat){stealth_string_2+=" + 2 [rat] ";}
  if (fam_arcanewisp){stealth_string_2+=" + 2 [arcane wisp] ";}
  if (fam_scouthomunculus){stealth_string_2+=" + 2 [scout homunculus] ";}
  if (fam_blackspawndarkling){stealth_string_2+=" + 2 [blackspawn darkling] ";}
  if (fam_blazingskull){stealth_string_2+=" + 2 [blazing skull] ";}
  if (fam_shadowincarnate){stealth_string_2+=" + 2 [shadow incarnate] ";}
  if (frb_luskan){stealth_string_2+=" + 1 [Luskan] "; }
  // if (race_xxx){stealth_string_2+=" + 2 [xxx] "; }
  if (eladrin_stealth){stealth_string_2+=" + 5 [eladrin education]"; } else
  if (paragon_ghostpanther){stealth_string_2+=" "+modifier_string(wisdom)+" [ghost panther]"; }
  if (trained_stealth){stealth_string_2+=" + 5 [class training]"; } else
  if (multi_trained_stealth){stealth_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingstealth){stealth_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){stealth_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){stealth_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusstealth){stealth_string_2+=" + 3 [skill focus]"; }
  if (paragon_masterinfiltrator){stealth_string_2+=" + 2 [skillful infiltrator]"; }
  if (feat_lightstep){stealth_string_2+=" + 1 [light step]"; }
  if (ArmorCheckPenalty()!=0){stealth_string_2+=ArmorCheckPenalty()+" [armor]"; }
  if (ShieldCheckPenalty()!=0){stealth_string_2+=ShieldCheckPenalty()+" [shield]"; }

  streetwise_bonus=half_total_level()+modifier_number(charisma); 
  if (otherrace_streetwise){streetwise_bonus+=2; }
  if (frb_amn){streetwise_bonus+=1; }
  if (feat_bardicknowledge){streetwise_bonus+=2; }
  if (fam_parrot){streetwise_bonus+=2;}
  if (frb_baldursgate){streetwise_bonus+=2; }
  // if (race_xxx){streetwise_bonus+=2; }
  // if (race_xxx){streetwise_bonus+=2; }
  // if (race_xxx){streetwise_bonus+=2; }
  if (eladrin_streetwise){streetwise_bonus+=5; } else
  if (trained_streetwise){streetwise_bonus+=5; } else
  if (multi_trained_streetwise){streetwise_bonus+=5; } else
  if (feat_skilltrainingstreetwise){streetwise_bonus+=5; } else
  {
  if (feat_jackofalltrades){streetwise_bonus+=2; }
   if (class_bard){streetwise_bonus++;}
  }
  if (feat_skillfocusstreetwise){streetwise_bonus+=3; }
  streetwise_string_1=streetwise_bonus; 
  if (streetwise_bonus>=0){streetwise_string_1="+"+streetwise_bonus; }
  streetwise_string_2=" = "+modifier_number(charisma)+" [charisma] "; 
  if (total_levels>1){streetwise_string_2+=" + "+half_total_level()+" [half level]"; }
  if (otherrace_streetwise){streetwise_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (frb_amn){streetwise_string_2+=" + 1 [Amn] "; }
  if (feat_bardicknowledge){streetwise_string_2+=" + 2 [bardic knowledge] "; }
  if (fam_parrot){streetwise_string_2+=" + 2 [parrot] ";}
  if (frb_baldursgate){streetwise_string_2+=" + 2 [Baldur's Gate] "; }
  // if (race_xxx){streetwise_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){streetwise_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){streetwise_string_2+=" + 2 [xxx] "; }
  if (eladrin_streetwise){streetwise_string_2+=" + 5 [eladrin education]"; } else
  if (trained_streetwise){streetwise_string_2+=" + 5 [class training]"; } else
  if (multi_trained_streetwise){streetwise_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingstreetwise){streetwise_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){streetwise_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){streetwise_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusstreetwise){streetwise_string_2+=" + 3 [skill focus]"; }


  thievery_bonus=half_total_level()+modifier_number(dexterity); 
  if (race_halfling){thievery_bonus+=2; }
  if (race_goblin){thievery_bonus+=2; }
  if (race_kobold){thievery_bonus+=2; }
  if (otherrace_thievery){thievery_bonus+=2; }
  if (frb_amn){thievery_bonus+=1; }
  if (frb_wheloon){thievery_bonus+=2; }
  if (frb_luskan){thievery_bonus+=1; }
  // if (race_xxx){thievery_bonus+=2; }
  // if (race_xxx){thievery_bonus+=2; }
  if (eladrin_thievery){thievery_bonus+=5; } else
  if (trained_thievery){thievery_bonus+=5; } else
  if (multi_trained_thievery){thievery_bonus+=5; } else
  if (feat_skilltrainingthievery){thievery_bonus+=5; } else
  {
  if (feat_jackofalltrades){thievery_bonus+=2; }
   if (class_bard){thievery_bonus++;}
  }
  if (feat_skillfocusthievery){thievery_bonus+=3; }
  thievery_bonus+=ArmorCheckPenalty()+ShieldCheckPenalty(); 
  thievery_string_1=thievery_bonus; 
  if (thievery_bonus>=0){thievery_string_1="+"+thievery_bonus; }
  thievery_string_2=" = "+modifier_number(dexterity)+" [dexterity] "; 
  if (total_levels>1){thievery_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_halfling){thievery_string_2+=" + 2 [Halfling] "; }
  if (race_goblin){thievery_string_2+=" + 2 [Goblin] "; }
  if (race_kobold){thievery_string_2+=" + 2 [kobold] "; }
  if (otherrace_thievery){thievery_string_2+=" + 2 ["+document.form1.other_race_name.value+"] "; }
  if (frb_amn){thievery_string_2+=" + 1 [Amn] "; }
  if (frb_wheloon){thievery_string_2+=" + 2 [Wheloon] "; }
  if (frb_luskan){thievery_string_2+=" + 1 [Luskan] "; }
  // if (race_xxx){thievery_string_2+=" + 2 [xxx] "; }
  // if (race_xxx){thievery_string_2+=" + 2 [xxx] "; }
  if (eladrin_thievery){thievery_string_2+=" + 5 [eladrin education]"; } else
  if (trained_thievery){thievery_string_2+=" + 5 [class training]"; } else
  if (multi_trained_thievery){thievery_string_2+=" + 5 [multiclass training]"; } else
  if (feat_skilltrainingthievery){thievery_string_2+=" + 5 [skill training]"; } else
  {
  if (feat_jackofalltrades){thievery_string_2+=" + 2 [jack of all trades] "; }
  if (class_bard){thievery_string_2+=" + 1 [bard skill versatility] "; }
  }
  if (feat_skillfocusthievery){thievery_string_2+=" + 3 [skill focus]"; }
  if (ArmorCheckPenalty()!=0){thievery_string_2+=ArmorCheckPenalty()+" [armor]"; }
  if (ShieldCheckPenalty()!=0){thievery_string_2+=ShieldCheckPenalty()+" [shield]"; }





  strength_attack_base=half_total_level()+modifier_number(strength); 
  strength_attack_string_2=" = "; 
  if (total_levels>1){strength_attack_string_2+=" + "+half_total_level()+" [half level]"; }
  if (modifier_number(strength)>=0){strength_attack_string_2+=" + " + modifier_number(strength)+" [strength]"; }
  if (modifier_number(strength)<0){strength_attack_string_2+= modifier_number(strength)+" [strength]"; }
  strength_attack_string_1=strength_attack_base; 
  strength_attack_string_1="1d20 "; 
  if (!ArmorProficient()){strength_attack_base-=2; strength_attack_string_2+=" - 2 [wrong armor]"; }
  if (strength_attack_base>=0){strength_attack_string_1+="+"; }
  strength_attack_string_1+=strength_attack_base; 

  dexterity_attack_base=half_total_level()+modifier_number(dexterity); 
  dexterity_attack_string_2=" = "; 
  if (total_levels>1){dexterity_attack_string_2+=" + "+half_total_level()+" [half level]"; }
  if (modifier_number(dexterity)>=0){dexterity_attack_string_2+=" + " + modifier_number(dexterity)+" [dexterity]"; }
  if (modifier_number(dexterity)<0){dexterity_attack_string_2+= modifier_number(dexterity)+" [dexterity]"; }
  dexterity_attack_string_1=dexterity_attack_base; 
  dexterity_attack_string_1="1d20 "; 
  if (!ArmorProficient()){dexterity_attack_base-=2; dexterity_attack_string_2+=" - 2 [wrong armor]"; }
  if (dexterity_attack_base>=0){dexterity_attack_string_1+="+"; }
  dexterity_attack_string_1+=dexterity_attack_base; 

  constitution_attack_base=half_total_level()+modifier_number(constitution); 
  constitution_attack_string_2=" = "; 
  if (total_levels>1){constitution_attack_string_2+=" + "+half_total_level()+" [half level]"; }
  if (modifier_number(constitution)>=0){constitution_attack_string_2+=" + " + modifier_number(constitution)+" [constitution]"; }
  if (modifier_number(constitution)<0){constitution_attack_string_2+= modifier_number(constitution)+" [constitution]"; }
  constitution_attack_string_1=constitution_attack_base; 
  constitution_attack_string_1="1d20 "; 
  if (!ArmorProficient()){constitution_attack_base-=2; constitution_attack_string_2+=" - 2 [wrong armor]"; }
  if (constitution_attack_base>=0){constitution_attack_string_1+="+"; }
  constitution_attack_string_1+=constitution_attack_base; 

  intelligence_attack_base=half_total_level()+modifier_number(intelligence); 
  intelligence_attack_string_2=" = "; 
  if (total_levels>1){intelligence_attack_string_2+=" + "+half_total_level()+" [half level]"; }
  if (modifier_number(intelligence)>=0){intelligence_attack_string_2+=" + " + modifier_number(intelligence)+" [intelligence]"; }
  if (modifier_number(intelligence)<0){intelligence_attack_string_2+= modifier_number(intelligence)+" [intelligence]"; }
  intelligence_attack_string_1=intelligence_attack_base; 
  intelligence_attack_string_1="1d20 "; 
  if (!ArmorProficient()){intelligence_attack_base-=2; intelligence_attack_string_2+=" - 2 [wrong armor]"; }
  if (intelligence_attack_base>=0){intelligence_attack_string_1+="+"; }
  intelligence_attack_string_1+=intelligence_attack_base; 

  wisdom_attack_base=half_total_level()+modifier_number(wisdom); 
  wisdom_attack_string_2=" = "; 
  if (total_levels>1){wisdom_attack_string_2+=" + "+half_total_level()+" [half level]"; }
  if (modifier_number(wisdom)>=0){wisdom_attack_string_2+=" + " + modifier_number(wisdom)+" [wisdom]"; }
  if (modifier_number(wisdom)<0){wisdom_attack_string_2+= modifier_number(wisdom)+" [wisdom]"; }
  wisdom_attack_string_1=wisdom_attack_base; 
  wisdom_attack_string_1="1d20 "; 
  if (!ArmorProficient()){wisdom_attack_base-=2; wisdom_attack_string_2+=" - 2 [wrong armor]"; }
  if (wisdom_attack_base>=0){wisdom_attack_string_1+="+"; }
  wisdom_attack_string_1+=wisdom_attack_base; 

  charisma_attack_base=half_total_level()+modifier_number(charisma); 
  charisma_attack_string_2=" = "; 
  if (total_levels>1){charisma_attack_string_2+=" + "+half_total_level()+" [half level]"; }
  if (modifier_number(charisma)>=0){charisma_attack_string_2+=" + " + modifier_number(charisma)+" [charisma]"; }
  if (modifier_number(charisma)<0){charisma_attack_string_2+= modifier_number(charisma)+" [charisma]"; }
  charisma_attack_string_1=charisma_attack_base; 
  charisma_attack_string_1="1d20 "; 
  if (!ArmorProficient()){charisma_attack_base-=2; charisma_attack_string_2+=" - 2 [wrong armor]"; }
  if (charisma_attack_base>=0){charisma_attack_string_1+="+"; }
  charisma_attack_string_1+=charisma_attack_base; 

  physical_attack_base=strength_attack_base;
  physical_attack_string_1=strength_attack_string_1;
  physical_attack_string_2=strength_attack_string_2;
  best_physical_attack="strength";
  if (dexterity>strength)
  {
  physical_attack_base=dexterity_attack_base;
  physical_attack_string_1=dexterity_attack_string_1;
  physical_attack_string_2=dexterity_attack_string_2;
  best_physical_attack="dexterity";
  }
  if (constitution>dexterity)
  {
  physical_attack_base=constitution_attack_base;
  physical_attack_string_1=constitution_attack_string_1;
  physical_attack_string_2=constitution_attack_string_2;
  best_physical_attack="constitution";
  }


  mental_attack_base=intelligence_attack_base;
  mental_attack_string_1=intelligence_attack_string_1;
  mental_attack_string_2=intelligence_attack_string_2;
  best_mental_attack="intelligence";
  if (wisdom>intelligence)
  {
  mental_attack_base=wisdom_attack_base;
  mental_attack_string_1=wisdom_attack_string_1;
  mental_attack_string_2=wisdom_attack_string_2;
  best_mental_attack="wisdom";
  }
  if (charisma>wisdom)
  {
  mental_attack_base=charisma_attack_base;
  mental_attack_string_1=charisma_attack_string_1;
  mental_attack_string_2=charisma_attack_string_2;
  best_mental_attack="charisma";
  }


  fortitude_save=10+half_total_level();
  fortitude_string_2="= 10"; 
  if (total_levels>1){fortitude_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_human){fortitude_save++; fortitude_string_2+=" + 1 [Human] "; }
  if (feat_paragondefenses){fortitude_save++; fortitude_string_2+=" + 1 [paragon defenses] "; }
  if (feat_robustdefenses){fortitude_save+=2; fortitude_string_2+=" + 2 [robust defenses] "; }
  if (feat_unyieldingfortitude){fortitude_save+=2; fortitude_string_2+=" + 2 [unyielding fortitude] "; }
  if (feat_epicfortitude){fortitude_save+=4; fortitude_string_2+=" + 4 [epic fortitude] "; }
  if (genasi_earthsoul){fortitude_save++; fortitude_string_2+=" + 1 [Earthsoul] "; }
  if (genasi_stormsoul){fortitude_save++; fortitude_string_2+=" + 1 [Stormsoul] "; }
  if (race_shadarkai){fortitude_save++; fortitude_string_2+=" + 1 [Shadar-Kai] "; }
  if (class_other)
  {
  if (otherclass_bonus_to_defense==0){fortitude_save++; fortitude_string_2+=" + 2 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==3){fortitude_save++; fortitude_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==4){fortitude_save++; fortitude_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==6){fortitude_save++; fortitude_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  }
  if (feat_combatanticipation){fortitude_save++; fortitude_string_2+=" + 1 [combat anticipation] "; }
  if (class_paladin){fortitude_save++; fortitude_string_2+=" + 1 [paladin] "; }
  if (class_warlord){fortitude_save++; fortitude_string_2+=" + 1 [warlord] "; }
  if (class_avenger){fortitude_save++; fortitude_string_2+=" + 1 [avenger] "; }
  if (class_invoker){fortitude_save++; fortitude_string_2+=" + 1 [invoker] "; }
  if (class_shaman){fortitude_save++; fortitude_string_2+=" + 1 [shaman] "; }
  if (class_warden){fortitude_save++; fortitude_string_2+=" + 1 warden] "; }
  if (class_ranger){fortitude_save++; fortitude_string_2+=" + 1 [ranger] "; }
  if (class_fighter){fortitude_save+=2; fortitude_string_2+=" + 2 [fighter] "; }
  if (class_barbarian){fortitude_save+=2; fortitude_string_2+=" + 2 [barbarian] "; }
  if (feat_greatfortitude){fortitude_save+=2; fortitude_string_2+=" +2 [great fortitude] "; }
  if (feat_scionofthegods){fortitude_save++; fortitude_string_2+=" + 1 [scion of the gods] "; }
  if (constitution>=strength)
   {
    fortitude_save+=modifier_number(constitution); 
    if (constitution>11){fortitude_string_2+=" + "; }
    if (modifier_number(constitution)!=0){fortitude_string_2+=modifier_number(constitution)+" [constitution]"; }
   }
  if (constitution<strength)
   {
    fortitude_save+=modifier_number(strength); 
    if (strength>11){fortitude_string_2+=" + "; }
    if (modifier_number(strength)!=0){fortitude_string_2+=modifier_number(strength)+" [strength]"; }
   }
   fortitude_string_1=""; 
//   if (fortitude_save>0){fortitude_string_1+="+"; }
   fortitude_string_1+=fortitude_save; 


  reflex_save=10+half_total_level(); 
  reflex_string_2="= 10"; 
  if (total_levels>1){reflex_string_2+=" + "+half_total_level()+" [half level]"; }
  if (class_other)
  {
  if (otherclass_bonus_to_defense==1){reflex_save++; reflex_string_2+=" + 2 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==3){reflex_save++; reflex_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==5){reflex_save++; reflex_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==6){reflex_save++; reflex_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  }
  if (race_human){reflex_save++; reflex_string_2+=" + 1 [Human] "; }
  if (feat_paragondefenses){reflex_save++; reflex_string_2+=" + 1 [paragon defenses] "; }
  if (feat_robustdefenses){reflex_save+=2; reflex_string_2+=" + 2 [robust defenses] "; }
  if (feat_opportunereflexes){reflex_save+=2; reflex_string_2+=" + 2 [opportune reflexes] "; }
  if (feat_epicreflexes){reflex_save+=4; reflex_string_2+=" + 4 [epic reflexes] "; }
  if (genasi_firesoul){reflex_save++; reflex_string_2+=" + 1 [Firesoul] "; }
  if (race_goblin){reflex_save++; reflex_string_2+=" + 1 [Goblin] "; }
  if (feat_combatanticipation){reflex_save++; reflex_string_2+=" + 1 [combat anticipation] "; }
  if (class_paladin){reflex_save++; reflex_string_2+=" + 1 [paladin] "; }
  if (class_avenger){reflex_save++; reflex_string_2+=" + 1 [avenger] "; }
  if (class_bard){reflex_save++; reflex_string_2+=" + 1 [bard] "; }
  if (class_druid){reflex_save++; reflex_string_2+=" + 1 [druid] "; }
  if (class_invoker){reflex_save++; reflex_string_2+=" + 1 [invoker] "; }
  if (class_ranger){reflex_save++; reflex_string_2+=" + 1 [ranger] "; }
  if (class_warlock){reflex_save++; reflex_string_2+=" + 1 [warlock] "; }
  if (class_rogue){reflex_save+=2; reflex_string_2+=" + 2 [rogue] "; }
  if (feat_lightningreflexes){reflex_save+=2; reflex_string_2+=" + 2 [lightning reflexes] "; }

  if (dexterity>=intelligence)
   {
    reflex_save+=modifier_number(dexterity); 
    if (dexterity>11){reflex_string_2+=" + "; }
    if (modifier_number(dexterity)!=0){reflex_string_2+=modifier_number(dexterity)+" [dexterity]"; }
   }
  if (dexterity<intelligence)
   {
    reflex_save+=modifier_number(intelligence); 
    if (intelligence>11){reflex_string_2+=" + "; }
    if (modifier_number(intelligence)!=0){reflex_string_2+=modifier_number(intelligence)+" [intelligence]"; }
   }


  if ((document.form1.shield_radio[1].checked)|(document.form1.spikedshield_box.checked))
   {
    reflex_save+=1; 
    reflex_string_2+=" + 1 [if carrying light shield] "; 
    if ((feat_shieldspecialization)&((already_knows_lightshield) | (feat_shieldproficiencylight)))
     {
      reflex_save++; 
      reflex_string_2+=" + 1 [shield specialization] "; 
     }
   }
  if (document.form1.shield_radio[2].checked)
   {
     reflex_save+=2; 
    reflex_string_2+=" + 2 [if carrying heavy shield] "; 
    if ((feat_shieldspecialization)&((already_knows_heavyshield) | (feat_shieldproficiencyheavy)))
     {
      reflex_save++; 
      reflex_string_2+=" + 1 [shield specialization] "; 
     }
   }

   if ((class_barbarian)&(!wearing_heavy_armor()))
         {
          x=1;
          if (total_levels>=11){x=2;}
          if (total_levels>=21){x=3;}
          reflex_save+=x; 
          reflex_string_2+=" + "+x+" [barbarian agility]"; 
         }

   if (!ArmorProficient())
    {
     reflex_save-=2; 
     reflex_string_2+=" - 2 [wrong armor] "; 
    }
   reflex_string_1=""; 
//   if (reflex_save>0){reflex_string_1+="+"; }
   reflex_string_1+=reflex_save; 


  will_save=10+half_total_level(); 
  will_string_2="= 10"; 
  if (total_levels>1){will_string_2+=" + "+half_total_level()+" [half level]"; }
  if (race_human){will_save++; will_string_2+=" + 1 [Human] "; }
  if (feat_paragondefenses){will_save++; will_string_2+=" + 1 [paragon defenses] "; }
  if (feat_robustdefenses){will_save+=2; will_string_2+=" + 2 [robust defenses] "; }
  if (feat_indomitablewill){will_save+=2; will_string_2+=" + 2 [indomitable will] "; }
  if (feat_epicwill){will_save+=4; will_string_2+=" + 4 [epic will] "; }
  if (race_goliath){will_save++; will_string_2+=" + 1 [Goliath] "; }
  if (race_doppelganger){will_save++; will_string_2+=" + 1 [Doppelganger] "; }
  if (race_githyanki){will_save++; will_string_2+=" + 1 [Githyanki] "; }
  if (race_eladrin){will_save++; will_string_2+=" + 1 [Eladrin] "; }
  if (class_other)
  {
  if (otherclass_bonus_to_defense==2){will_save++; will_string_2+=" + 2 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==4){will_save++; will_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==5){will_save++; will_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  if (otherclass_bonus_to_defense==6){will_save++; will_string_2+=" + 1 ["+document.form1.other_class_name.value+"] "; }
  }
  if (feat_combatanticipation){will_save++; will_string_2+=" + 1 [combat anticipation] "; }
  if (class_paladin){will_save++; will_string_2+=" + 1 [paladin] "; }
  if (class_avenger){will_save++; will_string_2+=" + 1 [avenger] "; }
  if (class_bard){will_save++; will_string_2+=" + 1 [bard] "; }
  if (class_druid){will_save++; will_string_2+=" + 1 [druid] "; }
  if (class_invoker){will_save++; will_string_2+=" + 1 [invoker] "; }
  if (class_warden){will_save++; will_string_2+=" + 1 [warden] "; }
  if (class_sorcerer){will_save+=2; will_string_2+=" + 2 [sorcerer] "; }
  if (class_shaman){will_save++; will_string_2+=" + 1 [shaman] "; }
  if (class_warlord){will_save++; will_string_2+=" + 1 [warlord] "; }
  if (class_warlock){will_save++; will_string_2+=" + 1 [warlock] "; }
  if (class_cleric){will_save+=2; will_string_2+=" + 2 [cleric] "; }
  if (class_wizard){will_save+=2; will_string_2+=" + 2 [wizard] "; }
  if (class_swordmage){will_save+=2; will_string_2+=" + 2 [swordmage] "; }
  if (feat_ironwill){will_save+=2; will_string_2+=" + 2 [iron will] "; }
  if (feat_brokenshackles){will_save++; will_string_2+=" + 1 [broken shackles] "; }
  if (feat_scionofthegods){will_save++; will_string_2+=" + 1 [scion of the gods] "; }
  if (wisdom>=charisma)
   {
    will_save+=modifier_number(wisdom); 
    if (wisdom>11){will_string_2+=" + "; }
    if (modifier_number(wisdom)!=0){will_string_2+=modifier_number(wisdom)+" [wisdom]"; }
   }
  if (wisdom<charisma)
   {
    will_save+=modifier_number(charisma); 
    if (charisma>11){will_string_2+=" + "; }
    if (modifier_number(charisma)!=0){will_string_2+=modifier_number(charisma)+" [charisma]"; }
   }
//  will_string_1=will_save; 
   will_string_1=""; 
//   if (will_save>0){will_string_1+="+"; }
   will_string_1+=will_save; 

}

function ArmorCheckPenalty(){
 if ((document.form1.armor_radio[2].checked)&(!feat_armorspecializationhide)){return -1; }
 if ((document.form1.armor_radio[3].checked)&(!epic_adamantinesoldier)&(!feat_armorspecializationchainmail)){return -1; }
 if ((document.form1.armor_radio[5].checked)&(!epic_adamantinesoldier)){return -2; }
 return 0; 
 }

function ShieldCheckPenalty(){
 if (document.form1.shield_radio[2].checked){return -2; }
 return 0; 
 }


function InitialHeightAndWeight(){

 if (race_dragonborn)
  {
   x=43+Math.floor(strength/3); 
    if (x<43){x=43; }
    if (x>49){x=49; }
    document.form1.how_tall.selectedIndex=x; 
   x=63+strength-20; 
    if (x<43){x=43; }
    if (x>63){x=63; }
    document.form1.how_heavy.selectedIndex=x; 
    
  }
 if (race_dwarf)
  {
   x=20+Math.floor(strength/3); 
    if (x<20){x=20; }
    if (x>26){x=26; }
    document.form1.how_tall.selectedIndex=x; 
   x=52+Math.floor(strength/2)-8; 
    if (x<43){x=43; }
    if (x>52){x=52; }
    document.form1.how_heavy.selectedIndex=x; 
    
  }
 if (race_eladrin)
  {
   x=34+Math.floor(strength/2); 
    if (x<34){x=34; }
    if (x>42){x=42; }
    document.form1.how_tall.selectedIndex=x; 
   x=47+Math.floor(strength/2)-8; 
    if (x<37){x=37; }
    if (x>47){x=47; }
    document.form1.how_heavy.selectedIndex=x; 
    
  }
 if (race_elf)
  {
   x=33+Math.floor(strength/2); 
    if (x<33){x=33; }
    if (x>41){x=41; }
    document.form1.how_tall.selectedIndex=x; 
   x=45+Math.floor(strength/2)-8; 
    if (x<37){x=37; }
    if (x>45){x=45; }
    document.form1.how_heavy.selectedIndex=x; 
    
  }
 if (race_halfelf)
  {
   x=35+Math.floor(strength/2); 
    if (x<35){x=35; }
    if (x>43){x=43; }
    document.form1.how_tall.selectedIndex=x; 
   x=49+Math.floor(strength/2)-8; 
    if (x<37){x=37; }
    if (x>49){x=49; }
    document.form1.how_heavy.selectedIndex=x; 
    
  }
 if (race_halfling)
  {
   x=15+Math.floor(strength/4); 
    if (x<15){x=15; }
    if (x>19){x=19; }
    document.form1.how_tall.selectedIndex=x; 
   x=28+Math.floor(strength/3)-4; 
    if (x<26){x=26; }
    if (x>28){x=28; }
    document.form1.how_heavy.selectedIndex=x; 
    
  }
 if (race_human)
  {
   x=35+Math.floor(strength/2); 
    if (x<35){x=35; }
    if (x>43){x=43; }
    document.form1.how_tall.selectedIndex=x; 
   x=53+strength-17; 
    if (x<38){x=38; }
    if (x>53){x=53; }
    document.form1.how_heavy.selectedIndex=x; 
    
  }

  if (race_deva)
   {
    x=42+Math.floor(strength/3); ; 
     if (x<42){x=42; }
     if (x>47){x=47; }
    document.form1.how_tall.selectedIndex=x; 
    x=46+strength; 
     if (x<46){x=46; }
     if (x>59){x=59; }
    document.form1.how_heavy.selectedIndex=x; 
   }

  if (race_goliath)
   {
    x=53+Math.floor(strength/3); ; 
     if (x<53){x=53; }
     if (x>59){x=59; }
    document.form1.how_tall.selectedIndex=x; 
    x=59+strength/2; 
     if (x<59){x=59; }
     if (x>65){x=65; }
    document.form1.how_heavy.selectedIndex=x; 
   }

  if (race_halforc)
   {
    x=38+Math.floor(strength/2); ; 
     if (x<38){x=38; }
     if (x>45){x=45; }
    document.form1.how_tall.selectedIndex=x; 
    x=42+strength/2; 
     if (x<42){x=42; }
     if (x>54){x=54; }
    document.form1.how_heavy.selectedIndex=x; 
   }


 if (race_tiefling)
  {
   x=35+Math.floor(strength/2); 
    if (x<35){x=35; }
    if (x>43){x=43; }
    document.form1.how_tall.selectedIndex=x; 
   x=54+strength-17; 
    if (x<39){x=39; }
    if (x>54){x=54; }
    document.form1.how_heavy.selectedIndex=x; 
    
  }

  if (race_bugbear)
   {
    x=51+Math.floor(strength/3); ; 
     if (x<51){x=51; }
     if (x>55){x=55; }
    document.form1.how_tall.selectedIndex=x; 
    x=56+Math.floor(strength/2); ; 
     if (x<56){x=56; }
     if (x>61){x=61; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_doppelganger)
   {
    x=36+Math.floor(strength/3); ; 
     if (x<36){x=36; }
     if (x>41){x=41; }
    document.form1.how_tall.selectedIndex=x; 
    x=35+Math.floor(strength/2); ; 
     if (x<35){x=35; }
     if (x>43){x=43; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_drow)
   {
    x=33+Math.floor(strength/2); ; 
     if (x<33){x=33; }
     if (x>41){x=41; }
    document.form1.how_tall.selectedIndex=x; 
    x=37+Math.floor(strength/2); ; 
     if (x<37){x=37; }
     if (x>45){x=45; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_genasi)
   {
    x=33+Math.floor(strength/2); ; 
     if (x<36){x=36; }
     if (x>43){x=43; }
    document.form1.how_tall.selectedIndex=x; 
    x=37+strength; 
     if (x<37){x=37; }
     if (x>54){x=54; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_bladeling)
   {
    x=37+Math.floor(strength/2); ; 
     if (x<37){x=37; }
     if (x>45){x=45; }
    document.form1.how_tall.selectedIndex=x; 
    x=44+strength; 
     if (x<52){x=52; }
     if (x>62){x=62; }
    document.form1.how_heavy.selectedIndex=x; 
   }

  if ((race_githyanki) | (race_githzerai))
   {
    x=41+Math.floor(strength/3); ; 
     if (x<41){x=41; }
     if (x>46){x=46; }
    document.form1.how_tall.selectedIndex=x; 
    x=43+Math.floor(strength/3); ; 
     if (x<43){x=43; }
     if (x>49){x=49; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

 
  if (race_gnoll)
   {
    x=53+Math.floor(strength/3); ; 
     if (x<53){x=53; }
     if (x>59){x=59; }
    document.form1.how_tall.selectedIndex=x; 
    x=59+Math.floor(strength/3); ; 
     if (x<59){x=59; }
     if (x>63){x=63; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_gnome)
   {
    x=9+Math.floor(strength/3); ; 
     if (x<9){x=9; }
     if (x>13){x=13; }
    document.form1.how_tall.selectedIndex=x; 
    x=21+Math.floor(strength/3); ; 
     if (x<21){x=21; }
     if (x>26){x=26; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_goblin)
   {
    x=9+Math.floor(strength/3); ; 
     if (x<9){x=9; }
     if (x>13){x=13; }
    document.form1.how_tall.selectedIndex=x; 
    x=11+Math.floor(strength*3/4); ; 
     if (x<11){x=11; }
     if (x>22){x=22; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_hobgoblin)
   {
    x=42+Math.floor(strength/3); ; 
     if (x<42){x=42; }
     if (x>46){x=46; }
    document.form1.how_tall.selectedIndex=x; 
    x=49+Math.floor(strength/3); ; 
     if (x<49){x=49; }
     if (x>55){x=55; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_kobold)
   {
    x=11+Math.floor(strength/2); ; 
     if (x<11){x=11; }
     if (x>17){x=17; }
    document.form1.how_tall.selectedIndex=x; 
    x=23+Math.floor(strength/3); ; 
     if (x<23){x=23; }
     if (x>26){x=26; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_minotaur)
   {
    x=54+Math.floor(strength/3); ; 
     if (x<54){x=54; }
     if (x>58){x=58; }
    document.form1.how_tall.selectedIndex=x; 
    x=63+Math.floor(strength/4); ; 
     if (x<63){x=63; }
     if (x>66){x=66; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_orc)
   {
    x=41+Math.floor(strength/3); ; 
     if (x<41){x=41; }
     if (x>46){x=46; }
    document.form1.how_tall.selectedIndex=x; 
    x=51+Math.floor(strength/4); ; 
     if (x<51){x=51; }
     if (x>54){x=54; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_shadarkai)
   {
    x=36+Math.floor(strength/3); ; 
     if (x<36){x=36; }
     if (x>41){x=41; }
    document.form1.how_tall.selectedIndex=x; 
    x=37+Math.floor(strength/2); ; 
     if (x<37){x=37; }
     if (x>45){x=45; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if ((race_shifterlongtooth) | (race_shifterrazorclaw))
   {
    x=36+Math.floor(strength/3); ; 
     if (x<36){x=36; }
     if (x>41){x=41; }
    document.form1.how_tall.selectedIndex=x; 
    x=37+Math.floor(strength/2); ; 
     if (x<37){x=37; }
     if (x>47){x=47; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }


  if (race_warforged)
   {
    x=41+Math.floor(strength/2); ; 
     if (x<41){x=41; }
     if (x>47){x=47; }
    document.form1.how_tall.selectedIndex=x; 
    x=58+Math.floor(strength/4); ; 
     if (x<58){x=58; }
     if (x>61){x=61; }
    document.form1.how_heavy.selectedIndex=x; 
    
   }

  if (race_other)
   {
    document.form1.how_tall.selectedIndex=0; 
    document.form1.how_heavy.selectedIndex=0; 
   }

 }

function lock_feats(){
 if (CountFeats()==true){
//class_avenger=true;class_barbarian=true;class_bard=true;class_shaman=true;class_druid=true;class_sorcerer=true;class_invoker=true;class_warden=true;
  record_feats(); 
  if (feat_dwarvenweapontraining)  
   {
    already_knows_battleaxe=true; 
    already_knows_handaxe=true; 
    already_knows_greataxe=true; 
    already_knows_halberd=true; 
    already_knows_throwinghammer=true; 
    already_knows_warhammer=true; 
    already_knows_maul=true; 
   }
  if (feat_goliathgreatweaponprowess)
   {
    already_knows_greatclub=true; 
    already_knows_morningstar=true; 
    already_knows_quarterstaff=true; 
    already_knows_scythe=true; 
    already_knows_falchion=true; 
    already_knows_glaive=true; 
    already_knows_greataxe=true; 
    already_knows_greatsword=true; 
    already_knows_halberd=true; 
    already_knows_heavyflail=true; 
    already_knows_longspear=true; 
    already_knows_maul=true; 
   }
  if (feat_eladrinsoldier)
   {
    already_knows_longsword=true; 
    already_knows_spear=true; 
    already_knows_longspear=true; 
   }
  document.form1.sixth_comment_box.value="Feats are assigned."
  StandardAdventuringKit(); 
  SpecialtyNeeds(); 
  document.form1.sixth_comment_box.value+="  Asterisks mark weapon, armor, and shield proficiencies."
  BestFighterWeapons(); 
  document.form1.sixth_comment_box.value+="  For fourth edition, you're on your honor filling in your powers."
  if (race_goliath){document.form1.sixth_comment_box.value+="  Almost all goliaths learn either dwarven or giantish."}
  MilitaryStars(); 
  FeatsAreLocked=true; 
  LightPowerStars(); 
  stringy="You are entitled to two at-will powers from your class list."; 
  if (class_other){stringy="Please name your two at-will class powers."; }
  if ((race_human)|(class_druid))
   {
    stringy="You are entitled to three at-will powers from your class list."; 
    if (class_other){stringy="Please name your three at-will powers."; }
   }
  if ((race_human)&(class_druid))
   {
    stringy="You are entitled to four at-will powers from your class list."; 
   }
  if (paragon_multiclass){stringy="You are entitled to three at-will class powers.  One may come from your multiclass list."; }
  document.form1.level_01a_comment_box.value=stringy; 

  if (total_levels<13)
   {
    stringy="You are entitled to one encounter power from your class list."; 
    if (class_other){stringy="Please name your encounter power."; }
    if (feat_multiclasspowerswapencounter)
    {
    stringy="You are entitled to one encounter power from your class or multiclass list."; 
    }
   }
  if (total_levels>=13){stringy="You have probably traded up your first-level encounter power."; }
   if (paragon_multiclass){stringy+="  You can take your sideclass encounter bonus power from here."; }
  document.form1.level_01e_comment_box.value=stringy; 

  if (total_levels<15)
   {
    stringy="You are entitled to one daily power from your class list."; 
    if (class_other){stringy="Please name your daily power."; }
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list."; }
    if (feat_multiclasspowerswapdaily)
    {
    stringy="You are entitled to one daily power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from your multiclass list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from your multiclass list."; }
    }
   }
  if (total_levels>=15){stringy="You have probably traded up your first-level daily power."; }
   if ((paragon_multiclass)&(total_levels>=20)){stringy+="  You can take your sideclass daily bonus power from here."; }
  document.form1.level_01d_comment_box.value=stringy; 

    stringy="You are entitled to one utility power from your class list."; 
    if (class_other){stringy="Please choose and name your utility power."; }
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list."; }
    if (feat_multiclasspowerswaputility)
    {
    stringy="You are entitled to one utility power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list, or one from your multiclass list."; }
    }
    if (total_levels<2){stringy="Not yet"; }
   if ((paragon_multiclass)&(total_levels>=12)){stringy+="  You can take your sideclass utility bonus power from here."; }
 document.form1.level_02u_comment_box.value=stringy; 

  if (total_levels<17)
   {
    stringy="You are entitled to one encounter power from your class list."; 
    if (class_other){stringy="Please name your encounter power."; }
    if (feat_multiclasspowerswapencounter)
    {
    stringy="You are entitled to one encounter power from your class or multiclass list."; 
    }
   }
  if (total_levels>=17){stringy="You have probably traded up your third-level encounter power."; }
    if (total_levels<3){stringy="Not yet"; }
   if (paragon_multiclass){stringy+="  You can take your sideclass encounter bonus power from here."; }
 document.form1.level_03e_comment_box.value=stringy; 

  if (total_levels<15)
   {
    stringy="You are entitled to one daily power from your class list."; 
    if (class_other){stringy="Please name your daily power."; }
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list."; }
    if (feat_multiclasspowerswapdaily)
    {
    stringy="You are entitled to one daily power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from your multiclass list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from your multiclass list."; }
    }
   }
  if (total_levels<5){stringy="Not yet."; }
  if (total_levels>=19){stringy="You have probably traded up your fifth-level daily power."; }
   if ((paragon_multiclass)&(total_levels>=20)){stringy+="  You can take your sideclass daily bonus power from here."; }
 document.form1.level_05d_comment_box.value=stringy; 

    stringy="You are entitled to one utility power from your class list."; 
    if (class_other){stringy="Please name and choose your utility power."; }
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list."; }
    if (feat_multiclasspowerswaputility)
    {
    stringy="You are entitled to one utility power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list, or one from your multiclass list."; }
    }
    if (total_levels<6){stringy="Not yet"; }
   if ((paragon_multiclass)&(total_levels>=12)){stringy+="  You can take your sideclass utility bonus power from here."; }
   if (feat_shieldingfamiliar){stringy+="  You took Shielding Familiar in place of one utility power of 6th or higher level.";}
   if (feat_spellseerfamiliar){stringy+="  You took Spellseer Familiar in place of one utility power of 6th or higher level.";}
 document.form1.level_06u_comment_box.value=stringy; 

  if (total_levels<23)
   {
    stringy="You are entitled to one encounter power from your class list."; 
    if (class_other){stringy="Please name your encounter power."; }
    if (feat_multiclasspowerswapencounter)
    {
    stringy="You are entitled to one encounter power from your class or multiclass list."; 
    }
   }
  if (total_levels>=23){stringy="You have probably traded up your seventh-level encounter power."; }
  if (total_levels<7){stringy="Not yet."; }
   if (paragon_multiclass){stringy+="  You can take your sideclass encounter bonus power from here."; }
   if (paragon_spellscarredsavant){stringy+="  You probably want to take your bonus spellscarred encounter power from here.";}
 document.form1.level_07e_comment_box.value=stringy; 

  if (total_levels<19)
   {
    stringy="You are entitled to one daily power from your class list."; 
    if (class_other){stringy="Please name your daily power."; }
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list."; }
    if (feat_multiclasspowerswapdaily)
    {
    stringy="You are entitled to one daily power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from your multiclass list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from your multiclass list."; }
    }
   }
  if (total_levels<9){stringy="Not yet."; }
  if (total_levels>=25){stringy="You have probably traded up your ninth-level daily power."; }
   if ((paragon_multiclass)&(total_levels>=20)){stringy+="  You can take your sideclass daily bonus power from here."; }
 document.form1.level_09d_comment_box.value=stringy; 

    stringy="You are entitled to one utility power from your class list."; 
    if (class_other){stringy="Please choose and name your utility power."; }
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list."; }
    if (feat_multiclasspowerswaputility)
    {
    stringy="You are entitled to one utility power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list, or one from your multiclass list."; }
    }
    if (total_levels<10){stringy="Not yet"; }
   if ((paragon_multiclass)&(total_levels>=12)){stringy+="  You can take your sideclass utility bonus power from here."; }
 document.form1.level_10u_comment_box.value=stringy; 

  if (total_levels<27)
   {
    stringy="You are entitled to one encounter power from your class list."; 
    if (class_other){stringy="Please name your encounter power."; }
    if (feat_multiclasspowerswapencounter)
    {
    stringy="You are entitled to one encounter power from your class or multiclass list."; 
    }
   }
  if (total_levels>=27){stringy="You have probably traded up your fifteenth-level encounter power."; }
  if (total_levels<13){stringy="Not yet."; }
 document.form1.level_13e_comment_box.value=stringy; 

  if (total_levels<25)
   {
    stringy="You are entitled to one daily power from your class list."; 
    if (class_other){stringy="Please name your daily power."; }
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list."; }
    if (feat_multiclasspowerswapdaily)
    {
    stringy="You are entitled to one daily power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from your multiclass list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from your multiclass list."; }
    }
   }
  if (total_levels<15){stringy="Not yet."; }
   if ((paragon_multiclass)&(total_levels>=20)){stringy+="  You can take your sideclass daily bonus power from here."; }

 document.form1.level_15d_comment_box.value=stringy; 

    stringy="You are entitled to one utility power from your class list."; 
    if (class_other){stringy="Please choose name your utility power."; }
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list."; }
    if (feat_multiclasspowerswaputility)
    {
    stringy="You are entitled to one utility power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list, or one from your multiclass list."; }
    }
    if (feat_aggressivefamiliar){stringy+="  You took Aggressive Familiar in place of one utility power of 16th or higher level.";}
    if (total_levels<16){stringy="Not yet"; }
 document.form1.level_16u_comment_box.value=stringy; 

    stringy="You are entitled to one encounter power from your class list."; 
    if (class_other){stringy="Please name your encounter power."; }
    if (feat_multiclasspowerswapencounter)
    {
    stringy="You are entitled to one encounter power from your class or multiclass list."; 
    }
    if ((epic_martialarchetype))
    {
    stringy+="  As a martial archetype epic character, take one additional encounter power from any martial class list."; 
    }

  if (total_levels<17){stringy="Not yet."; }
 document.form1.level_17e_comment_box.value=stringy; 

    stringy="You are entitled to one daily power from your class list."; 
    if (class_other){stringy="Please name your daily power."; }
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list."; }
    if (feat_multiclasspowerswapdaily)
    {
    stringy="You are entitled to one daily power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from your multiclass list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from your multiclass list."; }
    }

  if (total_levels<19){stringy="Not yet."; }
   if ((paragon_multiclass)&(total_levels>=20)){stringy+="  You can take your sideclass daily bonus power from here."; }
   if ((paragon_spellscarredsavant)&(total_levels>=20)){stringy+="  You probably want to take your bonus spellscarred daily power from here.";}

 document.form1.level_19d_comment_box.value=stringy; 

    stringy="You are entitled to one utility power from your class list."; 
    if (class_other){stringy="Please choose and name your utility power."; }
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list."; }
    if (feat_multiclasspowerswaputility)
    {
    stringy="You are entitled to one utility power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list, or one from your multiclass list."; }
    }
    if (epic_eternalseeker)
    {
    stringy="You are entitled to one utility power from any class list."; 
    if (class_wizard){stringy="You are entitled to two utility powers from the wizard class list, or one from any other list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three utility powers from the wizard class list, or one from any other list."; }
    if (total_levels>=26){"  In addition, your \"Seeker's Lore\" ability entitles you to one additional 22nd-level utility power."; }

    }
    if ((epic_martialarchetype)&(total_levels>=26))
    {
    stringy+="  As a martial archetype epic character, take one additional utility power from any martial class list."; 
    }
    if (total_levels<22){stringy="Not yet"; }
 document.form1.level_22u_comment_box.value=stringy; 

    stringy="You are entitled to one encounter power from your class list."; 
    if (class_other){stringy="Please name your encounter power."; }
    if (feat_multiclasspowerswapencounter)
    {
    stringy="You are entitled to one encounter power from your class or multiclass list."; 
    }
    if (epic_eternalseeker)
    {
    stringy="You are entitled to one encounter power from any class list."; 
    }
    if ((epic_martialarchetype)&(total_levels==30))
    {
    stringy+="  As a martial archetype epic character, take one additional level 23, 25, 27 or 29 power from any martial class list."; 
    }
  if (total_levels<23){stringy="Not yet."; }
 document.form1.level_23e_comment_box.value=stringy; 

    stringy="You are entitled to one daily power from your class list."; 
    if (class_other){stringy="Please name your daily power."; }
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list."; }
    if (feat_multiclasspowerswapdaily)
    {
    stringy="You are entitled to one daily power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from your multiclass list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from your multiclass list."; }
    }
    if (epic_eternalseeker)
    {
    stringy="You are entitled to one daily power from any class list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from any other list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from any other list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from any other list."; }
    }
    if ((epic_martialarchetype)&(total_levels==30))
    {
    stringy+="  As a martial archetype epic character, take one additional level 23, 25, 27 or 29 power from any martial class list."; 
    }
  if (total_levels<25){stringy="Not yet."; }
 document.form1.level_25d_comment_box.value=stringy; 

    stringy="You are entitled to one encounter power from your class list."; 
    if (class_other){stringy="Please name your encounter power."; }
    if (feat_multiclasspowerswapencounter)
    {
    stringy="You are entitled to one encounter power from your class or multiclass list."; 
    }
    if (epic_eternalseeker)
    {
    stringy="You are entitled to one encounter power from any class list."; 
    }
    if ((epic_martialarchetype)&(total_levels==30))
    {
    stringy+="  As a martial archetype epic character, take one additional level 23, 25, 27 or 29 power from any martial class list."; 
    }
  if (total_levels<27){stringy="Not yet."; }
 document.form1.level_27e_comment_box.value=stringy; 

    stringy="You are entitled to one daily power from your class list."; 
    if (class_other){stringy="Please name your daily power."; }
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list."; }
    if (feat_multiclasspowerswapdaily)
    {
    stringy="You are entitled to one daily power from your class or multiclass list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from your multiclass list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from your multiclass list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from your multiclass list."; }
    }
    if (epic_eternalseeker)
    {
    stringy="You are entitled to one daily power from any class list."; 
    if (class_wizard){stringy="You are entitled to two daily powers from the wizard class list, or one from any other list."; }
    if (feat_studentofswordmagic){stringy="You are entitled to two daily powers from the swordmage class list, or one from any other list."; }
    if (feat_expandedspellbook){stringy="You are entitled to three daily powers from the wizard class list, or one from any other list."; }
    }
    if ((epic_martialarchetype)&(total_levels==30))
    {
    stringy+="  As a martial archetype epic character, take one additional level 23, 25, 27 or 29 power from any martial class list."; 
    }
  if (total_levels<29){stringy="Not yet."; }
 document.form1.level_29d_comment_box.value=stringy; 


  c_wk_aw();
  consider_twohandedweapon();
  OtherClassChecks(); 
  InitialHeightAndWeight(); 
  Languages(); 
  Rituals(); 
  ChooseBestDarkfireStat(); 
  ChooseBestEarthshockStat(); 
  ChooseBestFirepulseStat(); 
  ChooseBestRazorswarmStat(); 
  SuggestEyesHairSkin(); 

  }
  else {document.form1.sixth_comment_box.value="Work on your feats"}
   ArrowShow(); 
 }

function NoCurlsNoBeard(){
   document.form1.hair_type[0].checked=true; document.form1.hair_type[0].checked=false; 
   document.form1.beard_type[0].checked=true; document.form1.beard_type[0].checked=false; 
 }

function pigmentation(){
 if ((gender==2) | (race_gnoll) | (race_minotaur)){document.form1.beard_type[0].checked=true; document.form1.beard_type[0].checked=false; }
 if ((race_dragonborn) | (race_kobold) | (race_warforged))
  {
   document.form1.hair_color[12].checked=true; 
   NoCurlsNoBeard(); 
  }
 if (race_drow){document.form1.skin_color[5].checked=true; }
 if (race_shadarkai)
  {
   document.form1.skin_color[7].checked=true; 
   document.form1.eye_color[6].checked=true; 
   document.form1.hair_color[5].checked=true; 
  }
 if ((race_eladrin) | (race_elf) | (race_halfling))
  {
   if (gender==1){document.form1.beard_type[0].checked=true; }
  }
 if (document.form1.hair_color[12].checked){NoCurlsNoBeard(); }
 }



function SuggestEyesHairSkin(){
 if (!FeatsAreLocked){document.form1.eyeshairskin_textarea.value=""; return; }
// alert("Suggest EyesHairSkin"); 
 pigmentation(); 
 if (race_dragonborn){document.form1.eyeshairskin_textarea.value="Dragonborn have scales instead of hair.  Most have scarlet, gold, rust, ochre, or bronze scales."; }
 if (race_dwarf)
  {
   document.form1.eyeshairskin_textarea.value="Dwarves have the same range of coloring as humans.  They may also have gray or sandstone red (choose rust-colored) skin.  Red hair is common.  Males tend to be hirsute.";
   if (feat_golddwarfpride){document.form1.eyeshairskin_textarea.value+="  With gold-dwarf heritage, the skin and hair are usually dark, and the eyes hazel, brown, or green.  Green eyes are considered lucky."}
  }
 if (race_eladrin)
  {
   document.form1.eyeshairskin_textarea.value="Eladrin have the same range of coloring as humans.  Most have light complexions.  Hair is often white, silver, or gold.  They have little body hair and the men cannot grow beards.  ";
   if (feat_moonelfresilience){document.form1.eyeshairskin_textarea.value+="  With moon-elf heritage, the skin is usually pale or bluish, with silver or black hair, and green or blue eyes flecked with gold."}
   if (feat_sunelfgrace){document.form1.eyeshairskin_textarea.value+="  With sun-elf heritage, the skin is usually golden or bronze, with blond, coppery, or black hair.  Eyes tend to be green or gold."}
  }
 if (race_elf){document.form1.eyeshairskin_textarea.value="Elves have the same range of coloring as humans.  Most have tan or brown skin.  Hair is often red, orange, green, or gold.  They have little body hair and the men cannot grow beards.";}
 if (race_halfelf){document.form1.eyeshairskin_textarea.value="Half-Elves have the same range of coloring as humans.  Many have eye or hair colors that would be unknown among humans in our world."; }
  if (feat_woodelfagility){document.form1.eyeshairskin_textarea.value+="  With wood-elf (copper elf) heritage, the skin is usually tinged with green.  Hair tends to be brown or black, though red and blond may also be seen.  Eyes range from hazel or green through brown."}
  if (feat_wildelfluck){document.form1.eyeshairskin_textarea.value+="  With wild-elf heritage, the skin and hair tend to be dark."}
 if (race_halfling){document.form1.eyeshairskin_textarea.value="Halflings have the same range of coloring as humans.  Most have dark hair and eyes.  Male halflings cannot grow beard, but many sport sideburns."; }
 if (race_human){document.form1.eyeshairskin_textarea.value="Feel free to choose as you like for your human."; }
 if (race_tiefling){document.form1.eyeshairskin_textarea.value="Tieflings have the same range of coloring as humans.  The skin can also be scarlet, rust, or ochre.  Hair tends to be dark blue, red, or purple."; }
 if (race_bugbear){document.form1.eyeshairskin_textarea.value="Bugbears have yellow, orange, or reddish skin.  Males tend to be hirsute."; }
 if (race_doppelganger){document.form1.eyeshairskin_textarea.value="Doppelgangers can change their coloration at will.  The natural skin, eye, and hair color is perhaps white or light gray."; }
 if (race_drow){document.form1.eyeshairskin_textarea.value="Drow are black-skinned elves.  Hair tends to be white, and males are seldom able to grow beards.  Choose the rest as you like."; }
 if (race_genasi)
  {
   if (genasi_earthsoul){document.form1.eyeshairskin_textarea.value="Genasi manifesting earthsoul usually have brown skin and golden eyes, bald or with yellow hair.";}
   if (genasi_firesoul){document.form1.eyeshairskin_textarea.value="Genasi manifesting firesoul usually have red-bronze skin, and flame-colored eyes and hair.";}
   if (genasi_stormsoul){document.form1.eyeshairskin_textarea.value="Genasi manifesting stormsoul usually have purple skin and silver hair.";}
   if (genasi_watersoul){document.form1.eyeshairskin_textarea.value="Genasi manifesting watersoul usually have sea-green skin and blue or no hair.";}
   if (genasi_windsoul){document.form1.eyeshairskin_textarea.value="Genasi manifesting windsoul usually have silver skin and blue or gray hair.";}
  }
 if (race_githyanki){document.form1.eyeshairskin_textarea.value="Most githyanki have been depicted with yellow skin and black hair."; }
 if (race_githzerai){document.form1.eyeshairskin_textarea.value="Most githzerai have been depicted with greenish-gray skin and black hair."; }
 if (race_gnoll){document.form1.eyeshairskin_textarea.value="Gnolls are all hirsute.  Choose whatever colors you like."; }
 if (race_gnome){document.form1.eyeshairskin_textarea.value="Gnomes may have any kind of pigmentation."; }
 if (race_goblin){document.form1.eyeshairskin_textarea.value="Goblins have yellow, orange, or reddish skin.  Males tend to be hirsute.."; }
 if (race_hobgoblin){document.form1.eyeshairskin_textarea.value="Hobgoblins have yellow, orange, or reddish skin.  Males tend to be hirsute.."; }
 if (race_kobold){document.form1.eyeshairskin_textarea.value="Kobolds have been depicted a range of eye and scale colors.  They are hairless ."; }
 if (race_minotaur){document.form1.eyeshairskin_textarea.value="Minotaurs are hirsute.  Choose whatever color you like."; }
 if (race_orc){document.form1.eyeshairskin_textarea.value="Orcs are described variously, so choose pigmentation as you wish."; }
 if (race_shadarkai){document.form1.eyeshairskin_textarea.value="Shadar-kais all have gray skin, black eyes, and black hair.."; }
 if ((race_shifterlongtooth) | (race_shifterrazorclaw)){document.form1.eyeshairskin_textarea.value="Shifters can have any coloration that a human can, and probably others."; }
 if (race_warforged){document.form1.eyeshairskin_textarea.value="Warforged are hairless metallic people.  Choose color as you wish."; }
 if (race_deva){document.form1.eyeshairskin_textarea.value="Devas have a mosaic of light and dark skin.  Choose colors as you wish."; }
 if (race_halforc){document.form1.eyeshairskin_textarea.value="Half-orcs have coloring as humans, with some tendency to gray skin."; }
 if (race_goliath)
  {
   document.form1.eyeshairskin_textarea.value="Goliaths have gray or brown skin.  ";
   if (gender==1){document.form1.eyeshairskin_textarea.value+="Most male goliaths are bald.  ";}
   if (gender==2){document.form1.eyeshairskin_textarea.value+="Most female goliaths hard dark hair.  ";}
  }

 }

function pointbuy(numbur){
 if (numbur<9){return 0; } else                  
 if (numbur==9){return 1; } else
 if (numbur==10){return 2; } else
 if (numbur==11){return 3; } else
 if (numbur==12){return 4; } else
 if (numbur==13){return 5; } else
 if (numbur==14){return 6; } else
 if (numbur==15){return 8; } else
 if (numbur==16){return 10; } else
 if (numbur==17){return 13; } else
 if (numbur==18){return 16; }
 else return 69; 
 }


function pointbuy10(numbur){
 if (numbur<9){return 0; } else                  
 if (numbur==9){return -1; } else
 if (numbur==10){return 0; } else
 if (numbur==11){return 1; } else
 if (numbur==12){return 2; } else
 if (numbur==13){return 3; } else
 if (numbur==14){return 5; } else
 if (numbur==15){return 7; } else
 if (numbur==16){return 9; } else
 if (numbur==17){return 12; } else
 if (numbur==18){return 16; }
 else return 69; 
 }


function pointbuy8(numbur){
  if (numbur<=8){return 0; }
  return pointbuy10(numbur)+2; 
 }


function TellAboutPointBuy(){
 if ((document.form1.methods_list.selectedIndex!=1)
  &(document.form1.methods_list.selectedIndex!=3+2)
  &(document.form1.methods_list.selectedIndex!=6+2)){return}

  if (AbilitiesAreProperlyAssigned==true)
    {
     document.form1.first_comment_box.value="You can accept these.  "; 
    } else {document.form1.first_comment_box.value="Adjust and assign.  "; }



     if (document.form1.methods_list.selectedIndex==1)
      {
       x=pointbuy8(stat6) + pointbuy10(stat2) + pointbuy10(stat3) + pointbuy10(stat4) + pointbuy10(stat5) + pointbuy10(stat1); 
       if (x!=22){document.form1.first_comment_box.value +=x + " points spent.\r The standard is 22."}
       if (x==22){document.form1.first_comment_box.value += "  These meet the 4th edition standard."}
      }
     if (document.form1.methods_list.selectedIndex==3+2)
      {
       x=pointbuy(stat1) + pointbuy(stat2) + pointbuy(stat3) + pointbuy(stat4) + pointbuy(stat5) + pointbuy(stat6); 
       document.form1.first_comment_box.value +=x + " points spent.\r Low-powered=15, more challenging=22, standard=25,\r tougher=28, high-powered=32"
      }
     if (document.form1.methods_list.selectedIndex==6+2)
      {
       x=stat1 + stat2 + stat3 + stat4 + stat5 + stat6; 
       document.form1.first_comment_box.value +=x + " points total.\r Some campaigns recommend 75 for adventurers."
      }
  }


function GetTotalFeatEntitlement(){
 total_feat_entitlement=1+Math.floor(total_levels/2); 
 if (race_human){total_feat_entitlement++; }
 if (total_levels>=11){total_feat_entitlement++; }
 if (total_levels>=21){total_feat_entitlement++; }
 above_heroic_feat_maximum=0; 
 above_paragon_feat_maximum=0; 
 if (total_levels>=11){above_heroic_feat_maximum+=2; }
 if (total_levels>=12){above_heroic_feat_maximum+=2; }
 if (total_levels>=13){above_heroic_feat_maximum+=1; }
 if (total_levels>=14){above_heroic_feat_maximum+=2; }
 if (total_levels>=15){above_heroic_feat_maximum+=1; }
 if (total_levels>=16){above_heroic_feat_maximum+=2; }
 if (total_levels>=17){above_heroic_feat_maximum+=1; }
 if (total_levels>=18){above_heroic_feat_maximum+=2; }
 if (total_levels>=19){above_heroic_feat_maximum+=1; }
 if (total_levels>=20){above_heroic_feat_maximum+=2; }
 if (total_levels>=21){above_heroic_feat_maximum+=2; above_paragon_feat_maximum+=2; }
 if (total_levels>=22){above_heroic_feat_maximum+=2; above_paragon_feat_maximum+=2; }
 if (total_levels>=23){above_heroic_feat_maximum+=1; above_paragon_feat_maximum+=1; }
 if (total_levels>=24){above_heroic_feat_maximum+=2; above_paragon_feat_maximum+=2; }
 if (total_levels>=25){above_heroic_feat_maximum+=1; above_paragon_feat_maximum+=1; }
 if (total_levels>=26){above_heroic_feat_maximum+=2; above_paragon_feat_maximum+=2; }
 if (total_levels>=27){above_heroic_feat_maximum+=1; above_paragon_feat_maximum+=1; }
 if (total_levels>=28){above_heroic_feat_maximum+=2; above_paragon_feat_maximum+=2; }
 if (total_levels>=29){above_heroic_feat_maximum+=1; above_paragon_feat_maximum+=1; }
 if (total_levels>=30){above_heroic_feat_maximum+=2; above_paragon_feat_maximum+=2; }
 if (above_heroic_feat_maximum>total_feat_entitlement){above_heroic_feat_maximum=total_feat_entitlement; }
 if (above_paragon_feat_maximum>total_feat_entitlement){above_paragon_feat_maximum=total_feat_entitlement; }
 }

function CountFeats(){
 GetTotalFeatEntitlement(); 
 x=0; 
 paragon_feat_count=0; 
 epic_feat_count=0;
  if (multi_cleric_initiateofthefaith){x++;} 
  if (multi_fighter_studentofthesword){x++;} 
  if (multi_paladin_soldierofthefaith){x++;} 
  if (multi_ranger_warriorofthewild){x++;} 
  if (multi_rogue_sneakofshadows){x++;} 
  if (multi_warlock_pactinitiate){x++;} 
  if (multi_warlord_studentofbattle){x++;} 
  if (multi_wizard_arcaneinitiate){x++;}
  if (multi_swordmage_bladeinitiate){x++;}
  if (multi_invoker_acolyteofdivinesecrets){x++;}
  if (multi_sorcerer_arcaneprodigy){x++;}
  if (multi_bard_bardicdilettante){x++;}
  if (multi_barbarian_berserkersfury){x++;}
  if (multi_warden_defenderofthewild){x++;}
  if (multi_avenger_discipleofdivinewrath){x++;}
  if (multi_druid_initiateoftheoldfaith){x++;}
  if (multi_shaman_spirittalker){x++;}
  if (multi_fighter_battleawareness){x++;}
  if (multi_warlord_inspiringleader){x++;}
  if (multi_rogue_ruthlessefficiency){x++;}
  if (multi_rogue_slydodge){x++;}
  if (multi_warlord_tacticalleader){x++;}
  if (multi_ranger_twobladewarrior){x++;}
  if (multi_bard_bardicritualist){x++;}
  if (multi_swordmage_heartoftheblade){x++;}
  if (multi_wizard_learnedspellcaster){x++;}
  if (multi_sorcerer_soulofsorcery){x++;}
  if (multi_warlock_studentofmalediction){x++;}
  if (multi_spellscarred){x++;}
 if (document.form1.actionsurge_box.checked){x++;}
 if (document.form1.agilehunter_box.checked){x++;}
 if (document.form1.alertness_box.checked){x++;}
 if (document.form1.armorofbahamut_box.checked){x++;}
 if (document.form1.armorproficiencychainmail_box.checked){x++;}
 if (document.form1.armorproficiencyleather_box.checked){x++;}
 if (document.form1.armorproficiencyhide_box.checked){x++;}
 if (document.form1.armorproficiencyplate_box.checked){x++;}
 if (document.form1.armorproficiencyscale_box.checked){x++;}
 if (document.form1.astralfire_box.checked){x++;}
 if (document.form1.avandrasrescue_box.checked){x++;}
 if (document.form1.backstabber_box.checked){x++;}
 if (document.form1.bladeopportunist_box.checked){x++;}
 if (document.form1.burningblizzard_box.checked){x++;}
 if (document.form1.combatreflexes_box.checked){x++;}
 if (document.form1.corellonsgrace_box.checked){x++;}
 if (document.form1.darkfury_box.checked){x++;}
 if (document.form1.defensivemobility_box.checked){x++;}
 if (document.form1.distractingshield_box.checked){x++;}
 if (document.form1.dodgegiants_box.checked){x++;}
 if (document.form1.dragonbornfrenzy_box.checked){x++;}
 if (document.form1.dragonbornsenses_box.checked){x++;}
 if (document.form1.durable_box.checked){x++;}
 if (document.form1.dwarvenweapontraining_box.checked){x++;}
 if (document.form1.eladrinsoldier_box.checked){x++;}
 if (document.form1.elvenprecision_box.checked){x++;}
 if (document.form1.enlargeddragonbreath_box.checked){x++;}
 if (document.form1.escapeartist_box.checked){x++;}
 if (document.form1.expandedspellbook_box.checked){x++;}
 if (document.form1.farshot_box.checked){x++;}
 if (document.form1.farthrow_box.checked){x++;}
 if (document.form1.fastrunner_box.checked){x++;}
 if (document.form1.ferociousrebuke_box.checked){x++;}
 if (document.form1.groupinsight_box.checked){x++;}
 if (document.form1.halflingagility_box.checked){x++;}
 if (document.form1.harmonyoferathis_box.checked){x++;}
 if (document.form1.healinghands_box.checked){x++;}
 if (document.form1.hellfireblood_box.checked){x++;}
 if (document.form1.humanperseverance_box.checked){x++;}
 if (document.form1.improveddarkonesblessing_box.checked){x++;}
 if (document.form1.improvedfateofthevoid_box.checked){x++;}
 if (document.form1.improvedinitiative_box.checked){x++;}
 if (document.form1.improvedmistystep_box.checked){x++;}
 if (document.form1.inspiredrecovery_box.checked){x++;}
 if (document.form1.iounspoise_box.checked){x++;}
 if (document.form1.jackofalltrades_box.checked){x++;}
 if (document.form1.kordsfavor_box.checked){x++;}
 if (document.form1.lethalhunter_box.checked){x++;}
 if (document.form1.lightstep_box.checked){x++;}
 x+=document.form1.linguist_list.selectedIndex; 
 if (document.form1.longjumper_box.checked){x++;}
 if (document.form1.longinthecrowd_box.checked){x++;}
 if (document.form1.melorastide_box.checked){x++;}
 if (document.form1.moradinsresolve_box.checked){x++;}
 if (document.form1.mountedcombat_box.checked){x++;}
 if (document.form1.nimbleblade_box.checked){x++;}
 if (document.form1.pelorsradiance_box.checked){x++;}
 if (document.form1.potentchallenge_box.checked){x++;}
 if (document.form1.powerattack_box.checked){x++;}
 if (document.form1.powerfulcharge_box.checked){x++;}
 if (document.form1.precisehunter_box.checked){x++;}
 if (document.form1.presstheadvantage_box.checked){x++;}
 if (document.form1.quickdraw_box.checked){x++;}
 if (document.form1.ragingstorm_box.checked){x++;}
 if (document.form1.ravenqueensblessing_box.checked){x++;}
 if (document.form1.ritualcaster_box.checked){x++;}
 if (document.form1.sehaninesreversal_box.checked){x++;}
  if (document.form1.angharradhsfavor_box.checked){x++;}
  if (document.form1.avoweddragonfoe_box.checked){x++;}
  if (document.form1.berronarssalve_box.checked){x++;}
  if (document.form1.blessingofsilvanus_box.checked){x++;}
  if (document.form1.brokenshackles_box.checked){x++;}
  if (document.form1.chaunteasblessing_box.checked){x++;}
  if (document.form1.clutchofdarkness_box.checked){x++;}
  if (document.form1.elementalassault_box.checked){x++;}
  if (document.form1.escalatingassault_box.checked){x++;}
  if (document.form1.extramanifestationearthsoul_box.checked){x++;}
  if (document.form1.extramanifestationfiresoul_box.checked){x++;}
  if (document.form1.extramanifestationstormsoul_box.checked){x++;}
  if (document.form1.extramanifestationwatersoul_box.checked){x++;}
  if (document.form1.extramanifestationwindsoul_box.checked){x++;}
  if (document.form1.eyesofselune_box.checked){x++;}
  if (document.form1.fleetnessofmielikki_box.checked){x++;}
  if (document.form1.ghostwiseheritage_box.checked){x++;}
  if (document.form1.glittergoldsgambit_box.checked){x++;}
  if (document.form1.golddwarfpride_box.checked){x++;}
  if (document.form1.gondscraft_box.checked){x++;}
  if (document.form1.ilmatersmartyrdom_box.checked){x++;}
  if (document.form1.improvedswordbond_box.checked){x++;}
  if (document.form1.intelligentblademaster_box.checked){x++;}
  if (document.form1.kelemvorsjudgment_box.checked){x++;}
  if (document.form1.manifestresistance_box.checked){x++;}
  if (document.form1.improvedrazorswarm_box.checked){x++;}
  if (document.form1.moonelfresilience_box.checked){x++;}
  if (document.form1.oghmasrecall_box.checked){x++;}
  if (document.form1.powerofamaunator_box.checked){x++;}
  if (document.form1.retributiveshield_box.checked){x++;}
  if (document.form1.righteousrageoftempus_box.checked){x++;}
  if (document.form1.ruthlesshunter_box.checked){x++;}
  if (document.form1.scionofthegods_box.checked){x++;}
  if (document.form1.sheelaperyroylsgift_box.checked){x++;}
  if (document.form1.shieldofshadows_box.checked){x++;}
  if (document.form1.shieldthefallen_box.checked){x++;}
  if (document.form1.stubbornsurvivor_box.checked){x++;}
  if (document.form1.studentofswordmagic_box.checked){x++;}
  if (document.form1.sunelfgrace_box.checked){x++;}
  if (document.form1.sunestouch_box.checked){x++;}
  if (document.form1.tormsjustice_box.checked){x++;}
  if (document.form1.tymorascoin_box.checked){x++;}
  if (document.form1.versatileresistance_box.checked){x++;}
  if (document.form1.waukeenssilvertongue_box.checked){x++;}
  if (document.form1.alchemist_box.checked){x++;}
  if (document.form1.wildelfluck_box.checked){x++;}
  if (document.form1.woodelfagility_box.checked){x++;}




 if (document.form1.otherfeat01_box.checked){x++;}
 if (document.form1.otherfeat02_box.checked){x++;}
 if (document.form1.otherfeat03_box.checked){x++;}
 if (document.form1.otherfeat04_box.checked){x++;}
 if (document.form1.otherfeat05_box.checked){x++;}
 if (document.form1.otherfeat06_box.checked){x++;}
 if (document.form1.otherfeat07_box.checked){x++;}
 if (document.form1.shieldproficiencyheavy_box.checked){x++;}
 if (document.form1.shieldproficiencylight_box.checked){x++;}
 if (document.form1.shieldpush_box.checked){x++;}
 if (document.form1.skillfocusacrobatics_box.checked){x++;}
 if (document.form1.skillfocusarcana_box.checked){x++;}
 if (document.form1.skillfocusathletics_box.checked){x++;}
 if (document.form1.skillfocusbluff_box.checked){x++;}
 if (document.form1.skillfocusdiplomacy_box.checked){x++;}
 if (document.form1.skillfocusdungeoneering_box.checked){x++;}
 if (document.form1.skillfocusendurance_box.checked){x++;}
 if (document.form1.skillfocusheal_box.checked){x++;}
 if (document.form1.skillfocushistory_box.checked){x++;}
 if (document.form1.skillfocusinsight_box.checked){x++;}
 if (document.form1.skillfocusintimidate_box.checked){x++;}
 if (document.form1.skillfocusnature_box.checked){x++;}
 if (document.form1.skillfocusperception_box.checked){x++;}
 if (document.form1.skillfocusreligion_box.checked){x++;}
 if (document.form1.skillfocusstealth_box.checked){x++;}
 if (document.form1.skillfocusstreetwise_box.checked){x++;}
 if (document.form1.skillfocusthievery_box.checked){x++;}
 if (document.form1.skilltrainingacrobatics_box.checked){x++;}
 if (document.form1.skilltrainingarcana_box.checked){x++;}
 if (document.form1.skilltrainingathletics_box.checked){x++;}
 if (document.form1.skilltrainingbluff_box.checked){x++;}
 if (document.form1.skilltrainingdiplomacy_box.checked){x++;}
 if (document.form1.skilltrainingdungeoneering_box.checked){x++;}
 if (document.form1.skilltrainingendurance_box.checked){x++;}
 if (document.form1.skilltrainingheal_box.checked){x++;}
 if (document.form1.skilltraininghistory_box.checked){x++;}
 if (document.form1.skilltraininginsight_box.checked){x++;}
 if (document.form1.skilltrainingintimidate_box.checked){x++;}
 if (document.form1.skilltrainingnature_box.checked){x++;}
 if (document.form1.skilltrainingperception_box.checked){x++;}
 if (document.form1.skilltrainingreligion_box.checked){x++;}
 if (document.form1.skilltrainingstealth_box.checked){x++;}
 if (document.form1.skilltrainingstreetwise_box.checked){x++;}
 if (document.form1.skilltrainingthievery_box.checked){x++;}
 if (document.form1.sureclimber_box.checked){x++;}
 if (document.form1.surpriseknockdown_box.checked){x++;}
 if (document.form1.tacticalassault_box.checked){x++;}
 if (document.form1.toughness_box.checked){x++;}
 if (document.form1.twoweapondefense_box.checked){x++;}
 if (document.form1.twoweaponfighting_box.checked){x++;}
 if (document.form1.weaponfocusaxe_box.checked){x++;}
 if (document.form1.weaponfocusbow_box.checked){x++;}
 if (document.form1.weaponfocuscrossbow_box.checked){x++;}
 if (document.form1.weaponfocusflail_box.checked){x++;}
 if (document.form1.weaponfocushammer_box.checked){x++;}
 if (document.form1.weaponfocusheavyblade_box.checked){x++;}
 if (document.form1.weaponfocuslightblade_box.checked){x++;}
 if (document.form1.weaponfocusmace_box.checked){x++;}
 if (document.form1.weaponfocuspick_box.checked){x++;}
 if (document.form1.weaponfocuspolearm_box.checked){x++;}
 if (document.form1.weaponfocussling_box.checked){x++;}
 if (document.form1.weaponfocusspear_box.checked){x++;}
 if (document.form1.weaponfocusstaff_box.checked){x++;}
 if (document.form1.weaponfocusunarmed_box.checked){x++;}
 if (document.form1.weaponproficiencyclub_box.checked){x++;}
 if (document.form1.weaponproficiencydagger_box.checked){x++;}
 if (document.form1.weaponproficiencyjavelin_box.checked){x++;}
 if (document.form1.weaponproficiencymace_box.checked){x++;}
 if (document.form1.weaponproficiencysickle_box.checked){x++;}
 if (document.form1.weaponproficiencyothersimplemeleeweapons_box.checked){x++;}
 if (document.form1.weaponproficiencyothermilitarymeleeweapons_box.checked){x++;}
 if (document.form1.weaponproficiencyothersuperiormeleeweapons_box.checked){x++;}
 if (document.form1.weaponproficiencyothersimplerangedweapons_box.checked){x++;}
 if (document.form1.weaponproficiencyothersuperiorrangedweapons_box.checked){x++;}
 if (document.form1.weaponproficiencyspear_box.checked){x++;}
 if (document.form1.weaponproficiencygreatclub_box.checked){x++;}
 if (document.form1.weaponproficiencymorningstar_box.checked){x++;}
 if (document.form1.weaponproficiencyquarterstaff_box.checked){x++;}
 if (document.form1.weaponproficiencyscythe_box.checked){x++;}
 if (document.form1.weaponproficiencybattleaxe_box.checked){x++;}
 if (document.form1.weaponproficiencyflail_box.checked){x++;}
 if (document.form1.weaponproficiencyhandaxe_box.checked){x++;}
 if (document.form1.weaponproficiencylongsword_box.checked){x++;}
 if (document.form1.weaponproficiencyscimitar_box.checked){x++;}
 if (document.form1.weaponproficiencyshortsword_box.checked){x++;}
 if (document.form1.weaponproficiencythrowinghammer_box.checked){x++;}
 if (document.form1.weaponproficiencywarhammer_box.checked){x++;}
 if (document.form1.weaponproficiencywarpick_box.checked){x++;}
 if (document.form1.weaponproficiencyfalchion_box.checked){x++;}
 if (document.form1.weaponproficiencyglaive_box.checked){x++;}
 if (document.form1.weaponproficiencygreataxe_box.checked){x++;}
 if (document.form1.weaponproficiencygreatsword_box.checked){x++;}
 if (document.form1.weaponproficiencyhalberd_box.checked){x++;}
 if (document.form1.weaponproficiencyheavyflail_box.checked){x++;}
 if (document.form1.weaponproficiencylongspear_box.checked){x++;}
 if (document.form1.weaponproficiencymaul_box.checked){x++;}
 if (document.form1.weaponproficiencybastardsword_box.checked){x++;}
 if (document.form1.weaponproficiencykatar_box.checked){x++;}
 if (document.form1.weaponproficiencyrapier_box.checked){x++;}
 if (document.form1.weaponproficiencyspikedchain_box.checked){x++;}
 if (document.form1.weaponproficiencyhandcrossbow_box.checked){x++;}
 if (document.form1.weaponproficiencysling_box.checked){x++;}
 if (document.form1.weaponproficiencycrossbow_box.checked){x++;}
 if (document.form1.weaponproficiencylongbow_box.checked){x++;}
 if (document.form1.weaponproficiencyshortbow_box.checked){x++;}
 if (document.form1.weaponproficiencyshuriken_box.checked){x++;}
 if (document.form1.wintertouched_box.checked){x++;}
 if (document.form1.actionrecovery_box.checked){x++; paragon_feat_count++; }
 if (document.form1.agileathlete_box.checked){x++; paragon_feat_count++; }
 if (document.form1.arcanereach_box.checked){x++; paragon_feat_count++; }
 if (document.form1.armorspecializationchainmail_box.checked){x++; paragon_feat_count++; }
 if (document.form1.armorspecializationhide_box.checked){x++; paragon_feat_count++; }
 if (document.form1.armorspecializationplate_box.checked){x++; paragon_feat_count++; }
 if (document.form1.armorspecializationscale_box.checked){x++; paragon_feat_count++; }
 if (document.form1.backtothewall_box.checked){x++; paragon_feat_count++; }
 if (document.form1.bloodthirst_box.checked){x++; paragon_feat_count++; }
 if (document.form1.combatanticipation_box.checked){x++; paragon_feat_count++; }
 if (document.form1.combatcommander_box.checked){x++; paragon_feat_count++; }
 if (document.form1.dangersense_box.checked){x++; paragon_feat_count++; }
 if (document.form1.deadlyaxe_box.checked){x++; paragon_feat_count++; }
 if (document.form1.defensiveadvantage_box.checked){x++; paragon_feat_count++; }
 if (document.form1.devastatingcritical_box.checked){x++; paragon_feat_count++; }
 if (document.form1.distantshot_box.checked){x++; paragon_feat_count++; }
 if (document.form1.dwarvendurability_box.checked){x++; paragon_feat_count++; }
 if (document.form1.empowereddragonbreath_box.checked){x++; paragon_feat_count++; }
 if (document.form1.evasion_box.checked){x++; paragon_feat_count++; }
 if (document.form1.feywildprotection_box.checked){x++; paragon_feat_count++; }
 if (document.form1.fieryrebuke_box.checked){x++; paragon_feat_count++; }
 if (document.form1.fleetfooted_box.checked){x++; paragon_feat_count++; }
 if (document.form1.greatfortitude_box.checked){x++; paragon_feat_count++; }
 if (document.form1.hammerrhythm_box.checked){x++; paragon_feat_count++; }
 if (document.form1.heavybladeopportunity_box.checked){x++; paragon_feat_count++; }
 if (document.form1.improvedsecondwind_box.checked){x++; paragon_feat_count++; }
 if (document.form1.inescapableforce_box.checked){x++; paragon_feat_count++; }
 if (document.form1.ironwill_box.checked){x++; paragon_feat_count++; }
 if (document.form1.lastingfrost_box.checked){x++; paragon_feat_count++; }
 if (document.form1.lightbladeprecision_box.checked){x++; paragon_feat_count++; }
 if (document.form1.lightningarc_box.checked){x++; paragon_feat_count++; }
 if (document.form1.lightningreflexes_box.checked){x++; paragon_feat_count++; }
 if (document.form1.mettle_box.checked){x++; paragon_feat_count++; }
 if (document.form1.pointblankshot_box.checked){x++; paragon_feat_count++; }
 if (document.form1.polearmgamble_box.checked){x++; paragon_feat_count++; }
 if (document.form1.psychiclock_box.checked){x++; paragon_feat_count++; }
 if (document.form1.resoundingthunder_box.checked){x++; paragon_feat_count++; }
 if (document.form1.runningshot_box.checked){x++; paragon_feat_count++; }
 if (document.form1.scimitardance_box.checked){x++; paragon_feat_count++; }
 if (document.form1.secondimplementorb_box.checked){x++; paragon_feat_count++; }
 if (document.form1.secondimplementstaff_box.checked){x++; paragon_feat_count++; }
 if (document.form1.secondimplementwand_box.checked){x++; paragon_feat_count++; }
 if (document.form1.secretstride_box.checked){x++; paragon_feat_count++; }
 if (document.form1.seizethemoment_box.checked){x++; paragon_feat_count++; }
 if (document.form1.shieldspecialization_box.checked){x++; paragon_feat_count++; }
 if (document.form1.slyhunter_box.checked){x++; paragon_feat_count++; }
 if (document.form1.solidsound_box.checked){x++; paragon_feat_count++; }
 if (document.form1.spearpush_box.checked){x++; paragon_feat_count++; }
 if (document.form1.spellfocus_box.checked){x++; paragon_feat_count++; }
 if (document.form1.steadyshooter_box.checked){x++; paragon_feat_count++; }
 if (document.form1.sweepingflail_box.checked){x++; paragon_feat_count++; }
 if (document.form1.twofoldcurse_box.checked){x++; paragon_feat_count++; }
 if (document.form1.uncannydodge_box.checked){x++; paragon_feat_count++; }
 if (document.form1.underfoot_box.checked){x++; paragon_feat_count++; }

   if (document.form1.demonwebspiral_box.checked){x++; paragon_feat_count++; }
   if (document.form1.distantswordbond_box.checked){x++; paragon_feat_count++; }
   if (document.form1.doubleaegis_box.checked){x++; paragon_feat_count++; }
   if (document.form1.improveddarkspiralaura_box.checked){x++; paragon_feat_count++; }
   if (document.form1.masteroffireanddarkness_box.checked){x++; paragon_feat_count++; }
   if (document.form1.mercilesskiller_box.checked){x++; paragon_feat_count++; }
   if (document.form1.moongleamoath_box.checked){x++; paragon_feat_count++; }
   if (document.form1.shockingflame_box.checked){x++; paragon_feat_count++; }
   if (document.form1.stoneguard_box.checked){x++; paragon_feat_count++; }
   if (document.form1.stormrider_box.checked){x++; paragon_feat_count++; }
   if (document.form1.venemousheritage_box.checked){x++; paragon_feat_count++; }
   if (document.form1.warwizardry_box.checked){x++; paragon_feat_count++; }
   if (document.form1.agileopportunist_box.checked){x++; paragon_feat_count++; }
   if (document.form1.paragondefenses_box.checked){x++; paragon_feat_count++; }
   if (document.form1.quickrecoveryfeat_box.checked){x++; paragon_feat_count++; }
   if (document.form1.reservemaneuver_box.checked){x++; paragon_feat_count++; }



 if (document.form1.arcanemastery_box.checked){x++; epic_feat_count++; }
 if (document.form1.axemastery_box.checked){x++; epic_feat_count++; }
 if (document.form1.blindfight_box.checked){x++; epic_feat_count++; }
 if (document.form1.bludgeonmastery_box.checked){x++; epic_feat_count++; }
 if (document.form1.epicresurgence_box.checked){x++; epic_feat_count++; }
 if (document.form1.flailmastery_box.checked){x++; epic_feat_count++; }
 if (document.form1.flankingmaneuver_box.checked){x++; epic_feat_count++; }
 if (document.form1.fontofradiance_box.checked){x++; epic_feat_count++; }
 if (document.form1.heavyblademastery_box.checked){x++; epic_feat_count++; }
 if (document.form1.irresistableflame_box.checked){x++; epic_feat_count++; }
 if (document.form1.lightblademastery_box.checked){x++; epic_feat_count++; }
 if (document.form1.pickmastery_box.checked){x++; epic_feat_count++; }
 if (document.form1.spearmastery_box.checked){x++; epic_feat_count++; }
 if (document.form1.spellaccuracy_box.checked){x++; epic_feat_count++; }
 if (document.form1.triumphantattack_box.checked){x++; epic_feat_count++; }
 if (document.form1.twoweaponflurry_box.checked){x++; epic_feat_count++; }
 if (document.form1.unfetteredstride_box.checked){x++; epic_feat_count++; }


   if (document.form1.doublemanifestation_box.checked){x++; epic_feat_count++; }
   if (document.form1.totalaegis_box.checked){x++; epic_feat_count++; }


  if (document.form1.aggressiveassault_box.checked){x++;}
  if (document.form1.anklecutter_box.checked){x++;}
  if (document.form1.beastguidance_box.checked){x++;}
  if (document.form1.beastprotector_box.checked){x++;}
  if (document.form1.beasttrainingathletics_box.checked){x++;}
  if (document.form1.beasttrainingendurance_box.checked){x++;}
  if (document.form1.beasttrainingperception_box.checked){x++;}
  if (document.form1.beasttrainingstealth_box.checked){x++;}
  if (document.form1.bloodiedinvigoration_box.checked){x++;}
  if (document.form1.bolsteringinspiration_box.checked){x++;}
  if (document.form1.bracingbreath_box.checked){x++;}
  if (document.form1.bravuraspirit_box.checked){x++;}
  if (document.form1.breathresistantbeast_box.checked){x++;}
  if (document.form1.brutalaccuracy_box.checked){x++;}
  if (document.form1.brutalteamwork_box.checked){x++;}
  if (document.form1.brutalwound_box.checked){x++;}
  if (document.form1.camouflage_box.checked){x++;}
  if (document.form1.commandthedarkness_box.checked){x++;}
  if (document.form1.coordinatedopportunity_box.checked){x++;}
  if (document.form1.cunningambusher_box.checked){x++;}
  if (document.form1.darkfiretargeting_box.checked){x++;}
  if (document.form1.deepgash_box.checked){x++;}
  if (document.form1.defensiveresilience_box.checked){x++;}
  if (document.form1.devotedchallenge_box.checked){x++;}
  if (document.form1.dirtyfighting_box.checked){x++;}
  if (document.form1.draggingflail_box.checked){x++;}
  if (document.form1.drowbeastmastery_box.checked){x++;}
  if (document.form1.dwarfstoneblood_box.checked){x++;}
  if (document.form1.dwarftrapsmith_box.checked){x++;}
  if (document.form1.elvenbeastmastery_box.checked){x++;}
  if (document.form1.experttracker_box.checked){x++;}
  if (document.form1.feyblades_box.checked){x++;}
  if (document.form1.feycommand_box.checked){x++;}
  if (document.form1.feyborncompanion_box.checked){x++;}
  if (document.form1.fiendishcompanion_box.checked){x++;}
  if (document.form1.groupassault_box.checked){x++;}
  if (document.form1.groupquarry_box.checked){x++;}
  if (document.form1.grouprattling_box.checked){x++;}
  if (document.form1.halflingstalwart_box.checked){x++;}
  if (document.form1.humanbeastmastery_box.checked){x++;}
  if (document.form1.hunterofwindandwave_box.checked){x++;}
  if (document.form1.huntersaim_box.checked){x++;}
  if (document.form1.improvedbravura_box.checked){x++;}
  if (document.form1.improvedinspiration_box.checked){x++;}
  if (document.form1.improvedinspiringword_box.checked){x++;}
  if (document.form1.improvedresources_box.checked){x++;}
  if (document.form1.improvedtactics_box.checked){x++;}
  if (document.form1.improvedvigor_box.checked){x++;}
  if (document.form1.inspireddefense_box.checked){x++;}
  if (document.form1.inspiredtactics_box.checked){x++;}
  if (document.form1.intothefraymp_box.checked){x++;}
  if (document.form1.keeperofstorm_box.checked){x++;}
  if (document.form1.leadingfire_box.checked){x++;}
  if (document.form1.lendmight_box.checked){x++;}
  if (document.form1.lingeringwrath_box.checked){x++;}
  if (document.form1.longswordfinesse_box.checked){x++;}
  if (document.form1.luckyskirmisher_box.checked){x++;}
  if (document.form1.martialalacrity_box.checked){x++;}
  if (document.form1.martialfreedom_box.checked){x++;}
  if (document.form1.masterofrumblingearth_box.checked){x++;}
  if (document.form1.nimblecompanion_box.checked){x++;}
  if (document.form1.offensiveresilience_box.checked){x++;}
  if (document.form1.opportunisticaccuracy_box.checked){x++;}
  if (document.form1.polearmmomentum_box.checked){x++;}
  if (document.form1.predatoryaction_box.checked){x++;}
  if (document.form1.primestrike_box.checked){x++;}
  if (document.form1.rashsneakattack_box.checked){x++;}
  if (document.form1.rattlingwrath_box.checked){x++;}
  if (document.form1.reapingblade_box.checked){x++;}
  if (document.form1.recklessscramble_box.checked){x++;}
  if (document.form1.ruthlessinjury_box.checked){x++;}
  if (document.form1.savinginspiration_box.checked){x++;}
  if (document.form1.secureencampment_box.checked){x++;}
  if (document.form1.shielddefense_box.checked){x++;}
  if (document.form1.sidewaysdefense_box.checked){x++;}
  if (document.form1.slayingaction_box.checked){x++;}
  if (document.form1.sneakyaccuracy_box.checked){x++;}
  if (document.form1.speedyresponse_box.checked){x++;}
  if (document.form1.streetthug_box.checked){x++;}
  if (document.form1.surprisingcharge_box.checked){x++;}
  if (document.form1.tacticalinspiration_box.checked){x++;}
  if (document.form1.takemeasure_box.checked){x++;}
  if (document.form1.thunderhammer_box.checked){x++;}
  if (document.form1.thundertuskcompanion_box.checked){x++;}
  if (document.form1.trapsense_box.checked){x++;}
  if (document.form1.tunnelstalker_box.checked){x++;}
  if (document.form1.twofistedshooter_box.checked){x++;}
  if (document.form1.unbalancingwrath_box.checked){x++;}
  if (document.form1.vengefulbeast_box.checked){x++;}
  if (document.form1.victorsconfidence_box.checked){x++;}
  if (document.form1.wielderofpiercingflame_box.checked){x++;}


   if (document.form1.advantageofcunning_box.checked){x++;}
   if (document.form1.angerunleashed_box.checked){x++;}
   if (document.form1.arcanespellfury_box.checked){x++;}
   if (document.form1.auspiciouslineage_box.checked){x++;}
   if (document.form1.bardicknowledge_box.checked){x++;}
   if (document.form1.blurringclaws_box.checked){x++;}
   if (document.form1.combatmedic_box.checked){x++;}
   if (document.form1.coordinatedexplosion_box.checked){x++;}
   if (document.form1.crushingearthstrength_box.checked){x++;}
   if (document.form1.deadlyrage_box.checked){x++;}
   if (document.form1.disciplinedwildsoul_box.checked){x++;}
   if (document.form1.distantadvantage_box.checked){x++;}
   if (document.form1.echoesofthunder_box.checked){x++;}
   if (document.form1.enragedboarform_box.checked){x++;}
   if (document.form1.expertritualist_box.checked){x++;}
   if (document.form1.ferocioustigerform_box.checked){x++;}
   if (document.form1.feytrickster_box.checked){x++;}
   if (document.form1.goliathgreatweaponprowess_box.checked){x++;}
   if (document.form1.gorebrutecharge_box.checked){x++;}
   if (document.form1.groupstealth_box.checked){x++;}
   if (document.form1.guaranteedretribution_box.checked){x++;}
   if (document.form1.implementexpertiseholysymbol_box.checked){x++;}
   if (document.form1.implementexpertiseorb_box.checked){x++;}
   if (document.form1.implementexpertiserod_box.checked){x++;}
   if (document.form1.implementexpertisestaff_box.checked){x++;}
   if (document.form1.implementexpertisewand_box.checked){x++;}
   if (document.form1.implementexpertisedagger_box.checked){x++;}
   if (document.form1.implementexpertisemusic_box.checked){x++;}
   if (document.form1.implementexpertisetome_box.checked){x++;}
   if (document.form1.implementexpertisetotem_box.checked){x++;}
   if (document.form1.improvedarmoroffaith_box.checked){x++;}
   if (document.form1.improvedbullrush_box.checked){x++;}
   if (document.form1.improveddragonsoul_box.checked){x++;}
   if (document.form1.improvedgrab_box.checked){x++;}
   if (document.form1.improvedmajesticword_box.checked){x++;}
   if (document.form1.improvedragebloodvigor_box.checked){x++;}
   if (document.form1.improvedroaroftriumph_box.checked){x++;}
   if (document.form1.insightfulpreservation_box.checked){x++;}
   if (document.form1.invigoratingpursuit_box.checked){x++;}
   if (document.form1.invokerdefense_box.checked){x++;}
   if (document.form1.markingsoftheblessed_box.checked){x++;}
   if (document.form1.markingsofthevictor_box.checked){x++;}
   if (document.form1.meleetraining_box.checked){x++;}
   if (document.form1.oncomingstorm_box.checked){x++;}
   if (document.form1.potentrebirth_box.checked){x++;}
   if (document.form1.primalfury_box.checked){x++;}
   if (document.form1.primalinstinct_box.checked){x++;}
   if (document.form1.protectorspiritadept_box.checked){x++;}
   if (document.form1.radiantpower_box.checked){x++;}
   if (document.form1.resonatingcovenant_box.checked){x++;}
   if (document.form1.restfulhealing_box.checked){x++;}
   if (document.form1.revitalizingfontoflife_box.checked){x++;}
   if (document.form1.risingfury_box.checked){x++;}
   if (document.form1.savageassault_box.checked){x++;}
   if (document.form1.scouringwrath_box.checked){x++;}
   if (document.form1.shadowskulk_box.checked){x++;}
   if (document.form1.sharedhealingspirit_box.checked){x++;}
   if (document.form1.sorcerousbladechanneling_box.checked){x++;}
   if (document.form1.speedloader_box.checked){x++;}
   if (document.form1.spritspeaker_box.checked){x++;}
   if (document.form1.stalkerspiritadept_box.checked){x++;}
   if (document.form1.strengthofvalor_box.checked){x++;}
   if (document.form1.suddenroots_box.checked){x++;}
   if (document.form1.surgingflame_box.checked){x++;}
   if (document.form1.thirstforbattle_box.checked){x++;}
   if (document.form1.timelyrespite_box.checked){x++;}
   if (document.form1.twoweaponthreat_box.checked){x++;}
   if (document.form1.twoweaponopening_box.checked){x++;}
   if (document.form1.versatilemaster_box.checked){x++;}
   if (document.form1.weaponexpertiseaxe_box.checked){x++;}
   if (document.form1.weaponexpertisebow_box.checked){x++;}
   if (document.form1.weaponexpertisecrossbow_box.checked){x++;}
   if (document.form1.weaponexpertiseflail_box.checked){x++;}
   if (document.form1.weaponexpertisehammer_box.checked){x++;}
   if (document.form1.weaponexpertiseheavyblade_box.checked){x++;}
   if (document.form1.weaponexpertiselightblade_box.checked){x++;}
   if (document.form1.weaponexpertisemace_box.checked){x++;}
   if (document.form1.weaponexpertisepick_box.checked){x++;}
   if (document.form1.weaponexpertisepolearm_box.checked){x++;}
   if (document.form1.weaponexpertisesling_box.checked){x++;}
   if (document.form1.weaponexpertisespear_box.checked){x++;}
   if (document.form1.weaponexpertisestaff_box.checked){x++;}
   if (document.form1.weaponexpertiseunarmed_box.checked){x++;}
   if (document.form1.wildbloodcunning_box.checked){x++;}
   if (document.form1.wildsenses_box.checked){x++;}
   if (document.form1.arcaneimplementproficiencydagger_box.checked){x++;}
   if (document.form1.arcaneimplementproficiencymusic_box.checked){x++;}
   if (document.form1.arcaneimplementproficiencyorb_box.checked){x++;}
   if (document.form1.arcaneimplementproficiencyrod_box.checked){x++;}
   if (document.form1.arcaneimplementproficiencystaff_box.checked){x++;}
   if (document.form1.arcaneimplementproficiencytome_box.checked){x++;}
   if (document.form1.arcaneimplementproficiencywand_box.checked){x++;}
   if (document.form1.dualimplementspellcaster_box.checked){x++;}




  if (document.form1.agiletempest_box.checked){x++; paragon_feat_count++;}
  if (document.form1.avandrasgift_box.checked){x++; paragon_feat_count++;}
  if (document.form1.avengingspirit_box.checked){x++; paragon_feat_count++;}
  if (document.form1.bleedingbackstab_box.checked){x++; paragon_feat_count++;}
  if (document.form1.bleedingprecision_box.checked){x++; paragon_feat_count++;}
  if (document.form1.bloodyinspiration_box.checked){x++; paragon_feat_count++;}
  if (document.form1.bloodytenacity_box.checked){x++; paragon_feat_count++;}
  if (document.form1.chainmailagility_box.checked){x++; paragon_feat_count++;}
  if (document.form1.combatopening_box.checked){x++; paragon_feat_count++;}
  if (document.form1.culltheweak_box.checked){x++; paragon_feat_count++;}
  if (document.form1.darkhunter_box.checked){x++; paragon_feat_count++;}
  if (document.form1.darkjumper_box.checked){x++; paragon_feat_count++;}
  if (document.form1.dauntingchallenge_box.checked){x++; paragon_feat_count++;}
  if (document.form1.defensivesurge_box.checked){x++; paragon_feat_count++;}
  if (document.form1.distractingcompanion_box.checked){x++; paragon_feat_count++;}
  if (document.form1.draconicarrogance_box.checked){x++; paragon_feat_count++;}
  if (document.form1.dragonbreathwarrior_box.checked){x++; paragon_feat_count++;}
  if (document.form1.elementalcompanions_box.checked){x++; paragon_feat_count++;}
  if (document.form1.elementalguardian_box.checked){x++; paragon_feat_count++;}
  if (document.form1.enduringwallop_box.checked){x++; paragon_feat_count++;}
  if (document.form1.evasivefootwork_box.checked){x++; paragon_feat_count++;}
  if (document.form1.feycharge_box.checked){x++; paragon_feat_count++;}
  if (document.form1.feygambit_box.checked){x++; paragon_feat_count++;}
  if (document.form1.feytactics_box.checked){x++; paragon_feat_count++;}
  if (document.form1.fiendishdefender_box.checked){x++; paragon_feat_count++;}
  if (document.form1.grit_box.checked){x++; paragon_feat_count++;}
  if (document.form1.groupflanking_box.checked){x++; paragon_feat_count++;}
  if (document.form1.halflingbeastmastery_box.checked){x++; paragon_feat_count++;}
  if (document.form1.huntersadvantage_box.checked){x++; paragon_feat_count++;}
  if (document.form1.huntersresurgence_box.checked){x++; paragon_feat_count++;}
  if (document.form1.impetuouscharger_box.checked){x++; paragon_feat_count++;}
  if (document.form1.infernalsneakattack_box.checked){x++; paragon_feat_count++;}
  if (document.form1.markedscourge_box.checked){x++; paragon_feat_count++;}
  if (document.form1.mightybattlerage_box.checked){x++; paragon_feat_count++;}
  if (document.form1.opportunisticarcher_box.checked){x++; paragon_feat_count++;}
  if (document.form1.opportunisticsneakattack_box.checked){x++; paragon_feat_count++;}
  if (document.form1.phalanxwarrior_box.checked){x++; paragon_feat_count++;}
  if (document.form1.preternaturalsenses_box.checked){x++; paragon_feat_count++;}
  if (document.form1.primequarry_box.checked){x++; paragon_feat_count++;}
  if (document.form1.primeslayer_box.checked){x++; paragon_feat_count++;}
  if (document.form1.protectivebeast_box.checked){x++; paragon_feat_count++;}
  if (document.form1.recklessattacker_box.checked){x++; paragon_feat_count++;}
  if (document.form1.reliableresources_box.checked){x++; paragon_feat_count++;}
  if (document.form1.rogueweaponmastery_box.checked){x++; paragon_feat_count++;}
  if (document.form1.roundaboutcharge_box.checked){x++; paragon_feat_count++;}
  if (document.form1.steadfasttacatics_box.checked){x++; paragon_feat_count++;}
  if (document.form1.stonefootreprisal_box.checked){x++; paragon_feat_count++;}
  if (document.form1.sturdybeast_box.checked){x++; paragon_feat_count++;}
  if (document.form1.vitalinspiration_box.checked){x++; paragon_feat_count++;}
  if (document.form1.warlordsformation_box.checked){x++; paragon_feat_count++;}
  if (document.form1.wrathfulhunter_box.checked){x++; paragon_feat_count++;}
  if (document.form1.actiongrant_box.checked){x++; epic_feat_count++;}
  if (document.form1.aggressiveleadership_box.checked){x++; epic_feat_count++;}
  if (document.form1.artfulprovocation_box.checked){x++; epic_feat_count++;}
  if (document.form1.boldspirit_box.checked){x++; epic_feat_count++;}
  if (document.form1.brutaladvantage_box.checked){x++; epic_feat_count++;}
  if (document.form1.calltoglory_box.checked){x++; epic_feat_count++;}
  if (document.form1.channeledbattlerage_box.checked){x++; epic_feat_count++;}
  if (document.form1.correctingaim_box.checked){x++; epic_feat_count++;}
  if (document.form1.darkfirewarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.dragonwarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.elementalwarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.epicrecovery_box.checked){x++; epic_feat_count++;}
  if (document.form1.feywildwarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.fortuneswarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.hawkeyewarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.improvedprimeshot_box.checked){x++; epic_feat_count++;}
  if (document.form1.infernalwarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.invigoratingexploit_box.checked){x++; epic_feat_count++;}
  if (document.form1.knockbackswing_box.checked){x++; epic_feat_count++;}
  if (document.form1.lastingadvantage_box.checked){x++; epic_feat_count++;}
  if (document.form1.martialmastery_box.checked){x++; epic_feat_count++;}
  if (document.form1.martialresolve_box.checked){x++; epic_feat_count++;}
  if (document.form1.mobilewarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.onewithshadow_box.checked){x++; epic_feat_count++;}
  if (document.form1.peerlesshunter_box.checked){x++; epic_feat_count++;}
  if (document.form1.practicedreliability_box.checked){x++; epic_feat_count++;}
  if (document.form1.primehunter_box.checked){x++; epic_feat_count++;}
  if (document.form1.protectiveleadership_box.checked){x++; epic_feat_count++;}
  if (document.form1.quickbeastcommand_box.checked){x++; epic_feat_count++;}
  if (document.form1.rattlingexploit_box.checked){x++; epic_feat_count++;}
  if (document.form1.reachingwhirlwind_box.checked){x++; epic_feat_count++;}
  if (document.form1.rendingtempest_box.checked){x++; epic_feat_count++;}
  if (document.form1.ruthlessterror_box.checked){x++; epic_feat_count++;}
  if (document.form1.staggeringshot_box.checked){x++; epic_feat_count++;}
  if (document.form1.stoneheartwarrior_box.checked){x++; epic_feat_count++;}
  if (document.form1.supremeinspiration_box.checked){x++; epic_feat_count++;}
  if (document.form1.surpriseaction_box.checked){x++; epic_feat_count++;}
  if (document.form1.tacticalcunning_box.checked){x++; epic_feat_count++;}
  if (document.form1.tacticalinsight_box.checked){x++; epic_feat_count++;}
  if (document.form1.timelyrevival_box.checked){x++; epic_feat_count++;}
  if (document.form1.unstoppablecharge_box.checked){x++; epic_feat_count++;}
  if (document.form1.whirlwindsneakattack_box.checked){x++; epic_feat_count++;}
  if (document.form1.bowmastery_box.checked){x++; epic_feat_count++;}
  if (document.form1.epicfortitude_box.checked){x++; epic_feat_count++;}
  if (document.form1.epicreflexes_box.checked){x++; epic_feat_count++;}
  if (document.form1.epicwill_box.checked){x++; epic_feat_count++;}
  if (document.form1.indomitablewill_box.checked){x++; epic_feat_count++;}
  if (document.form1.opportunereflexes_box.checked){x++; epic_feat_count++;}
  if (document.form1.robustdefenses_box.checked){x++; epic_feat_count++;}
  if (document.form1.unyieldingfortitude_box.checked){x++; epic_feat_count++;}
  if (document.form1.battleacumen_box.checked){x++;}
  if (document.form1.battleinstructor_box.checked){x++;}
  if (document.form1.courageousshooter_box.checked){x++;}
  if (document.form1.firstin_box.checked){x++;}
  if (document.form1.arcanefamiliar_box.checked){x++;}
  if (document.form1.alertfamiliar_box.checked){x++;}
  if (document.form1.aggressivefamiliar_box.checked){x++;}
  if (document.form1.bondedfamiliar_box.checked){x++;}
  if (document.form1.shieldingfamiliar_box.checked){x++;}
  if (document.form1.spellseerfamiliar_box.checked){x++;}
  if (document.form1.quickfamiliar_box.checked){x++;}
  if (document.form1.sharedspeed_box.checked){x++;}

 if (paragon_multiclass)
  {
    document.form1.multiclasspowerswapencounter_box.checked=true; 
    document.form1.multiclasspowerswaputility_box.checked=true; 
    document.form1.multiclasspowerswapdaily_box.checked=true; 
  }
 if (document.form1.multiclasspowerswapencounter_box.checked){x++;}
 if (document.form1.multiclasspowerswaputility_box.checked){x++;}
 if (document.form1.multiclasspowerswapdaily_box.checked){x++;}
 if (x!=total_feat_entitlement){document.form1.sixth_comment_box.value="You have "+x+".  You need "+total_feat_entitlement+".  Keep working"; return false; }
 if (paragon_feat_count+epic_feat_count>above_heroic_feat_maximum){document.form1.sixth_comment_box.value="You have "+(paragon_feat_count+epic_feat_count)+" feats above heroic level.  You are allowed "+above_heroic_feat_maximum+".  Keep working."; return false; }
 if (epic_feat_count>above_paragon_feat_maximum){document.form1.sixth_comment_box.value="You have "+(epic_feat_count)+" feats above paragon level.  You are allowed "+above_paragon_feat_maximum+".  Keep working."; return false; }
 if ((paragon_elementaltempest)
     &(!document.form1.extramanifestationfiresoul_box.checked)
     &(!document.form1.extramanifestationearthsoul_box.checked)
     &(!document.form1.extramanifestationstormsoul_box.checked)
     &(!document.form1.extramanifestationwatersoul_box.checked)
     &(!document.form1.extramanifestationwindsoul_box.checked))
     {document.form1.sixth_comment_box.value="Elemental Tempest paragons need at least one extra manifestation.  Keep working."; return false;}

 document.form1.sixth_comment_box.value="You can accept these feats."
 return true; 
 }

function record_feats(){
  feat_actionsurge=document.form1.actionsurge_box.checked; 
  feat_agilehunter=document.form1.agilehunter_box.checked; 
  feat_alertness=document.form1.alertness_box.checked; 
  feat_armorofbahamut=document.form1.armorofbahamut_box.checked; 
  feat_armorproficiencychainmail=document.form1.armorproficiencychainmail_box.checked; 
  feat_armorproficiencyleather=document.form1.armorproficiencyleather_box.checked; 
  feat_armorproficiencyhide=document.form1.armorproficiencyhide_box.checked; 
  feat_armorproficiencyplate=document.form1.armorproficiencyplate_box.checked; 
  feat_armorproficiencyscale=document.form1.armorproficiencyscale_box.checked; 
  feat_astralfire=document.form1.astralfire_box.checked; 
  feat_avandrasrescue=document.form1.avandrasrescue_box.checked; 
  feat_backstabber=document.form1.backstabber_box.checked; 
  feat_bladeopportunist=document.form1.bladeopportunist_box.checked; 
  feat_burningblizzard=document.form1.burningblizzard_box.checked; 
  feat_combatreflexes=document.form1.combatreflexes_box.checked; 
  feat_corellonsgrace=document.form1.corellonsgrace_box.checked; 
  feat_darkfury=document.form1.darkfury_box.checked; 
  feat_defensivemobility=document.form1.defensivemobility_box.checked; 
  feat_distractingshield=document.form1.distractingshield_box.checked; 
  feat_dodgegiants=document.form1.dodgegiants_box.checked; 
  feat_dragonbornfrenzy=document.form1.dragonbornfrenzy_box.checked; 
  feat_dragonbornsenses=document.form1.dragonbornsenses_box.checked; 
  feat_durable=document.form1.durable_box.checked; 
  feat_dwarvenweapontraining=document.form1.dwarvenweapontraining_box.checked; 
  feat_eladrinsoldier=document.form1.eladrinsoldier_box.checked; 
  feat_elvenprecision=document.form1.elvenprecision_box.checked; 
  feat_enlargeddragonbreath=document.form1.enlargeddragonbreath_box.checked; 
  feat_escapeartist=document.form1.escapeartist_box.checked; 
  feat_expandedspellbook=document.form1.expandedspellbook_box.checked; 
  feat_farshot=document.form1.farshot_box.checked; 
  feat_farthrow=document.form1.farthrow_box.checked; 
  feat_fastrunner=document.form1.fastrunner_box.checked; 
  feat_ferociousrebuke=document.form1.ferociousrebuke_box.checked; 
  feat_groupinsight=document.form1.groupinsight_box.checked; 
  feat_halflingagility=document.form1.halflingagility_box.checked; 
  feat_harmonyoferathis=document.form1.harmonyoferathis_box.checked; 
  feat_healinghands=document.form1.healinghands_box.checked; 
  feat_hellfireblood=document.form1.hellfireblood_box.checked; 
  feat_humanperseverance=document.form1.humanperseverance_box.checked; 
  feat_improveddarkonesblessing=document.form1.improveddarkonesblessing_box.checked; 
  feat_improvedfateofthevoid=document.form1.improvedfateofthevoid_box.checked; 
  feat_improvedinitiative=document.form1.improvedinitiative_box.checked; 
  feat_improvedmistystep=document.form1.improvedmistystep_box.checked; 
  feat_inspiredrecovery=document.form1.inspiredrecovery_box.checked; 
  feat_iounspoise=document.form1.iounspoise_box.checked; 
  feat_jackofalltrades=document.form1.jackofalltrades_box.checked; 
  feat_kordsfavor=document.form1.kordsfavor_box.checked; 
  feat_lethalhunter=document.form1.lethalhunter_box.checked; 
  feat_lightstep=document.form1.lightstep_box.checked; 
  feat_linguist=document.form1.linguist_list.selectedIndex; 
  feat_longjumper=document.form1.longjumper_box.checked; 
  feat_longinthecrowd=document.form1.longinthecrowd_box.checked; 
  feat_melorastide=document.form1.melorastide_box.checked; 
  feat_moradinsresolve=document.form1.moradinsresolve_box.checked; 
  feat_mountedcombat=document.form1.mountedcombat_box.checked; 
  feat_nimbleblade=document.form1.nimbleblade_box.checked; 
  feat_pelorsradiance=document.form1.pelorsradiance_box.checked; 
  feat_potentchallenge=document.form1.potentchallenge_box.checked; 
  feat_powerattack=document.form1.powerattack_box.checked; 
  feat_powerfulcharge=document.form1.powerfulcharge_box.checked; 
  feat_precisehunter=document.form1.precisehunter_box.checked; 
  feat_presstheadvantage=document.form1.presstheadvantage_box.checked; 
  feat_quickdraw=document.form1.quickdraw_box.checked; 
  feat_ragingstorm=document.form1.ragingstorm_box.checked; 
  feat_ravenqueensblessing=document.form1.ravenqueensblessing_box.checked; 
  feat_ritualcaster=document.form1.ritualcaster_box.checked; 
  feat_sehaninesreversal=document.form1.sehaninesreversal_box.checked; 
  feat_angharradhsfavor=document.form1.angharradhsfavor_box.checked;
  feat_avoweddragonfoe=document.form1.avoweddragonfoe_box.checked;
  feat_berronarssalve=document.form1.berronarssalve_box.checked;
  feat_blessingofsilvanus=document.form1.blessingofsilvanus_box.checked;
  feat_brokenshackles=document.form1.brokenshackles_box.checked;
  feat_chaunteasblessing=document.form1.chaunteasblessing_box.checked;
  feat_clutchofdarkness=document.form1.clutchofdarkness_box.checked;
  feat_elementalassault=document.form1.elementalassault_box.checked;
  feat_escalatingassault=document.form1.escalatingassault_box.checked;
  feat_extramanifestationearthsoul=document.form1.extramanifestationearthsoul_box.checked;
  feat_extramanifestationfiresoul=document.form1.extramanifestationfiresoul_box.checked;
  feat_extramanifestationstormsoul=document.form1.extramanifestationstormsoul_box.checked;
  feat_extramanifestationwatersoul=document.form1.extramanifestationwatersoul_box.checked;
  feat_extramanifestationwindsoul=document.form1.extramanifestationwindsoul_box.checked;
  feat_eyesofselune=document.form1.eyesofselune_box.checked;
  feat_fleetnessofmielikki=document.form1.fleetnessofmielikki_box.checked;
  feat_ghostwiseheritage=document.form1.ghostwiseheritage_box.checked;
  feat_glittergoldsgambit=document.form1.glittergoldsgambit_box.checked;
  feat_golddwarfpride=document.form1.golddwarfpride_box.checked;
  feat_gondscraft=document.form1.gondscraft_box.checked;
  feat_ilmatersmartyrdom=document.form1.ilmatersmartyrdom_box.checked;
  feat_improvedswordbond=document.form1.improvedswordbond_box.checked;
  feat_intelligentblademaster=document.form1.intelligentblademaster_box.checked;
  feat_kelemvorsjudgment=document.form1.kelemvorsjudgment_box.checked;
  feat_manifestresistance=document.form1.manifestresistance_box.checked;
  feat_improvedrazorswarm=document.form1.improvedrazorswarm_box.checked;
  feat_moonelfresilience=document.form1.moonelfresilience_box.checked;
  feat_oghmasrecall=document.form1.oghmasrecall_box.checked;
  feat_powerofamaunator=document.form1.powerofamaunator_box.checked;
  feat_retributiveshield=document.form1.retributiveshield_box.checked;
  feat_righteousrageoftempus=document.form1.righteousrageoftempus_box.checked;
  feat_ruthlesshunter=document.form1.ruthlesshunter_box.checked;
  feat_scionofthegods=document.form1.scionofthegods_box.checked;
  feat_sheelaperyroylsgift=document.form1.sheelaperyroylsgift_box.checked;
  feat_shieldofshadows=document.form1.shieldofshadows_box.checked;
  feat_shieldthefallen=document.form1.shieldthefallen_box.checked;
  feat_stubbornsurvivor=document.form1.stubbornsurvivor_box.checked;
  feat_studentofswordmagic=document.form1.studentofswordmagic_box.checked;
  feat_sunelfgrace=document.form1.sunelfgrace_box.checked;
  feat_sunestouch=document.form1.sunestouch_box.checked;
  feat_tormsjustice=document.form1.tormsjustice_box.checked;
  feat_tymorascoin=document.form1.tymorascoin_box.checked;
  feat_versatileresistance=document.form1.versatileresistance_box.checked;
  feat_waukeenssilvertongue=document.form1.waukeenssilvertongue_box.checked;
  feat_alchemist=document.form1.alchemist_box.checked;
  feat_alchemistswap=document.form1.alchemistswap_box.checked;
  feat_wildelfluck=document.form1.wildelfluck_box.checked;
  feat_woodelfagility=document.form1.woodelfagility_box.checked;


  feat_demonwebspiral=document.form1.demonwebspiral_box.checked;
  feat_distantswordbond=document.form1.distantswordbond_box.checked;
  feat_doubleaegis=document.form1.doubleaegis_box.checked;
  feat_improveddarkspiralaura=document.form1.improveddarkspiralaura_box.checked;
  feat_masteroffireanddarkness=document.form1.masteroffireanddarkness_box.checked;
  feat_mercilesskiller=document.form1.mercilesskiller_box.checked;
  feat_moongleamoath=document.form1.moongleamoath_box.checked;
  feat_shockingflame=document.form1.shockingflame_box.checked;
  feat_stoneguard=document.form1.stoneguard_box.checked;
  feat_stormrider=document.form1.stormrider_box.checked;
  feat_venemousheritage=document.form1.venemousheritage_box.checked;
  feat_warwizardry=document.form1.warwizardry_box.checked;
  feat_agileopportunist=document.form1.agileopportunist_box.checked;
  feat_paragondefenses=document.form1.paragondefenses_box.checked;
  feat_quickrecovery=document.form1.quickrecoveryfeat_box.checked;
  feat_reservemaneuver=document.form1.reservemaneuver_box.checked;
  feat_doublemanifestation=document.form1.doublemanifestation_box.checked;
  feat_totalaegis=document.form1.totalaegis_box.checked;



  feat_aggressiveassault=document.form1.aggressiveassault_box.checked;
  feat_anklecutter=document.form1.anklecutter_box.checked;
  feat_beastguidance=document.form1.beastguidance_box.checked;
  feat_beastprotector=document.form1.beastprotector_box.checked;
  feat_beasttrainingathletics=document.form1.beasttrainingathletics_box.checked;
  feat_beasttrainingendurance=document.form1.beasttrainingendurance_box.checked;
  feat_beasttrainingperception=document.form1.beasttrainingperception_box.checked;
  feat_beasttrainingstealth=document.form1.beasttrainingstealth_box.checked;
  feat_bloodiedinvigoration=document.form1.bloodiedinvigoration_box.checked;
  feat_bolsteringinspiration=document.form1.bolsteringinspiration_box.checked;
  feat_bracingbreath=document.form1.bracingbreath_box.checked;
  feat_bravuraspirit=document.form1.bravuraspirit_box.checked;
  feat_breathresistantbeast=document.form1.breathresistantbeast_box.checked;
  feat_brutalaccuracy=document.form1.brutalaccuracy_box.checked;
  feat_brutalteamwork=document.form1.brutalteamwork_box.checked;
  feat_brutalwound=document.form1.brutalwound_box.checked;
  feat_camouflage=document.form1.camouflage_box.checked;
  feat_commandthedarkness=document.form1.commandthedarkness_box.checked;
  feat_coordinatedopportunity=document.form1.coordinatedopportunity_box.checked;
  feat_cunningambusher=document.form1.cunningambusher_box.checked;
  feat_darkfiretargeting=document.form1.darkfiretargeting_box.checked;
  feat_deepgash=document.form1.deepgash_box.checked;
  feat_defensiveresilience=document.form1.defensiveresilience_box.checked;
  feat_devotedchallenge=document.form1.devotedchallenge_box.checked;
  feat_dirtyfighting=document.form1.dirtyfighting_box.checked;
  feat_draggingflail=document.form1.draggingflail_box.checked;
  feat_drowbeastmastery=document.form1.drowbeastmastery_box.checked;
  feat_dwarfstoneblood=document.form1.dwarfstoneblood_box.checked;
  feat_dwarftrapsmith=document.form1.dwarftrapsmith_box.checked;
  feat_elvenbeastmastery=document.form1.elvenbeastmastery_box.checked;
  feat_experttracker=document.form1.experttracker_box.checked;
  feat_feyblades=document.form1.feyblades_box.checked;
  feat_feycommand=document.form1.feycommand_box.checked;
  feat_feyborncompanion=document.form1.feyborncompanion_box.checked;
  feat_fiendishcompanion=document.form1.fiendishcompanion_box.checked;
  feat_groupassault=document.form1.groupassault_box.checked;
  feat_groupquarry=document.form1.groupquarry_box.checked;
  feat_grouprattling=document.form1.grouprattling_box.checked;
  feat_halflingstalwart=document.form1.halflingstalwart_box.checked;
  feat_humanbeastmastery=document.form1.humanbeastmastery_box.checked;
  feat_hunterofwindandwave=document.form1.hunterofwindandwave_box.checked;
  feat_huntersaim=document.form1.huntersaim_box.checked;
  feat_improvedbravura=document.form1.improvedbravura_box.checked;
  feat_improvedinspiration=document.form1.improvedinspiration_box.checked;
  feat_improvedinspiringword=document.form1.improvedinspiringword_box.checked;
  feat_improvedresources=document.form1.improvedresources_box.checked;
  feat_improvedtactics=document.form1.improvedtactics_box.checked;
  feat_improvedvigor=document.form1.improvedvigor_box.checked;
  feat_inspireddefense=document.form1.inspireddefense_box.checked;
  feat_inspiredtactics=document.form1.inspiredtactics_box.checked;
  feat_intothefraymp=document.form1.intothefraymp_box.checked;
  feat_keeperofstorm=document.form1.keeperofstorm_box.checked;
  feat_leadingfire=document.form1.leadingfire_box.checked;
  feat_lendmight=document.form1.lendmight_box.checked;
  feat_lingeringwrath=document.form1.lingeringwrath_box.checked;
  feat_longswordfinesse=document.form1.longswordfinesse_box.checked;
  feat_luckyskirmisher=document.form1.luckyskirmisher_box.checked;
  feat_martialalacrity=document.form1.martialalacrity_box.checked;
  feat_martialfreedom=document.form1.martialfreedom_box.checked;
  feat_masterofrumblingearth=document.form1.masterofrumblingearth_box.checked;
  feat_nimblecompanion=document.form1.nimblecompanion_box.checked;
  feat_offensiveresilience=document.form1.offensiveresilience_box.checked;
  feat_opportunisticaccuracy=document.form1.opportunisticaccuracy_box.checked;
  feat_polearmmomentum=document.form1.polearmmomentum_box.checked;
  feat_predatoryaction=document.form1.predatoryaction_box.checked;
  feat_primestrike=document.form1.primestrike_box.checked;
  feat_rashsneakattack=document.form1.rashsneakattack_box.checked;
  feat_rattlingwrath=document.form1.rattlingwrath_box.checked;
  feat_reapingblade=document.form1.reapingblade_box.checked;
  feat_recklessscramble=document.form1.recklessscramble_box.checked;
  feat_ruthlessinjury=document.form1.ruthlessinjury_box.checked;
  feat_savinginspiration=document.form1.savinginspiration_box.checked;
  feat_secureencampment=document.form1.secureencampment_box.checked;
  feat_shielddefense=document.form1.shielddefense_box.checked;
  feat_sidewaysdefense=document.form1.sidewaysdefense_box.checked;
  feat_slayingaction=document.form1.slayingaction_box.checked;
  feat_sneakyaccuracy=document.form1.sneakyaccuracy_box.checked;
  feat_speedyresponse=document.form1.speedyresponse_box.checked;
  feat_streetthug=document.form1.streetthug_box.checked;
  feat_surprisingcharge=document.form1.surprisingcharge_box.checked;
  feat_tacticalinspiration=document.form1.tacticalinspiration_box.checked;
  feat_takemeasure=document.form1.takemeasure_box.checked;
  feat_thunderhammer=document.form1.thunderhammer_box.checked;
  feat_thundertuskcompanion=document.form1.thundertuskcompanion_box.checked;
  feat_trapsense=document.form1.trapsense_box.checked;
  feat_tunnelstalker=document.form1.tunnelstalker_box.checked;
  feat_twofistedshooter=document.form1.twofistedshooter_box.checked;
  feat_unbalancingwrath=document.form1.unbalancingwrath_box.checked;
  feat_vengefulbeast=document.form1.vengefulbeast_box.checked;
  feat_victorsconfidence=document.form1.victorsconfidence_box.checked;
  feat_wielderofpiercingflame=document.form1.wielderofpiercingflame_box.checked;


  feat_advantageofcunning=document.form1.advantageofcunning_box.checked;
  feat_angerunleashed=document.form1.angerunleashed_box.checked;
  feat_arcanespellfury=document.form1.arcanespellfury_box.checked;
  feat_auspiciouslineage=document.form1.auspiciouslineage_box.checked;
  feat_bardicknowledge=document.form1.bardicknowledge_box.checked;
  feat_blurringclaws=document.form1.blurringclaws_box.checked;
  feat_combatmedic=document.form1.combatmedic_box.checked;
  feat_coordinatedexplosion=document.form1.coordinatedexplosion_box.checked;
  feat_crushingearthstrength=document.form1.crushingearthstrength_box.checked;
  feat_deadlyrage=document.form1.deadlyrage_box.checked;
  feat_disciplinedwildsoul=document.form1.disciplinedwildsoul_box.checked;
  feat_distantadvantage=document.form1.distantadvantage_box.checked;
  feat_echoesofthunder=document.form1.echoesofthunder_box.checked;
  feat_enragedboarform=document.form1.enragedboarform_box.checked;
  feat_expertritualist=document.form1.expertritualist_box.checked;
  feat_ferocioustigerform=document.form1.ferocioustigerform_box.checked;
  feat_feytrickster=document.form1.feytrickster_box.checked;
  feat_goliathgreatweaponprowess=document.form1.goliathgreatweaponprowess_box.checked;
  feat_gorebrutecharge=document.form1.gorebrutecharge_box.checked;
  feat_groupstealth=document.form1.groupstealth_box.checked;
  feat_guaranteedretribution=document.form1.guaranteedretribution_box.checked;
  feat_implementexpertiseholysymbol=document.form1.implementexpertiseholysymbol_box.checked;
  feat_implementexpertiseorb=document.form1.implementexpertiseorb_box.checked;
  feat_implementexpertiserod=document.form1.implementexpertiserod_box.checked;
  feat_implementexpertisestaff=document.form1.implementexpertisestaff_box.checked;
  feat_implementexpertisewand=document.form1.implementexpertisewand_box.checked;
  feat_implementexpertisedagger=document.form1.implementexpertisedagger_box.checked;
  feat_implementexpertisemusic=document.form1.implementexpertisemusic_box.checked;
  feat_implementexpertisetome=document.form1.implementexpertisetome_box.checked;
  feat_implementexpertisetotem=document.form1.implementexpertisetotem_box.checked;
  feat_improvedarmoroffaith=document.form1.improvedarmoroffaith_box.checked;
  feat_improvedbullrush=document.form1.improvedbullrush_box.checked;
  feat_improveddragonsoul=document.form1.improveddragonsoul_box.checked;
  feat_improvedgrab=document.form1.improvedgrab_box.checked;
  feat_improvedmajesticword=document.form1.improvedmajesticword_box.checked;
  feat_improvedragebloodvigor=document.form1.improvedragebloodvigor_box.checked;
  feat_improvedroaroftriumph=document.form1.improvedroaroftriumph_box.checked;
  feat_insightfulpreservation=document.form1.insightfulpreservation_box.checked;
  feat_invigoratingpursuit=document.form1.invigoratingpursuit_box.checked;
  feat_invokerdefense=document.form1.invokerdefense_box.checked;
  feat_markingsoftheblessed=document.form1.markingsoftheblessed_box.checked;
  feat_markingsofthevictor=document.form1.markingsofthevictor_box.checked;
  feat_meleetraining=document.form1.meleetraining_box.checked;
  feat_oncomingstorm=document.form1.oncomingstorm_box.checked;
  feat_potentrebirth=document.form1.potentrebirth_box.checked;
  feat_primalfury=document.form1.primalfury_box.checked;
  feat_primalinstinct=document.form1.primalinstinct_box.checked;
  feat_protectorspiritadept=document.form1.protectorspiritadept_box.checked;
  feat_radiantpower=document.form1.radiantpower_box.checked;
  feat_resonatingcovenant=document.form1.resonatingcovenant_box.checked;
  feat_restfulhealing=document.form1.restfulhealing_box.checked;
  feat_revitalizingfontoflife=document.form1.revitalizingfontoflife_box.checked;
  feat_risingfury=document.form1.risingfury_box.checked;
  feat_savageassault=document.form1.savageassault_box.checked;
  feat_scouringwrath=document.form1.scouringwrath_box.checked;
  feat_shadowskulk=document.form1.shadowskulk_box.checked;
  feat_sharedhealingspirit=document.form1.sharedhealingspirit_box.checked;
  feat_sorcerousbladechanneling=document.form1.sorcerousbladechanneling_box.checked;
  feat_speedloader=document.form1.speedloader_box.checked;
  feat_spritspeaker=document.form1.spritspeaker_box.checked;
  feat_stalkerspiritadept=document.form1.stalkerspiritadept_box.checked;
  feat_strengthofvalor=document.form1.strengthofvalor_box.checked;
  feat_suddenroots=document.form1.suddenroots_box.checked;
  feat_surgingflame=document.form1.surgingflame_box.checked;
  feat_thirstforbattle=document.form1.thirstforbattle_box.checked;
  feat_timelyrespite=document.form1.timelyrespite_box.checked;
  feat_twoweaponthreat=document.form1.twoweaponthreat_box.checked;
  feat_twoweaponopening=document.form1.twoweaponopening_box.checked;
  feat_versatilemaster=document.form1.versatilemaster_box.checked;
  feat_weaponexpertiseaxe=document.form1.weaponexpertiseaxe_box.checked;
  feat_weaponexpertisebow=document.form1.weaponexpertisebow_box.checked;
  feat_weaponexpertisecrossbow=document.form1.weaponexpertisecrossbow_box.checked;
  feat_weaponexpertiseflail=document.form1.weaponexpertiseflail_box.checked;
  feat_weaponexpertisehammer=document.form1.weaponexpertisehammer_box.checked;
  feat_weaponexpertiseheavyblade=document.form1.weaponexpertiseheavyblade_box.checked;
  feat_weaponexpertiselightblade=document.form1.weaponexpertiselightblade_box.checked;
  feat_weaponexpertisemace=document.form1.weaponexpertisemace_box.checked;
  feat_weaponexpertisepick=document.form1.weaponexpertisepick_box.checked;
  feat_weaponexpertisepolearm=document.form1.weaponexpertisepolearm_box.checked;
  feat_weaponexpertisesling=document.form1.weaponexpertisesling_box.checked;
  feat_weaponexpertisespear=document.form1.weaponexpertisespear_box.checked;
  feat_weaponexpertisestaff=document.form1.weaponexpertisestaff_box.checked;
  feat_weaponexpertiseunarmed=document.form1.weaponexpertiseunarmed_box.checked;
  feat_wildbloodcunning=document.form1.wildbloodcunning_box.checked;
  feat_wildsenses=document.form1.wildsenses_box.checked;
  feat_arcaneimplementproficiencydagger=document.form1.arcaneimplementproficiencydagger_box.checked;
  feat_arcaneimplementproficiencymusic=document.form1.arcaneimplementproficiencymusic_box.checked;
  feat_arcaneimplementproficiencyorb=document.form1.arcaneimplementproficiencyorb_box.checked;
  feat_arcaneimplementproficiencyrod=document.form1.arcaneimplementproficiencyrod_box.checked;
  feat_arcaneimplementproficiencystaff=document.form1.arcaneimplementproficiencystaff_box.checked;
  feat_arcaneimplementproficiencytome=document.form1.arcaneimplementproficiencytome_box.checked;
  feat_arcaneimplementproficiencywand=document.form1.arcaneimplementproficiencywand_box.checked;
  feat_dualimplementspellcaster=document.form1.dualimplementspellcaster_box.checked;




  feat_agiletempest=document.form1.agiletempest_box.checked;
  feat_avandrasgift=document.form1.avandrasgift_box.checked;
  feat_avengingspirit=document.form1.avengingspirit_box.checked;
  feat_bleedingbackstab=document.form1.bleedingbackstab_box.checked;
  feat_bleedingprecision=document.form1.bleedingprecision_box.checked;
  feat_bloodyinspiration=document.form1.bloodyinspiration_box.checked;
  feat_bloodytenacity=document.form1.bloodytenacity_box.checked;
  feat_chainmailagility=document.form1.chainmailagility_box.checked;
  feat_combatopening=document.form1.combatopening_box.checked;
  feat_culltheweak=document.form1.culltheweak_box.checked;
  feat_darkhunter=document.form1.darkhunter_box.checked;
  feat_darkjumper=document.form1.darkjumper_box.checked;
  feat_dauntingchallenge=document.form1.dauntingchallenge_box.checked;
  feat_defensivesurge=document.form1.defensivesurge_box.checked;
  feat_distractingcompanion=document.form1.distractingcompanion_box.checked;
  feat_draconicarrogance=document.form1.draconicarrogance_box.checked;
  feat_dragonbreathwarrior=document.form1.dragonbreathwarrior_box.checked;
  feat_elementalcompanions=document.form1.elementalcompanions_box.checked;
  feat_elementalguardian=document.form1.elementalguardian_box.checked;
  feat_enduringwallop=document.form1.enduringwallop_box.checked;
  feat_evasivefootwork=document.form1.evasivefootwork_box.checked;
  feat_feycharge=document.form1.feycharge_box.checked;
  feat_feygambit=document.form1.feygambit_box.checked;
  feat_feytactics=document.form1.feytactics_box.checked;
  feat_fiendishdefender=document.form1.fiendishdefender_box.checked;
  feat_grit=document.form1.grit_box.checked;
  feat_groupflanking=document.form1.groupflanking_box.checked;
  feat_halflingbeastmastery=document.form1.halflingbeastmastery_box.checked;
  feat_huntersadvantage=document.form1.huntersadvantage_box.checked;
  feat_huntersresurgence=document.form1.huntersresurgence_box.checked;
  feat_impetuouscharger=document.form1.impetuouscharger_box.checked;
  feat_infernalsneakattack=document.form1.infernalsneakattack_box.checked;
  feat_markedscourge=document.form1.markedscourge_box.checked;
  feat_mightybattlerage=document.form1.mightybattlerage_box.checked;
  feat_opportunisticarcher=document.form1.opportunisticarcher_box.checked;
  feat_opportunisticsneakattack=document.form1.opportunisticsneakattack_box.checked;
  feat_phalanxwarrior=document.form1.phalanxwarrior_box.checked;
  feat_preternaturalsenses=document.form1.preternaturalsenses_box.checked;
  feat_primequarry=document.form1.primequarry_box.checked;
  feat_primeslayer=document.form1.primeslayer_box.checked;
  feat_protectivebeast=document.form1.protectivebeast_box.checked;
  feat_recklessattacker=document.form1.recklessattacker_box.checked;
  feat_reliableresources=document.form1.reliableresources_box.checked;
  feat_rogueweaponmastery=document.form1.rogueweaponmastery_box.checked;
  feat_roundaboutcharge=document.form1.roundaboutcharge_box.checked;
  feat_steadfasttacatics=document.form1.steadfasttacatics_box.checked;
  feat_stonefootreprisal=document.form1.stonefootreprisal_box.checked;
  feat_sturdybeast=document.form1.sturdybeast_box.checked;
  feat_vitalinspiration=document.form1.vitalinspiration_box.checked;
  feat_warlordsformation=document.form1.warlordsformation_box.checked;
  feat_wrathfulhunter=document.form1.wrathfulhunter_box.checked;
  feat_actiongrant=document.form1.actiongrant_box.checked;
  feat_aggressiveleadership=document.form1.aggressiveleadership_box.checked;
  feat_artfulprovocation=document.form1.artfulprovocation_box.checked;
  feat_boldspirit=document.form1.boldspirit_box.checked;
  feat_brutaladvantage=document.form1.brutaladvantage_box.checked;
  feat_calltoglory=document.form1.calltoglory_box.checked;
  feat_channeledbattlerage=document.form1.channeledbattlerage_box.checked;
  feat_correctingaim=document.form1.correctingaim_box.checked;
  feat_darkfirewarrior=document.form1.darkfirewarrior_box.checked;
  feat_dragonwarrior=document.form1.dragonwarrior_box.checked;
  feat_elementalwarrior=document.form1.elementalwarrior_box.checked;
  feat_epicrecovery=document.form1.epicrecovery_box.checked;
  feat_feywildwarrior=document.form1.feywildwarrior_box.checked;
  feat_fortuneswarrior=document.form1.fortuneswarrior_box.checked;
  feat_hawkeyewarrior=document.form1.hawkeyewarrior_box.checked;
  feat_improvedprimeshot=document.form1.improvedprimeshot_box.checked;
  feat_infernalwarrior=document.form1.infernalwarrior_box.checked;
  feat_invigoratingexploit=document.form1.invigoratingexploit_box.checked;
  feat_knockbackswing=document.form1.knockbackswing_box.checked;
  feat_lastingadvantage=document.form1.lastingadvantage_box.checked;
  feat_martialmastery=document.form1.martialmastery_box.checked;
  feat_martialresolve=document.form1.martialresolve_box.checked;
  feat_mobilewarrior=document.form1.mobilewarrior_box.checked;
  feat_onewithshadow=document.form1.onewithshadow_box.checked;
  feat_peerlesshunter=document.form1.peerlesshunter_box.checked;
  feat_practicedreliability=document.form1.practicedreliability_box.checked;
  feat_primehunter=document.form1.primehunter_box.checked;
  feat_protectiveleadership=document.form1.protectiveleadership_box.checked;
  feat_quickbeastcommand=document.form1.quickbeastcommand_box.checked;
  feat_rattlingexploit=document.form1.rattlingexploit_box.checked;
  feat_reachingwhirlwind=document.form1.reachingwhirlwind_box.checked;
  feat_rendingtempest=document.form1.rendingtempest_box.checked;
  feat_ruthlessterror=document.form1.ruthlessterror_box.checked;
  feat_staggeringshot=document.form1.staggeringshot_box.checked;
  feat_stoneheartwarrior=document.form1.stoneheartwarrior_box.checked;
  feat_supremeinspiration=document.form1.supremeinspiration_box.checked;
  feat_surpriseaction=document.form1.surpriseaction_box.checked;
  feat_tacticalcunning=document.form1.tacticalcunning_box.checked;
  feat_tacticalinsight=document.form1.tacticalinsight_box.checked;
  feat_timelyrevival=document.form1.timelyrevival_box.checked;
  feat_unstoppablecharge=document.form1.unstoppablecharge_box.checked;
  feat_whirlwindsneakattack=document.form1.whirlwindsneakattack_box.checked;
  feat_bowmastery=document.form1.bowmastery_box.checked;
  feat_epicfortitude=document.form1.epicfortitude_box.checked;
  feat_epicreflexes=document.form1.epicreflexes_box.checked;
  feat_epicwill=document.form1.epicwill_box.checked;
  feat_indomitablewill=document.form1.indomitablewill_box.checked;
  feat_opportunereflexes=document.form1.opportunereflexes_box.checked;
  feat_robustdefenses=document.form1.robustdefenses_box.checked;
  feat_unyieldingfortitude=document.form1.unyieldingfortitude_box.checked;
  feat_battleacumen=document.form1.battleacumen_box.checked;
  feat_battleinstructor=document.form1.battleinstructor_box.checked;
  feat_courageousshooter=document.form1.courageousshooter_box.checked;
  feat_firstin=document.form1.firstin_box.checked;
  feat_arcanefamiliar=document.form1.arcanefamiliar_box.checked;
  feat_alertfamiliar=document.form1.alertfamiliar_box.checked;
  feat_aggressivefamiliar=document.form1.aggressivefamiliar_box.checked;
  feat_bondedfamiliar=document.form1.bondedfamiliar_box.checked;
  feat_shieldingfamiliar=document.form1.shieldingfamiliar_box.checked;
  feat_spellseerfamiliar=document.form1.spellseerfamiliar_box.checked;
  feat_quickfamiliar=document.form1.quickfamiliar_box.checked;
  feat_sharedspeed=document.form1.sharedspeed_box.checked;


  feat_other01=document.form1.otherfeat01_box.checked;
  feat_other02=document.form1.otherfeat02_box.checked; 
  feat_other03=document.form1.otherfeat03_box.checked; 
  feat_other04=document.form1.otherfeat04_box.checked; 
  feat_other05=document.form1.otherfeat05_box.checked; 
  feat_other06=document.form1.otherfeat06_box.checked; 
  feat_other07=document.form1.otherfeat07_box.checked; 
  feat_shieldproficiencyheavy=document.form1.shieldproficiencyheavy_box.checked; 
  feat_shieldproficiencylight=document.form1.shieldproficiencylight_box.checked; 
  feat_shieldpush=document.form1.shieldpush_box.checked; 
  feat_skillfocusacrobatics=document.form1.skillfocusacrobatics_box.checked; 
  feat_skillfocusarcana=document.form1.skillfocusarcana_box.checked; 
  feat_skillfocusathletics=document.form1.skillfocusathletics_box.checked; 
  feat_skillfocusbluff=document.form1.skillfocusbluff_box.checked; 
  feat_skillfocusdiplomacy=document.form1.skillfocusdiplomacy_box.checked; 
  feat_skillfocusdungeoneering=document.form1.skillfocusdungeoneering_box.checked; 
  feat_skillfocusendurance=document.form1.skillfocusendurance_box.checked; 
  feat_skillfocusheal=document.form1.skillfocusheal_box.checked; 
  feat_skillfocushistory=document.form1.skillfocushistory_box.checked; 
  feat_skillfocusinsight=document.form1.skillfocusinsight_box.checked; 
  feat_skillfocusintimidate=document.form1.skillfocusintimidate_box.checked; 
  feat_skillfocusnature=document.form1.skillfocusnature_box.checked; 
  feat_skillfocusperception=document.form1.skillfocusperception_box.checked; 
  feat_skillfocusreligion=document.form1.skillfocusreligion_box.checked; 
  feat_skillfocusstealth=document.form1.skillfocusstealth_box.checked; 
  feat_skillfocusstreetwise=document.form1.skillfocusstreetwise_box.checked; 
  feat_skillfocusthievery=document.form1.skillfocusthievery_box.checked; 
  feat_skilltrainingacrobatics=document.form1.skilltrainingacrobatics_box.checked; 
  feat_skilltrainingarcana=document.form1.skilltrainingarcana_box.checked; 
  feat_skilltrainingathletics=document.form1.skilltrainingathletics_box.checked; 
  feat_skilltrainingbluff=document.form1.skilltrainingbluff_box.checked; 
  feat_skilltrainingdiplomacy=document.form1.skilltrainingdiplomacy_box.checked; 
  feat_skilltrainingdungeoneering=document.form1.skilltrainingdungeoneering_box.checked; 
  feat_skilltrainingendurance=document.form1.skilltrainingendurance_box.checked; 
  feat_skilltrainingheal=document.form1.skilltrainingheal_box.checked; 
  feat_skilltraininghistory=document.form1.skilltraininghistory_box.checked; 
  feat_skilltraininginsight=document.form1.skilltraininginsight_box.checked; 
  feat_skilltrainingintimidate=document.form1.skilltrainingintimidate_box.checked; 
  feat_skilltrainingnature=document.form1.skilltrainingnature_box.checked; 
  feat_skilltrainingperception=document.form1.skilltrainingperception_box.checked; 
  feat_skilltrainingreligion=document.form1.skilltrainingreligion_box.checked; 
  feat_skilltrainingstealth=document.form1.skilltrainingstealth_box.checked; 
  feat_skilltrainingstreetwise=document.form1.skilltrainingstreetwise_box.checked; 
  feat_skilltrainingthievery=document.form1.skilltrainingthievery_box.checked; 
  feat_sureclimber=document.form1.sureclimber_box.checked; 
  feat_surpriseknockdown=document.form1.surpriseknockdown_box.checked; 
  feat_tacticalassault=document.form1.tacticalassault_box.checked; 
  feat_toughness=document.form1.toughness_box.checked; 
  feat_twoweapondefense=document.form1.twoweapondefense_box.checked; 
  feat_twoweaponfighting=document.form1.twoweaponfighting_box.checked; 
  feat_weaponfocusaxe=document.form1.weaponfocusaxe_box.checked; 
  feat_weaponfocusbow=document.form1.weaponfocusbow_box.checked; 
  feat_weaponfocuscrossbow=document.form1.weaponfocuscrossbow_box.checked; 
  feat_weaponfocusflail=document.form1.weaponfocusflail_box.checked; 
  feat_weaponfocushammer=document.form1.weaponfocushammer_box.checked; 
  feat_weaponfocusheavyblade=document.form1.weaponfocusheavyblade_box.checked; 
  feat_weaponfocuslightblade=document.form1.weaponfocuslightblade_box.checked; 
  feat_weaponfocusmace=document.form1.weaponfocusmace_box.checked; 
  feat_weaponfocuspick=document.form1.weaponfocuspick_box.checked; 
  feat_weaponfocuspolearm=document.form1.weaponfocuspolearm_box.checked; 
  feat_weaponfocussling=document.form1.weaponfocussling_box.checked; 
  feat_weaponfocusspear=document.form1.weaponfocusspear_box.checked; 
  feat_weaponfocusstaff=document.form1.weaponfocusstaff_box.checked; 
  feat_weaponfocusunarmed=document.form1.weaponfocusunarmed_box.checked; 
  feat_weaponproficiencyclub=document.form1.weaponproficiencyclub_box.checked; 
  feat_weaponproficiencydagger=document.form1.weaponproficiencydagger_box.checked; 
  feat_weaponproficiencyjavelin=document.form1.weaponproficiencyjavelin_box.checked; 
  feat_weaponproficiencymace=document.form1.weaponproficiencymace_box.checked; 
  feat_weaponproficiencysickle=document.form1.weaponproficiencysickle_box.checked; 
  feat_weaponproficiencyothersimplemeleeweapons=document.form1.weaponproficiencyothersimplemeleeweapons_box.checked; 
  feat_weaponproficiencyothermilitarymeleeweapons=document.form1.weaponproficiencyothermilitarymeleeweapons_box.checked; 
  feat_weaponproficiencyothersuperiormeleeweapons=document.form1.weaponproficiencyothersuperiormeleeweapons_box.checked; 
  feat_weaponproficiencyothersimplerangedweapons=document.form1.weaponproficiencyothersimplerangedweapons_box.checked; 
  feat_weaponproficiencyothersuperiorrangedweapons=document.form1.weaponproficiencyothersuperiorrangedweapons_box.checked; 
  feat_weaponproficiencyspear=document.form1.weaponproficiencyspear_box.checked; 
  feat_weaponproficiencygreatclub=document.form1.weaponproficiencygreatclub_box.checked; 
  feat_weaponproficiencymorningstar=document.form1.weaponproficiencymorningstar_box.checked; 
  feat_weaponproficiencyquarterstaff=document.form1.weaponproficiencyquarterstaff_box.checked; 
  feat_weaponproficiencyscythe=document.form1.weaponproficiencyscythe_box.checked; 
  feat_weaponproficiencybattleaxe=document.form1.weaponproficiencybattleaxe_box.checked; 
  feat_weaponproficiencyflail=document.form1.weaponproficiencyflail_box.checked; 
  feat_weaponproficiencyhandaxe=document.form1.weaponproficiencyhandaxe_box.checked; 
  feat_weaponproficiencylongsword=document.form1.weaponproficiencylongsword_box.checked; 
  feat_weaponproficiencyscimitar=document.form1.weaponproficiencyscimitar_box.checked; 
  feat_weaponproficiencyshortsword=document.form1.weaponproficiencyshortsword_box.checked; 
  feat_weaponproficiencythrowinghammer=document.form1.weaponproficiencythrowinghammer_box.checked; 
  feat_weaponproficiencywarhammer=document.form1.weaponproficiencywarhammer_box.checked; 
  feat_weaponproficiencywarpick=document.form1.weaponproficiencywarpick_box.checked; 
  feat_weaponproficiencyfalchion=document.form1.weaponproficiencyfalchion_box.checked; 
  feat_weaponproficiencyglaive=document.form1.weaponproficiencyglaive_box.checked; 
  feat_weaponproficiencygreataxe=document.form1.weaponproficiencygreataxe_box.checked; 
  feat_weaponproficiencygreatsword=document.form1.weaponproficiencygreatsword_box.checked; 
  feat_weaponproficiencyhalberd=document.form1.weaponproficiencyhalberd_box.checked; 
  feat_weaponproficiencyheavyflail=document.form1.weaponproficiencyheavyflail_box.checked; 
  feat_weaponproficiencylongspear=document.form1.weaponproficiencylongspear_box.checked; 
  feat_weaponproficiencymaul=document.form1.weaponproficiencymaul_box.checked; 
  feat_weaponproficiencybastardsword=document.form1.weaponproficiencybastardsword_box.checked; 
  feat_weaponproficiencykatar=document.form1.weaponproficiencykatar_box.checked; 
  feat_weaponproficiencyrapier=document.form1.weaponproficiencyrapier_box.checked; 
  feat_weaponproficiencyspikedchain=document.form1.weaponproficiencyspikedchain_box.checked; 
  feat_weaponproficiencyhandcrossbow=document.form1.weaponproficiencyhandcrossbow_box.checked; 
  feat_weaponproficiencysling=document.form1.weaponproficiencysling_box.checked; 
  feat_weaponproficiencycrossbow=document.form1.weaponproficiencycrossbow_box.checked; 
  feat_weaponproficiencylongbow=document.form1.weaponproficiencylongbow_box.checked; 
  feat_weaponproficiencyshortbow=document.form1.weaponproficiencyshortbow_box.checked; 
  feat_weaponproficiencyshuriken=document.form1.weaponproficiencyshuriken_box.checked; 
  feat_wintertouched=document.form1.wintertouched_box.checked; 
  feat_actionrecovery=document.form1.actionrecovery_box.checked; 
  feat_agileathlete=document.form1.agileathlete_box.checked; 
  feat_arcanereach=document.form1.arcanereach_box.checked; 
  feat_armorspecializationchainmail=document.form1.armorspecializationchainmail_box.checked; 
  feat_armorspecializationhide=document.form1.armorspecializationhide_box.checked; 
  feat_armorspecializationplate=document.form1.armorspecializationplate_box.checked; 
  feat_armorspecializationscale=document.form1.armorspecializationscale_box.checked; 
  feat_backtothewall=document.form1.backtothewall_box.checked; 
  feat_bloodthirst=document.form1.bloodthirst_box.checked; 
  feat_combatanticipation=document.form1.combatanticipation_box.checked; 
  feat_combatcommander=document.form1.combatcommander_box.checked; 
  feat_dangersense=document.form1.dangersense_box.checked; 
  feat_deadlyaxe=document.form1.deadlyaxe_box.checked; 
  feat_defensiveadvantage=document.form1.defensiveadvantage_box.checked; 
  feat_devastatingcritical=document.form1.devastatingcritical_box.checked; 
  feat_distantshot=document.form1.distantshot_box.checked; 
  feat_dwarvendurability=document.form1.dwarvendurability_box.checked; 
  feat_empowereddragonbreath=document.form1.empowereddragonbreath_box.checked; 
  feat_evasion=document.form1.evasion_box.checked; 
  feat_feywildprotection=document.form1.feywildprotection_box.checked; 
  feat_fieryrebuke=document.form1.fieryrebuke_box.checked; 
  feat_fleetfooted=document.form1.fleetfooted_box.checked; 
  feat_greatfortitude=document.form1.greatfortitude_box.checked; 
  feat_hammerrhythm=document.form1.hammerrhythm_box.checked; 
  feat_heavybladeopportunity=document.form1.heavybladeopportunity_box.checked; 
  feat_improvedsecondwind=document.form1.improvedsecondwind_box.checked; 
  feat_inescapableforce=document.form1.inescapableforce_box.checked; 
  feat_ironwill=document.form1.ironwill_box.checked; 
  feat_lastingfrost=document.form1.lastingfrost_box.checked; 
  feat_lightbladeprecision=document.form1.lightbladeprecision_box.checked; 
  feat_lightningarc=document.form1.lightningarc_box.checked; 
  feat_lightningreflexes=document.form1.lightningreflexes_box.checked; 
  feat_mettle=document.form1.mettle_box.checked; 
  feat_pointblankshot=document.form1.pointblankshot_box.checked; 
  feat_polearmgamble=document.form1.polearmgamble_box.checked; 
  feat_psychiclock=document.form1.psychiclock_box.checked; 
  feat_resoundingthunder=document.form1.resoundingthunder_box.checked; 
  feat_runningshot=document.form1.runningshot_box.checked; 
  feat_scimitardance=document.form1.scimitardance_box.checked; 
  feat_secondimplementorb=document.form1.secondimplementorb_box.checked; 
  feat_secondimplementstaff=document.form1.secondimplementstaff_box.checked; 
  feat_secondimplementwand=document.form1.secondimplementwand_box.checked; 
  feat_secretstride=document.form1.secretstride_box.checked; 
  feat_seizethemoment=document.form1.seizethemoment_box.checked; 
  feat_shieldspecialization=document.form1.shieldspecialization_box.checked; 
  feat_slyhunter=document.form1.slyhunter_box.checked; 
  feat_solidsound=document.form1.solidsound_box.checked; 
  feat_spearpush=document.form1.spearpush_box.checked; 
  feat_spellfocus=document.form1.spellfocus_box.checked; 
  feat_steadyshooter=document.form1.steadyshooter_box.checked; 
  feat_sweepingflail=document.form1.sweepingflail_box.checked; 
  feat_twofoldcurse=document.form1.twofoldcurse_box.checked; 
  feat_uncannydodge=document.form1.uncannydodge_box.checked; 
  feat_underfoot=document.form1.underfoot_box.checked; 
  feat_arcanemastery=document.form1.arcanemastery_box.checked; 
  feat_axemastery=document.form1.axemastery_box.checked; 
  feat_blindfight=document.form1.blindfight_box.checked; 
  feat_bludgeonmastery=document.form1.bludgeonmastery_box.checked; 
  feat_epicresurgence=document.form1.epicresurgence_box.checked; 
  feat_flailmastery=document.form1.flailmastery_box.checked; 
  feat_flankingmaneuver=document.form1.flankingmaneuver_box.checked; 
  feat_fontofradiance=document.form1.fontofradiance_box.checked; 
  feat_heavyblademastery=document.form1.heavyblademastery_box.checked; 
  feat_irresistableflame=document.form1.irresistableflame_box.checked; 
  feat_lightblademastery=document.form1.lightblademastery_box.checked; 
  feat_pickmastery=document.form1.pickmastery_box.checked; 
  feat_spearmastery=document.form1.spearmastery_box.checked; 
  feat_spellaccuracy=document.form1.spellaccuracy_box.checked; 
  feat_triumphantattack=document.form1.triumphantattack_box.checked; 
  feat_twoweaponflurry=document.form1.twoweaponflurry_box.checked; 
  feat_unfetteredstride=document.form1.unfetteredstride_box.checked;
  feat_multiclasspowerswapencounter=document.form1.multiclasspowerswapencounter_box.checked; 
  feat_multiclasspowerswaputility=document.form1.multiclasspowerswaputility_box.checked; 
  feat_multiclasspowerswapdaily=document.form1.multiclasspowerswapdaily_box.checked; 
 }

function remember_feats(){
// alert("entering remember_feats()"); 
  document.form1.actionsurge_box.checked=feat_actionsurge; 
  document.form1.agilehunter_box.checked=feat_agilehunter; 
  document.form1.alertness_box.checked=feat_alertness; 
  document.form1.armorofbahamut_box.checked=feat_armorofbahamut; 
  document.form1.armorproficiencychainmail_box.checked=feat_armorproficiencychainmail; 
  document.form1.armorproficiencyleather_box.checked=feat_armorproficiencyleather; 
  document.form1.armorproficiencyhide_box.checked=feat_armorproficiencyhide; 
  document.form1.armorproficiencyplate_box.checked=feat_armorproficiencyplate; 
  document.form1.armorproficiencyscale_box.checked=feat_armorproficiencyscale; 
  document.form1.astralfire_box.checked=feat_astralfire; 
  document.form1.avandrasrescue_box.checked=feat_avandrasrescue; 
  document.form1.backstabber_box.checked=feat_backstabber; 
  document.form1.bladeopportunist_box.checked=feat_bladeopportunist; 
  document.form1.burningblizzard_box.checked=feat_burningblizzard; 
  document.form1.combatreflexes_box.checked=feat_combatreflexes; 
  document.form1.corellonsgrace_box.checked=feat_corellonsgrace; 
  document.form1.darkfury_box.checked=feat_darkfury; 
  document.form1.defensivemobility_box.checked=feat_defensivemobility; 
  document.form1.distractingshield_box.checked=feat_distractingshield; 
  document.form1.dodgegiants_box.checked=feat_dodgegiants; 
  document.form1.dragonbornfrenzy_box.checked=feat_dragonbornfrenzy; 
  document.form1.dragonbornsenses_box.checked=feat_dragonbornsenses; 
  document.form1.durable_box.checked=feat_durable; 
  document.form1.dwarvenweapontraining_box.checked=feat_dwarvenweapontraining; 
  document.form1.eladrinsoldier_box.checked=feat_eladrinsoldier; 
  document.form1.elvenprecision_box.checked=feat_elvenprecision; 
  document.form1.enlargeddragonbreath_box.checked=feat_enlargeddragonbreath; 
  document.form1.escapeartist_box.checked=feat_escapeartist; 
  document.form1.expandedspellbook_box.checked=feat_expandedspellbook; 
  document.form1.farshot_box.checked=feat_farshot; 
  document.form1.farthrow_box.checked=feat_farthrow; 
  document.form1.fastrunner_box.checked=feat_fastrunner; 
  document.form1.ferociousrebuke_box.checked=feat_ferociousrebuke; 
  document.form1.groupinsight_box.checked=feat_groupinsight; 
  document.form1.halflingagility_box.checked=feat_halflingagility; 
  document.form1.harmonyoferathis_box.checked=feat_harmonyoferathis; 
  document.form1.healinghands_box.checked=feat_healinghands; 
  document.form1.hellfireblood_box.checked=feat_hellfireblood; 
  document.form1.humanperseverance_box.checked=feat_humanperseverance; 
  document.form1.improveddarkonesblessing_box.checked=feat_improveddarkonesblessing; 
  document.form1.improvedfateofthevoid_box.checked=feat_improvedfateofthevoid; 
  document.form1.improvedinitiative_box.checked=feat_improvedinitiative; 
  document.form1.improvedmistystep_box.checked=feat_improvedmistystep; 
  document.form1.inspiredrecovery_box.checked=feat_inspiredrecovery; 
  document.form1.iounspoise_box.checked=feat_iounspoise; 
  document.form1.jackofalltrades_box.checked=feat_jackofalltrades; 
  document.form1.kordsfavor_box.checked=feat_kordsfavor; 
  document.form1.lethalhunter_box.checked=feat_lethalhunter; 
  document.form1.lightstep_box.checked=feat_lightstep; 
  document.form1.linguist_list.selectedIndex=feat_linguist; 
  document.form1.longjumper_box.checked=feat_longjumper; 
  document.form1.longinthecrowd_box.checked=feat_longinthecrowd; 
  document.form1.melorastide_box.checked=feat_melorastide; 
  document.form1.moradinsresolve_box.checked=feat_moradinsresolve; 
  document.form1.mountedcombat_box.checked=feat_mountedcombat; 
  document.form1.nimbleblade_box.checked=feat_nimbleblade; 
  document.form1.pelorsradiance_box.checked=feat_pelorsradiance; 
  document.form1.potentchallenge_box.checked=feat_potentchallenge; 
  document.form1.powerattack_box.checked=feat_powerattack; 
  document.form1.powerfulcharge_box.checked=feat_powerfulcharge; 
  document.form1.precisehunter_box.checked=feat_precisehunter; 
  document.form1.presstheadvantage_box.checked=feat_presstheadvantage; 
  document.form1.quickdraw_box.checked=feat_quickdraw; 
  document.form1.ragingstorm_box.checked=feat_ragingstorm; 
  document.form1.ravenqueensblessing_box.checked=feat_ravenqueensblessing; 
  document.form1.ritualcaster_box.checked=feat_ritualcaster; 
  document.form1.sehaninesreversal_box.checked=feat_sehaninesreversal; 
  document.form1.angharradhsfavor_box.checked=feat_angharradhsfavor;
  document.form1.avoweddragonfoe_box.checked=feat_avoweddragonfoe;
  document.form1.berronarssalve_box.checked=feat_berronarssalve;
  document.form1.blessingofsilvanus_box.checked=feat_blessingofsilvanus;
  document.form1.brokenshackles_box.checked=feat_brokenshackles;
  document.form1.chaunteasblessing_box.checked=feat_chaunteasblessing;
  document.form1.clutchofdarkness_box.checked=feat_clutchofdarkness;
  document.form1.elementalassault_box.checked=feat_elementalassault;
  document.form1.escalatingassault_box.checked=feat_escalatingassault;
  document.form1.extramanifestationearthsoul_box.checked=feat_extramanifestationearthsoul;
  document.form1.extramanifestationfiresoul_box.checked=feat_extramanifestationfiresoul;
  document.form1.extramanifestationstormsoul_box.checked=feat_extramanifestationstormsoul;
  document.form1.extramanifestationwatersoul_box.checked=feat_extramanifestationwatersoul;
  document.form1.extramanifestationwindsoul_box.checked=feat_extramanifestationwindsoul;
  document.form1.eyesofselune_box.checked=feat_eyesofselune;
  document.form1.fleetnessofmielikki_box.checked=feat_fleetnessofmielikki;
  document.form1.ghostwiseheritage_box.checked=feat_ghostwiseheritage;
  document.form1.glittergoldsgambit_box.checked=feat_glittergoldsgambit;
  document.form1.golddwarfpride_box.checked=feat_golddwarfpride;
  document.form1.gondscraft_box.checked=feat_gondscraft;
  document.form1.ilmatersmartyrdom_box.checked=feat_ilmatersmartyrdom;
  document.form1.improvedswordbond_box.checked=feat_improvedswordbond;
  document.form1.intelligentblademaster_box.checked=feat_intelligentblademaster;
  document.form1.kelemvorsjudgment_box.checked=feat_kelemvorsjudgment;
  document.form1.manifestresistance_box.checked=feat_manifestresistance;
  document.form1.improvedrazorswarm_box.checked=feat_improvedrazorswarm;
  document.form1.moonelfresilience_box.checked=feat_moonelfresilience;
  document.form1.oghmasrecall_box.checked=feat_oghmasrecall;
  document.form1.powerofamaunator_box.checked=feat_powerofamaunator;
  document.form1.retributiveshield_box.checked=feat_retributiveshield;
  document.form1.righteousrageoftempus_box.checked=feat_righteousrageoftempus;
  document.form1.ruthlesshunter_box.checked=feat_ruthlesshunter;
  document.form1.scionofthegods_box.checked=feat_scionofthegods;
  document.form1.sheelaperyroylsgift_box.checked=feat_sheelaperyroylsgift;
  document.form1.shieldofshadows_box.checked=feat_shieldofshadows;
  document.form1.shieldthefallen_box.checked=feat_shieldthefallen;
  document.form1.stubbornsurvivor_box.checked=feat_stubbornsurvivor;
  document.form1.studentofswordmagic_box.checked=feat_studentofswordmagic;
  document.form1.sunelfgrace_box.checked=feat_sunelfgrace;
  document.form1.sunestouch_box.checked=feat_sunestouch;
  document.form1.tormsjustice_box.checked=feat_tormsjustice;
  document.form1.tymorascoin_box.checked=feat_tymorascoin;
  document.form1.versatileresistance_box.checked=feat_versatileresistance;
  document.form1.waukeenssilvertongue_box.checked=feat_waukeenssilvertongue;
  document.form1.alchemist_box.checked=feat_alchemist;
  document.form1.alchemistswap_box.checked=feat_alchemistswap;
  document.form1.wildelfluck_box.checked=feat_wildelfluck;
  document.form1.woodelfagility_box.checked=feat_woodelfagility;

  document.form1.demonwebspiral_box.checked=feat_demonwebspiral;
  document.form1.distantswordbond_box.checked=feat_distantswordbond;
  document.form1.doubleaegis_box.checked=feat_doubleaegis;
  document.form1.improveddarkspiralaura_box.checked=feat_improveddarkspiralaura;
  document.form1.masteroffireanddarkness_box.checked=feat_masteroffireanddarkness;
  document.form1.mercilesskiller_box.checked=feat_mercilesskiller;
  document.form1.moongleamoath_box.checked=feat_moongleamoath;
  document.form1.shockingflame_box.checked=feat_shockingflame;
  document.form1.stoneguard_box.checked=feat_stoneguard;
  document.form1.stormrider_box.checked=feat_stormrider;
  document.form1.venemousheritage_box.checked=feat_venemousheritage;
  document.form1.warwizardry_box.checked=feat_warwizardry;
  document.form1.agileopportunist_box.checked=feat_agileopportunist;
  document.form1.paragondefenses_box.checked=feat_paragondefenses;
  document.form1.quickrecoveryfeat_box.checked=feat_quickrecovery;
  document.form1.reservemaneuver_box.checked=feat_reservemaneuver;
  document.form1.doublemanifestation_box.checked=feat_doublemanifestation;
  document.form1.totalaegis_box.checked=feat_totalaegis;


  document.form1.aggressiveassault_box.checked=feat_aggressiveassault;
  document.form1.anklecutter_box.checked=feat_anklecutter;
  document.form1.beastguidance_box.checked=feat_beastguidance;
  document.form1.beastprotector_box.checked=feat_beastprotector;
  document.form1.beasttrainingathletics_box.checked=feat_beasttrainingathletics;
  document.form1.beasttrainingendurance_box.checked=feat_beasttrainingendurance;
  document.form1.beasttrainingperception_box.checked=feat_beasttrainingperception;
  document.form1.beasttrainingstealth_box.checked=feat_beasttrainingstealth;
  document.form1.bloodiedinvigoration_box.checked=feat_bloodiedinvigoration;
  document.form1.bolsteringinspiration_box.checked=feat_bolsteringinspiration;
  document.form1.bracingbreath_box.checked=feat_bracingbreath;
  document.form1.bravuraspirit_box.checked=feat_bravuraspirit;
  document.form1.breathresistantbeast_box.checked=feat_breathresistantbeast;
  document.form1.brutalaccuracy_box.checked=feat_brutalaccuracy;
  document.form1.brutalteamwork_box.checked=feat_brutalteamwork;
  document.form1.brutalwound_box.checked=feat_brutalwound;
  document.form1.camouflage_box.checked=feat_camouflage;
  document.form1.commandthedarkness_box.checked=feat_commandthedarkness;
  document.form1.coordinatedopportunity_box.checked=feat_coordinatedopportunity;
  document.form1.cunningambusher_box.checked=feat_cunningambusher;
  document.form1.darkfiretargeting_box.checked=feat_darkfiretargeting;
  document.form1.deepgash_box.checked=feat_deepgash;
  document.form1.defensiveresilience_box.checked=feat_defensiveresilience;
  document.form1.devotedchallenge_box.checked=feat_devotedchallenge;
  document.form1.dirtyfighting_box.checked=feat_dirtyfighting;
  document.form1.draggingflail_box.checked=feat_draggingflail;
  document.form1.drowbeastmastery_box.checked=feat_drowbeastmastery;
  document.form1.dwarfstoneblood_box.checked=feat_dwarfstoneblood;
  document.form1.dwarftrapsmith_box.checked=feat_dwarftrapsmith;
  document.form1.elvenbeastmastery_box.checked=feat_elvenbeastmastery;
  document.form1.experttracker_box.checked=feat_experttracker;
  document.form1.feyblades_box.checked=feat_feyblades;
  document.form1.feycommand_box.checked=feat_feycommand;
  document.form1.feyborncompanion_box.checked=feat_feyborncompanion;
  document.form1.fiendishcompanion_box.checked=feat_fiendishcompanion;
  document.form1.groupassault_box.checked=feat_groupassault;
  document.form1.groupquarry_box.checked=feat_groupquarry;
  document.form1.grouprattling_box.checked=feat_grouprattling;
  document.form1.halflingstalwart_box.checked=feat_halflingstalwart;
  document.form1.humanbeastmastery_box.checked=feat_humanbeastmastery;
  document.form1.hunterofwindandwave_box.checked=feat_hunterofwindandwave;
  document.form1.huntersaim_box.checked=feat_huntersaim;
  document.form1.improvedbravura_box.checked=feat_improvedbravura;
  document.form1.improvedinspiration_box.checked=feat_improvedinspiration;
  document.form1.improvedinspiringword_box.checked=feat_improvedinspiringword;
  document.form1.improvedresources_box.checked=feat_improvedresources;
  document.form1.improvedtactics_box.checked=feat_improvedtactics;
  document.form1.improvedvigor_box.checked=feat_improvedvigor;
  document.form1.inspireddefense_box.checked=feat_inspireddefense;
  document.form1.inspiredtactics_box.checked=feat_inspiredtactics;
  document.form1.intothefraymp_box.checked=feat_intothefraymp;
  document.form1.keeperofstorm_box.checked=feat_keeperofstorm;
  document.form1.leadingfire_box.checked=feat_leadingfire;
  document.form1.lendmight_box.checked=feat_lendmight;
  document.form1.lingeringwrath_box.checked=feat_lingeringwrath;
  document.form1.longswordfinesse_box.checked=feat_longswordfinesse;
  document.form1.luckyskirmisher_box.checked=feat_luckyskirmisher;
  document.form1.martialalacrity_box.checked=feat_martialalacrity;
  document.form1.martialfreedom_box.checked=feat_martialfreedom;
  document.form1.masterofrumblingearth_box.checked=feat_masterofrumblingearth;
  document.form1.nimblecompanion_box.checked=feat_nimblecompanion;
  document.form1.offensiveresilience_box.checked=feat_offensiveresilience;
  document.form1.opportunisticaccuracy_box.checked=feat_opportunisticaccuracy;
  document.form1.polearmmomentum_box.checked=feat_polearmmomentum;
  document.form1.predatoryaction_box.checked=feat_predatoryaction;
  document.form1.primestrike_box.checked=feat_primestrike;
  document.form1.rashsneakattack_box.checked=feat_rashsneakattack;
  document.form1.rattlingwrath_box.checked=feat_rattlingwrath;
  document.form1.reapingblade_box.checked=feat_reapingblade;
  document.form1.recklessscramble_box.checked=feat_recklessscramble;
  document.form1.ruthlessinjury_box.checked=feat_ruthlessinjury;
  document.form1.savinginspiration_box.checked=feat_savinginspiration;
  document.form1.secureencampment_box.checked=feat_secureencampment;
  document.form1.shielddefense_box.checked=feat_shielddefense;
  document.form1.sidewaysdefense_box.checked=feat_sidewaysdefense;
  document.form1.slayingaction_box.checked=feat_slayingaction;
  document.form1.sneakyaccuracy_box.checked=feat_sneakyaccuracy;
  document.form1.speedyresponse_box.checked=feat_speedyresponse;
  document.form1.streetthug_box.checked=feat_streetthug;
  document.form1.surprisingcharge_box.checked=feat_surprisingcharge;
  document.form1.tacticalinspiration_box.checked=feat_tacticalinspiration;
  document.form1.takemeasure_box.checked=feat_takemeasure;
  document.form1.thunderhammer_box.checked=feat_thunderhammer;
  document.form1.thundertuskcompanion_box.checked=feat_thundertuskcompanion;
  document.form1.trapsense_box.checked=feat_trapsense;
  document.form1.tunnelstalker_box.checked=feat_tunnelstalker;
  document.form1.twofistedshooter_box.checked=feat_twofistedshooter;
  document.form1.unbalancingwrath_box.checked=feat_unbalancingwrath;
  document.form1.vengefulbeast_box.checked=feat_vengefulbeast;
  document.form1.victorsconfidence_box.checked=feat_victorsconfidence;
  document.form1.wielderofpiercingflame_box.checked=feat_wielderofpiercingflame;



  document.form1.advantageofcunning_box.checked=feat_advantageofcunning;
  document.form1.angerunleashed_box.checked=feat_angerunleashed;
  document.form1.arcanespellfury_box.checked=feat_arcanespellfury;
  document.form1.auspiciouslineage_box.checked=feat_auspiciouslineage;
  document.form1.bardicknowledge_box.checked=feat_bardicknowledge;
  document.form1.blurringclaws_box.checked=feat_blurringclaws;
  document.form1.combatmedic_box.checked=feat_combatmedic;
  document.form1.coordinatedexplosion_box.checked=feat_coordinatedexplosion;
  document.form1.crushingearthstrength_box.checked=feat_crushingearthstrength;
  document.form1.deadlyrage_box.checked=feat_deadlyrage;
  document.form1.disciplinedwildsoul_box.checked=feat_disciplinedwildsoul;
  document.form1.distantadvantage_box.checked=feat_distantadvantage;
  document.form1.echoesofthunder_box.checked=feat_echoesofthunder;
  document.form1.enragedboarform_box.checked=feat_enragedboarform;
  document.form1.expertritualist_box.checked=feat_expertritualist;
  document.form1.ferocioustigerform_box.checked=feat_ferocioustigerform;
  document.form1.feytrickster_box.checked=feat_feytrickster;
  document.form1.goliathgreatweaponprowess_box.checked=feat_goliathgreatweaponprowess;
  document.form1.gorebrutecharge_box.checked=feat_gorebrutecharge;
  document.form1.groupstealth_box.checked=feat_groupstealth;
  document.form1.guaranteedretribution_box.checked=feat_guaranteedretribution;
  document.form1.implementexpertiseholysymbol_box.checked=feat_implementexpertiseholysymbol;
  document.form1.implementexpertiseorb_box.checked=feat_implementexpertiseorb;
  document.form1.implementexpertiserod_box.checked=feat_implementexpertiserod;
  document.form1.implementexpertisestaff_box.checked=feat_implementexpertisestaff;
  document.form1.implementexpertisewand_box.checked=feat_implementexpertisewand;
  document.form1.implementexpertisedagger_box.checked=feat_implementexpertisedagger;
  document.form1.implementexpertisemusic_box.checked=feat_implementexpertisemusic;
  document.form1.implementexpertisetome_box.checked=feat_implementexpertisetome;
  document.form1.implementexpertisetotem_box.checked=feat_implementexpertisetotem;
  document.form1.improvedarmoroffaith_box.checked=feat_improvedarmoroffaith;
  document.form1.improvedbullrush_box.checked=feat_improvedbullrush;
  document.form1.improveddragonsoul_box.checked=feat_improveddragonsoul;
  document.form1.improvedgrab_box.checked=feat_improvedgrab;
  document.form1.improvedmajesticword_box.checked=feat_improvedmajesticword;
  document.form1.improvedragebloodvigor_box.checked=feat_improvedragebloodvigor;
  document.form1.improvedroaroftriumph_box.checked=feat_improvedroaroftriumph;
  document.form1.insightfulpreservation_box.checked=feat_insightfulpreservation;
  document.form1.invigoratingpursuit_box.checked=feat_invigoratingpursuit;
  document.form1.invokerdefense_box.checked=feat_invokerdefense;
  document.form1.markingsoftheblessed_box.checked=feat_markingsoftheblessed;
  document.form1.markingsofthevictor_box.checked=feat_markingsofthevictor;
  document.form1.meleetraining_box.checked=feat_meleetraining;
  document.form1.oncomingstorm_box.checked=feat_oncomingstorm;
  document.form1.potentrebirth_box.checked=feat_potentrebirth;
  document.form1.primalfury_box.checked=feat_primalfury;
  document.form1.primalinstinct_box.checked=feat_primalinstinct;
  document.form1.protectorspiritadept_box.checked=feat_protectorspiritadept;
  document.form1.radiantpower_box.checked=feat_radiantpower;
  document.form1.resonatingcovenant_box.checked=feat_resonatingcovenant;
  document.form1.restfulhealing_box.checked=feat_restfulhealing;
  document.form1.revitalizingfontoflife_box.checked=feat_revitalizingfontoflife;
  document.form1.risingfury_box.checked=feat_risingfury;
  document.form1.savageassault_box.checked=feat_savageassault;
  document.form1.scouringwrath_box.checked=feat_scouringwrath;
  document.form1.shadowskulk_box.checked=feat_shadowskulk;
  document.form1.sharedhealingspirit_box.checked=feat_sharedhealingspirit;
  document.form1.sorcerousbladechanneling_box.checked=feat_sorcerousbladechanneling;
  document.form1.speedloader_box.checked=feat_speedloader;
  document.form1.spritspeaker_box.checked=feat_spritspeaker;
  document.form1.stalkerspiritadept_box.checked=feat_stalkerspiritadept;
  document.form1.strengthofvalor_box.checked=feat_strengthofvalor;
  document.form1.suddenroots_box.checked=feat_suddenroots;
  document.form1.surgingflame_box.checked=feat_surgingflame;
  document.form1.thirstforbattle_box.checked=feat_thirstforbattle;
  document.form1.timelyrespite_box.checked=feat_timelyrespite;
  document.form1.twoweaponthreat_box.checked=feat_twoweaponthreat;
  document.form1.twoweaponopening_box.checked=feat_twoweaponopening;
  document.form1.versatilemaster_box.checked=feat_versatilemaster;
  document.form1.weaponexpertiseaxe_box.checked=feat_weaponexpertiseaxe;
  document.form1.weaponexpertisebow_box.checked=feat_weaponexpertisebow;
  document.form1.weaponexpertisecrossbow_box.checked=feat_weaponexpertisecrossbow;
  document.form1.weaponexpertiseflail_box.checked=feat_weaponexpertiseflail;
  document.form1.weaponexpertisehammer_box.checked=feat_weaponexpertisehammer;
  document.form1.weaponexpertiseheavyblade_box.checked=feat_weaponexpertiseheavyblade;
  document.form1.weaponexpertiselightblade_box.checked=feat_weaponexpertiselightblade;
  document.form1.weaponexpertisemace_box.checked=feat_weaponexpertisemace;
  document.form1.weaponexpertisepick_box.checked=feat_weaponexpertisepick;
  document.form1.weaponexpertisepolearm_box.checked=feat_weaponexpertisepolearm;
  document.form1.weaponexpertisesling_box.checked=feat_weaponexpertisesling;
  document.form1.weaponexpertisespear_box.checked=feat_weaponexpertisespear;
  document.form1.weaponexpertisestaff_box.checked=feat_weaponexpertisestaff;
  document.form1.weaponexpertiseunarmed_box.checked=feat_weaponexpertiseunarmed;
  document.form1.wildbloodcunning_box.checked=feat_wildbloodcunning;
  document.form1.wildsenses_box.checked=feat_wildsenses;
  document.form1.arcaneimplementproficiencydagger_box.checked=feat_arcaneimplementproficiencydagger;
  document.form1.arcaneimplementproficiencymusic_box.checked=feat_arcaneimplementproficiencymusic;
  document.form1.arcaneimplementproficiencyorb_box.checked=feat_arcaneimplementproficiencyorb;
  document.form1.arcaneimplementproficiencyrod_box.checked=feat_arcaneimplementproficiencyrod;
  document.form1.arcaneimplementproficiencystaff_box.checked=feat_arcaneimplementproficiencystaff;
  document.form1.arcaneimplementproficiencytome_box.checked=feat_arcaneimplementproficiencytome;
  document.form1.arcaneimplementproficiencywand_box.checked=feat_arcaneimplementproficiencywand;
  document.form1.dualimplementspellcaster_box.checked=feat_dualimplementspellcaster;



  document.form1.agiletempest_box.checked=feat_agiletempest;
  document.form1.avandrasgift_box.checked=feat_avandrasgift;
  document.form1.avengingspirit_box.checked=feat_avengingspirit;
  document.form1.bleedingbackstab_box.checked=feat_bleedingbackstab;
  document.form1.bleedingprecision_box.checked=feat_bleedingprecision;
  document.form1.bloodyinspiration_box.checked=feat_bloodyinspiration;
  document.form1.bloodytenacity_box.checked=feat_bloodytenacity;
  document.form1.chainmailagility_box.checked=feat_chainmailagility;
  document.form1.combatopening_box.checked=feat_combatopening;
  document.form1.culltheweak_box.checked=feat_culltheweak;
  document.form1.darkhunter_box.checked=feat_darkhunter;
  document.form1.darkjumper_box.checked=feat_darkjumper;
  document.form1.dauntingchallenge_box.checked=feat_dauntingchallenge;
  document.form1.defensivesurge_box.checked=feat_defensivesurge;
  document.form1.distractingcompanion_box.checked=feat_distractingcompanion;
  document.form1.draconicarrogance_box.checked=feat_draconicarrogance;
  document.form1.dragonbreathwarrior_box.checked=feat_dragonbreathwarrior;
  document.form1.elementalcompanions_box.checked=feat_elementalcompanions;
  document.form1.elementalguardian_box.checked=feat_elementalguardian;
  document.form1.enduringwallop_box.checked=feat_enduringwallop;
  document.form1.evasivefootwork_box.checked=feat_evasivefootwork;
  document.form1.feycharge_box.checked=feat_feycharge;
  document.form1.feygambit_box.checked=feat_feygambit;
  document.form1.feytactics_box.checked=feat_feytactics;
  document.form1.fiendishdefender_box.checked=feat_fiendishdefender;
  document.form1.grit_box.checked=feat_grit;
  document.form1.groupflanking_box.checked=feat_groupflanking;
  document.form1.halflingbeastmastery_box.checked=feat_halflingbeastmastery;
  document.form1.huntersadvantage_box.checked=feat_huntersadvantage;
  document.form1.huntersresurgence_box.checked=feat_huntersresurgence;
  document.form1.impetuouscharger_box.checked=feat_impetuouscharger;
  document.form1.infernalsneakattack_box.checked=feat_infernalsneakattack;
  document.form1.markedscourge_box.checked=feat_markedscourge;
  document.form1.mightybattlerage_box.checked=feat_mightybattlerage;
  document.form1.opportunisticarcher_box.checked=feat_opportunisticarcher;
  document.form1.opportunisticsneakattack_box.checked=feat_opportunisticsneakattack;
  document.form1.phalanxwarrior_box.checked=feat_phalanxwarrior;
  document.form1.preternaturalsenses_box.checked=feat_preternaturalsenses;
  document.form1.primequarry_box.checked=feat_primequarry;
  document.form1.primeslayer_box.checked=feat_primeslayer;
  document.form1.protectivebeast_box.checked=feat_protectivebeast;
  document.form1.recklessattacker_box.checked=feat_recklessattacker;
  document.form1.reliableresources_box.checked=feat_reliableresources;
  document.form1.rogueweaponmastery_box.checked=feat_rogueweaponmastery;
  document.form1.roundaboutcharge_box.checked=feat_roundaboutcharge;
  document.form1.steadfasttacatics_box.checked=feat_steadfasttacatics;
  document.form1.stonefootreprisal_box.checked=feat_stonefootreprisal;
  document.form1.sturdybeast_box.checked=feat_sturdybeast;
  document.form1.vitalinspiration_box.checked=feat_vitalinspiration;
  document.form1.warlordsformation_box.checked=feat_warlordsformation;
  document.form1.wrathfulhunter_box.checked=feat_wrathfulhunter;
  document.form1.actiongrant_box.checked=feat_actiongrant;
  document.form1.aggressiveleadership_box.checked=feat_aggressiveleadership;
  document.form1.artfulprovocation_box.checked=feat_artfulprovocation;
  document.form1.boldspirit_box.checked=feat_boldspirit;
  document.form1.brutaladvantage_box.checked=feat_brutaladvantage;
  document.form1.calltoglory_box.checked=feat_calltoglory;
  document.form1.channeledbattlerage_box.checked=feat_channeledbattlerage;
  document.form1.correctingaim_box.checked=feat_correctingaim;
  document.form1.darkfirewarrior_box.checked=feat_darkfirewarrior;
  document.form1.dragonwarrior_box.checked=feat_dragonwarrior;
  document.form1.elementalwarrior_box.checked=feat_elementalwarrior;
  document.form1.epicrecovery_box.checked=feat_epicrecovery;
  document.form1.feywildwarrior_box.checked=feat_feywildwarrior;
  document.form1.fortuneswarrior_box.checked=feat_fortuneswarrior;
  document.form1.hawkeyewarrior_box.checked=feat_hawkeyewarrior;
  document.form1.improvedprimeshot_box.checked=feat_improvedprimeshot;
  document.form1.infernalwarrior_box.checked=feat_infernalwarrior;
  document.form1.invigoratingexploit_box.checked=feat_invigoratingexploit;
  document.form1.knockbackswing_box.checked=feat_knockbackswing;
  document.form1.lastingadvantage_box.checked=feat_lastingadvantage;
  document.form1.martialmastery_box.checked=feat_martialmastery;
  document.form1.martialresolve_box.checked=feat_martialresolve;
  document.form1.mobilewarrior_box.checked=feat_mobilewarrior;
  document.form1.onewithshadow_box.checked=feat_onewithshadow;
  document.form1.peerlesshunter_box.checked=feat_peerlesshunter;
  document.form1.practicedreliability_box.checked=feat_practicedreliability;
  document.form1.primehunter_box.checked=feat_primehunter;
  document.form1.protectiveleadership_box.checked=feat_protectiveleadership;
  document.form1.quickbeastcommand_box.checked=feat_quickbeastcommand;
  document.form1.rattlingexploit_box.checked=feat_rattlingexploit;
  document.form1.reachingwhirlwind_box.checked=feat_reachingwhirlwind;
  document.form1.rendingtempest_box.checked=feat_rendingtempest;
  document.form1.ruthlessterror_box.checked=feat_ruthlessterror;
  document.form1.staggeringshot_box.checked=feat_staggeringshot;
  document.form1.stoneheartwarrior_box.checked=feat_stoneheartwarrior;
  document.form1.supremeinspiration_box.checked=feat_supremeinspiration;
  document.form1.surpriseaction_box.checked=feat_surpriseaction;
  document.form1.tacticalcunning_box.checked=feat_tacticalcunning;
  document.form1.tacticalinsight_box.checked=feat_tacticalinsight;
  document.form1.timelyrevival_box.checked=feat_timelyrevival;
  document.form1.unstoppablecharge_box.checked=feat_unstoppablecharge;
  document.form1.whirlwindsneakattack_box.checked=feat_whirlwindsneakattack;
  document.form1.bowmastery_box.checked=feat_bowmastery;
  document.form1.epicfortitude_box.checked=feat_epicfortitude;
  document.form1.epicreflexes_box.checked=feat_epicreflexes;
  document.form1.epicwill_box.checked=feat_epicwill;
  document.form1.opportunereflexes_box.checked=feat_opportunereflexes;
  document.form1.robustdefenses_box.checked=feat_robustdefenses;
  document.form1.indomitablewill_box.checked=feat_indomitablewill;
  document.form1.unyieldingfortitude_box.checked=feat_unyieldingfortitude;
  document.form1.battleacumen_box.checked=feat_battleacumen;
  document.form1.battleinstructor_box.checked=feat_battleinstructor;
  document.form1.courageousshooter_box.checked=feat_courageousshooter;
  document.form1.firstin_box.checked=feat_firstin;
  document.form1.arcanefamiliar_box.checked=feat_arcanefamiliar;
  document.form1.alertfamiliar_box.checked=feat_alertfamiliar;
  document.form1.aggressivefamiliar_box.checked=feat_aggressivefamiliar;
  document.form1.bondedfamiliar_box.checked=feat_bondedfamiliar;
  document.form1.shieldingfamiliar_box.checked=feat_shieldingfamiliar;
  document.form1.spellseerfamiliar_box.checked=feat_spellseerfamiliar;
  document.form1.quickfamiliar_box.checked=feat_quickfamiliar;
  document.form1.sharedspeed_box.checked=feat_sharedspeed;



  document.form1.otherfeat01_box.checked=feat_other01; 
  document.form1.otherfeat02_box.checked=feat_other02; 
  document.form1.otherfeat03_box.checked=feat_other03; 
  document.form1.otherfeat04_box.checked=feat_other04; 
  document.form1.otherfeat05_box.checked=feat_other05; 
  document.form1.otherfeat06_box.checked=feat_other06; 
  document.form1.otherfeat07_box.checked=feat_other07; 
  document.form1.shieldproficiencyheavy_box.checked=feat_shieldproficiencyheavy; 
  document.form1.shieldproficiencylight_box.checked=feat_shieldproficiencylight; 
  document.form1.shieldpush_box.checked=feat_shieldpush; 
  document.form1.skillfocusacrobatics_box.checked=feat_skillfocusacrobatics; 
  document.form1.skillfocusarcana_box.checked=feat_skillfocusarcana; 
  document.form1.skillfocusathletics_box.checked=feat_skillfocusathletics; 
  document.form1.skillfocusbluff_box.checked=feat_skillfocusbluff; 
  document.form1.skillfocusdiplomacy_box.checked=feat_skillfocusdiplomacy; 
  document.form1.skillfocusdungeoneering_box.checked=feat_skillfocusdungeoneering; 
  document.form1.skillfocusendurance_box.checked=feat_skillfocusendurance; 
  document.form1.skillfocusheal_box.checked=feat_skillfocusheal; 
  document.form1.skillfocushistory_box.checked=feat_skillfocushistory; 
  document.form1.skillfocusinsight_box.checked=feat_skillfocusinsight; 
  document.form1.skillfocusintimidate_box.checked=feat_skillfocusintimidate; 
  document.form1.skillfocusnature_box.checked=feat_skillfocusnature; 
  document.form1.skillfocusperception_box.checked=feat_skillfocusperception; 
  document.form1.skillfocusreligion_box.checked=feat_skillfocusreligion; 
  document.form1.skillfocusstealth_box.checked=feat_skillfocusstealth; 
  document.form1.skillfocusstreetwise_box.checked=feat_skillfocusstreetwise; 
  document.form1.skillfocusthievery_box.checked=feat_skillfocusthievery; 
  document.form1.skilltrainingacrobatics_box.checked=feat_skilltrainingacrobatics; 
  document.form1.skilltrainingarcana_box.checked=feat_skilltrainingarcana; 
  document.form1.skilltrainingathletics_box.checked=feat_skilltrainingathletics; 
  document.form1.skilltrainingbluff_box.checked=feat_skilltrainingbluff; 
  document.form1.skilltrainingdiplomacy_box.checked=feat_skilltrainingdiplomacy; 
  document.form1.skilltrainingdungeoneering_box.checked=feat_skilltrainingdungeoneering; 
  document.form1.skilltrainingendurance_box.checked=feat_skilltrainingendurance; 
  document.form1.skilltrainingheal_box.checked=feat_skilltrainingheal; 
  document.form1.skilltraininghistory_box.checked=feat_skilltraininghistory; 
  document.form1.skilltraininginsight_box.checked=feat_skilltraininginsight; 
  document.form1.skilltrainingintimidate_box.checked=feat_skilltrainingintimidate; 
  document.form1.skilltrainingnature_box.checked=feat_skilltrainingnature; 
  document.form1.skilltrainingperception_box.checked=feat_skilltrainingperception; 
  document.form1.skilltrainingreligion_box.checked=feat_skilltrainingreligion; 
  document.form1.skilltrainingstealth_box.checked=feat_skilltrainingstealth; 
  document.form1.skilltrainingstreetwise_box.checked=feat_skilltrainingstreetwise; 
  document.form1.skilltrainingthievery_box.checked=feat_skilltrainingthievery; 
  document.form1.sureclimber_box.checked=feat_sureclimber; 
  document.form1.surpriseknockdown_box.checked=feat_surpriseknockdown; 
  document.form1.tacticalassault_box.checked=feat_tacticalassault; 
  document.form1.toughness_box.checked=feat_toughness; 
  document.form1.twoweapondefense_box.checked=feat_twoweapondefense; 
  document.form1.twoweaponfighting_box.checked=feat_twoweaponfighting; 
  document.form1.weaponfocusaxe_box.checked=feat_weaponfocusaxe; 
  document.form1.weaponfocusbow_box.checked=feat_weaponfocusbow; 
  document.form1.weaponfocuscrossbow_box.checked=feat_weaponfocuscrossbow; 
  document.form1.weaponfocusflail_box.checked=feat_weaponfocusflail; 
  document.form1.weaponfocushammer_box.checked=feat_weaponfocushammer; 
  document.form1.weaponfocusheavyblade_box.checked=feat_weaponfocusheavyblade; 
  document.form1.weaponfocuslightblade_box.checked=feat_weaponfocuslightblade; 
  document.form1.weaponfocusmace_box.checked=feat_weaponfocusmace; 
  document.form1.weaponfocuspick_box.checked=feat_weaponfocuspick; 
  document.form1.weaponfocuspolearm_box.checked=feat_weaponfocuspolearm; 
  document.form1.weaponfocussling_box.checked=feat_weaponfocussling; 
  document.form1.weaponfocusspear_box.checked=feat_weaponfocusspear; 
  document.form1.weaponfocusstaff_box.checked=feat_weaponfocusstaff; 
  document.form1.weaponfocusunarmed_box.checked=feat_weaponfocusunarmed; 
  document.form1.weaponproficiencyclub_box.checked=feat_weaponproficiencyclub; 
  document.form1.weaponproficiencydagger_box.checked=feat_weaponproficiencydagger; 
  document.form1.weaponproficiencyjavelin_box.checked=feat_weaponproficiencyjavelin; 
  document.form1.weaponproficiencymace_box.checked=feat_weaponproficiencymace; 
  document.form1.weaponproficiencysickle_box.checked=feat_weaponproficiencysickle; 
  document.form1.weaponproficiencyothersimplemeleeweapons_box.checked=feat_weaponproficiencyothersimplemeleeweapons; 
  document.form1.weaponproficiencyothermilitarymeleeweapons_box.checked=feat_weaponproficiencyothermilitarymeleeweapons; 
  document.form1.weaponproficiencyothersuperiormeleeweapons_box.checked=feat_weaponproficiencyothersuperiormeleeweapons; 
  document.form1.weaponproficiencyothersimplerangedweapons_box.checked=feat_weaponproficiencyothersimplerangedweapons; 
  document.form1.weaponproficiencyothersuperiorrangedweapons_box.checked=feat_weaponproficiencyothersuperiorrangedweapons; 
  document.form1.weaponproficiencyspear_box.checked=feat_weaponproficiencyspear; 
  document.form1.weaponproficiencygreatclub_box.checked=feat_weaponproficiencygreatclub; 
  document.form1.weaponproficiencymorningstar_box.checked=feat_weaponproficiencymorningstar; 
  document.form1.weaponproficiencyquarterstaff_box.checked=feat_weaponproficiencyquarterstaff; 
  document.form1.weaponproficiencyscythe_box.checked=feat_weaponproficiencyscythe; 
  document.form1.weaponproficiencybattleaxe_box.checked=feat_weaponproficiencybattleaxe; 
  document.form1.weaponproficiencyflail_box.checked=feat_weaponproficiencyflail; 
  document.form1.weaponproficiencyhandaxe_box.checked=feat_weaponproficiencyhandaxe; 
  document.form1.weaponproficiencylongsword_box.checked=feat_weaponproficiencylongsword; 
  document.form1.weaponproficiencyscimitar_box.checked=feat_weaponproficiencyscimitar; 
  document.form1.weaponproficiencyshortsword_box.checked=feat_weaponproficiencyshortsword; 
  document.form1.weaponproficiencythrowinghammer_box.checked=feat_weaponproficiencythrowinghammer; 
  document.form1.weaponproficiencywarhammer_box.checked=feat_weaponproficiencywarhammer; 
  document.form1.weaponproficiencywarpick_box.checked=feat_weaponproficiencywarpick; 
  document.form1.weaponproficiencyfalchion_box.checked=feat_weaponproficiencyfalchion; 
  document.form1.weaponproficiencyglaive_box.checked=feat_weaponproficiencyglaive; 
  document.form1.weaponproficiencygreataxe_box.checked=feat_weaponproficiencygreataxe; 
  document.form1.weaponproficiencygreatsword_box.checked=feat_weaponproficiencygreatsword; 
  document.form1.weaponproficiencyhalberd_box.checked=feat_weaponproficiencyhalberd; 
  document.form1.weaponproficiencyheavyflail_box.checked=feat_weaponproficiencyheavyflail; 
  document.form1.weaponproficiencylongspear_box.checked=feat_weaponproficiencylongspear; 
  document.form1.weaponproficiencymaul_box.checked=feat_weaponproficiencymaul; 
  document.form1.weaponproficiencybastardsword_box.checked=feat_weaponproficiencybastardsword; 
  document.form1.weaponproficiencykatar_box.checked=feat_weaponproficiencykatar; 
  document.form1.weaponproficiencyrapier_box.checked=feat_weaponproficiencyrapier; 
  document.form1.weaponproficiencyspikedchain_box.checked=feat_weaponproficiencyspikedchain; 
  document.form1.weaponproficiencyhandcrossbow_box.checked=feat_weaponproficiencyhandcrossbow; 
  document.form1.weaponproficiencysling_box.checked=feat_weaponproficiencysling; 
  document.form1.weaponproficiencycrossbow_box.checked=feat_weaponproficiencycrossbow; 
  document.form1.weaponproficiencylongbow_box.checked=feat_weaponproficiencylongbow; 
  document.form1.weaponproficiencyshortbow_box.checked=feat_weaponproficiencyshortbow; 
  document.form1.weaponproficiencyshuriken_box.checked=feat_weaponproficiencyshuriken; 
  document.form1.wintertouched_box.checked=feat_wintertouched; 
  document.form1.actionrecovery_box.checked=feat_actionrecovery; 
  document.form1.agileathlete_box.checked=feat_agileathlete; 
  document.form1.arcanereach_box.checked=feat_arcanereach; 
  document.form1.armorspecializationchainmail_box.checked=feat_armorspecializationchainmail; 
  document.form1.armorspecializationhide_box.checked=feat_armorspecializationhide; 
  document.form1.armorspecializationplate_box.checked=feat_armorspecializationplate; 
  document.form1.armorspecializationscale_box.checked=feat_armorspecializationscale; 
  document.form1.backtothewall_box.checked=feat_backtothewall; 
  document.form1.bloodthirst_box.checked=feat_bloodthirst; 
  document.form1.combatanticipation_box.checked=feat_combatanticipation; 
  document.form1.combatcommander_box.checked=feat_combatcommander; 
  document.form1.dangersense_box.checked=feat_dangersense; 
  document.form1.deadlyaxe_box.checked=feat_deadlyaxe; 
  document.form1.defensiveadvantage_box.checked=feat_defensiveadvantage; 
  document.form1.devastatingcritical_box.checked=feat_devastatingcritical; 
  document.form1.distantshot_box.checked=feat_distantshot; 
  document.form1.dwarvendurability_box.checked=feat_dwarvendurability; 
  document.form1.empowereddragonbreath_box.checked=feat_empowereddragonbreath; 
  document.form1.evasion_box.checked=feat_evasion; 
  document.form1.feywildprotection_box.checked=feat_feywildprotection; 
  document.form1.fieryrebuke_box.checked=feat_fieryrebuke; 
  document.form1.fleetfooted_box.checked=feat_fleetfooted; 
  document.form1.greatfortitude_box.checked=feat_greatfortitude; 
  document.form1.hammerrhythm_box.checked=feat_hammerrhythm; 
  document.form1.heavybladeopportunity_box.checked=feat_heavybladeopportunity; 
  document.form1.improvedsecondwind_box.checked=feat_improvedsecondwind; 
  document.form1.inescapableforce_box.checked=feat_inescapableforce; 
  document.form1.ironwill_box.checked=feat_ironwill; 
  document.form1.lastingfrost_box.checked=feat_lastingfrost; 
  document.form1.lightbladeprecision_box.checked=feat_lightbladeprecision; 
  document.form1.lightningarc_box.checked=feat_lightningarc; 
  document.form1.lightningreflexes_box.checked=feat_lightningreflexes; 
  document.form1.mettle_box.checked=feat_mettle; 
  document.form1.pointblankshot_box.checked=feat_pointblankshot; 
  document.form1.polearmgamble_box.checked=feat_polearmgamble; 
  document.form1.psychiclock_box.checked=feat_psychiclock; 
  document.form1.resoundingthunder_box.checked=feat_resoundingthunder; 
  document.form1.runningshot_box.checked=feat_runningshot; 
  document.form1.scimitardance_box.checked=feat_scimitardance; 
  document.form1.secondimplementorb_box.checked=feat_secondimplementorb; 
  document.form1.secondimplementstaff_box.checked=feat_secondimplementstaff; 
  document.form1.secondimplementwand_box.checked=feat_secondimplementwand; 
  document.form1.secretstride_box.checked=feat_secretstride; 
  document.form1.seizethemoment_box.checked=feat_seizethemoment; 
  document.form1.shieldspecialization_box.checked=feat_shieldspecialization; 
  document.form1.slyhunter_box.checked=feat_slyhunter; 
  document.form1.solidsound_box.checked=feat_solidsound; 
  document.form1.spearpush_box.checked=feat_spearpush; 
  document.form1.spellfocus_box.checked=feat_spellfocus; 
  document.form1.steadyshooter_box.checked=feat_steadyshooter; 
  document.form1.sweepingflail_box.checked=feat_sweepingflail; 
  document.form1.twofoldcurse_box.checked=feat_twofoldcurse; 
  document.form1.uncannydodge_box.checked=feat_uncannydodge; 
  document.form1.underfoot_box.checked=feat_underfoot; 
  document.form1.arcanemastery_box.checked=feat_arcanemastery; 
  document.form1.axemastery_box.checked=feat_axemastery; 
  document.form1.blindfight_box.checked=feat_blindfight; 
  document.form1.bludgeonmastery_box.checked=feat_bludgeonmastery; 
  document.form1.epicresurgence_box.checked=feat_epicresurgence; 
  document.form1.flailmastery_box.checked=feat_flailmastery; 
  document.form1.flankingmaneuver_box.checked=feat_flankingmaneuver; 
  document.form1.fontofradiance_box.checked=feat_fontofradiance; 
  document.form1.heavyblademastery_box.checked=feat_heavyblademastery; 
  document.form1.irresistableflame_box.checked=feat_irresistableflame; 
  document.form1.lightblademastery_box.checked=feat_lightblademastery; 
  document.form1.pickmastery_box.checked=feat_pickmastery; 
  document.form1.spearmastery_box.checked=feat_spearmastery; 
  document.form1.spellaccuracy_box.checked=feat_spellaccuracy; 
  document.form1.triumphantattack_box.checked=feat_triumphantattack; 
  document.form1.twoweaponflurry_box.checked=feat_twoweaponflurry; 
  document.form1.unfetteredstride_box.checked=feat_unfetteredstride;
  document.form1.multiclasspowerswapencounter_box.checked=feat_multiclasspowerswapencounter; 
  document.form1.multiclasspowerswaputility_box.checked=feat_multiclasspowerswaputility; 
  document.form1.multiclasspowerswapdaily_box.checked=feat_multiclasspowerswapdaily; 
 }






function consider_actionsurge(){
 if (!doingfeats()){remember_feats(); return; }
  if ((!race_human)&(!race_halfelf)){document.form1.actionsurge_box.checked=false; }
 ArrowShow(); 
 }

function light_actionsurge_star(){
  if ((!race_human)&(!race_halfelf)){document.form1.actionsurge_star.src="no_asterisk.gif"; return; }
  document.form1.actionsurge_star.src="asterisk.gif"; 
 }

function consider_agilehunter(){
 if (!doingfeats()){remember_feats(); return; }
  if ((!rangerclass()) | (dexterity<15)){document.form1.agilehunter_box.checked=false; }
 ArrowShow(); 
 }

function light_agilehunter_star(){
  if ((!rangerclass()) | (dexterity<15)){document.form1.agilehunter_star.src="no_asterisk.gif"; return; }
  document.form1.agilehunter_star.src="asterisk.gif"; 
 }

function consider_alertness(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_alertness_star(){
  document.form1.alertness_star.src="asterisk.gif"; 
 }

function consider_armorofbahamut(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.armorofbahamut_box.checked=false; }
 ArrowShow(); 
 }

function light_armorofbahamut_star(){
 if ((!divinitychanneler())){document.form1.armorofbahamut_star.src="no_asterisk.gif"; return; }
  document.form1.armorofbahamut_star.src="asterisk.gif"; 
 }

function consider_armorproficiency(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_leather)){document.form1.armorproficiencyleather_box.checked=false; }
 if ((already_knows_hide)){document.form1.armorproficiencyhide_box.checked=false; }
 if ((already_knows_chainmail)){document.form1.armorproficiencychainmail_box.checked=false; }
 if ((already_knows_scale)){document.form1.armorproficiencyscale_box.checked=false; }
 if ((already_knows_plate)){document.form1.armorproficiencyplate_box.checked=false; }

 if (((!already_knows_leather)&(!document.form1.armorproficiencyleather_box.checked)) | (strength<13) | (constitution<13)){document.form1.armorproficiencyhide_box.checked=false; }
 if (((!already_knows_hide)&(!document.form1.armorproficiencyhide_box.checked)&(!already_knows_leather)&(!document.form1.armorproficiencyleather_box.checked)) | (strength<13) | (constitution<13)){document.form1.armorproficiencychainmail_box.checked=false; }
 if (((!already_knows_chainmail)&(!document.form1.armorproficiencychainmail_box.checked)) | (strength<13) | (constitution<13)){document.form1.armorproficiencyscale_box.checked=false; }
 if (((!already_knows_scale)&(!document.form1.armorproficiencyscale_box.checked)) | (strength<15) | (constitution<15)){document.form1.armorproficiencyplate_box.checked=false; }

 if (total_levels<11)
  {
   document.form1.armorspecializationchainmail_box.checked=false; 
   document.form1.armorspecializationhide_box.checked=false; 
   document.form1.armorspecializationplate_box.checked=false; 
   document.form1.armorspecializationscale_box.checked=false; 
  }

 if (((!already_knows_chainmail)&(!document.form1.armorproficiencychainmail_box.checked)) | (dexterity<15)){document.form1.armorspecializationchainmail_box.checked=false; }
 if (((!already_knows_hide)&(!document.form1.armorproficiencyhide_box.checked)) | (constitution<15)){document.form1.armorspecializationhide_box.checked=false; }
 if (((!already_knows_plate)&(!document.form1.armorproficiencyplate_box.checked)) | (constitution<15)){document.form1.armorspecializationplate_box.checked=false; }
 if (((!already_knows_scale)&(!document.form1.armorproficiencyscale_box.checked)) | (dexterity<15)){document.form1.armorspecializationscale_box.checked=false; }

 light_armorproficiency_star(); 
 ArrowShow(); 
 }

function light_armorproficiency_star(){
 document.form1.armorproficiencyleather_star.src="asterisk.gif"; 
 document.form1.armorproficiencyhide_star.src="asterisk.gif"; 
 document.form1.armorproficiencychainmail_star.src="asterisk.gif"; 
 document.form1.armorproficiencyscale_star.src="asterisk.gif"; 
 document.form1.armorproficiencyplate_star.src="asterisk.gif"; 
 document.form1.armorspecializationchainmail_star.src="asterisk.gif"; 
 document.form1.armorspecializationhide_star.src="asterisk.gif"; 
 document.form1.armorspecializationplate_star.src="asterisk.gif"; 
 document.form1.armorspecializationscale_star.src="asterisk.gif"; 


 if ((already_knows_leather)){document.form1.armorproficiencyleather_star.src="no_asterisk.gif"; }
 if ((already_knows_hide)){document.form1.armorproficiencyhide_star.src="no_asterisk.gif"; }
 if ((already_knows_chainmail)){document.form1.armorproficiencychainmail_star.src="no_asterisk.gif"; }
 if ((already_knows_scale)){document.form1.armorproficiencyscale_star.src="no_asterisk.gif"; }
 if ((already_knows_plate)){document.form1.armorproficiencyplate_star.src="no_asterisk.gif"; }

 if (((!already_knows_leather)&(!document.form1.armorproficiencyleather_box.checked)) | (strength<13) | (constitution<13)){document.form1.armorproficiencyhide_star.src="no_asterisk.gif"; }
 if (((!already_knows_hide)&(!document.form1.armorproficiencyhide_box.checked)&(!already_knows_leather)&(!document.form1.armorproficiencyleather_box.checked)) | (strength<13) | (constitution<13)){document.form1.armorproficiencychainmail_star.src="no_asterisk.gif"; }
 if (((!already_knows_chainmail)&(!document.form1.armorproficiencychainmail_box.checked)) | (strength<13) | (constitution<13)){document.form1.armorproficiencyscale_star.src="no_asterisk.gif"; }
 if (((!already_knows_scale)&(!document.form1.armorproficiencyscale_box.checked)) | (strength<15) | (constitution<15)){document.form1.armorproficiencyplate_star.src="no_asterisk.gif"; }

 if (total_levels<11)
  {
   document.form1.armorspecializationchainmail_star.src="no_asterisk.gif"; 
   document.form1.armorspecializationhide_star.src="no_asterisk.gif"; 
   document.form1.armorspecializationplate_star.src="no_asterisk.gif"; 
   document.form1.armorspecializationscale_star.src="no_asterisk.gif"; 
  }

 if (((!already_knows_chainmail)&(!document.form1.armorproficiencychainmail_box.checked)) | (dexterity<15)){document.form1.armorspecializationchainmail_star.src="no_asterisk.gif"; }
 if (((!already_knows_hide)&(!document.form1.armorproficiencyhide_box.checked)) | (constitution<15)){document.form1.armorspecializationhide_star.src="no_asterisk.gif"; }
 if (((!already_knows_plate)&(!document.form1.armorproficiencyplate_box.checked)) | (constitution<15)){document.form1.armorspecializationplate_star.src="no_asterisk.gif"; }
 if (((!already_knows_scale)&(!document.form1.armorproficiencyscale_box.checked)) | (dexterity<15)){document.form1.armorspecializationscale_star.src="no_asterisk.gif"; }


 }

function consider_astralfire(){
 if (!doingfeats()){remember_feats(); return; }
 if ((dexterity<13) | (charisma<13)){document.form1.astralfire_box.checked=false; }
 ArrowShow(); 
 }

function light_astralfire_star(){
 if ((dexterity<13) | (charisma<13)){document.form1.astralfire_star.src="no_asterisk.gif"; return; }
  document.form1.astralfire_star.src="asterisk.gif"; 
 }

function consider_avandrasrescue(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.avandrasrescue_box.checked=false; }
 ArrowShow(); 
 }

function light_avandrasrescue_star(){
 if ((!divinitychanneler())){document.form1.avandrasrescue_star.src="no_asterisk.gif"; return; }
  document.form1.avandrasrescue_star.src="asterisk.gif"; 
 }

function consider_backstabber(){
 if (!doingfeats()){remember_feats(); return; }
 if (!rogueclass()){document.form1.backstabber_box.checked=false; }
 ArrowShow(); 
 }

function light_backstabber_star(){
 if (!rogueclass()){document.form1.backstabber_star.src="no_asterisk.gif"; return; }
  document.form1.backstabber_star.src="asterisk.gif"; 
 }

function consider_bladeopportunist(){
 if (!doingfeats()){remember_feats(); return; }
 if ((strength<13) | (dexterity<13)){document.form1.bladeopportunist_box.checked=false; }
 ArrowShow(); 
 }

function light_bladeopportunist_star(){
 if ((strength<13) | (dexterity<13)){document.form1.bladeopportunist_star.src="no_asterisk.gif"; return; }
  document.form1.bladeopportunist_star.src="asterisk.gif"; 
 }

function consider_burningblizzard(){
 if (!doingfeats()){remember_feats(); return; }
 if ((intelligence<13) | (wisdom<13)){document.form1.burningblizzard_box.checked=false; }
 ArrowShow(); 
 }

function light_burningblizzard_star(){
 if ((intelligence<13) | (wisdom<13)){document.form1.burningblizzard_star.src="no_asterisk.gif"; return; }
  document.form1.burningblizzard_star.src="asterisk.gif"; 
 }

function consider_combatreflexes(){
 if (!doingfeats()){remember_feats(); return; }
 if (dexterity<13){document.form1.combatreflexes_box.checked=false; }
 ArrowShow(); 
 }

function light_combatreflexes_star(){
 if (dexterity<13){document.form1.combatreflexes_star.src="no_asterisk.gif"; return; }
  document.form1.combatreflexes_star.src="asterisk.gif"; 
 }

function consider_corellonsgrace(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.corellonsgrace_box.checked=false; }
 ArrowShow(); 
 }

function light_corellonsgrace_star(){
 if ((!divinitychanneler())){document.form1.corellonsgrace_star.src="no_asterisk.gif"; return; }
  document.form1.corellonsgrace_star.src="asterisk.gif"; 
 }

function consider_darkfury(){
 if (!doingfeats()){remember_feats(); return; }
 if ((constitution<13) | (wisdom<13)){document.form1.darkfury_box.checked=false; }
 ArrowShow(); 
 }

function light_darkfury_star(){
 if ((constitution<13) | (wisdom<13)){document.form1.darkfury_star.src="no_asterisk.gif"; return; }
  document.form1.darkfury_star.src="asterisk.gif"; 
 }

function consider_defensivemobility(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_defensivemobility_star(){
  document.form1.defensivemobility_star.src="asterisk.gif"; 
 }

function consider_distractingshield(){
 if (!doingfeats()){remember_feats(); return; }
 if (((!class_fighter)) | (wisdom<15)){document.form1.distractingshield_box.checked=false; }
 ArrowShow(); 
 }

function light_distractingshield_star(){
 if (((!class_fighter)) | (wisdom<15)){document.form1.distractingshield_star.src="no_asterisk.gif"; return; }
  document.form1.distractingshield_star.src="asterisk.gif"; 
 }

function consider_dodgegiants(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_dwarf){document.form1.dodgegiants_box.checked=false; }
 ArrowShow(); 
 }

function light_dodgegiants_star(){
 if (!race_dwarf){document.form1.dodgegiants_star.src="no_asterisk.gif"; return; }
  document.form1.dodgegiants_star.src="asterisk.gif"; 
 }

function consider_dragonbornfrenzy(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_dragonborn){document.form1.dragonbornfrenzy_box.checked=false; }
 ArrowShow(); 
 }

function light_dragonbornfrenzy_star(){
 if (!race_dragonborn){document.form1.dragonbornfrenzy_star.src="no_asterisk.gif"; return; }
  document.form1.dragonbornfrenzy_star.src="asterisk.gif"; 
 }

function consider_dragonbornsenses(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_dragonborn){document.form1.dragonbornsenses_box.checked=false; }
 ArrowShow(); 
 }

function light_dragonbornsenses_star(){
 if (!race_dragonborn){document.form1.dragonbornsenses_star.src="no_asterisk.gif"; return; }
  document.form1.dragonbornsenses_star.src="asterisk.gif"; 
 }

function consider_durable(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_durable_star(){
  document.form1.durable_star.src="asterisk.gif"; 
 }

function consider_dwarvenweapontraining(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_dwarf){document.form1.dwarvenweapontraining_box.checked=false; }
 ArrowShow(); 
 }

function light_dwarvenweapontraining_star(){
 if (!race_dwarf){document.form1.dwarvenweapontraining_star.src="no_asterisk.gif"; return; }
  document.form1.dwarvenweapontraining_star.src="asterisk.gif"; 
 }

function consider_eladrinsoldier(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_eladrin){document.form1.eladrinsoldier_box.checked=false; }
 ArrowShow(); 
 }

function light_eladrinsoldier_star(){
 if (!race_eladrin){document.form1.eladrinsoldier_star.src="no_asterisk.gif"; return; }
  document.form1.eladrinsoldier_star.src="asterisk.gif"; 
 }

function consider_elvenprecision(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!race_elf)&(!race_halfelf)){document.form1.elvenprecision_box.checked=false; }
 ArrowShow(); 
 }

function light_elvenprecision_star(){
 if ((!race_elf)&(!race_halfelf)){document.form1.elvenprecision_star.src="no_asterisk.gif"; return; }
  document.form1.elvenprecision_star.src="asterisk.gif"; 
 }

function consider_enlargeddragonbreath(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_dragonborn){document.form1.enlargeddragonbreath_box.checked=false; }
 ArrowShow(); 
 }

function light_enlargeddragonbreath_star(){
 if (!race_dragonborn){document.form1.enlargeddragonbreath_star.src="no_asterisk.gif"; return; }
  document.form1.enlargeddragonbreath_star.src="asterisk.gif"; 
 }

function consider_escapeartist(){
 if (!doingfeats()){remember_feats(); return; }
 if (!TrainedInAcrobatics()){document.form1.escapeartist_box.checked=false; }
 ArrowShow(); 
 }

function light_escapeartist_star(){
 if (!TrainedInAcrobatics()){document.form1.escapeartist_star.src="no_asterisk.gif"; return; }
  document.form1.escapeartist_star.src="asterisk.gif"; 
 }

function consider_expandedspellbook(){
 if (!doingfeats()){remember_feats(); return; }
 if ((wisdom<13) | ((!class_wizard))){document.form1.expandedspellbook_box.checked=false; }
 ArrowShow(); 
 }

function light_expandedspellbook_star(){
 if ((wisdom<13) | ((!class_wizard))){document.form1.expandedspellbook_star.src="no_asterisk.gif"; return; }
  document.form1.expandedspellbook_star.src="asterisk.gif"; 
 }

function consider_farshot(){
 if (!doingfeats()){remember_feats(); return; }
 if (dexterity<13){document.form1.farshot_box.checked=false; }
 ArrowShow(); 
 }

function light_farshot_star(){
 if (dexterity<13){document.form1.farshot_star.src="no_asterisk.gif"; return; }
  document.form1.farshot_star.src="asterisk.gif"; 
 }

function consider_farthrow(){
 if (!doingfeats()){remember_feats(); return; }
 if (strength<13){document.form1.farthrow_box.checked=false; }
 ArrowShow(); 
 }

function light_farthrow_star(){
 if (strength<13){document.form1.farthrow_star.src="no_asterisk.gif"; return; }
  document.form1.farthrow_star.src="asterisk.gif"; 
 }

function consider_fastrunner(){
 if (!doingfeats()){remember_feats(); return; }
 if (constitution<13){document.form1.fastrunner_box.checked=false; }
 ArrowShow(); 
 }

function light_fastrunner_star(){
 if (constitution<13){document.form1.fastrunner_star.src="no_asterisk.gif"; return; }
  document.form1.fastrunner_star.src="asterisk.gif"; 
 }

function consider_ferociousrebuke(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_tiefling){document.form1.ferociousrebuke_box.checked=false; }
 ArrowShow(); 
 }

function light_ferociousrebuke_star(){
 if (!race_tiefling){document.form1.ferociousrebuke_star.src="no_asterisk.gif"; return; }
  document.form1.ferociousrebuke_star.src="asterisk.gif"; 
 }

function consider_groupinsight(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_halfelf){document.form1.groupinsight_box.checked=false; }
 ArrowShow(); 
 }

function light_groupinsight_star(){
 if (!race_halfelf){document.form1.groupinsight_star.src="no_asterisk.gif"; return; }
  document.form1.groupinsight_star.src="asterisk.gif"; 
 }

function consider_halflingagility(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_halfling){document.form1.halflingagility_box.checked=false; }
 ArrowShow(); 
 }

function light_halflingagility_star(){
 if (!race_halfling){document.form1.halflingagility_star.src="no_asterisk.gif"; return; }
  document.form1.halflingagility_star.src="asterisk.gif"; 
 }

function consider_harmonyoferathis(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.harmonyoferathis_box.checked=false; }
 ArrowShow(); 
 }

function light_harmonyoferathis_star(){
 if ((!divinitychanneler())){document.form1.harmonyoferathis_star.src="no_asterisk.gif"; return; }
  document.form1.harmonyoferathis_star.src="asterisk.gif"; 
 }

function consider_healinghands(){
 if (!doingfeats()){remember_feats(); return; }
 if (!class_paladin){document.form1.healinghands_box.checked=false; }
 ArrowShow(); 
 }

function light_healinghands_star(){
 if (!class_paladin){document.form1.healinghands_star.src="no_asterisk.gif"; return; }
  document.form1.healinghands_star.src="asterisk.gif"; 
 }

function consider_hellfireblood(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_tiefling){document.form1.hellfireblood_box.checked=false; }
 ArrowShow(); 
 }

function light_hellfireblood_star(){
 if (!race_tiefling){document.form1.hellfireblood_star.src="no_asterisk.gif"; return; }
  document.form1.hellfireblood_star.src="asterisk.gif"; 
 }

function consider_humanperseverance(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!race_human)&(!race_halfelf)){document.form1.humanperseverance_box.checked=false; }
 ArrowShow(); 
 }

function light_humanperseverance_star(){
 if ((!race_human)&(!race_halfelf)){document.form1.humanperseverance_star.src="no_asterisk.gif"; return; }
  document.form1.humanperseverance_star.src="asterisk.gif"; 
 }

function consider_improveddarkonesblessing(){
 if (!doingfeats()){remember_feats(); return; }
 if (((!class_warlock)) | (constitution<15) | (!warlock_infernal)){document.form1.improveddarkonesblessing_box.checked=false; }
 ArrowShow(); 
 }

function light_improveddarkonesblessing_star(){
 if (((!class_warlock)) | (constitution<15) | (!warlock_infernal)){document.form1.improveddarkonesblessing_star.src="no_asterisk.gif"; return; }
  document.form1.improveddarkonesblessing_star.src="asterisk.gif"; 
 }

function consider_improvedfateofthevoid(){
 if (!doingfeats()){remember_feats(); return; }
 if (((!class_warlock)) | ((constitution<13)&(charisma<13)) | (!warlock_star)){document.form1.improvedfateofthevoid_box.checked=false; }
 ArrowShow(); 
 }

function light_improvedfateofthevoid_star(){
 if (((!class_warlock)) | ((constitution<13)&(charisma<13)) | (!warlock_star)){document.form1.improvedfateofthevoid_star.src="no_asterisk.gif"; return; }
  document.form1.improvedfateofthevoid_star.src="asterisk.gif"; 
 }

function consider_improvedinitiative(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_improvedinitiative_star(){
  document.form1.improvedinitiative_star.src="asterisk.gif"; 
 }

function consider_improvedmistystep(){
 if (!doingfeats()){remember_feats(); return; }
 if ( (intelligence<13) | (!warlock_fey)){document.form1.improvedmistystep_box.checked=false; }
 ArrowShow(); 
 }

function light_improvedmistystep_star(){
 if ( (intelligence<13) | (!warlock_fey)){document.form1.improvedmistystep_star.src="no_asterisk.gif"; return; }
  document.form1.improvedmistystep_star.src="asterisk.gif"; 
 }

function consider_inspiredrecovery(){
 if (!doingfeats()){remember_feats(); return; }
 if (!warlord_inspiring){document.form1.inspiredrecovery_box.checked=false; }
 ArrowShow(); 
 }

function light_inspiredrecovery_star(){
 if (!warlord_inspiring){document.form1.inspiredrecovery_star.src="no_asterisk.gif"; return; }
  document.form1.inspiredrecovery_star.src="asterisk.gif"; 
 }

function consider_iounspoise(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.iounspoise_box.checked=false; }
 ArrowShow(); 
 }

function light_iounspoise_star(){
 if ((!divinitychanneler())){document.form1.iounspoise_star.src="no_asterisk.gif"; return; }
  document.form1.iounspoise_star.src="asterisk.gif"; 
 }

function consider_jackofalltrades(){
 if (!doingfeats()){remember_feats(); return; }
 if (intelligence<13){document.form1.jackofalltrades_box.checked=false; }
 ArrowShow(); 
 }

function light_jackofalltrades_star(){
 if (intelligence<13){document.form1.jackofalltrades_star.src="no_asterisk.gif"; return; }
  document.form1.jackofalltrades_star.src="asterisk.gif"; 
 }

function consider_kordsfavor(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.kordsfavor_box.checked=false; }
 ArrowShow(); 
 }

function light_kordsfavor_star(){
 if ((!divinitychanneler())){document.form1.kordsfavor_star.src="no_asterisk.gif"; return; }
  document.form1.kordsfavor_star.src="asterisk.gif"; 
 }

function consider_lethalhunter(){
 if (!doingfeats()){remember_feats(); return; }
 if (!rangerclass()){document.form1.lethalhunter_box.checked=false; }
 ArrowShow(); 
 }

function light_lethalhunter_star(){
 if (!rangerclass()){document.form1.lethalhunter_star.src="no_asterisk.gif"; return; }
  document.form1.lethalhunter_star.src="asterisk.gif"; 
 }

function consider_lightstep(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!race_elf)&(!race_halfelf)){document.form1.lightstep_box.checked=false; }
 ArrowShow(); 
 }

function light_lightstep_star(){
 if ((!race_elf)&(!race_halfelf)){document.form1.lightstep_star.src="no_asterisk.gif"; return; }
  document.form1.lightstep_star.src="asterisk.gif"; 
 }

function consider_linguist(){             
 if (!doingfeats()){remember_feats(); return; }
 if (intelligence<13){document.form1.linguist_list.options[0].selected=true; ; }
 ArrowShow(); 
 }

function light_linguist_star(){
 if (intelligence<13){document.form1.lightstep_star.src="no_asterisk.gif"; return; }
  document.form1.linguist_star.src="asterisk.gif"; 
 }

function consider_longjumper(){
 if (!doingfeats()){remember_feats(); return; }
 if (!TrainedInAthletics()){document.form1.longjumper_box.checked=false; }
 ArrowShow(); 
 }

function light_longjumper_star(){
 if (!TrainedInAthletics()){document.form1.longjumper_star.src="no_asterisk.gif"; return; }
  document.form1.longjumper_star.src="asterisk.gif"; 
 }

function consider_longinthecrowd(){
 if (!doingfeats()){remember_feats(); return; }
 if (!race_halfling){document.form1.longinthecrowd_box.checked=false; }
 ArrowShow(); 
 }

function light_longinthecrowd_star(){
 if (!race_halfling){document.form1.longinthecrowd_star.src="no_asterisk.gif"; return; }
  document.form1.longinthecrowd_star.src="asterisk.gif"; 
 }

function consider_melorastide(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.melorastide_box.checked=false; }
 ArrowShow(); 
 }

function light_melorastide_star(){
 if ((!divinitychanneler())){document.form1.melorastide_star.src="no_asterisk.gif"; return; }
  document.form1.melorastide_star.src="asterisk.gif"; 
 }

function consider_moradinsresolve(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.moradinsresolve_box.checked=false; }
 ArrowShow(); 
 }

function light_moradinsresolve_star(){
 if ((!divinitychanneler())){document.form1.moradinsresolve_star.src="no_asterisk.gif"; return; }
  document.form1.moradinsresolve_star.src="asterisk.gif"; 
 }

function consider_mountedcombat(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_mountedcombat_star(){
  document.form1.mountedcombat_star.src="asterisk.gif"; 
 }

function consider_nimbleblade(){
 if (!doingfeats()){remember_feats(); return; }
 if (dexterity<15){document.form1.nimbleblade_box.checked=false; }
 ArrowShow(); 
 }

function light_nimbleblade_star(){
 if (dexterity<15){document.form1.nimbleblade_star.src="no_asterisk.gif"; return; }
  document.form1.nimbleblade_star.src="asterisk.gif"; 
 }

function consider_pelorsradiance(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.pelorsradiance_box.checked=false; }
 ArrowShow(); 
 }

function light_pelorsradiance_star(){
 if ((!divinitychanneler())){document.form1.pelorsradiance_star.src="no_asterisk.gif"; return; }
  document.form1.pelorsradiance_star.src="asterisk.gif"; 
 }

function consider_potentchallenge(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!fighterclass()) | (constitution<15)){document.form1.potentchallenge_box.checked=false; }
 ArrowShow(); 
 }

function light_potentchallenge_star(){
 if (((!class_fighter)) | (constitution<15)){document.form1.potentchallenge_star.src="no_asterisk.gif"; return; }
  document.form1.potentchallenge_star.src="asterisk.gif"; 
 }

function consider_powerattack(){
 if (!doingfeats()){remember_feats(); return; }
 if (strength<15){document.form1.powerattack_box.checked=false; }
 ArrowShow(); 
 }

function light_powerattack_star(){
 if (strength<15){document.form1.powerattack_star.src="no_asterisk.gif"; return; }
  document.form1.powerattack_star.src="asterisk.gif"; 
 }

function consider_powerfulcharge(){
 if (!doingfeats()){remember_feats(); return; }
 if (strength<13){document.form1.powerfulcharge_box.checked=false; }
 ArrowShow(); 
 }

function light_powerfulcharge_star(){
 if (strength<13){document.form1.powerfulcharge_star.src="no_asterisk.gif"; return; }
  document.form1.powerfulcharge_star.src="asterisk.gif"; 
 }

function consider_precisehunter(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!rangerclass()) | (wisdom<15)){document.form1.precisehunter_box.checked=false; }
 ArrowShow(); 
 }

function light_precisehunter_star(){
 if ((!rangerclass()) | (wisdom<15)){document.form1.precisehunter_star.src="no_asterisk.gif"; return; }
  document.form1.precisehunter_star.src="asterisk.gif"; 
 }

function consider_presstheadvantage(){
 if (!doingfeats()){remember_feats(); return; }
 if (((!class_rogue)) | (charisma<15)){document.form1.presstheadvantage_box.checked=false; }
 ArrowShow(); 
 }

function light_presstheadvantage_star(){
 if (((!class_rogue)) | (charisma<15)){document.form1.presstheadvantage_star.src="no_asterisk.gif"; return; }
  document.form1.presstheadvantage_star.src="asterisk.gif"; 
 }

function consider_quickdraw(){
 if (!doingfeats()){remember_feats(); return; }
 if (dexterity<13){document.form1.quickdraw_box.checked=false; }
 ArrowShow(); 
 }

function light_quickdraw_star(){
 if (dexterity<13){document.form1.quickdraw_star.src="no_asterisk.gif"; return; }
  document.form1.quickdraw_star.src="asterisk.gif"; 
 }

function consider_ragingstorm(){
 if (!doingfeats()){remember_feats(); return; }
 if ((constitution<13) | (dexterity<13)){document.form1.ragingstorm_box.checked=false; }
 ArrowShow(); 
 }

function light_ragingstorm_star(){
 if ((constitution<13) | (dexterity<13)){document.form1.ragingstorm_star.src="no_asterisk.gif"; return; }
  document.form1.ragingstorm_star.src="asterisk.gif"; 
 }

function consider_ravenqueensblessing(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.ravenqueensblessing_box.checked=false; }
 ArrowShow(); 
 }

function light_ravenqueensblessing_star(){
 if ((!divinitychanneler())){document.form1.ravenqueensblessing_star.src="no_asterisk.gif"; return; }
  document.form1.ravenqueensblessing_star.src="asterisk.gif"; 
 }

function consider_ritualcaster(){
 if (!doingfeats()){remember_feats(); return; }

 if (
    (
     (!eladrin_arcana)&((!trained_arcana)&(!multi_trained_arcana))&(!document.form1.skilltrainingarcana_box.checked)
     &(!eladrin_religion)&((!trained_religion)&(!multi_trained_religion))&(!document.form1.skilltrainingreligion_box.checked)
    )
    |
    (class_wizard) | (class_other)|(document.form1.alchemistswap_box.checked)
    |(multi_bard_bardicritualist)
    |
    (class_cleric)|(class_bard)|(class_druid)|(class_invoker))
   {document.form1.ritualcaster_box.checked=false; }
   ArrowShow(); 
 }

function light_ritualcaster_star(){
 if (
    (
     (!eladrin_arcana)&((!trained_arcana)&(!multi_trained_arcana))&(!document.form1.skilltrainingarcana_box.checked)
     &(!eladrin_religion)&((!trained_religion)&(!multi_trained_religion))&(!document.form1.skilltrainingreligion_box.checked)
    )
    |
    (class_wizard) | (class_other)
    |(multi_bard_bardicritualist)
    |
    (class_cleric))
   {document.form1.ritualcaster_star.src="no_asterisk.gif"; return; }
   document.form1.ritualcaster_star.src="asterisk.gif"; 
 }

function consider_sehaninesreversal(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!divinitychanneler())){document.form1.sehaninesreversal_box.checked=false; }
 ArrowShow(); 
 }

function light_sehaninesreversal_star(){
 if ((!divinitychanneler())){document.form1.sehaninesreversal_star.src="no_asterisk.gif"; return; }
  document.form1.sehaninesreversal_star.src="asterisk.gif"; 
 }

function consider_angharradhsfavor(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.angharradhsfavor_box.checked=false;}
  ArrowShow();
  }

function light_angharradhsfavor_star(){
  if ((!divinitychanneler())){document.form1.angharradhsfavor_star.src="no_asterisk.gif"; return; }
  document.form1.angharradhsfavor_star.src="asterisk.gif"; 
  }

function consider_avoweddragonfoe(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_dragonborn){document.form1.avoweddragonfoe_box.checked=false;}
  ArrowShow();
  }

function light_avoweddragonfoe_star(){
  if (!race_dragonborn){document.form1.avoweddragonfoe_star.src="no_asterisk.gif"; return; }
  document.form1.avoweddragonfoe_star.src="asterisk.gif"; 
  }

function consider_berronarssalve(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.berronarssalve_box.checked=false;}
  ArrowShow();
  }

function light_berronarssalve_star(){
  if ((!divinitychanneler())){document.form1.berronarssalve_star.src="no_asterisk.gif"; return; }
  document.form1.berronarssalve_star.src="asterisk.gif"; 
  }

function consider_blessingofsilvanus(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.blessingofsilvanus_box.checked=false;}
  ArrowShow();
  }

function light_blessingofsilvanus_star(){
  if ((!divinitychanneler())){document.form1.blessingofsilvanus_star.src="no_asterisk.gif"; return; }
  document.form1.blessingofsilvanus_star.src="asterisk.gif"; 
  }

function consider_brokenshackles(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_dragonborn){document.form1.brokenshackles_box.checked=false;}
  ArrowShow();
  }

function light_brokenshackles_star(){
  if (!race_dragonborn){document.form1.brokenshackles_star.src="no_asterisk.gif"; return; }
  document.form1.brokenshackles_star.src="asterisk.gif"; 
  }

function consider_chaunteasblessing(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.chaunteasblessing_box.checked=false;}
  ArrowShow();
  }

function light_chaunteasblessing_star(){
  if ((!divinitychanneler())){document.form1.chaunteasblessing_star.src="no_asterisk.gif"; return; }
  document.form1.chaunteasblessing_star.src="asterisk.gif"; 
  }

function consider_clutchofdarkness(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_drow){document.form1.clutchofdarkness_box.checked=false;}
  ArrowShow();
  }

function light_clutchofdarkness_star(){
  if (!race_drow){document.form1.clutchofdarkness_star.src="no_asterisk.gif"; return; }
  document.form1.clutchofdarkness_star.src="asterisk.gif"; 
  }

function consider_elementalassault(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!race_genasi)|(!swordmage_assault)){document.form1.elementalassault_box.checked=false;}
  ArrowShow();
  }

function light_elementalassault_star(){
  if ((!race_genasi)|(!swordmage_assault)){document.form1.elementalassault_star.src="no_asterisk.gif"; return; }
  document.form1.elementalassault_star.src="asterisk.gif"; 
  }

function consider_escalatingassault(){
  if (!doingfeats()){remember_feats(); return;}
  if (!swordmage_assault){document.form1.escalatingassault_box.checked=false;}
  ArrowShow();
  }

function light_escalatingassault_star(){
  if (!swordmage_assault){document.form1.escalatingassault_star.src="no_asterisk.gif"; return; }
  document.form1.escalatingassault_star.src="asterisk.gif"; 
  }

function ConsiderDoubleGenies(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_genasi)
   {
    document.form1.extramanifestationearthsoul_box.checked=false;
    document.form1.extramanifestationfiresoul_box.checked=false;
    document.form1.extramanifestationstormsoul_box.checked=false;
    document.form1.extramanifestationwatersoul_box.checked=false;
    document.form1.extramanifestationwindsoul_box.checked=false;
    document.form1.doublemanifestation_box.checked=false;
    return;
   }
   if (genasi_earthsoul){document.form1.extramanifestationearthsoul_box.checked=false;}
   if (genasi_firesoul){document.form1.extramanifestationfiresoul_box.checked=false;}
   if (genasi_stormsoul){document.form1.extramanifestationstormsoul_box.checked=false;}
   if (genasi_watersoul){document.form1.extramanifestationwatersoul_box.checked=false;}
   if (genasi_windsoul){document.form1.extramanifestationwindsoul_box.checked=false;}

   if ((!genasi_firesoul)&(!document.form1.extramanifestationfiresoul_box.checked)&(!genasi_stormsoul)&(!document.form1.extramanifestationstormsoul_box.checked)){document.form1.shockingflame_box.checked=false;}
   if ((!genasi_earthsoul)&(!document.form1.extramanifestationearthsoul_box.checked)){document.form1.stoneguard_box.checked=false;}
   if ((!genasi_windsoul)&(!document.form1.extramanifestationwindsoul_box.checked)&(!genasi_watersoul)&(!document.form1.extramanifestationwatersoul_box.checked)){document.form1.stormrider_box.checked=false;}

   if
    ((
     (!document.form1.extramanifestationearthsoul_box.checked)
     &
     (!document.form1.extramanifestationfiresoul_box.checked)
     &
     (!document.form1.extramanifestationstormsoul_box.checked)
     &
     (!document.form1.extramanifestationwatersoul_box.checked)
     &
     (!document.form1.extramanifestationwindsoul_box.checked)
    )|(total_levels<21)){document.form1.doublemanifestation_box.checked=false;}
   DoubleGenieStars()
   ArrowShow();
 }


function DoubleGenieStars(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_genasi)
   {
    document.form1.extramanifestationearthsoul_star.src="no_asterisk.gif";
    document.form1.extramanifestationfiresoul_star.src="no_asterisk.gif";
    document.form1.extramanifestationstormsoul_star.src="no_asterisk.gif";
    document.form1.extramanifestationwatersoul_star.src="no_asterisk.gif";
    document.form1.extramanifestationwindsoul_star.src="no_asterisk.gif";
    return;
   }
   if (genasi_earthsoul){document.form1.extramanifestationearthsoul_star.src="no_asterisk.gif";}
    else {document.form1.extramanifestationearthsoul_star.src="asterisk.gif";}
   if (genasi_firesoul){document.form1.extramanifestationfiresoul_star.src="no_asterisk.gif";}
    else {document.form1.extramanifestationfiresoul_star.src="asterisk.gif";}
   if (genasi_stormsoul){document.form1.extramanifestationstormsoul_star.src="no_asterisk.gif";}
    else {document.form1.extramanifestationstormsoul_star.src="asterisk.gif";}
   if (genasi_watersoul){document.form1.extramanifestationwatersoul_star.src="no_asterisk.gif";}
    else {document.form1.extramanifestationwatersoul_star.src="asterisk.gif";}
   if (genasi_windsoul){document.form1.extramanifestationwindsoul_star.src="no_asterisk.gif";}
    else {document.form1.extramanifestationwindsoul_star.src="asterisk.gif";}

   if ((genasi_firesoul)|(document.form1.extramanifestationfiresoul_box.checked)|(genasi_stormsoul)|(document.form1.extramanifestationstormsoul_box.checked)){document.form1.shockingflame_star.src="asterisk.gif";}
    else {document.form1.shockingflame_star.src="no_asterisk.gif";}
   if ((genasi_earthsoul)|(document.form1.extramanifestationearthsoul_box.checked)){document.form1.stoneguard_star.src="asterisk.gif";}
    else {document.form1.stoneguard_star.src="no_asterisk.gif";}
   if ((genasi_windsoul)|(document.form1.extramanifestationwindsoul_box.checked)|(genasi_watersoul)|(document.form1.extramanifestationwatersoul_box.checked)){document.form1.stormrider_star.src="asterisk.gif";}
    else {document.form1.stormrider_star.src="no_asterisk.gif";}

   if
    ((
     (document.form1.extramanifestationearthsoul_box.checked)
     |
     (document.form1.extramanifestationfiresoul_box.checked)
     |
     (document.form1.extramanifestationstormsoul_box.checked)
     |
     (document.form1.extramanifestationwatersoul_box.checked)
     |
     (document.form1.extramanifestationwindsoul_box.checked)
    )&(total_levels>20)){document.form1.doublemanifestation_star.src="asterisk.gif";}
     else {document.form1.doublemanifestation_star.src="no_asterisk.gif";}
 }



function consider_eyesofselune(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.eyesofselune_box.checked=false;}
  ArrowShow();
  }

function light_eyesofselune_star(){
  if ((!divinitychanneler())){document.form1.eyesofselune_star.src="no_asterisk.gif"; return; }
  document.form1.eyesofselune_star.src="asterisk.gif"; 
  }

function consider_fleetnessofmielikki(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.fleetnessofmielikki_box.checked=false;}
  ArrowShow();
  }

function light_fleetnessofmielikki_star(){
  if ((!divinitychanneler())){document.form1.fleetnessofmielikki_star.src="no_asterisk.gif"; return; }
  document.form1.fleetnessofmielikki_star.src="asterisk.gif"; 
  }

function consider_ghostwiseheritage(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_halfling){document.form1.ghostwiseheritage_box.checked=false;}
  ArrowShow();
  }

function light_ghostwiseheritage_star(){
  if (!race_halfling){document.form1.ghostwiseheritage_star.src="no_asterisk.gif"; return; }
  document.form1.ghostwiseheritage_star.src="asterisk.gif"; 
  }

function consider_glittergoldsgambit(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.glittergoldsgambit_box.checked=false;}
  ArrowShow();
  }

function light_glittergoldsgambit_star(){
  if ((!divinitychanneler())){document.form1.glittergoldsgambit_star.src="no_asterisk.gif"; return; }
  document.form1.glittergoldsgambit_star.src="asterisk.gif"; 
  }

function consider_golddwarfpride(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_dwarf){document.form1.golddwarfpride_box.checked=false;}
  ArrowShow();
  }

function light_golddwarfpride_star(){
  if (!race_dwarf){document.form1.golddwarfpride_star.src="no_asterisk.gif"; return; }
  document.form1.golddwarfpride_star.src="asterisk.gif"; 
  }

function consider_gondscraft(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.gondscraft_box.checked=false;}
  ArrowShow();
  }

function light_gondscraft_star(){
  if ((!divinitychanneler())){document.form1.gondscraft_star.src="no_asterisk.gif"; return; }
  document.form1.gondscraft_star.src="asterisk.gif"; 
  }

function consider_ilmatersmartyrdom(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.ilmatersmartyrdom_box.checked=false;}
  ArrowShow();
  }

function light_ilmatersmartyrdom_star(){
  if ((!divinitychanneler())){document.form1.ilmatersmartyrdom_star.src="no_asterisk.gif"; return; }
  document.form1.ilmatersmartyrdom_star.src="asterisk.gif"; 
  }

function consider_improvedswordbond(){
  if (!doingfeats()){remember_feats(); return;}
  if (!class_swordmage){document.form1.improvedswordbond_box.checked=false;}
  ArrowShow();
  }

function light_improvedswordbond_star(){
  if (!class_swordmage){document.form1.improvedswordbond_star.src="no_asterisk.gif"; return; }
  document.form1.improvedswordbond_star.src="asterisk.gif"; 
  }

function consider_intelligentblademaster(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!class_swordmage)|(intelligence<=strength)){document.form1.intelligentblademaster_box.checked=false;}
  ArrowShow();
  }

function light_intelligentblademaster_star(){
  if (!class_swordmage){document.form1.intelligentblademaster_star.src="no_asterisk.gif"; return; }
  document.form1.intelligentblademaster_star.src="asterisk.gif"; 
  }

function consider_kelemvorsjudgment(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.kelemvorsjudgment_box.checked=false;}
  ArrowShow();
  }

function light_kelemvorsjudgment_star(){
  if ((!divinitychanneler())){document.form1.kelemvorsjudgment_star.src="no_asterisk.gif"; return; }
  document.form1.kelemvorsjudgment_star.src="asterisk.gif"; 
  }

function consider_manifestresistance(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_genasi){document.form1.manifestresistance_box.checked=false;}
  ArrowShow();
  }

function light_manifestresistance_star(){
  if (!race_genasi){document.form1.manifestresistance_star.src="no_asterisk.gif"; return; }
  document.form1.manifestresistance_star.src="asterisk.gif"; 
  }

function consider_improvedrazorswarm(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_bladeling){document.form1.improvedrazorswarm_box.checked=false;}
  ArrowShow();
  }

function light_improvedrazorswarm_star(){
  if (!race_bladeling){document.form1.improvedrazorswarm_star.src="no_asterisk.gif"; return; }
  document.form1.improvedrazorswarm_star.src="asterisk.gif"; 
  }

function consider_moonelfresilience(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_eladrin){document.form1.moonelfresilience_box.checked=false;}
  document.form1.sunelfgrace_box.checked=false;
  ArrowShow();
  }

function light_moonelfresilience_star(){
  if (!race_eladrin){document.form1.moonelfresilience_star.src="no_asterisk.gif"; return; }
  document.form1.moonelfresilience_star.src="asterisk.gif"; 
  }

function consider_oghmasrecall(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.oghmasrecall_box.checked=false;}
  ArrowShow();
  }

function light_oghmasrecall_star(){
  if ((!divinitychanneler())){document.form1.oghmasrecall_star.src="no_asterisk.gif"; return; }
  document.form1.oghmasrecall_star.src="asterisk.gif"; 
  }

function consider_powerofamaunator(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.powerofamaunator_box.checked=false;}
  ArrowShow();
  }

function light_powerofamaunator_star(){
  if ((!divinitychanneler())){document.form1.powerofamaunator_star.src="no_asterisk.gif"; return; }
  document.form1.powerofamaunator_star.src="asterisk.gif"; 
  }

function consider_retributiveshield(){
  if (!doingfeats()){remember_feats(); return;}
  if (!swordmage_shielding){document.form1.retributiveshield_box.checked=false;}
  ArrowShow();
  }

function light_retributiveshield_star(){
  if (!swordmage_shielding){document.form1.retributiveshield_star.src="no_asterisk.gif"; return; }
  document.form1.retributiveshield_star.src="asterisk.gif"; 
  }

function consider_righteousrageoftempus(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.righteousrageoftempus_box.checked=false;}
  ArrowShow();
  }

function light_righteousrageoftempus_star(){
  if ((!divinitychanneler())){document.form1.righteousrageoftempus_star.src="no_asterisk.gif"; return; }
  document.form1.righteousrageoftempus_star.src="asterisk.gif"; 
  }

function consider_ruthlesshunter(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_drow){document.form1.ruthlesshunter_box.checked=false;}
  ArrowShow();
  }

function light_ruthlesshunter_star(){
  if (!race_drow){document.form1.ruthlesshunter_star.src="no_asterisk.gif"; return; }
  document.form1.ruthlesshunter_star.src="asterisk.gif"; 
  }

function consider_scionofthegods(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_tiefling){document.form1.scionofthegods_box.checked=false;}
  ArrowShow();
  }

function light_scionofthegods_star(){
  if (!race_tiefling){document.form1.scionofthegods_star.src="no_asterisk.gif"; return; }
  document.form1.scionofthegods_star.src="asterisk.gif"; 
  }

function consider_sheelaperyroylsgift(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.sheelaperyroylsgift_box.checked=false;}
  ArrowShow();
  }

function light_sheelaperyroylsgift_star(){
  if ((!divinitychanneler())){document.form1.sheelaperyroylsgift_star.src="no_asterisk.gif"; return; }
  document.form1.sheelaperyroylsgift_star.src="asterisk.gif"; 
  }

function consider_shieldofshadows(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_drow){document.form1.shieldofshadows_box.checked=false;}
  ArrowShow();
  }

function light_shieldofshadows_star(){
  if (!race_drow){document.form1.shieldofshadows_star.src="no_asterisk.gif"; return; }
  document.form1.shieldofshadows_star.src="asterisk.gif"; 
  }

function consider_shieldthefallen(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_dwarf){document.form1.shieldthefallen_box.checked=false;}
  ArrowShow();
  }

function light_shieldthefallen_star(){
  if (!race_dwarf){document.form1.shieldthefallen_star.src="no_asterisk.gif"; return; }
  document.form1.shieldthefallen_star.src="asterisk.gif"; 
  }

function consider_stubbornsurvivor(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!race_human)&(!race_halfelf)){document.form1.stubbornsurvivor_box.checked=false;}
  ArrowShow();
  }

function light_stubbornsurvivor_star(){
  if ((!race_human)&(!race_halfelf)){document.form1.stubbornsurvivor_star.src="no_asterisk.gif"; return; }
  document.form1.stubbornsurvivor_star.src="asterisk.gif"; 
  }

function consider_studentofswordmagic(){
  if (!doingfeats()){remember_feats(); return;}
  if (!class_swordmage){document.form1.studentofswordmagic_box.checked=false;}
  ArrowShow();
  }

function light_studentofswordmagic_star(){
  if (!class_swordmage){document.form1.studentofswordmagic_star.src="no_asterisk.gif"; return; }
  document.form1.studentofswordmagic_star.src="asterisk.gif"; 
  }

function consider_sunelfgrace(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_eladrin){document.form1.sunelfgrace_box.checked=false;}
  document.form1.moonelfresilience_box.checked=false;
  ArrowShow();
  }

function light_sunelfgrace_star(){
  if (!race_eladrin){document.form1.sunelfgrace_star.src="no_asterisk.gif"; return; }
  document.form1.sunelfgrace_star.src="asterisk.gif"; 
  }

function consider_sunestouch(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.sunestouch_box.checked=false;}
  ArrowShow();
  }

function light_sunestouch_star(){
  if ((!divinitychanneler())){document.form1.sunestouch_star.src="no_asterisk.gif"; return; }
  document.form1.sunestouch_star.src="asterisk.gif"; 
  }

function consider_tormsjustice(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.tormsjustice_box.checked=false;}
  ArrowShow();
  }

function light_tormsjustice_star(){
  if ((!divinitychanneler())){document.form1.tormsjustice_star.src="no_asterisk.gif"; return; }
  document.form1.tormsjustice_star.src="asterisk.gif"; 
  }

function consider_tymorascoin(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.tymorascoin_box.checked=false;}
  ArrowShow();
  }

function light_tymorascoin_star(){
  if ((!divinitychanneler())){document.form1.tymorascoin_star.src="no_asterisk.gif"; return; }
  document.form1.tymorascoin_star.src="asterisk.gif"; 
  }

function consider_versatileresistance(){
  if (!doingfeats()){remember_feats(); return;}
  if (!race_genasi){document.form1.versatileresistance_box.checked=false;}
  ArrowShow();
  }

function light_versatileresistance_star(){
  if (!race_genasi){document.form1.versatileresistance_star.src="no_asterisk.gif"; return; }
  document.form1.versatileresistance_star.src="asterisk.gif"; 
  }

function consider_waukeenssilvertongue(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!divinitychanneler())){document.form1.waukeenssilvertongue_box.checked=false;}
  ArrowShow();
  }

function light_waukeenssilvertongue_star(){
  if ((!divinitychanneler())){document.form1.waukeenssilvertongue_star.src="no_asterisk.gif"; return; }
  document.form1.waukeenssilvertongue_star.src="asterisk.gif"; 
  }

function consider_alchemist(){
  if (!doingfeats()){remember_feats(); return;}
  if (document.form1.alchemistswap_box.checked){document.form1.alchemist_box.checked=false;}
  ArrowShow();
  }

function light_alchemist_star(){
  if (document.form1.alchemistswap_box.checked){document.form1.alchemist_star.src="no_asterisk.gif";return;}
  document.form1.alchemist_star.src="asterisk.gif"; 
  }

function consider_alchemistswap(){
  if (!doingfeats()){remember_feats(); return;}
  if ((document.form1.alchemist_box.checked)|((!class_cleric)&(!class_wizard)&(!class_bard)&(!class_druid)&(!class_invoker))){document.form1.alchemistswap_box.checked=false;}
  consider_ritualcaster();
  ArrowShow();
  }

function light_alchemistswap_star(){
  if ((document.form1.alchemist_box.checked)|((!class_cleric)&(!class_wizard)&(!class_bard)&(!class_druid)&(!class_invoker))){document.form1.alchemistswap_star.src="no_asterisk.gif";return;}
  
  document.form1.alchemistswap_star.src="asterisk.gif"; 
  }

function consider_wildelfluck(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!race_elf)&(!race_halfelf)){document.form1.wildelfluck_box.checked=false;}
  document.form1.woodelfagility_box.checked=false;
  ArrowShow();
  }

function light_wildelfluck_star(){
  if ((!race_elf)&(!race_halfelf)){document.form1.wildelfluck_star.src="no_asterisk.gif"; return; }
  document.form1.wildelfluck_star.src="asterisk.gif"; 
  }

function consider_woodelfagility(){
  if (!doingfeats()){remember_feats(); return;}
  if ((!race_elf)&(!race_halfelf)){document.form1.woodelfagility_box.checked=false;}
  document.form1.wildelfluck_box.checked=false;
  ArrowShow();
  }

function light_woodelfagility_star(){
  if ((!race_elf)&(!race_halfelf)){document.form1.woodelfagility_star.src="no_asterisk.gif"; return; }
  document.form1.woodelfagility_star.src="asterisk.gif"; 
  }



function consider_demonwebspiral(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)|(!warlock_dark)){document.form1.demonwebspiral_box.checked=false;}
  ArrowShow();
  }

function light_demonwebspiral_star(){
 if ((total_levels<11)|(!warlock_dark)){document.form1.demonwebspiral_star.src="no_asterisk.gif";return;}
 document.form1.demonwebspiral_star.src="asterisk.gif";
 }

function consider_distantswordbond(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)|(!swordmageclass())){document.form1.distantswordbond_box.checked=false;}
  ArrowShow();
  }

function light_distantswordbond_star(){
 if ((total_levels<11)|(!swordmageclass())){document.form1.distantswordbond_star.src="no_asterisk.gif";return;}
 document.form1.distantswordbond_star.src="asterisk.gif";
 }

function consider_doubleaegis(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)|(!swordmageclass())){document.form1.doubleaegis_box.checked=false;}
  ArrowShow();
  }

function light_doubleaegis_star(){
 if ((total_levels<11)|(!swordmageclass())){document.form1.doubleaegis_star.src="no_asterisk.gif";return;}
 document.form1.doubleaegis_star.src="asterisk.gif";
 }

function consider_improveddarkspiralaura(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)|(!warlock_dark)){document.form1.improveddarkspiralaura_box.checked=false;}
  ArrowShow();
  }

function light_improveddarkspiralaura_star(){
 if ((total_levels<11)|(!warlock_dark)){document.form1.improveddarkspiralaura_star.src="no_asterisk.gif";return;}
 document.form1.improveddarkspiralaura_star.src="asterisk.gif";
 }

function consider_masteroffireanddarkness(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)|(!race_drow)){document.form1.masteroffireanddarkness_box.checked=false;}
  ArrowShow();
  }

function light_masteroffireanddarkness_star(){
 if ((total_levels<11)|(!race_drow)){document.form1.masteroffireanddarkness_star.src="no_asterisk.gif";return;}
 document.form1.masteroffireanddarkness_star.src="asterisk.gif";
 }

function consider_mercilesskiller(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)|(!race_drow)){document.form1.mercilesskiller_box.checked=false;}
  ArrowShow();
  }

function light_mercilesskiller_star(){
 if ((total_levels<11)|(!race_drow)){document.form1.mercilesskiller_star.src="no_asterisk.gif";return;}
 document.form1.mercilesskiller_star.src="asterisk.gif";
 }

function consider_moongleamoath(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)){document.form1.moongleamoath_box.checked=false;}
  ArrowShow();
  }

function light_moongleamoath_star(){
 if ((total_levels<11)){document.form1.moongleamoath_star.src="no_asterisk.gif";return;}
 document.form1.moongleamoath_star.src="asterisk.gif";
 }


function consider_venemousheritage(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)|(!race_drow)){document.form1.venemousheritage_box.checked=false;}
  ArrowShow();
  }

function light_venemousheritage_star(){
 if ((total_levels<11)|(!race_drow)){document.form1.venemousheritage_star.src="no_asterisk.gif";return;}
 document.form1.venemousheritage_star.src="asterisk.gif";
 }

function consider_warwizardry(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)|((!swordmageclass())&(!warlockclass())&(!wizardclass()))){document.form1.warwizardry_box.checked=false;}
  ArrowShow();
  }

function light_warwizardry_star(){
 if ((total_levels<11)|((!swordmageclass())&(!warlockclass())&(!wizardclass()))){document.form1.warwizardry_star.src="no_asterisk.gif";return;}
 document.form1.warwizardry_star.src="asterisk.gif";
 }


function consider_agileopportunist(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)){document.form1.agileopportunist_box.checked=false;}
  ArrowShow();
  }

function light_agileopportunist_star(){
 if ((total_levels<11)){document.form1.agileopportunist_star.src="no_asterisk.gif";return;}
 document.form1.agileopportunist_star.src="asterisk.gif";
 }


function consider_paragondefenses(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)){document.form1.paragondefenses_box.checked=false;}
  ArrowShow();
  }

function light_paragondefenses_star(){
 if ((total_levels<11)){document.form1.paragondefenses_star.src="no_asterisk.gif";return;}
 document.form1.paragondefenses_star.src="asterisk.gif";
 }


function consider_quickrecovery(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)){document.form1.quickrecoveryfeat_box.checked=false;}
  ArrowShow();
  }

function light_quickrecoveryfeat_star(){
 if ((total_levels<11)){document.form1.quickrecoveryfeat_star.src="no_asterisk.gif";return;}
 document.form1.quickrecoveryfeat_star.src="asterisk.gif";
 }


function consider_reservemaneuver(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<11)){document.form1.reservemaneuver_box.checked=false;}
  ArrowShow();
  }

function light_reservemaneuver_star(){
 if ((total_levels<11)){document.form1.reservemaneuver_star.src="no_asterisk.gif";return;}
 document.form1.reservemaneuver_star.src="asterisk.gif";
 }


function consider_totalaegis(){
  if (!doingfeats()){remember_feats();return;}
  if ((total_levels<21)|(!swordmageclass())){document.form1.totalaegis_box.checked=false;}
  ArrowShow();
  }

function light_totalaegis_star(){
 if ((total_levels<21)|(!swordmageclass())){document.form1.totalaegis_star.src="no_asterisk.gif";return;}
 document.form1.totalaegis_star.src="asterisk.gif";
 }




function consider_aggressiveassault(){
 if (!doingfeats()){remember_feats();return;}
 if ((!rogue_brutalscoundrel)){document.form1.aggressiveassault_box.checked=false;}
 ArrowShow();
 }

function light_aggressiveassault_star(){
 if ((!rogue_brutalscoundrel)){document.form1.aggressiveassault_star.src="no_asterisk.gif";return;}
 document.form1.aggressiveassault_star.src="asterisk.gif";
 }

function consider_anklecutter(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halfling)|(!rogueclass())){document.form1.anklecutter_box.checked=false;}
 ArrowShow();
 }

function light_anklecutter_star(){
 if ((!race_halfling)|(!rogueclass())){document.form1.anklecutter_star.src="no_asterisk.gif";return;}
 document.form1.anklecutter_star.src="asterisk.gif";
 }

function consider_beastguidance(){
 if (!doingfeats()){remember_feats();return;}
 if ((!ranger_beastmaster)){document.form1.beastguidance_box.checked=false;}
 ArrowShow();
 }

function light_beastguidance_star(){
 if ((!ranger_beastmaster)){document.form1.beastguidance_star.src="no_asterisk.gif";return;}
 document.form1.beastguidance_star.src="asterisk.gif";
 }

function consider_beastprotector(){
 if (!doingfeats()){remember_feats();return;}
 if ((!ranger_beastmaster)){document.form1.beastprotector_box.checked=false;}
 ArrowShow();
 }

function light_beastprotector_star(){
 if ((!ranger_beastmaster)){document.form1.beastprotector_star.src="no_asterisk.gif";return;}
 document.form1.beastprotector_star.src="asterisk.gif";
 }

function consider_beasttrainingathletics(){
 if (!doingfeats()){remember_feats();return;}
 if ((!ranger_beastmaster)|(beast_bear)|(beast_lizard)|(beast_spider)|(beast_cat)){document.form1.beasttrainingathletics_box.checked=false;}
 ArrowShow();
 }

function light_beasttrainingathletics_star(){
 if ((!ranger_beastmaster)|(beast_bear)|(beast_lizard)|(beast_spider)|(beast_cat)){document.form1.beasttrainingathletics_star.src="no_asterisk.gif";return;}
 document.form1.beasttrainingathletics_star.src="asterisk.gif";
 }

function consider_beasttrainingendurance(){
 if (!doingfeats()){remember_feats();return;}
 if ((!ranger_beastmaster)|(beast_bear)|(beast_boar)|(beast_lizard)|(beast_wolf)){document.form1.beasttrainingendurance_box.checked=false;}
 ArrowShow();
 }

function light_beasttrainingendurance_star(){
 if ((!ranger_beastmaster)|(beast_bear)|(beast_boar)|(beast_lizard)|(beast_wolf)){document.form1.beasttrainingendurance_star.src="no_asterisk.gif";return;}
 document.form1.beasttrainingendurance_star.src="asterisk.gif";
 }

function consider_beasttrainingperception(){
 if (!doingfeats()){remember_feats();return;}
 if ((!ranger_beastmaster)|(beast_raptor)|(beast_wolf)){document.form1.beasttrainingperception_box.checked=false;}
 ArrowShow();
 }

function light_beasttrainingperception_star(){
 if ((!ranger_beastmaster)|(beast_raptor)|(beast_wolf)){document.form1.beasttrainingperception_star.src="no_asterisk.gif";return;}
 document.form1.beasttrainingperception_star.src="asterisk.gif";
 }

function consider_beasttrainingstealth(){
 if (!doingfeats()){remember_feats();return;}
 if ((!ranger_beastmaster)|(beast_cat)|(beast_serpent)|(beast_spider)){document.form1.beasttrainingstealth_box.checked=false;}
 ArrowShow();
 }

function light_beasttrainingstealth_star(){
 if ((!ranger_beastmaster)|(beast_cat)|(beast_serpent)|(beast_spider)){document.form1.beasttrainingstealth_star.src="no_asterisk.gif";return;}
 document.form1.beasttrainingstealth_star.src="asterisk.gif";
 }

function consider_bloodiedinvigoration(){
 if (!doingfeats()){remember_feats();return;}
 if ((constitution<13)|(!race_dragonborn)|(!fighterclass())){document.form1.bloodiedinvigoration_box.checked=false;}
 ArrowShow();
 }

function light_bloodiedinvigoration_star(){
 if ((constitution<13)|(!race_dragonborn)|(!fighterclass())){document.form1.bloodiedinvigoration_star.src="no_asterisk.gif";return;}
 document.form1.bloodiedinvigoration_star.src="asterisk.gif";
 }

function consider_bolsteringinspiration(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_dwarf)|(!class_warlord)){document.form1.bolsteringinspiration_box.checked=false;}
 ArrowShow();
 }

function light_bolsteringinspiration_star(){
 if ((!race_dwarf)|(!class_warlord)){document.form1.bolsteringinspiration_star.src="no_asterisk.gif";return;}
 document.form1.bolsteringinspiration_star.src="asterisk.gif";
 }

function consider_bracingbreath(){
 if (!doingfeats()){remember_feats();return;}
 if ((constitution<13)|(!race_dragonborn)|!(class_fighter)){document.form1.bracingbreath_box.checked=false;}
 ArrowShow();
 }

function light_bracingbreath_star(){
 if ((constitution<13)|(!race_dragonborn)|!(class_fighter)){document.form1.bracingbreath_star.src="no_asterisk.gif";return;}
 document.form1.bracingbreath_star.src="asterisk.gif";
 }

function consider_bravuraspirit(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_dragonborn)|(!warlord_bravura)){document.form1.bravuraspirit_box.checked=false;}
 ArrowShow();
 }

function light_bravuraspirit_star(){
 if ((!race_dragonborn)|(!warlord_bravura)){document.form1.bravuraspirit_star.src="no_asterisk.gif";return;}
 document.form1.bravuraspirit_star.src="asterisk.gif";
 }

function consider_breathresistantbeast(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_dragonborn)|(!ranger_beastmaster)){document.form1.breathresistantbeast_box.checked=false;}
 ArrowShow();
 }

function light_breathresistantbeast_star(){
 if ((!race_dragonborn)|(!ranger_beastmaster)){document.form1.breathresistantbeast_star.src="no_asterisk.gif";return;}
 document.form1.breathresistantbeast_star.src="asterisk.gif";
 }

function consider_brutalaccuracy(){
 if (!doingfeats()){remember_feats();return;}
 if (((!race_elf)&(!race_halfelf))|(!class_ranger)){document.form1.brutalaccuracy_box.checked=false;}
 ArrowShow();
 }

function light_brutalaccuracy_star(){
 if (((!race_elf)&(!race_halfelf))|(!rangerclass())){document.form1.brutalaccuracy_star.src="no_asterisk.gif";return;}
 document.form1.brutalaccuracy_star.src="asterisk.gif";
 }

function consider_brutalteamwork(){
 if (!doingfeats()){remember_feats();return;}
 if ((strength<15)|(!race_dragonborn)|(!rogueclass())){document.form1.brutalteamwork_box.checked=false;}
 ArrowShow();
 }

function light_brutalteamwork_star(){
 if ((strength<15)|(!race_dragonborn)|(!rogueclass())){document.form1.brutalteamwork_star.src="no_asterisk.gif";return;}
 document.form1.brutalteamwork_star.src="asterisk.gif";
 }

function consider_brutalwound(){
 if (!doingfeats()){remember_feats();return;}
 if ((!rogue_brutalscoundrel)){document.form1.brutalwound_box.checked=false;}
 ArrowShow();
 }

function light_brutalwound_star(){
 if ((!rogue_brutalscoundrel)){document.form1.brutalwound_star.src="no_asterisk.gif";return;}
 document.form1.brutalwound_star.src="asterisk.gif";
 }

function consider_camouflage(){
 if (!doingfeats()){remember_feats();return;}
 if ((!rangerclass())|(!TrainedInStealth())){document.form1.camouflage_box.checked=false;}
 ArrowShow();
 }

function light_camouflage_star(){
 if ((!rangerclass())|(!TrainedInStealth())){document.form1.camouflage_star.src="no_asterisk.gif";return;}
 document.form1.camouflage_star.src="asterisk.gif";
 }

function consider_commandthedarkness(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_drow)|(!warlordclass())){document.form1.commandthedarkness_box.checked=false;}
 ArrowShow();
 }

function light_commandthedarkness_star(){
 if ((!race_drow)|(!warlordclass())){document.form1.commandthedarkness_star.src="no_asterisk.gif";return;}
 document.form1.commandthedarkness_star.src="asterisk.gif";
 }

function consider_coordinatedopportunity(){
 if (!doingfeats()){remember_feats();return;}
 if (!ranger_beastmaster){document.form1.coordinatedopportunity_box.checked=false;}
 ArrowShow();
 }

function light_coordinatedopportunity_star(){
 if (!ranger_beastmaster){document.form1.coordinatedopportunity_star.src="no_asterisk.gif";return;}
 document.form1.coordinatedopportunity_star.src="asterisk.gif";
 }

function consider_cunningambusher(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_tiefling)|(!rogueclass())){document.form1.cunningambusher_box.checked=false;}
 ArrowShow();
 }

function light_cunningambusher_star(){
 if ((!race_tiefling)|(!rogueclass())){document.form1.cunningambusher_star.src="no_asterisk.gif";return;}
 document.form1.cunningambusher_star.src="asterisk.gif";
 }

function consider_darkfiretargeting(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_drow)|((class_ranger)&(class_rogue))){document.form1.darkfiretargeting_box.checked=false;}
 ArrowShow();
 }

function light_darkfiretargeting_star(){
 if ((!race_drow)|((class_ranger)&(class_rogue))){document.form1.darkfiretargeting_star.src="no_asterisk.gif";return;}
 document.form1.darkfiretargeting_star.src="asterisk.gif";
 }

function consider_deepgash(){
 if (!doingfeats()){remember_feats();return;}
 if ((constitution<15)|(!fighterclass())){document.form1.deepgash_box.checked=false;}
 ArrowShow();
 }

function light_deepgash_star(){
 if ((constitution<15)|(!fighterclass())){document.form1.deepgash_star.src="no_asterisk.gif";return;}
 document.form1.deepgash_star.src="asterisk.gif";
 }

function consider_defensiveresilience(){
 if (!doingfeats()){remember_feats();return;}
 if ((constitution<13)|(wisdom<13)|(!fighterclass())){document.form1.defensiveresilience_box.checked=false;}
 ArrowShow();
 }

function light_defensiveresilience_star(){
 if ((constitution<13)|(wisdom<13)|(!fighterclass())){document.form1.defensiveresilience_star.src="no_asterisk.gif";return;}
 document.form1.defensiveresilience_star.src="asterisk.gif";
 }

function consider_devotedchallenge(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_dwarf)|(!class_fighter)){document.form1.devotedchallenge_box.checked=false;}
 ArrowShow();
 }

function light_devotedchallenge_star(){
 if ((!race_dwarf)|(!class_fighter)){document.form1.devotedchallenge_star.src="no_asterisk.gif";return;}
 document.form1.devotedchallenge_star.src="asterisk.gif";
 }

function consider_dirtyfighting(){
 if (!doingfeats()){remember_feats();return;}
 if ((!fighterclass())&(!rogueclass())){document.form1.dirtyfighting_box.checked=false;}
 ArrowShow();
 }

function light_dirtyfighting_star(){
 if ((!fighterclass())&(!rogueclass())){document.form1.dirtyfighting_star.src="no_asterisk.gif";return;}
 document.form1.dirtyfighting_star.src="asterisk.gif";
 }

function consider_draggingflail(){
 if (!doingfeats()){remember_feats();return;}
 if ((dexterity<15)|(!fighterclass())){document.form1.draggingflail_box.checked=false;}
 ArrowShow();
 }

function light_draggingflail_star(){
 if ((dexterity<15)|(!fighterclass())){document.form1.draggingflail_star.src="no_asterisk.gif";return;}
 document.form1.draggingflail_star.src="asterisk.gif";
 }

function consider_drowbeastmastery(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_drow)|(!ranger_beastmaster)){document.form1.drowbeastmastery_box.checked=false;}
 ArrowShow();
 }

function light_drowbeastmastery_star(){
 if ((!race_drow)|(!ranger_beastmaster)){document.form1.drowbeastmastery_star.src="no_asterisk.gif";return;}
 document.form1.drowbeastmastery_star.src="asterisk.gif";
 }

function consider_dwarfstoneblood(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_dwarf)|(!fighter_battlerager)){document.form1.dwarfstoneblood_box.checked=false;}
 ArrowShow();
 }

function light_dwarfstoneblood_star(){
 if ((!race_dwarf)|(!fighter_battlerager)){document.form1.dwarfstoneblood_star.src="no_asterisk.gif";return;}
 document.form1.dwarfstoneblood_star.src="asterisk.gif";
 }

function consider_dwarftrapsmith(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_dwarf)|(!rogueclass())){document.form1.dwarftrapsmith_box.checked=false;}
 ArrowShow();
 }

function light_dwarftrapsmith_star(){
 if ((!race_dwarf)|(!rogueclass())){document.form1.dwarftrapsmith_star.src="no_asterisk.gif";return;}
 document.form1.dwarftrapsmith_star.src="asterisk.gif";
 }

function consider_elvenbeastmastery(){
 if (!doingfeats()){remember_feats();return;}
 if (((!race_elf)&(!race_halfelf))|(!ranger_beastmaster)){document.form1.elvenbeastmastery_box.checked=false;}
 ArrowShow();
 }

function light_elvenbeastmastery_star(){
 if (((!race_elf)&(!race_halfelf))|(!ranger_beastmaster)){document.form1.elvenbeastmastery_star.src="no_asterisk.gif";return;}
 document.form1.elvenbeastmastery_star.src="asterisk.gif";
 }

function consider_experttracker(){
 if (!doingfeats()){remember_feats();return;}
 if ((!rangerclass())|(!TrainedInNature())|(!wisdom<13)){document.form1.experttracker_box.checked=false;}
 ArrowShow();
 }

function light_experttracker_star(){
 if ((!rangerclass())|(!TrainedInNature())|(!wisdom<13)){document.form1.experttracker_star.src="no_asterisk.gif";return;}
 document.form1.experttracker_star.src="asterisk.gif";
 }

function consider_feyblades(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_eladrin)|(!fighter_tempesttechnique)){document.form1.feyblades_box.checked=false;}
 ArrowShow();
 }

function light_feyblades_star(){
 if ((!race_eladrin)|(!fighter_tempesttechnique)){document.form1.feyblades_star.src="no_asterisk.gif";return;}
 document.form1.feyblades_star.src="asterisk.gif";
 }

function consider_feycommand(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_eladrin)|(!warlord_tactical)){document.form1.feycommand_box.checked=false;}
 ArrowShow();
 }

function light_feycommand_star(){
 if ((!race_eladrin)|(!warlord_tactical)){document.form1.feycommand_star.src="no_asterisk.gif";return;}
 document.form1.feycommand_star.src="asterisk.gif";
 }

function consider_feyborncompanion(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_eladrin)|(!ranger_beastmaster)){document.form1.feyborncompanion_box.checked=false;}
 ArrowShow();
 }

function light_feyborncompanion_star(){
 if ((!race_eladrin)|(!ranger_beastmaster)){document.form1.feyborncompanion_star.src="no_asterisk.gif";return;}
 document.form1.feyborncompanion_star.src="asterisk.gif";
 }

function consider_fiendishcompanion(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_tiefling)|(!ranger_beastmaster)){document.form1.fiendishcompanion_box.checked=false;}
 ArrowShow();
 }

function light_fiendishcompanion_star(){
 if ((!race_tiefling)|(!ranger_beastmaster)){document.form1.fiendishcompanion_star.src="no_asterisk.gif";return;}
 document.form1.fiendishcompanion_star.src="asterisk.gif";
 }

function consider_groupassault(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halfelf)|(!fighterclass())){document.form1.groupassault_box.checked=false;}
 ArrowShow();
 }

function light_groupassault_star(){
 if ((!race_halfelf)|(!fighterclass())){document.form1.groupassault_star.src="no_asterisk.gif";return;}
 document.form1.groupassault_star.src="asterisk.gif";
 }

function consider_groupquarry(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halfelf)|(!rangerclass())){document.form1.groupquarry_box.checked=false;}
 ArrowShow();
 }

function light_groupquarry_star(){
 if ((!race_halfelf)|(!rangerclass())){document.form1.groupquarry_star.src="no_asterisk.gif";return;}
 document.form1.groupquarry_star.src="asterisk.gif";
 }

function consider_grouprattling(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halfelf)|(!rogueclass())|(!TrainedInIntimidate())){document.form1.grouprattling_box.checked=false;}
 ArrowShow();
 }

function light_grouprattling_star(){
 if ((!race_halfelf)|(!rogueclass())|(!TrainedInIntimidate())){document.form1.grouprattling_star.src="no_asterisk.gif";return;}
 document.form1.grouprattling_star.src="asterisk.gif";
 }

function consider_halflingstalwart(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halfling)|(!class_fighter)){document.form1.halflingstalwart_box.checked=false;}
 ArrowShow();
 }

function light_halflingstalwart_star(){
 if ((!race_halfling)|(!class_fighter)){document.form1.halflingstalwart_star.src="no_asterisk.gif";return;}
 document.form1.halflingstalwart_star.src="asterisk.gif";
 }

function consider_humanbeastmastery(){
 if (!doingfeats()){remember_feats();return;}
 if (((!race_human)&(!race_halfelf))|(!ranger_beastmaster)){document.form1.humanbeastmastery_box.checked=false;}
 ArrowShow();
 }

function light_humanbeastmastery_star(){
 if (((!race_human)&(!race_halfelf))|(!ranger_beastmaster)){document.form1.humanbeastmastery_star.src="no_asterisk.gif";return;}
 document.form1.humanbeastmastery_star.src="asterisk.gif";
 }

function consider_hunterofwindandwave(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_genasi)|(!class_ranger)){document.form1.hunterofwindandwave_box.checked=false;}
 ArrowShow();
 }

function light_hunterofwindandwave_star(){
 if ((!race_genasi)|(!class_ranger)){document.form1.hunterofwindandwave_star.src="no_asterisk.gif";return;}
 document.form1.hunterofwindandwave_star.src="asterisk.gif";
 }

function consider_huntersaim(){
 if (!doingfeats()){remember_feats();return;}
 if ((!class_ranger)&(!multi_ranger_warriorofthewild)){document.form1.huntersaim_box.checked=false;}
 ArrowShow();
 }

function light_huntersaim_star(){
 if ((!class_ranger)&(!multi_ranger_warriorofthewild)){document.form1.huntersaim_star.src="no_asterisk.gif";return;}
 document.form1.huntersaim_star.src="asterisk.gif";
 }

function consider_improvedbravura(){
 if (!doingfeats()){remember_feats();return;}
 if (!warlord_bravura){document.form1.improvedbravura_box.checked=false;}
 ArrowShow();
 }

function light_improvedbravura_star(){
 if (!warlord_bravura){document.form1.improvedbravura_star.src="no_asterisk.gif";return;}
 document.form1.improvedbravura_star.src="asterisk.gif";
 }

function consider_improvedinspiration(){
 if (!doingfeats()){remember_feats();return;}
 if (!warlord_inspiring){document.form1.improvedinspiration_box.checked=false;}
 ArrowShow();
 }

function light_improvedinspiration_star(){
 if (!warlord_inspiring){document.form1.improvedinspiration_star.src="no_asterisk.gif";return;}
 document.form1.improvedinspiration_star.src="asterisk.gif";
 }

function consider_improvedinspiringword(){
 if (!doingfeats()){remember_feats();return;}
 if (!warlordclass()){document.form1.improvedinspiringword_box.checked=false;}
 ArrowShow();
 }

function light_improvedinspiringword_star(){
 if (!warlordclass()){document.form1.improvedinspiringword_star.src="no_asterisk.gif";return;}
 document.form1.improvedinspiringword_star.src="asterisk.gif";
 }

function consider_improvedresources(){
 if (!doingfeats()){remember_feats();return;}
 if (!warlord_resourceful){document.form1.improvedresources_box.checked=false;}
 ArrowShow();
 }

function light_improvedresources_star(){
 if (!warlord_resourceful){document.form1.improvedresources_star.src="no_asterisk.gif";return;}
 document.form1.improvedresources_star.src="asterisk.gif";
 }

function consider_improvedtactics(){
 if (!doingfeats()){remember_feats();return;}
 if (!warlord_tactical){document.form1.improvedtactics_box.checked=false;}
 ArrowShow();
 }

function light_improvedtactics_star(){
 if (!warlord_tactical){document.form1.improvedtactics_star.src="no_asterisk.gif";return;}
 document.form1.improvedtactics_star.src="asterisk.gif";
 }

function consider_improvedvigor(){
 if (!doingfeats()){remember_feats();return;}
 if ((!fighterclass())|(!TrainedInEndurance())){document.form1.improvedvigor_box.checked=false;}
 ArrowShow();
 }

function light_improvedvigor_star(){
 if ((!fighterclass())|(!TrainedInEndurance())){document.form1.improvedvigor_star.src="no_asterisk.gif";return;}
 document.form1.improvedvigor_star.src="asterisk.gif";
 }

function consider_inspireddefense(){
 if (!doingfeats()){remember_feats();return;}
 if (((!race_human)&(!race_halfelf))|(!warlordclass())){document.form1.inspireddefense_box.checked=false;}
 ArrowShow();
 }

function light_inspireddefense_star(){
 if (((!race_human)&(!race_halfelf))|(!warlordclass())){document.form1.inspireddefense_star.src="no_asterisk.gif";return;}
 document.form1.inspireddefense_star.src="asterisk.gif";
 }

function consider_inspiredtactics(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halfelf)|(!warlord_inspiring)){document.form1.inspiredtactics_box.checked=false;}
 ArrowShow();
 }

function light_inspiredtactics_star(){
 if ((!race_halfelf)|(!warlord_inspiring)){document.form1.inspiredtactics_star.src="no_asterisk.gif";return;}
 document.form1.inspiredtactics_star.src="asterisk.gif";
 }

function consider_intothefraymp(){
 if (!doingfeats()){remember_feats();return;}
 if (!class_rogue){document.form1.intothefraymp_box.checked=false;}
 ArrowShow();
 }

function light_intothefraymp_star(){
 if (!class_rogue){document.form1.intothefraymp_star.src="no_asterisk.gif";return;}
 document.form1.intothefraymp_star.src="asterisk.gif";
 }

function consider_keeperofstorm(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_genasi)|(!class_fighter)){document.form1.keeperofstorm_box.checked=false;}
 ArrowShow();
 }

function light_keeperofstorm_star(){
 if ((!race_genasi)|(!class_fighter)){document.form1.keeperofstorm_star.src="no_asterisk.gif";return;}
 document.form1.keeperofstorm_star.src="asterisk.gif";
 }

function consider_leadingfire(){
 if (!doingfeats()){remember_feats();return;}
 if (((!race_elf)&(!race_halfelf))|(!class_warlord)){document.form1.leadingfire_box.checked=false;}
 ArrowShow();
 }

function light_leadingfire_star(){
 if (((!race_elf)&(!race_halfelf))|(!class_warlord)){document.form1.leadingfire_star.src="no_asterisk.gif";return;}
 document.form1.leadingfire_star.src="asterisk.gif";
 }

function consider_lendmight(){
 if (!doingfeats()){remember_feats();return;}
 if (!warlordclass()){document.form1.lendmight_box.checked=false;}
 ArrowShow();
 }

function light_lendmight_star(){
 if (!warlordclass()){document.form1.lendmight_star.src="no_asterisk.gif";return;}
 document.form1.lendmight_star.src="asterisk.gif";
 }

function consider_lingeringwrath(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_tiefling)|(!class_fighter)){document.form1.lingeringwrath_box.checked=false;}
 ArrowShow();
 }

function light_lingeringwrath_star(){
 if ((!race_tiefling)|(!class_fighter)){document.form1.lingeringwrath_star.src="no_asterisk.gif";return;}
 document.form1.lingeringwrath_star.src="asterisk.gif";
 }

function consider_longswordfinesse(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_eladrin)|(!rogueclass())){document.form1.longswordfinesse_box.checked=false;}
 ArrowShow();
 }

function light_longswordfinesse_star(){
 if ((!race_eladrin)|(!rogueclass())){document.form1.longswordfinesse_star.src="no_asterisk.gif";return;}
 document.form1.longswordfinesse_star.src="asterisk.gif";
 }

function consider_luckyskirmisher(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halfling)|((!rangerclass())&(!rogueclass()))){document.form1.luckyskirmisher_box.checked=false;}
 ArrowShow();
 }

function light_luckyskirmisher_star(){
 if ((!race_halfling)|((!rangerclass())&(!rogueclass()))){document.form1.luckyskirmisher_star.src="no_asterisk.gif";return;}
 document.form1.luckyskirmisher_star.src="asterisk.gif";
 }

function consider_martialalacrity(){
 if (!doingfeats()){remember_feats();return;}
 if ((dexterity<15)|((!fighterclass())&(!rogueclass())&(!rangerclass())&(!warlordclass()))){document.form1.martialalacrity_box.checked=false;}
 ArrowShow();
 }

function light_martialalacrity_star(){
 if ((dexterity<15)|((!fighterclass())&(!rogueclass())&(!rangerclass())&(!warlordclass()))){document.form1.martialalacrity_star.src="no_asterisk.gif";return;}
 document.form1.martialalacrity_star.src="asterisk.gif";
 }

function consider_martialfreedom(){
 if (!doingfeats()){remember_feats();return;}
 if ((wisdom<13)|(!AnyMartialClass())|(!TrainedInEndurance())){document.form1.martialfreedom_box.checked=false;}
 ArrowShow();
 }

function light_martialfreedom_star(){
 if ((wisdom<13)|(!AnyMartialClass())|(!TrainedInEndurance())){document.form1.martialfreedom_star.src="no_asterisk.gif";return;}
 document.form1.martialfreedom_star.src="asterisk.gif";
 }

function consider_masterofrumblingearth(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_genasi)|(!fighterclass())){document.form1.masterofrumblingearth_box.checked=false;}
 ArrowShow();
 }

function light_masterofrumblingearth_star(){
 if ((!race_genasi)|(!fighterclass())){document.form1.masterofrumblingearth_star.src="no_asterisk.gif";return;}
 document.form1.masterofrumblingearth_star.src="asterisk.gif";
 }

function consider_nimblecompanion(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halfling)|(!ranger_beastmaster)){document.form1.nimblecompanion_box.checked=false;}
 ArrowShow();
 }

function light_nimblecompanion_star(){
 if ((!race_halfling)|(!ranger_beastmaster)){document.form1.nimblecompanion_star.src="no_asterisk.gif";return;}
 document.form1.nimblecompanion_star.src="asterisk.gif";
 }

function consider_offensiveresilience(){
 if (!doingfeats()){remember_feats();return;}
 if ((dexterity<13)|(wisdom<13)|(!fighterclass())){document.form1.offensiveresilience_box.checked=false;}
 ArrowShow();
 }

function light_offensiveresilience_star(){
 if ((dexterity<13)|(wisdom<13)|(!fighterclass())){document.form1.offensiveresilience_star.src="no_asterisk.gif";return;}
 document.form1.offensiveresilience_star.src="asterisk.gif";
 }

function consider_opportunisticaccuracy(){
 if (!doingfeats()){remember_feats();return;}
 if ((wisdom<13)|((!race_elf)&(!race_halfelf))|(!fighterclass())){document.form1.opportunisticaccuracy_box.checked=false;}
 ArrowShow();
 }

function light_opportunisticaccuracy_star(){
 if ((wisdom<13)|((!race_elf)&(!race_halfelf))|(!fighterclass())){document.form1.opportunisticaccuracy_star.src="no_asterisk.gif";return;}
 document.form1.opportunisticaccuracy_star.src="asterisk.gif";
 }

function consider_polearmmomentum(){
 if (!doingfeats()){remember_feats();return;}
 if ((dexterity<15)|(wisdom<15)|(!fighterclass())){document.form1.polearmmomentum_box.checked=false;}
 ArrowShow();
 }

function light_polearmmomentum_star(){
 if ((dexterity<15)|(wisdom<15)|(!fighterclass())){document.form1.polearmmomentum_star.src="no_asterisk.gif";return;}
 document.form1.polearmmomentum_star.src="asterisk.gif";
 }

function consider_predatoryaction(){
 if (!doingfeats()){remember_feats();return;}
 if ((!class_ranger)&(!multi_ranger_warriorofthewild)){document.form1.predatoryaction_box.checked=false;}
 ArrowShow();
 }

function light_predatoryaction_star(){
 if ((!class_ranger)&(!multi_ranger_warriorofthewild)){document.form1.predatoryaction_star.src="no_asterisk.gif";return;}
 document.form1.predatoryaction_star.src="asterisk.gif";
 }

function consider_primestrike(){
 if (!doingfeats()){remember_feats();return;}
 if (!rangerclass()){document.form1.primestrike_box.checked=false;}
 ArrowShow();
 }

function light_primestrike_star(){
 if (!rangerclass()){document.form1.primestrike_star.src="no_asterisk.gif";return;}
 document.form1.primestrike_star.src="asterisk.gif";
 }

function consider_rashsneakattack(){
 if (!doingfeats()){remember_feats();return;}
 if (((!race_human)&(!race_halfelf))|(!class_rogue)){document.form1.rashsneakattack_box.checked=false;}
 ArrowShow();
 }

function light_rashsneakattack_star(){
 if (((!race_human)&(!race_halfelf))|(!class_rogue)){document.form1.rashsneakattack_star.src="no_asterisk.gif";return;}
 document.form1.rashsneakattack_star.src="asterisk.gif";
 }

function consider_rattlingwrath(){
 if (!doingfeats()){remember_feats();return;}
 if ((charisma<15)|(!race_tiefling)|(!rogueclass())){document.form1.rattlingwrath_box.checked=false;}
 ArrowShow();
 }

function light_rattlingwrath_star(){
 if ((charisma<15)|(!race_tiefling)|(!rogueclass())){document.form1.rattlingwrath_star.src="no_asterisk.gif";return;}
 document.form1.rattlingwrath_star.src="asterisk.gif";
 }

function consider_reapingblade(){
 if (!doingfeats()){remember_feats();return;}
 if ((dexterity<15)|(!fighterclass())){document.form1.reapingblade_box.checked=false;}
 ArrowShow();
 }

function light_reapingblade_star(){
 if ((dexterity<15)|(!fighterclass())){document.form1.reapingblade_star.src="no_asterisk.gif";return;}
 document.form1.reapingblade_star.src="asterisk.gif";
 }

function consider_recklessscramble(){
 if (!doingfeats()){remember_feats();return;}
 if (!rogue_artfuldodger){document.form1.recklessscramble_box.checked=false;}
 ArrowShow();
 }

function light_recklessscramble_star(){
 if (!rogue_artfuldodger){document.form1.recklessscramble_star.src="no_asterisk.gif";return;}
 document.form1.recklessscramble_star.src="asterisk.gif";
 }

function consider_ruthlessinjury(){
 if (!doingfeats()){remember_feats();return;}
 if (!rogue_ruthlessruffian){document.form1.ruthlessinjury_box.checked=false;}
 ArrowShow();
 }

function light_ruthlessinjury_star(){
 if (!rogue_ruthlessruffian){document.form1.ruthlessinjury_star.src="no_asterisk.gif";return;}
 document.form1.ruthlessinjury_star.src="asterisk.gif";
 }

function consider_savinginspiration(){
 if (!doingfeats()){remember_feats();return;}
 if ((!warlordclass())){document.form1.savinginspiration_box.checked=false;}
 ArrowShow();
 }

function light_savinginspiration_star(){
 if (!warlordclass()){document.form1.savinginspiration_star.src="no_asterisk.gif";return;}
 document.form1.savinginspiration_star.src="asterisk.gif";
 }

function consider_secureencampment(){
 if (!doingfeats()){remember_feats();return;}
 if ((wisdom<13)|(!rangerclass())|(!TrainedInNature())|(!TrainedInPerception())|(!TrainedInStealth())){document.form1.secureencampment_box.checked=false;}
 ArrowShow();
 }

function light_secureencampment_star(){
 if ((wisdom<13)|(!rangerclass())|(!TrainedInNature())|(!TrainedInPerception())|(!TrainedInStealth())){document.form1.secureencampment_star.src="no_asterisk.gif";return;}
 document.form1.secureencampment_star.src="asterisk.gif";
 }

function consider_shielddefense(){
 if (!doingfeats()){remember_feats();return;}
 if ((wisdom<13)|(!fighterclass())){document.form1.shielddefense_box.checked=false;}
 ArrowShow();
 }

function light_shielddefense_star(){
 if ((wisdom<13)|(!fighterclass())){document.form1.shielddefense_star.src="no_asterisk.gif";return;}
 document.form1.shielddefense_star.src="asterisk.gif";
 }

function consider_sidewaysdefense(){
 if (!doingfeats()){remember_feats();return;}
 if (((!race_human)&(!race_halfelf))|(!class_fighter)){document.form1.sidewaysdefense_box.checked=false;}
 ArrowShow();
 }

function light_sidewaysdefense_star(){
 if (((!race_human)&(!race_halfelf))|(!class_fighter)){document.form1.sidewaysdefense_star.src="no_asterisk.gif";return;}
 document.form1.sidewaysdefense_star.src="asterisk.gif";
 }

function consider_slayingaction(){
 if (!doingfeats()){remember_feats();return;}
 if (!class_rogue){document.form1.slayingaction_box.checked=false;}
 ArrowShow();
 }

function light_slayingaction_star(){
 if (!class_rogue){document.form1.slayingaction_star.src="no_asterisk.gif";return;}
 document.form1.slayingaction_star.src="asterisk.gif";
 }

function consider_sneakyaccuracy(){
 if (!doingfeats()){remember_feats();return;}
 if (((!race_elf)&(!race_halfelf))|(!class_rogue)){document.form1.sneakyaccuracy_box.checked=false;}
 ArrowShow();
 }

function light_sneakyaccuracy_star(){
 if (((!race_elf)&(!race_halfelf))|(!class_rogue)){document.form1.sneakyaccuracy_star.src="no_asterisk.gif";return;}
 document.form1.sneakyaccuracy_star.src="asterisk.gif";
 }

function consider_speedyresponse(){
 if (!doingfeats()){remember_feats();return;}
 if ((dexterity<15)|(!rogueclass())){document.form1.speedyresponse_box.checked=false;}
 ArrowShow();
 }

function light_speedyresponse_star(){
 if ((dexterity<15)|(!rogueclass())){document.form1.speedyresponse_star.src="no_asterisk.gif";return;}
 document.form1.speedyresponse_star.src="asterisk.gif";
 }

function consider_streetthug(){
 if (!doingfeats()){remember_feats();return;}
 if ((strength<13)|(constitution<13)|(!rogueclass())){document.form1.streetthug_box.checked=false;}
 ArrowShow();
 }

function light_streetthug_star(){
 if ((strength<13)|(constitution<13)|(!rogueclass())){document.form1.streetthug_star.src="no_asterisk.gif";return;}
 document.form1.streetthug_star.src="asterisk.gif";
 }

function consider_surprisingcharge(){
 if (!doingfeats()){remember_feats();return;}
 if ((dexterity<17)|((!rogueclass())&(!fighterclass()))){document.form1.surprisingcharge_box.checked=false;}
 ArrowShow();
 }

function light_surprisingcharge_star(){
 if ((dexterity<17)|((!rogueclass())&(!fighterclass()))){document.form1.surprisingcharge_star.src="no_asterisk.gif";return;}
 document.form1.surprisingcharge_star.src="asterisk.gif";
 }

function consider_tacticalinspiration(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_eladrin)|(!class_warlord)){document.form1.tacticalinspiration_box.checked=false;}
 ArrowShow();
 }

function light_tacticalinspiration_star(){
 if ((!race_eladrin)|(!class_warlord)){document.form1.tacticalinspiration_star.src="no_asterisk.gif";return;}
 document.form1.tacticalinspiration_star.src="asterisk.gif";
 }

function consider_takemeasure(){
 if (!doingfeats()){remember_feats();return;}
 if ((wisdom<15)|(!fighterclass())){document.form1.takemeasure_box.checked=false;}
 ArrowShow();
 }

function light_takemeasure_star(){
 if ((wisdom<15)|(!fighterclass())){document.form1.takemeasure_star.src="no_asterisk.gif";return;}
 document.form1.takemeasure_star.src="asterisk.gif";
 }

function consider_thunderhammer(){
 if (!doingfeats()){remember_feats();return;}
 if ((constitution<15)|(!fighterclass())){document.form1.thunderhammer_box.checked=false;}
 ArrowShow();
 }

function light_thunderhammer_star(){
 if ((constitution<15)|(!fighterclass())){document.form1.thunderhammer_star.src="no_asterisk.gif";return;}
 document.form1.thunderhammer_star.src="asterisk.gif";
 }

function consider_thundertuskcompanion(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_dwarf)|(!ranger_beastmaster)){document.form1.thundertuskcompanion_box.checked=false;}
 ArrowShow();
 }

function light_thundertuskcompanion_star(){
 if ((!race_dwarf)|(!ranger_beastmaster)){document.form1.thundertuskcompanion_star.src="no_asterisk.gif";return;}
 document.form1.thundertuskcompanion_star.src="asterisk.gif";
 }

function consider_trapsense(){
 if (!doingfeats()){remember_feats();return;}
 if ((wisdom<13)|(!rogueclass())){document.form1.trapsense_box.checked=false;}
 ArrowShow();
 }

function light_trapsense_star(){
 if ((wisdom<13)|(!rogueclass())){document.form1.trapsense_star.src="no_asterisk.gif";return;}
 document.form1.trapsense_star.src="asterisk.gif";
 }

function consider_tunnelstalker(){
 if (!doingfeats()){remember_feats();return;}
 if ((strength<13)|(constitution<13)|(!race_dwarf)|(!rogueclass())){document.form1.tunnelstalker_box.checked=false;}
 ArrowShow();
 }

function light_tunnelstalker_star(){
 if ((strength<13)|(constitution<13)|(!race_dwarf)|(!rogueclass())){document.form1.tunnelstalker_star.src="no_asterisk.gif";return;}
 document.form1.tunnelstalker_star.src="asterisk.gif";
 }

function consider_twofistedshooter(){
 if (!doingfeats()){remember_feats();return;}
 if ((!rogueclass())){document.form1.twofistedshooter_box.checked=false;}
 ArrowShow();
 }

function light_twofistedshooter_star(){
 if ((!rogueclass())){document.form1.twofistedshooter_star.src="no_asterisk.gif";return;}
 document.form1.twofistedshooter_star.src="asterisk.gif";
 }

function consider_unbalancingwrath(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_tiefling)|(warlordclass())){document.form1.unbalancingwrath_box.checked=false;}
 ArrowShow();
 }

function light_unbalancingwrath_star(){
 if ((!race_tiefling)|(warlordclass())){document.form1.unbalancingwrath_star.src="no_asterisk.gif";return;}
 document.form1.unbalancingwrath_star.src="asterisk.gif";
 }

function consider_vengefulbeast(){
 if (!doingfeats()){remember_feats();return;}
 if ((!ranger_beastmaster)){document.form1.vengefulbeast_box.checked=false;}
 ArrowShow();
 }

function light_vengefulbeast_star(){
 if ((!ranger_beastmaster)){document.form1.vengefulbeast_star.src="no_asterisk.gif";return;}
 document.form1.vengefulbeast_star.src="asterisk.gif";
 }

function consider_victorsconfidence(){
 if (!doingfeats()){remember_feats();return;}
 if ((constitution<15)|(!fighterclass())){document.form1.victorsconfidence_box.checked=false;}
 ArrowShow();
 }

function light_victorsconfidence_star(){
 if ((constitution<15)|(!fighterclass())){document.form1.victorsconfidence_star.src="no_asterisk.gif";return;}
 document.form1.victorsconfidence_star.src="asterisk.gif";
 }

function consider_wielderofpiercingflame(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_genasi)|(!rogueclass())){document.form1.wielderofpiercingflame_box.checked=false;}
 ArrowShow();
 }

function light_wielderofpiercingflame_star(){
 if ((!race_genasi)|(!rogueclass())){document.form1.wielderofpiercingflame_star.src="no_asterisk.gif";return;}
 document.form1.wielderofpiercingflame_star.src="asterisk.gif";
 }


function consider_advantageofcunning(){
 if (!doingfeats()){remember_feats();return;}
 if ((!bard_cunning)){document.form1.advantageofcunning_box.checked=false;}
 ArrowShow();
 }

function light_advantageofcunning_star(){
 if ((!bard_cunning)){document.form1.advantageofcunning_star.src="no_asterisk.gif";return;}
 document.form1.advantageofcunning_star.src="asterisk.gif";
 }

function consider_angerunleashed(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halforc)){document.form1.angerunleashed_box.checked=false;}
 ArrowShow();
 }

function light_angerunleashed_star(){
 if ((!race_halforc)){document.form1.angerunleashed_star.src="no_asterisk.gif";return;}
 document.form1.angerunleashed_star.src="asterisk.gif";
 }

function consider_arcanespellfury(){
 if (!doingfeats()){remember_feats();return;}
 if ((!sorcererclass())){document.form1.arcanespellfury_box.checked=false;}
 ArrowShow();
 }

function light_arcanespellfury_star(){
 if ((!sorcererclass())){document.form1.arcanespellfury_star.src="no_asterisk.gif";return;}
 document.form1.arcanespellfury_star.src="asterisk.gif";
 }

function consider_auspiciouslineage(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_deva)){document.form1.auspiciouslineage_box.checked=false;}
 ArrowShow();
 }

function light_auspiciouslineage_star(){
 if ((!race_deva)){document.form1.auspiciouslineage_star.src="no_asterisk.gif";return;}
 document.form1.auspiciouslineage_star.src="asterisk.gif";
 }

function consider_bardicknowledge(){
 if (!doingfeats()){remember_feats();return;}
 if ((!bardclass())){document.form1.bardicknowledge_box.checked=false;}
 ArrowShow();
 }

function light_bardicknowledge_star(){
 if ((!bardclass())){document.form1.bardicknowledge_star.src="no_asterisk.gif";return;}
 document.form1.bardicknowledge_star.src="asterisk.gif";
 }

function consider_blurringclaws(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_shifterrazorclaw)){document.form1.blurringclaws_box.checked=false;}
 ArrowShow();
 }

function light_blurringclaws_star(){
 if ((!race_shifterrazorclaw)){document.form1.blurringclaws_star.src="no_asterisk.gif";return;}
 document.form1.blurringclaws_star.src="asterisk.gif";
 }

function consider_combatmedic(){
 if (!doingfeats()){remember_feats();return;}
 if ((!PreFeatsHeal())){document.form1.combatmedic_box.checked=false;}
 ArrowShow();
 }

function light_combatmedic_star(){
 if ((!PreFeatsHeal())){document.form1.combatmedic_star.src="no_asterisk.gif";return;}
 document.form1.combatmedic_star.src="asterisk.gif";
 }

function consider_coordinatedexplosion(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_coordinatedexplosion_star(){
 document.form1.coordinatedexplosion_star.src="asterisk.gif";
 }

function consider_crushingearthstrength(){
 if (!doingfeats()){remember_feats();return;}
 if ((!warden_earthstrength)){document.form1.crushingearthstrength_box.checked=false;}
 ArrowShow();
 }

function light_crushingearthstrength_star(){
 if ((!warden_earthstrength)){document.form1.crushingearthstrength_star.src="no_asterisk.gif";return;}
 document.form1.crushingearthstrength_star.src="asterisk.gif";
 }

function consider_deadlyrage(){
 if (!doingfeats()){remember_feats();return;}
 if ((!barbarianclass())){document.form1.deadlyrage_box.checked=false;}
 ArrowShow();
 }

function light_deadlyrage_star(){
 if ((!barbarianclass())){document.form1.deadlyrage_star.src="no_asterisk.gif";return;}
 document.form1.deadlyrage_star.src="asterisk.gif";
 }

function consider_disciplinedwildsoul(){
 if (!doingfeats()){remember_feats();return;}
 if ((!sorcerer_wildmagic)){document.form1.disciplinedwildsoul_box.checked=false;}
 ArrowShow();
 }

function light_disciplinedwildsoul_star(){
 if ((!sorcerer_wildmagic)){document.form1.disciplinedwildsoul_star.src="no_asterisk.gif";return;}
 document.form1.disciplinedwildsoul_star.src="asterisk.gif";
 }

function consider_distantadvantage(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_distantadvantage_star(){
 document.form1.distantadvantage_star.src="asterisk.gif";
 }

function consider_echoesofthunder(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_echoesofthunder_star(){
 document.form1.echoesofthunder_star.src="asterisk.gif";
 }

function consider_enragedboarform(){
 if (!doingfeats()){remember_feats();return;}
 if ((!druidclass())){document.form1.enragedboarform_box.checked=false;}
 ArrowShow();
 }

function light_enragedboarform_star(){
 if ((!druidclass())){document.form1.enragedboarform_star.src="no_asterisk.gif";return;}
 document.form1.enragedboarform_star.src="asterisk.gif";
 }

function consider_expertritualist(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_expertritualist_star(){
 document.form1.expertritualist_star.src="asterisk.gif";
 }

function consider_ferocioustigerform(){
 if (!doingfeats()){remember_feats();return;}
 if ((!druidclass())){document.form1.ferocioustigerform_box.checked=false;}
 ArrowShow();
 }

function light_ferocioustigerform_star(){
 if ((!druidclass())){document.form1.ferocioustigerform_star.src="no_asterisk.gif";return;}
 document.form1.ferocioustigerform_star.src="asterisk.gif";
 }

function consider_feytrickster(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_gnome)){document.form1.feytrickster_box.checked=false;}
 ArrowShow();
 }

function light_feytrickster_star(){
 if ((!race_gnome)){document.form1.feytrickster_star.src="no_asterisk.gif";return;}
 document.form1.feytrickster_star.src="asterisk.gif";
 }

function consider_goliathgreatweaponprowess(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_goliath)){document.form1.goliathgreatweaponprowess_box.checked=false;}
 ArrowShow();
 }

function light_goliathgreatweaponprowess_star(){
 if ((!race_goliath)){document.form1.goliathgreatweaponprowess_star.src="no_asterisk.gif";return;}
 document.form1.goliathgreatweaponprowess_star.src="asterisk.gif";
 }

function consider_gorebrutecharge(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_shifterlongtooth)){document.form1.gorebrutecharge_box.checked=false;}
 ArrowShow();
 }

function light_gorebrutecharge_star(){
 if ((!race_shifterlongtooth)){document.form1.gorebrutecharge_star.src="no_asterisk.gif";return;}
 document.form1.gorebrutecharge_star.src="asterisk.gif";
 }

function consider_groupstealth(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_gnome)){document.form1.groupstealth_box.checked=false;}
 ArrowShow();
 }

function light_groupstealth_star(){
 if ((!race_gnome)){document.form1.groupstealth_star.src="no_asterisk.gif";return;}
 document.form1.groupstealth_star.src="asterisk.gif";
 }

function consider_guaranteedretribution(){
 if (!doingfeats()){remember_feats();return;}
 if ((!avenger_retribution)){document.form1.guaranteedretribution_box.checked=false;}
 ArrowShow();
 }

function light_guaranteedretribution_star(){
 if ((!avenger_retribution)){document.form1.guaranteedretribution_star.src="no_asterisk.gif";return;}
 document.form1.guaranteedretribution_star.src="asterisk.gif";
 }

function consider_implementexpertiseholysymbol(){
 if (!doingfeats()){remember_feats();return;}
 if (!holysymboluser()){document.form1.implementexpertiseholysymbol_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertiseholysymbol_star(){
 if (!holysymboluser()){document.form1.implementexpertiseholysymbol_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertiseholysymbol_star.src="asterisk.gif";
 }

function consider_implementexpertiseorb(){
 if (!doingfeats()){remember_feats();return;}
 if (!orbuser()){document.form1.implementexpertiseorb_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertiseorb_star(){
 if (!orbuser()){document.form1.implementexpertiseorb_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertiseorb_star.src="asterisk.gif";
 }

function consider_implementexpertiserod(){
 if (!doingfeats()){remember_feats();return;}
 if (!roduser()){document.form1.implementexpertiserod_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertiserod_star(){
 if (!roduser()){document.form1.implementexpertiserod_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertiserod_star.src="asterisk.gif";
 }

function consider_implementexpertisestaff(){
 if (!doingfeats()){remember_feats();return;}
 if (!staffuser()){document.form1.implementexpertisestaff_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertisestaff_star(){
 if (!staffuser()){document.form1.implementexpertisestaff_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertisestaff_star.src="asterisk.gif";
 }

function consider_implementexpertisewand(){
 if (!doingfeats()){remember_feats();return;}
 if (!wanduser()){document.form1.implementexpertisewand_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertisewand_star(){
 if (!wanduser()){document.form1.implementexpertisewand_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertisewand_star.src="asterisk.gif";
 }

function consider_implementexpertisedagger(){
 if (!doingfeats()){remember_feats();return;}
 if (!daggeruser()){document.form1.implementexpertisedagger_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertisedagger_star(){
 if (!daggeruser()){document.form1.implementexpertisedagger_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertisedagger_star.src="asterisk.gif";
 }

function consider_implementexpertisemusic(){
 if (!doingfeats()){remember_feats();return;}
 if (!musicuser()){document.form1.implementexpertisemusic_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertisemusic_star(){
 if (!musicuser()){document.form1.implementexpertisemusic_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertisemusic_star.src="asterisk.gif";
 }

function consider_implementexpertisetotem(){
 if (!doingfeats()){remember_feats();return;}
 if (!totemuser()){document.form1.implementexpertisetotem_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertisetotem_star(){
 if (!totemuser()){document.form1.implementexpertisetotem_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertisetotem_star.src="asterisk.gif";
 }

function consider_implementexpertisetome(){
 if (!doingfeats()){remember_feats();return;}
 if (!tomeuser()){document.form1.implementexpertisetome_box.checked=false;}
 ArrowShow();
 }

function light_implementexpertisetome_star(){
 if (!tomeuser()){document.form1.implementexpertisetome_star.src="no_asterisk.gif";return;}
 document.form1.implementexpertisetome_star.src="asterisk.gif";
 }

function consider_improvedarmoroffaith(){
 if (!doingfeats()){remember_feats();return;}
 if ((!class_avenger)){document.form1.improvedarmoroffaith_box.checked=false;}
 ArrowShow();
 }

function light_improvedarmoroffaith_star(){
 if ((!class_avenger)){document.form1.improvedarmoroffaith_star.src="no_asterisk.gif";return;}
 document.form1.improvedarmoroffaith_star.src="asterisk.gif";
 }

function consider_improvedbullrush(){
 if (!doingfeats()){remember_feats();return;}
 if ((strength<13)|(constitution<13)){document.form1.improvedbullrush_box.checked=false;}
 ArrowShow();
 }

function light_improvedbullrush_star(){
 if ((strength<13)|(constitution<13)){document.form1.improvedbullrush_star.src="no_asterisk.gif";return;}
 document.form1.improvedbullrush_star.src="asterisk.gif";
 }

function consider_improveddragonsoul(){
 if (!doingfeats()){remember_feats();return;}
 if ((!sorcerer_dragonsoul)){document.form1.improveddragonsoul_box.checked=false;}
 ArrowShow();
 }

function light_improveddragonsoul_star(){
 if ((!sorcerer_dragonsoul)){document.form1.improveddragonsoul_star.src="no_asterisk.gif";return;}
 document.form1.improveddragonsoul_star.src="asterisk.gif";
 }

function consider_improvedgrab(){
 if (!doingfeats()){remember_feats();return;}
 if (strength<13){document.form1.improvedgrab_box.checked=false;}
 ArrowShow();
 }

function light_improvedgrab_star(){
 if (strength<13){document.form1.improvedgrab_star.src="no_asterisk.gif";return;}
 document.form1.improvedgrab_star.src="asterisk.gif";
 }

function consider_improvedmajesticword(){
 if (!doingfeats()){remember_feats();return;}
 if ((!bardclass())){document.form1.improvedmajesticword_box.checked=false;}
 ArrowShow();
 }

function light_improvedmajesticword_star(){
 if ((!bardclass())){document.form1.improvedmajesticword_star.src="no_asterisk.gif";return;}
 document.form1.improvedmajesticword_star.src="asterisk.gif";
 }

function consider_improvedrageblood(){
 if (!doingfeats()){remember_feats();return;}
 if ((!barbarian_rageblood)){document.form1.improvedragebloodvigor_box.checked=false;}
 ArrowShow();
 }

function light_improvedragebloodvigor_star(){
 if ((!barbarian_rageblood)){document.form1.improvedragebloodvigor_star.src="no_asterisk.gif";return;}
 document.form1.improvedragebloodvigor_star.src="asterisk.gif";
 }

function consider_improvedroaroftriumph(){
 if (!doingfeats()){remember_feats();return;}
 if ((!barbarian_thaneborn)){document.form1.improvedroaroftriumph_box.checked=false;}
 ArrowShow();
 }

function light_improvedroaroftriumph_star(){
 if ((!barbarian_thaneborn)){document.form1.improvedroaroftriumph_star.src="no_asterisk.gif";return;}
 document.form1.improvedroaroftriumph_star.src="asterisk.gif";
 }

function consider_insightfulpreservation(){
 if (!doingfeats()){remember_feats();return;}
 if ((!invoker_preservation)){document.form1.insightfulpreservation_box.checked=false;}
 ArrowShow();
 }

function light_insightfulpreservation_star(){
 if ((!invoker_preservation)){document.form1.insightfulpreservation_star.src="no_asterisk.gif";return;}
 document.form1.insightfulpreservation_star.src="asterisk.gif";
 }

function consider_invigoratingpursuit(){
 if (!doingfeats()){remember_feats();return;}
 if ((!avenger_pursuit)){document.form1.invigoratingpursuit_box.checked=false;}
 ArrowShow();
 }

function light_invigoratingpursuit_star(){
 if ((!avenger_pursuit)){document.form1.invigoratingpursuit_star.src="no_asterisk.gif";return;}
 document.form1.invigoratingpursuit_star.src="asterisk.gif";
 }

function consider_invokerdefense(){
 if (!doingfeats()){remember_feats();return;}
 if ((!invokerclass())){document.form1.invokerdefense_box.checked=false;}
 ArrowShow();
 }

function light_invokerdefense_star(){
 if ((!invokerclass())){document.form1.invokerdefense_star.src="no_asterisk.gif";return;}
 document.form1.invokerdefense_star.src="asterisk.gif";
 }

function consider_markingsoftheblessed(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_goliath)){document.form1.markingsoftheblessed_box.checked=false;}
 ArrowShow();
 }

function light_markingsoftheblessed_star(){
 if ((!race_goliath)){document.form1.markingsoftheblessed_star.src="no_asterisk.gif";return;}
 document.form1.markingsoftheblessed_star.src="asterisk.gif";
 }

function consider_markingsofthevictor(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_goliath)){document.form1.markingsofthevictor_box.checked=false;}
 ArrowShow();
 }

function light_markingsofthevictor_star(){
 if ((!race_goliath)){document.form1.markingsofthevictor_star.src="no_asterisk.gif";return;}
 document.form1.markingsofthevictor_star.src="asterisk.gif";
 }

function consider_meleetraining(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_meleetraining_star(){
 document.form1.meleetraining_star.src="asterisk.gif";
 }

function consider_oncomingstorm(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_oncomingstorm_star(){
 document.form1.oncomingstorm_star.src="asterisk.gif";
 }

function consider_potentrebirth(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_deva)){document.form1.potentrebirth_box.checked=false;}
 ArrowShow();
 }

function light_potentrebirth_star(){
 if ((!race_deva)){document.form1.potentrebirth_star.src="no_asterisk.gif";return;}
 document.form1.potentrebirth_star.src="asterisk.gif";
 }

function consider_primalfury(){
 if (!doingfeats()){remember_feats();return;}
 if ((!druid_predator)){document.form1.primalfury_box.checked=false;}
 ArrowShow();
 }

function light_primalfury_star(){
 if ((!druid_predator)){document.form1.primalfury_star.src="no_asterisk.gif";return;}
 document.form1.primalfury_star.src="asterisk.gif";
 }

function consider_primalinstinct(){
 if (!doingfeats()){remember_feats();return;}
 if ((!druid_guardian)){document.form1.primalinstinct_box.checked=false;}
 ArrowShow();
 }

function light_primalinstinct_star(){
 if ((!druid_guardian)){document.form1.primalinstinct_star.src="no_asterisk.gif";return;}
 document.form1.primalinstinct_star.src="asterisk.gif";
 }

function consider_protectorspiritadept(){
 if (!doingfeats()){remember_feats();return;}
 if ((!shaman_protector)){document.form1.protectorspiritadept_box.checked=false;}
 ArrowShow();
 }

function light_protectorspiritadept_star(){
 if ((!shaman_protector)){document.form1.protectorspiritadept_star.src="no_asterisk.gif";return;}
 document.form1.protectorspiritadept_star.src="asterisk.gif";
 }

function consider_radiantpower(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_deva)){document.form1.radiantpower_box.checked=false;}
 ArrowShow();
 }

function light_radiantpower_star(){
 if ((!race_deva)){document.form1.radiantpower_star.src="no_asterisk.gif";return;}
 document.form1.radiantpower_star.src="asterisk.gif";
 }

function consider_resonatingcovenant(){
 if (!doingfeats()){remember_feats();return;}
 if ((!class_invoker)){document.form1.resonatingcovenant_box.checked=false;}
 ArrowShow();
 }

function light_resonatingcovenant_star(){
 if ((!class_invoker)){document.form1.resonatingcovenant_star.src="no_asterisk.gif";return;}
 document.form1.resonatingcovenant_star.src="asterisk.gif";
 }

function consider_restfulhealing(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_restfulhealing_star(){
 document.form1.restfulhealing_star.src="asterisk.gif";
 }

function consider_revitalizingfontoflife(){
 if (!doingfeats()){remember_feats();return;}
 if ((!class_warden)){document.form1.revitalizingfontoflife_box.checked=false;}
 ArrowShow();
 }

function light_revitalizingfontoflife_star(){
 if ((!class_warden)){document.form1.revitalizingfontoflife_star.src="no_asterisk.gif";return;}
 document.form1.revitalizingfontoflife_star.src="asterisk.gif";
 }

function consider_risingfury(){
 if (!doingfeats()){remember_feats();return;}
 if ((!barbarianclass())){document.form1.risingfury_box.checked=false;}
 ArrowShow();
 }

function light_risingfury_star(){
 if ((!barbarianclass())){document.form1.risingfury_star.src="no_asterisk.gif";return;}
 document.form1.risingfury_star.src="asterisk.gif";
 }

function consider_savageassault(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halforc)){document.form1.savageassault_box.checked=false;}
 ArrowShow();
 }

function light_savageassault_star(){
 if ((!race_halforc)){document.form1.savageassault_star.src="no_asterisk.gif";return;}
 document.form1.savageassault_star.src="asterisk.gif";
 }

function consider_scouringwrath(){
 if (!doingfeats()){remember_feats();return;}
 if ((!invoker_wrath)){document.form1.scouringwrath_box.checked=false;}
 ArrowShow();
 }

function light_scouringwrath_star(){
 if ((!invoker_wrath)){document.form1.scouringwrath_star.src="no_asterisk.gif";return;}
 document.form1.scouringwrath_star.src="asterisk.gif";
 }

function consider_shadowskulk(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_gnome)){document.form1.shadowskulk_box.checked=false;}
 ArrowShow();
 }

function light_shadowskulk_star(){
 if ((!race_gnome)){document.form1.shadowskulk_star.src="no_asterisk.gif";return;}
 document.form1.shadowskulk_star.src="asterisk.gif";
 }

function consider_sharedhealingspirit(){
 if (!doingfeats()){remember_feats();return;}
 if ((!class_shaman)){document.form1.sharedhealingspirit_box.checked=false;}
 ArrowShow();
 }

function light_sharedhealingspirit_star(){
 if ((!class_shaman)){document.form1.sharedhealingspirit_star.src="no_asterisk.gif";return;}
 document.form1.sharedhealingspirit_star.src="asterisk.gif";
 }

function consider_sorcerousbladechanneling(){
 if (!doingfeats()){remember_feats();return;}
 if ((!sorcererclass())){document.form1.sorcerousbladechanneling_box.checked=false;}
 ArrowShow();
 }

function light_sorcerousbladechanneling_star(){
 if ((!sorcererclass())){document.form1.sorcerousbladechanneling_star.src="no_asterisk.gif";return;}
 document.form1.sorcerousbladechanneling_star.src="asterisk.gif";
 }

function consider_speedloader(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_speedloader_star(){
 document.form1.speedloader_star.src="asterisk.gif";
 }

function consider_spritspeaker(){
 if (!doingfeats()){remember_feats();return;}
 if ((!shamanclass())){document.form1.spritspeaker_box.checked=false;}
 ArrowShow();
 }

function light_spritspeaker_star(){
 if ((!shamanclass())){document.form1.spritspeaker_star.src="no_asterisk.gif";return;}
 document.form1.spritspeaker_star.src="asterisk.gif";
 }

function consider_stalkerspiritadept(){
 if (!doingfeats()){remember_feats();return;}
 if ((!shaman_stalker)){document.form1.stalkerspiritadept_box.checked=false;}
 ArrowShow();
 }

function light_stalkerspiritadept_star(){
 if ((!shaman_stalker)){document.form1.stalkerspiritadept_star.src="no_asterisk.gif";return;}
 document.form1.stalkerspiritadept_star.src="asterisk.gif";
 }

function consider_strengthofvalor(){
 if (!doingfeats()){remember_feats();return;}
 if ((!bard_valor)){document.form1.strengthofvalor_box.checked=false;}
 ArrowShow();
 }

function light_strengthofvalor_star(){
 if ((!bard_valor)){document.form1.strengthofvalor_star.src="no_asterisk.gif";return;}
 document.form1.strengthofvalor_star.src="asterisk.gif";
 }

function consider_suddenroots(){
 if (!doingfeats()){remember_feats();return;}
 if ((!wardenclass())){document.form1.suddenroots_box.checked=false;}
 ArrowShow();
 }

function light_suddenroots_star(){
 if ((!wardenclass())){document.form1.suddenroots_star.src="no_asterisk.gif";return;}
 document.form1.suddenroots_star.src="asterisk.gif";
 }

function consider_surgingflame(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_surgingflame_star(){
 document.form1.surgingflame_star.src="asterisk.gif";
 }

function consider_thirstforbattle(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_halforc)){document.form1.thirstforbattle_box.checked=false;}
 ArrowShow();
 }

function light_thirstforbattle_star(){
 if ((!race_halforc)){document.form1.thirstforbattle_star.src="no_asterisk.gif";return;}
 document.form1.thirstforbattle_star.src="asterisk.gif";
 }

function consider_timelyrespite(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_timelyrespite_star(){
 document.form1.timelyrespite_star.src="asterisk.gif";
 }

function consider_twoweaponthreat(){
 if (!doingfeats()){remember_feats();return;}
 if ((dexterity<13)){document.form1.twoweaponthreat_box.checked=false;}
 if (!document.form1.twoweaponfighting_box.checked){document.form1.twoweaponthreat_box.checked=false; }
 ArrowShow();
 }

function light_twoweaponthreat_star(){
 if ((dexterity<13)){document.form1.twoweaponthreat_star.src="no_asterisk.gif";return;}
 if (!document.form1.twoweaponfighting_box.checked){document.form1.twoweaponthreat_star.src="no_asterisk.gif";return;}
 document.form1.twoweaponthreat_star.src="asterisk.gif";
 }

function consider_twoweaponopening(){
 if (!doingfeats()){remember_feats();return;}
 if (!document.form1.twoweaponfighting_box.checked){document.form1.twoweaponopening_box.checked=false; }
 ArrowShow();
 }

function light_twoweaponopening_star(){
 if (!document.form1.twoweaponfighting_box.checked){document.form1.twoweaponopening_star.src="no_asterisk.gif";return;}
 document.form1.twoweaponopening_star.src="asterisk.gif";
 }


function consider_versatilemaster(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_halfelf)){document.form1.versatilemaster_box.checked=false; }
 ArrowShow();
 }
                                                  
function light_versatilemaster_star(){
 if ((total_levels<11)|(!race_halfelf)){document.form1.versatilemaster_star.src="no_asterisk.gif";return;}
 document.form1.versatilemaster_star.src="asterisk.gif";
 }


function consider_weaponexpertiseaxe(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertiseaxe_star(){
 document.form1.weaponexpertiseaxe_star.src="asterisk.gif";
 }

function consider_weaponexpertisebow(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisebow_star(){
 document.form1.weaponexpertisebow_star.src="asterisk.gif";
 }

function consider_weaponexpertisecrossbow(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisecrossbow_star(){
 document.form1.weaponexpertisecrossbow_star.src="asterisk.gif";
 }

function consider_weaponexpertiseflail(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertiseflail_star(){
 document.form1.weaponexpertiseflail_star.src="asterisk.gif";
 }

function consider_weaponexpertisehammer(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisehammer_star(){
 document.form1.weaponexpertisehammer_star.src="asterisk.gif";
 }

function consider_weaponexpertiseheavyblade(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertiseheavyblade_star(){
 document.form1.weaponexpertiseheavyblade_star.src="asterisk.gif";
 }

function consider_weaponexpertiselightblade(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertiselightblade_star(){
 document.form1.weaponexpertiselightblade_star.src="asterisk.gif";
 }

function consider_weaponexpertisemace(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisemace_star(){
 document.form1.weaponexpertisemace_star.src="asterisk.gif";
 }

function consider_weaponexpertisepick(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisepick_star(){
 document.form1.weaponexpertisepick_star.src="asterisk.gif";
 }

function consider_weaponexpertisepolearm(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisepolearm_star(){
 document.form1.weaponexpertisepolearm_star.src="asterisk.gif";
 }

function consider_weaponexpertisesling(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisesling_star(){
 document.form1.weaponexpertisesling_star.src="asterisk.gif";
 }

function consider_weaponexpertisespear(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisespear_star(){
 document.form1.weaponexpertisespear_star.src="asterisk.gif";
 }

function consider_weaponexpertisestaff(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertisestaff_star(){
 document.form1.weaponexpertisestaff_star.src="asterisk.gif";
 }

function consider_weaponexpertiseunarmed(){
 if (!doingfeats()){remember_feats();return;}
 ArrowShow();
 }

function light_weaponexpertiseunarmed_star(){
 document.form1.weaponexpertiseunarmed_star.src="asterisk.gif";
 }

function consider_wildbloodcunning(){
 if (!doingfeats()){remember_feats();return;}
 if ((!warden_wildblood)){document.form1.wildbloodcunning_box.checked=false;}
 ArrowShow();
 }

function light_wildbloodcunning_star(){
 if ((!warden_wildblood)){document.form1.wildbloodcunning_star.src="no_asterisk.gif";return;}
 document.form1.wildbloodcunning_star.src="asterisk.gif";
 }

function consider_wildsenses(){
 if (!doingfeats()){remember_feats();return;}
 if ((!race_shifterlongtooth)&(!race_shifterrazorclaw)){document.form1.wildsenses_box.checked=false;}
 ArrowShow();
 }

function light_wildsenses_star(){
 if ((!race_shifterlongtooth)&(!race_shifterrazorclaw)){document.form1.wildsenses_star.src="no_asterisk.gif";return;}
 document.form1.wildsenses_star.src="asterisk.gif";
 }
function consider_arcaneimplementproficiencydagger(){
 if (!doingfeats()){remember_feats();return;}
 if ((daggeruser())|(!arcaneclass())){document.form1.arcaneimplementproficiencydagger_box.checked=false;}
 ArrowShow();
 }

function light_arcaneimplementproficiencydagger_star(){
 if ((daggeruser())|(!arcaneclass())){document.form1.arcaneimplementproficiencydagger_star.src="no_asterisk.gif";return;}
 document.form1.arcaneimplementproficiencydagger_star.src="asterisk.gif";
 }

function consider_arcaneimplementproficiencymusic(){
 if (!doingfeats()){remember_feats();return;}
 if ((musicuser()|(!arcaneclass()))){document.form1.arcaneimplementproficiencymusic_box.checked=false;}
 ArrowShow();
 }

function light_arcaneimplementproficiencymusic_star(){
 if ((musicuser())|(!arcaneclass())){document.form1.arcaneimplementproficiencymusic_star.src="no_asterisk.gif";return;}
 document.form1.arcaneimplementproficiencymusic_star.src="asterisk.gif";
 }

function consider_arcaneimplementproficiencyorb(){
 if (!doingfeats()){remember_feats();return;}
 if ((orbuser())|(!arcaneclass())){document.form1.arcaneimplementproficiencyorb_box.checked=false;}
 ArrowShow();
 }

function light_arcaneimplementproficiencyorb_star(){
 if ((orbuser())|(!arcaneclass())){document.form1.arcaneimplementproficiencyorb_star.src="no_asterisk.gif";return;}
 document.form1.arcaneimplementproficiencyorb_star.src="asterisk.gif";
 }

function consider_arcaneimplementproficiencyrod(){
 if (!doingfeats()){remember_feats();return;}
 if ((roduser())|(!arcaneclass())){document.form1.arcaneimplementproficiencyrod_box.checked=false;}
 ArrowShow();
 }

function light_arcaneimplementproficiencyrod_star(){
 if ((roduser())|(!arcaneclass())){document.form1.arcaneimplementproficiencyrod_star.src="no_asterisk.gif";return;}
 document.form1.arcaneimplementproficiencyrod_star.src="asterisk.gif";
 }

function consider_arcaneimplementproficiencystaff(){
 if (!doingfeats()){remember_feats();return;}
 if ((staffuser())|(!arcaneclass())){document.form1.arcaneimplementproficiencystaff_box.checked=false;}
 ArrowShow();
 }

function light_arcaneimplementproficiencystaff_star(){
 if ((staffuser())|(!arcaneclass())){document.form1.arcaneimplementproficiencystaff_star.src="no_asterisk.gif";return;}
 document.form1.arcaneimplementproficiencystaff_star.src="asterisk.gif";
 }

function consider_arcaneimplementproficiencytome(){
 if (!doingfeats()){remember_feats();return;}
 if ((tomeuser())|(!arcaneclass())){document.form1.arcaneimplementproficiencytome_box.checked=false;}
 ArrowShow();
 }

function light_arcaneimplementproficiencytome_star(){
 if ((tomeuser())|(!arcaneclass())){document.form1.arcaneimplementproficiencytome_star.src="no_asterisk.gif";return;}
 document.form1.arcaneimplementproficiencytome_star.src="asterisk.gif";
 }

function consider_arcaneimplementproficiencywand(){
 if (!doingfeats()){remember_feats();return;}
 if ((wanduser())|(!arcaneclass())){document.form1.arcaneimplementproficiencywand_box.checked=false;}
 ArrowShow();
 }

function light_arcaneimplementproficiencywand_star(){
 if ((wanduser())|(!arcaneclass())){document.form1.arcaneimplementproficiencywand_star.src="no_asterisk.gif";return;}
 document.form1.arcaneimplementproficiencywand_star.src="asterisk.gif";
 }

function consider_dualimplementspellcaster(){
 if (!doingfeats()){remember_feats();return;}
 if ((!arcaneclass())|(dexterity<13)){document.form1.dualimplementspellcaster_box.checked=false;}
 ArrowShow();
 }

function light_dualimplementspellcaster_star(){
 if ((!arcaneclass())|(dexterity<13)){document.form1.dualimplementspellcaster_star.src="no_asterisk.gif";return;}
 document.form1.dualimplementspellcaster_star.src="asterisk.gif";
 }




function consider_agiletempest(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(dexterity<15)|(!fighter_tempesttechnique)){document.form1.agiletempest_box.checked=false;}
 ArrowShow();
 }

function light_agiletempest_star(){
 if ((total_levels<11)|(dexterity<15)|(!fighter_tempesttechnique)){document.form1.agiletempest_star.src="no_asterisk.gif";return;}
 document.form1.agiletempest_star.src="asterisk.gif";
 }

function consider_avandrasgift(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_halfling)|(rogueclass())){document.form1.avandrasgift_box.checked=false;}
 ArrowShow();
 }

function light_avandrasgift_star(){
 if ((total_levels<11)|(!race_halfling)|(rogueclass())){document.form1.avandrasgift_star.src="no_asterisk.gif";return;}
 document.form1.avandrasgift_star.src="asterisk.gif";
 }

function consider_avengingspirit(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|((!race_human)&(!race_halfelf))|((!fighterclass())&(!warlordclass()))){document.form1.avengingspirit_box.checked=false;}
 ArrowShow();
 }

function light_avengingspirit_star(){
 if ((total_levels<11)|((!race_human)&(!race_halfelf))|((!fighterclass())&(!warlordclass()))){document.form1.avengingspirit_star.src="no_asterisk.gif";return;}
 document.form1.avengingspirit_star.src="asterisk.gif";
 }

function consider_bleedingbackstab(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!class_rogue)){document.form1.bleedingbackstab_box.checked=false;}
 ArrowShow();
 }

function light_bleedingbackstab_star(){
 if ((total_levels<11)|(!class_rogue)){document.form1.bleedingbackstab_star.src="no_asterisk.gif";return;}
 document.form1.bleedingbackstab_star.src="asterisk.gif";
 }

function consider_bleedingprecision(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.bleedingprecision_box.checked=false;}
 ArrowShow();
 }

function light_bleedingprecision_star(){
 if ((total_levels<11)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.bleedingprecision_star.src="no_asterisk.gif";return;}
 document.form1.bleedingprecision_star.src="asterisk.gif";
 }

function consider_bloodyinspiration(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_dragonborn)|(!warlordclass())){document.form1.bloodyinspiration_box.checked=false;}
 ArrowShow();
 }

function light_bloodyinspiration_star(){
 if ((total_levels<11)|(!race_dragonborn)|(!warlordclass())){document.form1.bloodyinspiration_star.src="no_asterisk.gif";return;}
 document.form1.bloodyinspiration_star.src="asterisk.gif";
 }

function consider_bloodytenacity(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|((!race_human)&(!race_halfelf))|((!fighterclass())&(!rangerclass())&(!warlordclass())&(!rogueclass()))){document.form1.bloodytenacity_box.checked=false;}
 ArrowShow();
 }

function light_bloodytenacity_star(){
 if ((total_levels<11)|((!race_human)&(!race_halfelf))|((!fighterclass())&(!rangerclass())&(!warlordclass())&(!rogueclass()))){document.form1.bloodytenacity_star.src="no_asterisk.gif";return;}
 document.form1.bloodytenacity_star.src="asterisk.gif";
 }

function consider_chainmailagility(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(dexterity<15)|(!fighterclass())){document.form1.chainmailagility_box.checked=false;}
 ArrowShow();
 }

function light_chainmailagility_star(){
 if ((total_levels<11)|(dexterity<15)|(!fighterclass())){document.form1.chainmailagility_star.src="no_asterisk.gif";return;}
 document.form1.chainmailagility_star.src="asterisk.gif";
 }

function consider_combatopening(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_halfelf)|(!class_fighter)){document.form1.combatopening_box.checked=false;}
 ArrowShow();
 }

function light_combatopening_star(){
 if ((total_levels<11)|(!race_halfelf)|(!class_fighter)){document.form1.combatopening_star.src="no_asterisk.gif";return;}
 document.form1.combatopening_star.src="asterisk.gif";
 }

function consider_culltheweak(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(charisma<15)|(!rogueclass())){document.form1.culltheweak_box.checked=false;}
 ArrowShow();
 }

function light_culltheweak_star(){
 if ((total_levels<11)|(charisma<15)|(rogueclass())){document.form1.culltheweak_star.src="no_asterisk.gif";return;}
 document.form1.culltheweak_star.src="asterisk.gif";
 }

function consider_darkhunter(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_drow)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.darkhunter_box.checked=false;}
 ArrowShow();
 }

function light_darkhunter_star(){
 if ((total_levels<11)|(!race_drow)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.darkhunter_star.src="no_asterisk.gif";return;}
 document.form1.darkhunter_star.src="asterisk.gif";
 }

function consider_darkjumper(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_drow)|(!rogueclass())){document.form1.darkjumper_box.checked=false;}
 ArrowShow();
 }

function light_darkjumper_star(){
 if ((total_levels<11)|(!race_drow)|(!rogueclass())){document.form1.darkjumper_star.src="no_asterisk.gif";return;}
 document.form1.darkjumper_star.src="asterisk.gif";
 }

function consider_dauntingchallenge(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!class_fighter)){document.form1.dauntingchallenge_box.checked=false;}
 ArrowShow();
 }

function light_dauntingchallenge_star(){
 if ((total_levels<11)|(!class_fighter)){document.form1.dauntingchallenge_star.src="no_asterisk.gif";return;}
 document.form1.dauntingchallenge_star.src="asterisk.gif";
 }

function consider_defensivesurge(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(constitution<15)|(!warlordclass())){document.form1.defensivesurge_box.checked=false;}
 ArrowShow();
 }

function light_defensivesurge_star(){
 if ((total_levels<11)|(constitution<15)|(!warlordclass())){document.form1.defensivesurge_star.src="no_asterisk.gif";return;}
 document.form1.defensivesurge_star.src="asterisk.gif";
 }

function consider_distractingcompanion(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!ranger_beastmaster)){document.form1.distractingcompanion_box.checked=false;}
 ArrowShow();
 }

function light_distractingcompanion_star(){
 if ((total_levels<11)|(!ranger_beastmaster)){document.form1.distractingcompanion_star.src="no_asterisk.gif";return;}
 document.form1.distractingcompanion_star.src="asterisk.gif";
 }

function consider_draconicarrogance(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_dragonborn)|(!fighterclass())){document.form1.draconicarrogance_box.checked=false;}
 ArrowShow();
 }

function light_draconicarrogance_star(){
 if ((total_levels<11)|(!race_dragonborn)|(!fighterclass())){document.form1.draconicarrogance_star.src="no_asterisk.gif";return;}
 document.form1.draconicarrogance_star.src="asterisk.gif";
 }

function consider_dragonbreathwarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_dragonborn)|(!AnyMartialClass())){document.form1.dragonbreathwarrior_box.checked=false;}
 ArrowShow();
 }

function light_dragonbreathwarrior_star(){
 if ((total_levels<11)|(!race_dragonborn)|(!AnyMartialClass())){document.form1.dragonbreathwarrior_star.src="no_asterisk.gif";return;}
 document.form1.dragonbreathwarrior_star.src="asterisk.gif";
 }

function consider_elementalcompanions(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_genasi)|(!warlordclass())){document.form1.elementalcompanions_box.checked=false;}
 ArrowShow();
 }

function light_elementalcompanions_star(){
 if ((total_levels<11)|(!race_genasi)|(!warlordclass())){document.form1.elementalcompanions_star.src="no_asterisk.gif";return;}
 document.form1.elementalcompanions_star.src="asterisk.gif";
 }

function consider_elementalguardian(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(constitution<15)|(!race_genasi)|(!fighterclass())){document.form1.elementalguardian_box.checked=false;}
 ArrowShow();
 }

function light_elementalguardian_star(){
 if ((total_levels<11)|(constitution<15)|(!race_genasi)|(!fighterclass())){document.form1.elementalguardian_star.src="no_asterisk.gif";return;}
 document.form1.elementalguardian_star.src="asterisk.gif";
 }

function consider_enduringwallop(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_dwarf)|(!fighterclass())){document.form1.enduringwallop_box.checked=false;}
 ArrowShow();
 }

function light_enduringwallop_star(){
 if ((total_levels<11)|(!race_dwarf)|(!fighterclass())){document.form1.enduringwallop_star.src="no_asterisk.gif";return;}
 document.form1.enduringwallop_star.src="asterisk.gif";
 }

function consider_evasivefootwork(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(dexterity<17)|(charisma<15)|(!rogueclass())){document.form1.evasivefootwork_box.checked=false;}
 ArrowShow();
 }

function light_evasivefootwork_star(){
 if ((total_levels<11)|(dexterity<17)|(charisma<15)|(!rogueclass())){document.form1.evasivefootwork_star.src="no_asterisk.gif";return;}
 document.form1.evasivefootwork_star.src="asterisk.gif";
 }

function consider_feycharge(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_eladrin)|(!fighterclass())){document.form1.feycharge_box.checked=false;}
 ArrowShow();
 }

function light_feycharge_star(){
 if ((total_levels<11)|(!race_eladrin)|(!fighterclass())){document.form1.feycharge_star.src="no_asterisk.gif";return;}
 document.form1.feycharge_star.src="asterisk.gif";
 }

function consider_feygambit(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_eladrin)|(!rogueclass())){document.form1.feygambit_box.checked=false;}
 ArrowShow();
 }

function light_feygambit_star(){
 if ((total_levels<11)|(!race_eladrin)|(!rogueclass())){document.form1.feygambit_star.src="no_asterisk.gif";return;}
 document.form1.feygambit_star.src="asterisk.gif";
 }

function consider_feytactics(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_eladrin)|(!warlordclass())){document.form1.feytactics_box.checked=false;}
 ArrowShow();
 }

function light_feytactics_star(){
 if ((total_levels<11)|(!race_eladrin)|(!warlordclass())){document.form1.feytactics_star.src="no_asterisk.gif";return;}
 document.form1.feytactics_star.src="asterisk.gif";
 }

function consider_fiendishdefender(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_tiefling)|(!class_fighter)){document.form1.fiendishdefender_box.checked=false;}
 ArrowShow();
 }

function light_fiendishdefender_star(){
 if ((total_levels<11)|(!race_tiefling)|(!class_fighter)){document.form1.fiendishdefender_star.src="no_asterisk.gif";return;}
 document.form1.fiendishdefender_star.src="asterisk.gif";
 }

function consider_grit(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(constitution<17)|(!fighterclass())){document.form1.grit_box.checked=false;}
 ArrowShow();
 }

function light_grit_star(){
 if ((total_levels<11)|(constitution<17)|(!fighterclass())){document.form1.grit_star.src="no_asterisk.gif";return;}
 document.form1.grit_star.src="asterisk.gif";
 }

function consider_groupflanking(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_halfelf)|(!rogueclass())){document.form1.groupflanking_box.checked=false;}
 ArrowShow();
 }

function light_groupflanking_star(){
 if ((total_levels<11)|(!race_halfelf)|(!rogueclass())){document.form1.groupflanking_star.src="no_asterisk.gif";return;}
 document.form1.groupflanking_star.src="asterisk.gif";
 }

function consider_halflingbeastmastery(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_halfling)|(!ranger_beastmaster)){document.form1.halflingbeastmastery_box.checked=false;}
 ArrowShow();
 }

function light_halflingbeastmastery_star(){
 if ((total_levels<11)|(!race_halfling)|(!ranger_beastmaster)){document.form1.halflingbeastmastery_star.src="no_asterisk.gif";return;}
 document.form1.halflingbeastmastery_star.src="asterisk.gif";
 }

function consider_huntersadvantage(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|((!race_elf)&(!race_halfelf))|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.huntersadvantage_box.checked=false;}
 ArrowShow();
 }

function light_huntersadvantage_star(){
 if ((total_levels<11)|((!race_elf)&(!race_halfelf))|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.huntersadvantage_star.src="no_asterisk.gif";return;}
 document.form1.huntersadvantage_star.src="asterisk.gif";
 }

function consider_huntersresurgence(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.huntersresurgence_box.checked=false;}
 ArrowShow();
 }

function light_huntersresurgence_star(){
 if ((total_levels<11)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.huntersresurgence_star.src="no_asterisk.gif";return;}
 document.form1.huntersresurgence_star.src="asterisk.gif";
 }

function consider_impetuouscharger(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(charisma<15)|(!warlordclass())){document.form1.impetuouscharger_box.checked=false;}
 ArrowShow();
 }

function light_impetuouscharger_star(){
 if ((total_levels<11)|(charisma<15)|(!warlordclass())){document.form1.impetuouscharger_star.src="no_asterisk.gif";return;}
 document.form1.impetuouscharger_star.src="asterisk.gif";
 }

function consider_infernalsneakattack(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_tiefling)|(!class_rogue)){document.form1.infernalsneakattack_box.checked=false;}
 ArrowShow();
 }

function light_infernalsneakattack_star(){
 if ((total_levels<11)|(!race_tiefling)|(!class_rogue)){document.form1.infernalsneakattack_star.src="no_asterisk.gif";return;}
 document.form1.infernalsneakattack_star.src="asterisk.gif";
 }

function consider_markedscourge(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!class_fighter)){document.form1.markedscourge_box.checked=false;}
 ArrowShow();
 }

function light_markedscourge_star(){
 if ((total_levels<11)|(!class_fighter)){document.form1.markedscourge_star.src="no_asterisk.gif";return;}
 document.form1.markedscourge_star.src="asterisk.gif";
 }

function consider_mightybattlerage(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!fighter_battlerager)){document.form1.mightybattlerage_box.checked=false;}
 ArrowShow();
 }

function light_mightybattlerage_star(){
 if ((total_levels<11)|(!fighter_battlerager)){document.form1.mightybattlerage_star.src="no_asterisk.gif";return;}
 document.form1.mightybattlerage_star.src="asterisk.gif";
 }

function consider_opportunisticarcher(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|((!race_elf)&(!race_halfelf))|(!class_fighter)){document.form1.opportunisticarcher_box.checked=false;}
 ArrowShow();
 }

function light_opportunisticarcher_star(){
 if ((total_levels<11)|((!race_elf)&(!race_halfelf))|(!class_fighter)){document.form1.opportunisticarcher_star.src="no_asterisk.gif";return;}
 document.form1.opportunisticarcher_star.src="asterisk.gif";
 }

function consider_opportunisticsneakattack(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!class_rogue)){document.form1.opportunisticsneakattack_box.checked=false;}
 ArrowShow();
 }

function light_opportunisticsneakattack_star(){
 if ((total_levels<11)|(!class_rogue)){document.form1.opportunisticsneakattack_star.src="no_asterisk.gif";return;}
 document.form1.opportunisticsneakattack_star.src="asterisk.gif";
 }

function consider_phalanxwarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|((!fighterclass())&(!warlordclass()))){document.form1.phalanxwarrior_box.checked=false;}
 ArrowShow();
 }

function light_phalanxwarrior_star(){
 if ((total_levels<11)|((!fighterclass())&(!warlordclass()))){document.form1.phalanxwarrior_star.src="no_asterisk.gif";return;}
 document.form1.phalanxwarrior_star.src="asterisk.gif";
 }

function consider_preternaturalsenses(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(wisdom<15)|(!rangerclass())|(!TrainedInPerception())){document.form1.preternaturalsenses_box.checked=false;}
 ArrowShow();
 }

function light_preternaturalsenses_star(){
 if ((total_levels<11)|(wisdom<15)|(!rangerclass())|(!TrainedInPerception())){document.form1.preternaturalsenses_star.src="no_asterisk.gif";return;}
 document.form1.preternaturalsenses_star.src="asterisk.gif";
 }

function consider_primequarry(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!class_ranger)|(ranger_beastmaster)){document.form1.primequarry_box.checked=false;}
 ArrowShow();
 }

function light_primequarry_star(){
 if ((total_levels<11)|(!class_ranger)|(ranger_beastmaster)){document.form1.primequarry_star.src="no_asterisk.gif";return;}
 document.form1.primequarry_star.src="asterisk.gif";
 }

function consider_primeslayer(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|((!race_elf)&(!race_halfelf))|(!rogueclass())){document.form1.primeslayer_box.checked=false;}
 ArrowShow();
 }

function light_primeslayer_star(){
 if ((total_levels<11)|((!race_elf)&(!race_halfelf))|(!rogueclass())){document.form1.primeslayer_star.src="no_asterisk.gif";return;}
 document.form1.primeslayer_star.src="asterisk.gif";
 }

function consider_protectivebeast(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!ranger_beastmaster)){document.form1.protectivebeast_box.checked=false;}
 ArrowShow();
 }

function light_protectivebeast_star(){
 if ((total_levels<11)|(!ranger_beastmaster)){document.form1.protectivebeast_star.src="no_asterisk.gif";return;}
 document.form1.protectivebeast_star.src="asterisk.gif";
 }

function consider_recklessattacker(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!fighterclass())){document.form1.recklessattacker_box.checked=false;}
 ArrowShow();
 }

function light_recklessattacker_star(){
 if ((total_levels<11)|(!fighterclass())){document.form1.recklessattacker_star.src="no_asterisk.gif";return;}
 document.form1.recklessattacker_star.src="asterisk.gif";
 }

function consider_reliableresources(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!warlord_resourceful)){document.form1.reliableresources_box.checked=false;}
 ArrowShow();
 }

function light_reliableresources_star(){
 if ((total_levels<11)|(!warlord_resourceful)){document.form1.reliableresources_star.src="no_asterisk.gif";return;}
 document.form1.reliableresources_star.src="asterisk.gif";
 }

function consider_rogueweaponmastery(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!class_rogue)){document.form1.rogueweaponmastery_box.checked=false;}
 ArrowShow();
 }

function light_rogueweaponmastery_star(){
 if ((total_levels<11)|(!class_rogue)){document.form1.rogueweaponmastery_star.src="no_asterisk.gif";return;}
 document.form1.rogueweaponmastery_star.src="asterisk.gif";
 }

function consider_roundaboutcharge(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!class_rogue)|(!TrainedInAcrobatics())){document.form1.roundaboutcharge_box.checked=false;}
 ArrowShow();
 }

function light_roundaboutcharge_star(){
 if ((total_levels<11)|(!class_rogue)|(!TrainedInAcrobatics())){document.form1.roundaboutcharge_star.src="no_asterisk.gif";return;}
 document.form1.roundaboutcharge_star.src="asterisk.gif";
 }

function consider_steadfasttacatics(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_dwarf)|(!class_warlord)){document.form1.steadfasttacatics_box.checked=false;}
 ArrowShow();
 }

function light_steadfasttacatics_star(){
 if ((total_levels<11)|(!race_dwarf)|(!class_warlord)){document.form1.steadfasttacatics_star.src="no_asterisk.gif";return;}
 document.form1.steadfasttacatics_star.src="asterisk.gif";
 }

function consider_stonefootreprisal(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_dwarf)|(!fighterclass())){document.form1.stonefootreprisal_box.checked=false;}
 ArrowShow();
 }

function light_stonefootreprisal_star(){
 if ((total_levels<11)|(!race_dwarf)|(!fighterclass())){document.form1.stonefootreprisal_star.src="no_asterisk.gif";return;}
 document.form1.stonefootreprisal_star.src="asterisk.gif";
 }

function consider_sturdybeast(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!ranger_beastmaster)){document.form1.sturdybeast_box.checked=false;}
 ArrowShow();
 }

function light_sturdybeast_star(){
 if ((total_levels<11)|(!ranger_beastmaster)){document.form1.sturdybeast_star.src="no_asterisk.gif";return;}
 document.form1.sturdybeast_star.src="asterisk.gif";
 }

function consider_vitalinspiration(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_halfelf)|(!warlordclass())){document.form1.vitalinspiration_box.checked=false;}
 ArrowShow();
 }

function light_vitalinspiration_star(){
 if ((total_levels<11)|(!race_halfelf)|(!warlordclass())){document.form1.vitalinspiration_star.src="no_asterisk.gif";return;}
 document.form1.vitalinspiration_star.src="asterisk.gif";
 }

function consider_warlordsformation(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(intelligence<17)|(!warlordclass())){document.form1.warlordsformation_box.checked=false;}
 ArrowShow();
 }

function light_warlordsformation_star(){
 if ((total_levels<11)|(intelligence<17)|(!warlordclass())){document.form1.warlordsformation_star.src="no_asterisk.gif";return;}
 document.form1.warlordsformation_star.src="asterisk.gif";
 }

function consider_wrathfulhunter(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<11)|(!race_tiefling)|((!class_ranger)&(multi_ranger_warriorofthewild))){document.form1.wrathfulhunter_box.checked=false;}
 ArrowShow();
 }

function light_wrathfulhunter_star(){
 if ((total_levels<11)|(!race_tiefling)|((!class_ranger)&(multi_ranger_warriorofthewild))){document.form1.wrathfulhunter_star.src="no_asterisk.gif";return;}
 document.form1.wrathfulhunter_star.src="asterisk.gif";
 }

function consider_actiongrant(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(intelligence<15)|(charisma<15)|(!warlord_resourceful)){document.form1.actiongrant_box.checked=false;}
 ArrowShow();
 }

function light_actiongrant_star(){
 if ((total_levels<21)|(intelligence<15)|(charisma<15)|(!warlord_resourceful)){document.form1.actiongrant_star.src="no_asterisk.gif";return;}
 document.form1.actiongrant_star.src="asterisk.gif";
 }

function consider_aggressiveleadership(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!charisma<19)|(!warlordclass())){document.form1.aggressiveleadership_box.checked=false;}
 ArrowShow();
 }

function light_aggressiveleadership_star(){
 if ((total_levels<21)|(!charisma<19)|(!warlordclass())){document.form1.aggressiveleadership_star.src="no_asterisk.gif";return;}
 document.form1.aggressiveleadership_star.src="asterisk.gif";
 }

function consider_artfulprovocation(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(charisma<17)|(!rogue_artfuldodger)){document.form1.artfulprovocation_box.checked=false;}
 ArrowShow();
 }

function light_artfulprovocation_star(){
 if ((total_levels<21)|(charisma<17)|(!rogue_artfuldodger)){document.form1.artfulprovocation_star.src="no_asterisk.gif";return;}
 document.form1.artfulprovocation_star.src="asterisk.gif";
 }

function consider_boldspirit(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!warlord_bravura)){document.form1.boldspirit_box.checked=false;}
 ArrowShow();
 }

function light_boldspirit_star(){
 if ((total_levels<21)|(!warlord_bravura)){document.form1.boldspirit_star.src="no_asterisk.gif";return;}
 document.form1.boldspirit_star.src="asterisk.gif";
 }

function consider_brutaladvantage(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(strength<17)|(!rogue_brutalscoundrel)){document.form1.brutaladvantage_box.checked=false;}
 ArrowShow();
 }

function light_brutaladvantage_star(){
 if ((total_levels<21)|(strength<17)|(!rogue_brutalscoundrel)){document.form1.brutaladvantage_star.src="no_asterisk.gif";return;}
 document.form1.brutaladvantage_star.src="asterisk.gif";
 }

function consider_calltoglory(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(charisma<17)|(!warlordclass())){document.form1.calltoglory_box.checked=false;}
 ArrowShow();
 }

function light_calltoglory_star(){
 if ((total_levels<21)|(charisma<17)|(!warlordclass())){document.form1.calltoglory_star.src="no_asterisk.gif";return;}
 document.form1.calltoglory_star.src="asterisk.gif";
 }

function consider_channeledbattlerage(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(constitution<17)|(!fighter_battlerager)){document.form1.channeledbattlerage_box.checked=false;}
 ArrowShow();
 }

function light_channeledbattlerage_star(){
 if ((total_levels<21)|(constitution<17)|(!fighter_battlerager)){document.form1.channeledbattlerage_star.src="no_asterisk.gif";return;}
 document.form1.channeledbattlerage_star.src="asterisk.gif";
 }

function consider_correctingaim(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.correctingaim_box.checked=false;}
 ArrowShow();
 }

function light_correctingaim_star(){
 if ((total_levels<21)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.correctingaim_star.src="no_asterisk.gif";return;}
 document.form1.correctingaim_star.src="asterisk.gif";
 }

function consider_darkfirewarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!race_drow)|(!AnyMartialClass())){document.form1.darkfirewarrior_box.checked=false;}
 ArrowShow();
 }

function light_darkfirewarrior_star(){
 if ((total_levels<21)|(!race_drow)|(!AnyMartialClass())){document.form1.darkfirewarrior_star.src="no_asterisk.gif";return;}
 document.form1.darkfirewarrior_star.src="asterisk.gif";
 }

function consider_dragonwarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(constitution<17)|(!race_dragonborn)|(!AnyMartialClass())){document.form1.dragonwarrior_box.checked=false;}
 ArrowShow();
 }

function light_dragonwarrior_star(){
 if ((total_levels<21)|(constitution<17)|(!race_dragonborn)|(!AnyMartialClass())){document.form1.dragonwarrior_star.src="no_asterisk.gif";return;}
 document.form1.dragonwarrior_star.src="asterisk.gif";
 }

function consider_elementalwarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!race_genasi)|(!AnyMartialClass())){document.form1.elementalwarrior_box.checked=false;}
 ArrowShow();
 }

function light_elementalwarrior_star(){
 if ((total_levels<21)|(!race_genasi)|(!AnyMartialClass())){document.form1.elementalwarrior_star.src="no_asterisk.gif";return;}
 document.form1.elementalwarrior_star.src="asterisk.gif";
 }

function consider_epicrecovery(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(constitution<19)|(!AnyMartialClass())){document.form1.epicrecovery_box.checked=false;}
 ArrowShow();
 }

function light_epicrecovery_star(){
 if ((total_levels<21)|(constitution<19)|(!AnyMartialClass())){document.form1.epicrecovery_star.src="no_asterisk.gif";return;}
 document.form1.epicrecovery_star.src="asterisk.gif";
 }

function consider_feywildwarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!race_eladrin)|(!AnyMartialClass())){document.form1.feywildwarrior_box.checked=false;}
 ArrowShow();
 }

function light_feywildwarrior_star(){
 if ((total_levels<21)|(!race_eladrin)|(!AnyMartialClass())){document.form1.feywildwarrior_star.src="no_asterisk.gif";return;}
 document.form1.feywildwarrior_star.src="asterisk.gif";
 }

function consider_fortuneswarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(dexterity<17)|(!race_halfling)|(!AnyMartialClass())){document.form1.fortuneswarrior_box.checked=false;}
 ArrowShow();
 }

function light_fortuneswarrior_star(){
 if ((total_levels<21)|(dexterity<17)|(!race_halfling)|(!AnyMartialClass())){document.form1.fortuneswarrior_star.src="no_asterisk.gif";return;}
 document.form1.fortuneswarrior_star.src="asterisk.gif";
 }

function consider_hawkeyewarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(wisdom<17)|((!race_elf)&(!race_halfelf))|(!AnyMartialClass())){document.form1.hawkeyewarrior_box.checked=false;}
 ArrowShow();
 }

function light_hawkeyewarrior_star(){
 if ((total_levels<21)|(wisdom<17)|((!race_elf)&(!race_halfelf))|(!AnyMartialClass())){document.form1.hawkeyewarrior_star.src="no_asterisk.gif";return;}
 document.form1.hawkeyewarrior_star.src="asterisk.gif";
 }

function consider_improvedprimeshot(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(wisdom<17)|(!class_ranger)|(ranger_beastmaster)){document.form1.improvedprimeshot_box.checked=false;}
 ArrowShow();
 }

function light_improvedprimeshot_star(){
 if ((total_levels<21)|(wisdom<17)|(!class_ranger)|(ranger_beastmaster)){document.form1.improvedprimeshot_star.src="no_asterisk.gif";return;}
 document.form1.improvedprimeshot_star.src="asterisk.gif";
 }

function consider_infernalwarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(charisma<17)|(race_tiefling)|(!AnyMartialClass())){document.form1.infernalwarrior_box.checked=false;}
 ArrowShow();
 }

function light_infernalwarrior_star(){
 if ((total_levels<21)|(charisma<17)|(race_tiefling)|(!AnyMartialClass())){document.form1.infernalwarrior_star.src="no_asterisk.gif";return;}
 document.form1.infernalwarrior_star.src="asterisk.gif";
 }

function consider_invigoratingexploit(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!AnyMartialClass())){document.form1.invigoratingexploit_box.checked=false;}
 ArrowShow();
 }

function light_invigoratingexploit_star(){
 if ((total_levels<21)|(!AnyMartialClass())){document.form1.invigoratingexploit_star.src="no_asterisk.gif";return;}
 document.form1.invigoratingexploit_star.src="asterisk.gif";
 }

function consider_knockbackswing(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(constitution<17)|(!fighterclass())){document.form1.knockbackswing_box.checked=false;}
 ArrowShow();
 }

function light_knockbackswing_star(){
 if ((total_levels<21)|(constitution<17)|(!fighterclass())){document.form1.knockbackswing_star.src="no_asterisk.gif";return;}
 document.form1.knockbackswing_star.src="asterisk.gif";
 }

function consider_lastingadvantage(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!rogueclass())){document.form1.lastingadvantage_box.checked=false;}
 ArrowShow();
 }

function light_lastingadvantage_star(){
 if ((total_levels<21)|(!rogueclass())){document.form1.lastingadvantage_star.src="no_asterisk.gif";return;}
 document.form1.lastingadvantage_star.src="asterisk.gif";
 }

function consider_martialmastery(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!AnyMartialClass())){document.form1.martialmastery_box.checked=false;}
 ArrowShow();
 }

function light_martialmastery_star(){
 if ((total_levels<21)|(!AnyMartialClass())){document.form1.martialmastery_star.src="no_asterisk.gif";return;}
 document.form1.martialmastery_star.src="asterisk.gif";
 }

function consider_martialresolve(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(wisdom<15)|(!AnyMartialClass())|(!TrainedInEndurance())){document.form1.martialresolve_box.checked=false;}
 ArrowShow();
 }

function light_martialresolve_star(){
 if ((total_levels<21)|(wisdom<15)|(!AnyMartialClass())|(!TrainedInEndurance())){document.form1.martialresolve_star.src="no_asterisk.gif";return;}
 document.form1.martialresolve_star.src="asterisk.gif";
 }

function consider_mobilewarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(dexterity<17)|(!fighterclass())){document.form1.mobilewarrior_box.checked=false;}
 ArrowShow();
 }

function light_mobilewarrior_star(){
 if ((total_levels<21)|(dexterity<17)|(!fighterclass())){document.form1.mobilewarrior_star.src="no_asterisk.gif";return;}
 document.form1.mobilewarrior_star.src="asterisk.gif";
 }

function consider_onewithshadow(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!rogueclass())){document.form1.onewithshadow_box.checked=false;}
 ArrowShow();
 }

function light_onewithshadow_star(){
 if ((total_levels<21)|(!rogueclass())){document.form1.onewithshadow_star.src="no_asterisk.gif";return;}
 document.form1.onewithshadow_star.src="asterisk.gif";
 }

function consider_peerlesshunter(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(wisdom<17)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.peerlesshunter_box.checked=false;}
 ArrowShow();
 }

function light_peerlesshunter_star(){
 if ((total_levels<21)|(wisdom<17)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.peerlesshunter_star.src="no_asterisk.gif";return;}
 document.form1.peerlesshunter_star.src="asterisk.gif";
 }

function consider_practicedreliability(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!fighterclass())){document.form1.practicedreliability_box.checked=false;}
 ArrowShow();
 }

function light_practicedreliability_star(){
 if ((total_levels<21)|(!fighterclass())){document.form1.practicedreliability_star.src="no_asterisk.gif";return;}
 document.form1.practicedreliability_star.src="asterisk.gif";
 }

function consider_primehunter(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!rangerclass())){document.form1.primehunter_box.checked=false;}
 ArrowShow();
 }

function light_primehunter_star(){
 if ((total_levels<21)|(!rangerclass())){document.form1.primehunter_star.src="no_asterisk.gif";return;}
 document.form1.primehunter_star.src="asterisk.gif";
 }

function consider_protectiveleadership(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(intelligence<19)|(!warlordclass())){document.form1.protectiveleadership_box.checked=false;}
 ArrowShow();
 }

function light_protectiveleadership_star(){
 if ((total_levels<21)|(intelligence<19)|(!warlordclass())){document.form1.protectiveleadership_star.src="no_asterisk.gif";return;}
 document.form1.protectiveleadership_star.src="asterisk.gif";
 }

function consider_quickbeastcommand(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(wisdom<17)|(!ranger_beastmaster)){document.form1.quickbeastcommand_box.checked=false;}
 ArrowShow();
 }

function light_quickbeastcommand_star(){
 if ((total_levels<21)|(wisdom<17)|(!ranger_beastmaster)){document.form1.quickbeastcommand_star.src="no_asterisk.gif";return;}
 document.form1.quickbeastcommand_star.src="asterisk.gif";
 }

function consider_rattlingexploit(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!AnyMartialClass())){document.form1.rattlingexploit_box.checked=false;}
 ArrowShow();
 }

function light_rattlingexploit_star(){
 if ((total_levels<21)|(!AnyMartialClass())){document.form1.rattlingexploit_star.src="no_asterisk.gif";return;}
 document.form1.rattlingexploit_star.src="asterisk.gif";
 }

function consider_reachingwhirlwind(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(dexterity<15)|(wisdom<15)|(!fighterclass())){document.form1.reachingwhirlwind_box.checked=false;}
 ArrowShow();
 }

function light_reachingwhirlwind_star(){
 if ((total_levels<21)|(dexterity<15)|(wisdom<15)|(!fighterclass())){document.form1.reachingwhirlwind_star.src="no_asterisk.gif";return;}
 document.form1.reachingwhirlwind_star.src="asterisk.gif";
 }

function consider_rendingtempest(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(dexterity<17)|((!fighterclass())&(!rangerclass()))){document.form1.rendingtempest_box.checked=false;}
 ArrowShow();
 }

function light_rendingtempest_star(){
 if ((total_levels<21)|(dexterity<17)|((!fighterclass())&(!rangerclass()))){document.form1.rendingtempest_star.src="no_asterisk.gif";return;}
 document.form1.rendingtempest_star.src="asterisk.gif";
 }

function consider_ruthlessterror(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(strength<17)|(!rogueclass())|(!TrainedInIntimidate())){document.form1.ruthlessterror_box.checked=false;}
 ArrowShow();
 }

function light_ruthlessterror_star(){
 if ((total_levels<21)|(strength<17)|(!rogueclass())|(!TrainedInIntimidate())){document.form1.ruthlessterror_star.src="no_asterisk.gif";return;}
 document.form1.ruthlessterror_star.src="asterisk.gif";
 }

function consider_staggeringshot(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.staggeringshot_box.checked=false;}
 ArrowShow();
 }

function light_staggeringshot_star(){
 if ((total_levels<21)|((!class_ranger)&(!multi_ranger_warriorofthewild))){document.form1.staggeringshot_star.src="no_asterisk.gif";return;}
 document.form1.staggeringshot_star.src="asterisk.gif";
 }

function consider_stoneheartwarrior(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(constitution<17)|(!race_dwarf)|(!AnyMartialClass())){document.form1.stoneheartwarrior_box.checked=false;}
 ArrowShow();
 }

function light_stoneheartwarrior_star(){
 if ((total_levels<21)|(constitution<17)|(!race_dwarf)|(!AnyMartialClass())){document.form1.stoneheartwarrior_star.src="no_asterisk.gif";return;}
 document.form1.stoneheartwarrior_star.src="asterisk.gif";
 }

function consider_supremeinspiration(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(charisma<19)|(!warlordclass())){document.form1.supremeinspiration_box.checked=false;}
 ArrowShow();
 }

function light_supremeinspiration_star(){
 if ((total_levels<21)|(charisma<19)|(!warlordclass())){document.form1.supremeinspiration_star.src="no_asterisk.gif";return;}
 document.form1.supremeinspiration_star.src="asterisk.gif";
 }

function consider_surpriseaction(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(wisdom<17)|(!rangerclass())){document.form1.surpriseaction_box.checked=false;}
 ArrowShow();
 }

function light_surpriseaction_star(){
 if ((total_levels<21)|(wisdom<17)|(!rangerclass())){document.form1.surpriseaction_star.src="no_asterisk.gif";return;}
 document.form1.surpriseaction_star.src="asterisk.gif";
 }

function consider_tacticalcunning(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(intelligence<17)|(!class_warlord)){document.form1.tacticalcunning_box.checked=false;}
 ArrowShow();
 }

function light_tacticalcunning_star(){
 if ((total_levels<21)|(intelligence<17)|(!class_warlord)){document.form1.tacticalcunning_star.src="no_asterisk.gif";return;}
 document.form1.tacticalcunning_star.src="asterisk.gif";
 }

function consider_tacticalinsight(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!race_halfelf)|(!fighterclass())){document.form1.tacticalinsight_box.checked=false;}
 ArrowShow();
 }

function light_tacticalinsight_star(){
 if ((total_levels<21)|(!race_halfelf)|(!fighterclass())){document.form1.tacticalinsight_star.src="no_asterisk.gif";return;}
 document.form1.tacticalinsight_star.src="asterisk.gif";
 }

function consider_timelyrevival(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|((!race_human)&(!race_halfelf))|(!AnyMartialClass())){document.form1.timelyrevival_box.checked=false;}
 ArrowShow();
 }

function light_timelyrevival_star(){
 if ((total_levels<21)|((!race_human)&(!race_halfelf))|(!AnyMartialClass())){document.form1.timelyrevival_star.src="no_asterisk.gif";return;}
 document.form1.timelyrevival_star.src="asterisk.gif";
 }

function consider_unstoppablecharge(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(strength<21)|(constitution<17)|(!fighterclass())){document.form1.unstoppablecharge_box.checked=false;}
 ArrowShow();
 }

function light_unstoppablecharge_star(){
 if ((total_levels<21)|(strength<21)|(constitution<17)|(!fighterclass())){document.form1.unstoppablecharge_star.src="no_asterisk.gif";return;}
 document.form1.unstoppablecharge_star.src="asterisk.gif";
 }

function consider_whirlwindsneakattack(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21)|(!class_rogue)){document.form1.whirlwindsneakattack_box.checked=false;}
 ArrowShow();
 }

function light_whirlwindsneakattack_star(){
 if ((total_levels<21)|(!class_rogue)){document.form1.whirlwindsneakattack_star.src="no_asterisk.gif";return;}
 document.form1.whirlwindsneakattack_star.src="asterisk.gif";
 }

function consider_ph2epic(){
 if (!doingfeats()){remember_feats();return;}
 if ((total_levels<21))
  {
   document.form1.bowmastery_box.checked=false;
   document.form1.epicfortitude_box.checked=false;
   document.form1.epicreflexes_box.checked=false;
   document.form1.epicwill_box.checked=false;
   document.form1.indomitablewill_box.checked=false;
   document.form1.opportunereflexes_box.checked=false;
   document.form1.robustdefenses_box.checked=false;
   document.form1.unyieldingfortitude_box.checked=false;
  }
 ArrowShow();
 }

function light_ph2epic_star(){
 if ((total_levels<21))
  {
   document.form1.bowmastery_star.src="no_asterisk.gif";return;
   document.form1.epicfortitude_star.src="no_asterisk.gif";return;
   document.form1.epicreflexes_star.src="no_asterisk.gif";return;
   document.form1.epicwill_star.src="no_asterisk.gif";return;
   document.form1.indomitablewill_star.src="no_asterisk.gif";return;
   document.form1.opportunereflexes_star.src="no_asterisk.gif";return;
   document.form1.robustdefenses_star.src="no_asterisk.gif";return;
   document.form1.unyieldingfortitude_star.src="no_asterisk.gif";return;
  }
 document.form1.bowmastery_star.src="asterisk.gif";
 document.form1.epicfortitude_star.src="asterisk.gif";
 document.form1.epicreflexes_star.src="asterisk.gif";
 document.form1.epicwill_star.src="asterisk.gif";
 document.form1.indomitablewill_star.src="asterisk.gif";
 document.form1.opportunereflexes_star.src="asterisk.gif";
 document.form1.robustdefenses_star.src="asterisk.gif";
 document.form1.unyieldingfortitude_star.src="asterisk.gif";
 }


function consider_battleacumen(){
 if (!doingfeats()){remember_feats();return;}
 if ((!paragon_multiclass)|(!multi_fighter())){document.form1.battleacumen_box.checked=false;}
 ArrowShow();
 }

function light_battleacumen_star(){
 if ((!paragon_multiclass)|(!multi_fighter())){document.form1.battleacumen_star.src="no_asterisk.gif";return;}
 document.form1.battleacumen_star.src="asterisk.gif";
 }

function consider_arcanefamiliar(){
 if (!doingfeats()){remember_feats();return;}
 document.form1.arcanefamiliar_box.checked=has_arcane_familiar();
 ArrowShow();
 }

function light_arcanefamiliar_star(){
 if (has_arcane_familiar()){document.form1.arcanefamiliar_star.src="asterisk.gif"}
  else {document.form1.arcanefamiliar_star.src="no_asterisk.gif"};
 }

function consider_alertfamiliar(){
 if (!doingfeats()){remember_feats();return;}
 if ((!has_arcane_familiar())|(total_levels<11)){document.form1.alertfamiliar_box.checked=false; return;}
 ArrowShow();
 }

function light_alertfamiliar_star(){
 if ((has_arcane_familiar())&(total_levels>=11)){document.form1.alertfamiliar_star.src="asterisk.gif"}
  else {document.form1.alertfamiliar_star.src="no_asterisk.gif"};
 }

function consider_aggressivefamiliar(){
 if (!doingfeats()){remember_feats();return;}
 if ((!has_arcane_familiar())|(total_levels<16)){document.form1.aggressivefamiliar_box.checked=false; return;}
 ArrowShow();
 }

function light_aggressivefamiliar_star(){
 if ((has_arcane_familiar())&(total_levels>=16)){document.form1.aggressivefamiliar_star.src="asterisk.gif"}
  else {document.form1.aggressivefamiliar_star.src="no_asterisk.gif"};
 }

function consider_shieldingfamiliar(){
 if (!doingfeats()){remember_feats();return;}
 if ((!has_arcane_familiar())|(total_levels<6)){document.form1.shieldingfamiliar_box.checked=false; return;}
 ArrowShow();
 }

function light_shieldingfamiliar_star(){
 if ((has_arcane_familiar())&(total_levels>=6)){document.form1.shieldingfamiliar_star.src="asterisk.gif"}
  else {document.form1.shieldingfamiliar_star.src="no_asterisk.gif"};
 }

function consider_spellseerfamiliar(){
 if (!doingfeats()){remember_feats();return;}
 if ((!has_arcane_familiar())|(total_levels<6)){document.form1.spellseerfamiliar_box.checked=false; return;}
 ArrowShow();
 }

function light_spellseerfamiliar_star(){
 if ((has_arcane_familiar())&(total_levels>=6)){document.form1.spellseerfamiliar_star.src="asterisk.gif"}
  else {document.form1.spellseerfamiliar_star.src="no_asterisk.gif"};
 }

function consider_bondedfamiliar(){
 if (!doingfeats()){remember_feats();return;}
 if ((!has_arcane_familiar())){document.form1.bondedfamiliar_box.checked=false; return;}
 ArrowShow();
 }

function light_bondedfamiliar_star(){
 if (has_arcane_familiar()){document.form1.bondedfamiliar_star.src="asterisk.gif"}
  else {document.form1.bondedfamiliar_star.src="no_asterisk.gif"};
 }

function consider_quickfamiliar(){
 if (!doingfeats()){remember_feats();return;}
 if (!has_arcane_familiar()){document.form1.quickfamiliar_box,checked=false;}
 ArrowShow();
 }

function light_quickfamiliar_star(){
 if (has_arcane_familiar()){document.form1.quickfamiliar_star.src="asterisk.gif"}
  else {document.form1.quickfamiliar_star.src="no_asterisk.gif"};
 }

function consider_sharedspeed(){
 if (!doingfeats()){remember_feats();return;}
 if ((!has_arcane_familiar())|(dexterity<15)){document.form1.quickfamiliar_box,checked=false;}
 ArrowShow();
 }

function light_sharedspeed_star(){
 if ((has_arcane_familiar())&(dexterity>=15)){document.form1.sharedspeed_star.src="asterisk.gif"}
  else {document.form1.sharedspeed_star.src="no_asterisk.gif"};
 }


function consider_battleinstructor(){
 if (!doingfeats()){remember_feats();return;}
 if ((!paragon_multiclass)|(!multi_warlord())){document.form1.battleinstructor_box.checked=false;}
 ArrowShow();
 }

function light_battleinstructor_star(){
 if ((!paragon_multiclass)|(!multi_warlord())){document.form1.battleinstructor_star.src="no_asterisk.gif";return;}
 document.form1.battleinstructor_star.src="asterisk.gif";
 }

function consider_courageousshooter(){
 if (!doingfeats()){remember_feats();return;}
 if ((!paragon_multiclass)|(!multi_ranger())){document.form1.courageousshooter_box.checked=false;}
 ArrowShow();
 }

function light_courageousshooter_star(){
 if ((!paragon_multiclass)|(!multi_ranger())){document.form1.courageousshooter_star.src="no_asterisk.gif";return;}
 document.form1.courageousshooter_star.src="asterisk.gif";
 }

function consider_firstin(){
 if (!doingfeats()){remember_feats();return;}
 if ((!paragon_multiclass)|(!multi_rogue())){document.form1.firstin_box.checked=false;}
 ArrowShow();
 }

function light_firstin_star(){
 if ((!paragon_multiclass)|(!multi_rogue())){document.form1.firstin_star.src="no_asterisk.gif";return;}
 document.form1.firstin_star.src="asterisk.gif";
 }



function consider_otherfeat(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_otherfeat_stars(){
  document.form1.otherfeat01_star.src="asterisk.gif"; 
  document.form1.otherfeat02_star.src="asterisk.gif"; 
  document.form1.otherfeat03_star.src="asterisk.gif"; 
  document.form1.otherfeat04_star.src="asterisk.gif"; 
  document.form1.otherfeat05_star.src="asterisk.gif"; 
  document.form1.otherfeat06_star.src="asterisk.gif"; 
  document.form1.otherfeat07_star.src="asterisk.gif"; 
 }

function consider_shieldproficiency(){
// alert("entering shieldproficiency()"); 
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_lightshield) | (strength<13)){document.form1.shieldproficiencylight_box.checked=false; }
 if ((already_knows_heavyshield) | (strength<15)){document.form1.shieldproficiencyheavy_box.checked=false; }
 if ((!already_knows_lightshield)&(!document.form1.shieldproficiencylight_box.checked)){document.form1.shieldproficiencyheavy_box.checked=false; }
 if (total_levels<11){document.form1.shieldspecialization_box.checked=false; }
 if ((!already_knows_lightshield)&(!already_knows_heavyshield)&(!document.form1.shieldproficiencylight_box.checked)&(!document.form1.shieldproficiencylight_box.checked)){document.form1.shieldspecialization_box.checked=false; }
 ArrowShow(); 
 }


function light_shieldproficiency_star(){

 document.form1.shieldproficiencylight_star.src="asterisk.gif"; 
 document.form1.shieldproficiencyheavy_star.src="asterisk.gif"; 
 document.form1.shieldspecialization_star.src="asterisk.gif"; 
 if ((already_knows_lightshield) | (strength<13)){document.form1.shieldproficiencylight_star.src="no_asterisk.gif"; }
 if ((already_knows_heavyshield) | (strength<15)){document.form1.shieldproficiencyheavy_star.src="no_asterisk.gif"; }
 if ((!already_knows_lightshield)&(!document.form1.shieldproficiencylight_box.checked)){document.form1.shieldproficiencyheavy_star.src="no_asterisk.gif"; }
 if (total_levels<11){document.form1.shieldspecialization_star.src="no_asterisk.gif"; }
 if
((!already_knows_lightshield)&(!already_knows_heavyshield)&(!document.form1.shieldproficiencylight_box.checked)&(!document.form1.shieldproficiencylight_box.checked)){document.form1.shieldspecialization_star.src="no_asterisk.gif"; }
 }


function consider_shieldpush(){
 if (!doingfeats()){remember_feats(); return; }
 if (!fighterclass()){document.form1.shieldpush_box.checked=false; }
 ArrowShow(); 
 }

function light_shieldpush_star(){
 if (!fighterclass()){document.form1.shieldpush_star.src="no_asterisk.gif"; return; }
  document.form1.shieldpush_star.src="asterisk.gif"; 
 }

function consider_skillfocusacrobatics(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_acrobatics)&((!trained_acrobatics)&(!multi_trained_acrobatics))&(!document.form1.skilltrainingacrobatics_box.checked)){document.form1.skillfocusacrobatics_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusacrobatics_star(){
 if ((!eladrin_acrobatics)&((!trained_acrobatics)&(!multi_trained_acrobatics))&(!document.form1.skilltrainingacrobatics_box.checked)){document.form1.skillfocusacrobatics_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusacrobatics_star.src="asterisk.gif"; 
 }

function consider_skillfocusarcana(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_arcana)&((!trained_arcana)&(!multi_trained_arcana))&(!document.form1.skilltrainingarcana_box.checked)){document.form1.skillfocusarcana_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusarcana_star(){
 if ((!eladrin_arcana)&((!trained_arcana)&(!multi_trained_arcana))&(!document.form1.skilltrainingarcana_box.checked)){document.form1.skillfocusarcana_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusarcana_star.src="asterisk.gif"; 
 }

function consider_skillfocusathletics(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_athletics)&((!trained_athletics)&(!multi_trained_athletics))&(!document.form1.skilltrainingathletics_box.checked)){document.form1.skillfocusathletics_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusathletics_star(){
 if ((!eladrin_athletics)&((!trained_athletics)&(!multi_trained_athletics))&(!document.form1.skilltrainingathletics_box.checked)){document.form1.skillfocusathletics_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusathletics_star.src="asterisk.gif"; 
 }

function consider_skillfocusbluff(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_bluff)&((!trained_bluff)&(!multi_trained_bluff))&(!document.form1.skilltrainingbluff_box.checked)){document.form1.skillfocusbluff_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusbluff_star(){
 if ((!eladrin_bluff)&((!trained_bluff)&(!multi_trained_bluff))&(!document.form1.skilltrainingbluff_box.checked)){document.form1.skillfocusbluff_star.src="no_asterisk.gif"; return; ; }
  document.form1.skillfocusbluff_star.src="asterisk.gif"; 
 }

function consider_skillfocusdiplomacy(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_diplomacy)&((!trained_diplomacy)&(!multi_trained_diplomacy))&(!document.form1.skilltrainingdiplomacy_box.checked)){document.form1.skillfocusdiplomacy_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusdiplomacy_star(){
 if ((!eladrin_diplomacy)&((!trained_diplomacy)&(!multi_trained_diplomacy))&(!document.form1.skilltrainingdiplomacy_box.checked)){document.form1.skillfocusdiplomacy_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusdiplomacy_star.src="asterisk.gif"; 
 }

function consider_skillfocusdungeoneering(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_dungeoneering)&(!trained_dungeoneering)&(!document.form1.skilltrainingdungeoneering_box.checked)){document.form1.skillfocusdungeoneering_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusdungeoneering_star(){
 if ((!eladrin_dungeoneering)&(!trained_dungeoneering)&(!document.form1.skilltrainingdungeoneering_box.checked)){document.form1.skillfocusdungeoneering_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusdungeoneering_star.src="asterisk.gif"; 
 }

function consider_skillfocusendurance(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_endurance)&((!trained_endurance)&(!multi_trained_endurance))&(!document.form1.skilltrainingendurance_box.checked)){document.form1.skillfocusendurance_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusendurance_star(){
 if ((!eladrin_endurance)&((!trained_endurance)&(!multi_trained_endurance))&(!document.form1.skilltrainingendurance_box.checked)){document.form1.skillfocusendurance_star.src="no_asterisk.gif"; return; ; }
  document.form1.skillfocusendurance_star.src="asterisk.gif"; 
 }

function consider_skillfocusheal(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_heal)&((!trained_heal)&(!multi_trained_heal))&(!document.form1.skilltrainingheal_box.checked)){document.form1.skillfocusheal_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusheal_star(){
 if ((!eladrin_heal)&((!trained_heal)&(!multi_trained_heal))&(!document.form1.skilltrainingheal_box.checked)){document.form1.skillfocusheal_star.src="no_asterisk.gif"; return; ; }
  document.form1.skillfocusheal_star.src="asterisk.gif"; 
 }

function consider_skillfocushistory(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_history)&((!trained_history)&(!multi_trained_history))&(!document.form1.skilltraininghistory_box.checked)){document.form1.skillfocushistory_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocushistory_star(){
 if ((!eladrin_history)&((!trained_history)&(!multi_trained_history))&(!document.form1.skilltraininghistory_box.checked)){document.form1.skillfocushistory_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocushistory_star.src="asterisk.gif"; 
 }

function consider_skillfocusinsight(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_insight)&((!trained_insight)&(!multi_trained_insight))&(!document.form1.skilltraininginsight_box.checked)){document.form1.skillfocusinsight_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusinsight_star(){
 if ((!eladrin_insight)&((!trained_insight)&(!multi_trained_insight))&(!document.form1.skilltraininginsight_box.checked)){document.form1.skillfocusinsight_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusinsight_star.src="asterisk.gif"; 
 }

function consider_skillfocusintimidate(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_intimidate)&((!trained_intimidate)&(!multi_trained_intimidate))&(!document.form1.skilltrainingintimidate_box.checked)){document.form1.skillfocusintimidate_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusintimidate_star(){
 if ((!eladrin_intimidate)&((!trained_intimidate)&(!multi_trained_intimidate))&(!document.form1.skilltrainingintimidate_box.checked)){document.form1.skillfocusintimidate_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusintimidate_star.src="asterisk.gif"; 
 }

function consider_skillfocusnature(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_nature)&((!trained_nature)&(!multi_trained_nature))&(!document.form1.skilltrainingnature_box.checked)){document.form1.skillfocusnature_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusnature_star(){
 if ((!eladrin_nature)&((!trained_nature)&(!multi_trained_nature))&(!document.form1.skilltrainingnature_box.checked)){document.form1.skillfocusnature_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusnature_star.src="asterisk.gif"; 
 }

function consider_skillfocusperception(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_perception)&((!trained_perception)&(!multi_trained_perception))&(!document.form1.skilltrainingperception_box.checked)){document.form1.skillfocusperception_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusperception_star(){
 if ((!eladrin_perception)&((!trained_perception)&(!multi_trained_perception))&(!document.form1.skilltrainingperception_box.checked)){document.form1.skillfocusperception_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusperception_star.src="asterisk.gif"; 
 }

function consider_skillfocusreligion(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_religion)&((!trained_religion)&(!multi_trained_religion))&(!document.form1.skilltrainingreligion_box.checked)){document.form1.skillfocusreligion_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusreligion_star(){
 if ((!eladrin_religion)&((!trained_religion)&(!multi_trained_religion))&(!document.form1.skilltrainingreligion_box.checked)){document.form1.skillfocusreligion_star.src="no_asterisk.gif"; return; }
  document.form1.skillfocusreligion_star.src="asterisk.gif"; 
 }

function consider_skillfocusstealth(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_stealth)&((!trained_stealth)&(!multi_trained_stealth))&(!document.form1.skilltrainingstealth_box.checked)){document.form1.skillfocusstealth_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusstealth_star(){
 if ((!eladrin_stealth)&((!trained_stealth)&(!multi_trained_stealth))&(!document.form1.skilltrainingstealth_box.checked)){document.form1.skillfocusstealth_star.src="no_asterisk.gif"; return; ; }
  document.form1.skillfocusstealth_star.src="asterisk.gif"; 
 }

function consider_skillfocusstreetwise(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_streetwise)&((!trained_streetwise)&(!multi_trained_streetwise))&(!document.form1.skilltrainingstreetwise_box.checked)){document.form1.skillfocusstreetwise_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusstreetwise_star(){
 if ((!eladrin_streetwise)&((!trained_streetwise)&(!multi_trained_streetwise))&(!document.form1.skilltrainingstreetwise_box.checked)){document.form1.skillfocusstreetwise_star.src="no_asterisk.gif"; return; ; }
  document.form1.skillfocusstreetwise_star.src="asterisk.gif"; 
 }

function consider_skillfocusthievery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_thievery)&((!trained_thievery)&(!multi_trained_thievery))&(!document.form1.skilltrainingthievery_box.checked)){document.form1.skillfocusthievery_box.checked=false; }
 ArrowShow(); 
 }

function light_skillfocusthievery_star(){
 if ((!eladrin_thievery)&((!trained_thievery)&(!multi_trained_thievery))&(!document.form1.skilltrainingthievery_box.checked)){document.form1.skillfocusthievery_star.src="no_asterisk.gif"; return; ; }
  document.form1.skillfocusthievery_star.src="asterisk.gif"; 
 }

function consider_skilltrainingacrobatics(){
 if (!doingfeats()){remember_feats(); return; }
  if (PreFeatsAcrobatics()){document.form1.skilltrainingacrobatics_box.checked=false; }
  ReviewAcrobaticsFeats();
 ArrowShow(); 
 }

function light_skilltrainingacrobatics_star(){
  if ((trained_acrobatics) | (multi_trained_acrobatics)| (eladrin_acrobatics)){document.form1.skilltrainingarcana_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingacrobatics_star.src="asterisk.gif"; 
 }

function consider_skilltrainingarcana(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_arcana) | (multi_trained_arcana)| (eladrin_arcana)){document.form1.skilltrainingarcana_box.checked=false; }
  GatecrasherArcaneTraining();
  ReviewArcanaFeats();
 ArrowShow(); 
 }

function light_skilltrainingarcana_star(){
  if ((trained_arcana) | (multi_trained_arcana)| (eladrin_arcana)){document.form1.skilltrainingarcana_star.src="no_asterisk.gif"; return; }
  GatecrasherArcaneTraining();
  document.form1.skilltrainingarcana_star.src="asterisk.gif"; 
 }

function consider_skilltrainingathletics(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_athletics) | (multi_trained_athletics)| (eladrin_athletics)){document.form1.skilltrainingathletics_box.checked=false; }
  ReviewAthleticsFeats();
 ArrowShow(); 
 }

function light_skilltrainingathletics_star(){
  if ((trained_athletics) | (multi_trained_athletics)| (eladrin_athletics)){document.form1.skilltrainingathletics_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingathletics_star.src="asterisk.gif"; 
 }

function consider_skilltrainingbluff(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_bluff) | (multi_trained_bluff)| (eladrin_bluff)){document.form1.skilltrainingbluff_box.checked=false; }
   ReviewBluffFeats();
 ArrowShow(); 
 }

function light_skilltrainingbluff_star(){
  if ((trained_bluff) | (multi_trained_bluff)| (eladrin_bluff)){document.form1.skilltrainingbluff_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingbluff_star.src="asterisk.gif"; 
 }

function consider_skilltrainingdiplomacy(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_diplomacy) | (multi_trained_diplomacy)| (eladrin_diplomacy)){document.form1.skilltrainingdiplomacy_box.checked=false; }
  ReviewDiplomacyFeats();
 ArrowShow(); 
 }

function light_skilltrainingdiplomacy_star(){
  if ((trained_diplomacy) | (multi_trained_diplomacy)| (eladrin_diplomacy)){document.form1.skilltrainingdiplomacy_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingdiplomacy_star.src="asterisk.gif"; 
 }

function consider_skilltrainingdungeoneering(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_dungeoneering) | (eladrin_dungeoneering)| (multi_trained_dungeoneering)){document.form1.skilltrainingdungeoneering_box.checked=false; }
   else if (paragon_drowwanderer){document.form1.skilltrainingdungeoneering_box.checked=true;}
   ReviewDungeoneeringFeats();
 ArrowShow(); 
 }

function light_skilltrainingdungeoneering_star(){
  if ((trained_dungeoneering) | (eladrin_dungeoneering)| (multi_trained_dungeoneering)){document.form1.skilltrainingdungeoneering_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingdungeoneering_star.src="asterisk.gif"; 
 }

function consider_skilltrainingendurance(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_endurance) | (eladrin_endurance)| (multi_trained_endurance)){document.form1.skilltrainingendurance_box.checked=false; }
  ReviewEnduranceFeats();
 ArrowShow(); 
 }

function light_skilltrainingendurance_star(){
  if ((trained_endurance) | (eladrin_endurance)| (multi_trained_endurance)){document.form1.skilltrainingendurance_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingendurance_star.src="asterisk.gif"; 
 }

function consider_skilltrainingheal(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_heal) | (eladrin_heal)| (multi_trained_heal)){document.form1.skilltrainingheal_box.checked=false; }
  ReviewHealFeats();
 ArrowShow(); 
 }

function light_skilltrainingheal_star(){
  if ((trained_heal) | (eladrin_heal)| (multi_trained_heal)){document.form1.skilltrainingheal_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingheal_star.src="asterisk.gif"; 
 }

function consider_skilltraininghistory(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_history) | (eladrin_history)| (multi_trained_history)){document.form1.skilltraininghistory_box.checked=false; }
  ReviewHistoryFeats();
 ArrowShow(); 
 }

function light_skilltraininghistory_star(){
  if ((trained_history) | (eladrin_history)| (multi_trained_history)){document.form1.skilltraininghistory_star.src="no_asterisk.gif"; return; }
  document.form1.skilltraininghistory_star.src="asterisk.gif"; 
 }

function consider_skilltraininginsight(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_insight) | (eladrin_insight)| (multi_trained_insight)){document.form1.skilltraininginsight_box.checked=false; }
  ReviewInsightFeats();
 ArrowShow(); 
 }

function light_skilltraininginsight_star(){
  if ((trained_insight) | (eladrin_insight)| (multi_trained_insight)){document.form1.skilltraininginsight_star.src="no_asterisk.gif"; return; }
  document.form1.skilltraininginsight_star.src="asterisk.gif"; 
 }

function consider_skilltrainingintimidate(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_intimidate) | (eladrin_intimidate)| (multi_trained_intimidate)){document.form1.skilltrainingintimidate_box.checked=false; }
  ReviewIntimidateFeats();
 ArrowShow(); 
 }

function light_skilltrainingintimidate_star(){
  if ((trained_intimidate) | (eladrin_intimidate)| (multi_trained_intimidate)){document.form1.skilltrainingintimidate_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingintimidate_star.src="asterisk.gif"; 
 }

function consider_skilltrainingnature(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_nature) | (eladrin_nature)| (multi_trained_nature)){document.form1.skilltrainingnature_box.checked=false; }
  ReviewNatureFeats();
 ArrowShow(); 
 }

function light_skilltrainingnature_star(){
  if ((trained_nature) | (eladrin_nature)| (multi_trained_nature)){document.form1.skilltrainingnature_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingnature_star.src="asterisk.gif"; 
 }

function consider_skilltrainingperception(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_perception) | (eladrin_perception)| (multi_trained_perception)){document.form1.skilltrainingperception_box.checked=false; }
  ReviewPerceptionFeats();
 ArrowShow(); 
 }

function light_skilltrainingperception_star(){
  if ((trained_perception) | (eladrin_perception)| (multi_trained_perception)){document.form1.skilltrainingperception_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingperception_star.src="asterisk.gif"; 
 }

function consider_skilltrainingreligion(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_religion) | (eladrin_religion)| (multi_trained_religion)){document.form1.skilltrainingreligion_box.checked=false; }
  ReviewReligionFeats();
 ArrowShow(); 
 }

function light_skilltrainingreligion_star(){
  if ((trained_religion) | (eladrin_religion)| (multi_trained_religion)){document.form1.skilltrainingreligion_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingreligion_star.src="asterisk.gif"; 
 }

function consider_skilltrainingstealth(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_stealth) | (eladrin_stealth)| (multi_trained_stealth)){document.form1.skilltrainingstealth_box.checked=false; }
  ReviewStealthFeats();
 ArrowShow(); 
 }

function light_skilltrainingstealth_star(){
  if ((trained_stealth) | (eladrin_stealth)| (multi_trained_stealth)){document.form1.skilltrainingstealth_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingstealth_star.src="asterisk.gif"; 
 }

function consider_skilltrainingstreetwise(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_streetwise) | (eladrin_streetwise)| (multi_trained_streetwise)){document.form1.skilltrainingstreetwise_box.checked=false; }
  ReviewStreetwiseFeats();
 ArrowShow(); 
 }

function light_skilltrainingstreetwise_star(){
  if ((trained_streetwise) | (eladrin_streetwise)| (multi_trained_streetwise)){document.form1.skilltrainingstreetwise_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingstreetwise_star.src="asterisk.gif"; 
 }

function consider_skilltrainingthievery(){
 if (!doingfeats()){remember_feats(); return; }
  if ((trained_thievery) | (eladrin_thievery)| (multi_trained_thievery)){document.form1.skilltrainingthievery_box.checked=false; }
  ReviewThieveryFeats();
 ArrowShow(); 
 }

function light_skilltrainingthievery_star(){
  if ((trained_thievery) | (eladrin_thievery)| (multi_trained_thievery)){document.form1.skilltrainingthievery_star.src="no_asterisk.gif"; return; }
  document.form1.skilltrainingthievery_star.src="asterisk.gif"; 
 }

function consider_sureclimber(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!eladrin_athletics)&((!trained_athletics)&(!multi_trained_athletics))&(!document.form1.skilltrainingathletics_box.checked)){document.form1.sureclimber_box.checked=false; }
 ArrowShow(); 
 }

function light_sureclimber_star(){
 if ((!eladrin_athletics)&((!trained_athletics)&(!multi_trained_athletics))&(!document.form1.skilltrainingathletics_box.checked)){document.form1.sureclimber_star.src="no_asterisk.gif"; return; }
  document.form1.sureclimber_star.src="asterisk.gif"; 
 }

function consider_surpriseknockdown(){
 if (!doingfeats()){remember_feats(); return; }
 if ((strength<15) | (!rogueclass())){document.form1.surpriseknockdown_box.checked=false; }
 ArrowShow(); 
 }

function light_surpriseknockdown_star(){
 if ((strength<15) | (!rogueclass())){document.form1.surpriseknockdown_star.src="no_asterisk.gif"; return; }
  document.form1.surpriseknockdown_star.src="asterisk.gif"; 
 }

function consider_tacticalassault(){
 if (!doingfeats()){remember_feats(); return; }
 if (!warlord_tactical){document.form1.tacticalassault_box.checked=false; }
 ArrowShow(); 
 }

function light_tacticalassault_star(){
 if (!warlord_tactical){document.form1.tacticalassault_star.src="no_asterisk.gif"; return; }
  document.form1.tacticalassault_star.src="asterisk.gif"; 
 }

function consider_toughness(){
 if (!doingfeats()){remember_feats(); return; }
 if (ranger_twoblade){document.form1.toughness_box.checked=false;}
 ArrowShow(); 
 }

function light_toughness_star(){
 if (ranger_twoblade){document.form1.toughness_star.src="no_asterisk.gif";return;}
  document.form1.toughness_star.src="asterisk.gif"; 
 }

function consider_twoweapondefense(){
 if (!doingfeats()){remember_feats(); return; }
 if (!document.form1.twoweaponfighting_box.checked){document.form1.twoweapondefense_box.checked=false; }
 ArrowShow(); 
 }

function light_twoweapondefense_star(){
 if (!document.form1.twoweaponfighting_box.checked){document.form1.twoweapondefense_star.src="no_asterisk.gif"; return; }
  document.form1.twoweapondefense_star.src="asterisk.gif"; 
 }

function consider_twoweaponfighting(){
 if (!doingfeats()){remember_feats(); return; }
 if (dexterity<13){document.form1.twoweaponfighting_box.checked=false; }
    consider_twoweapondefense(); 
    consider_twoweaponflurry();
    consider_twoweaponthreat();
    consider_twoweaponopening();
    light_twoweapondefense_star();
    light_twoweaponflurry_star();
    light_twoweaponthreat_star();
    light_twoweaponopening_star();
 ArrowShow(); 
 }

function light_twoweaponfighting_star(){
 if (dexterity<13){document.form1.twoweaponfighting_star.src="no_asterisk.gif"; return; }
  document.form1.twoweaponfighting_star.src="asterisk.gif"; 
 }

function consider_weaponfocusaxe(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocusaxe_star(){
  document.form1.weaponfocusaxe_star.src="asterisk.gif"; 
 }

function consider_weaponfocusbow(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocusbow_star(){
  document.form1.weaponfocusbow_star.src="asterisk.gif"; 
 }

function consider_weaponfocuscrossbow(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocuscrossbow_star(){
  document.form1.weaponfocuscrossbow_star.src="asterisk.gif"; 
 }

function consider_weaponfocusflail(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocusflail_star(){
  document.form1.weaponfocusflail_star.src="asterisk.gif"; 
 }

function consider_weaponfocushammer(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocushammer_star(){
  document.form1.weaponfocushammer_star.src="asterisk.gif"; 
 }

function consider_weaponfocusheavyblade(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocusheavyblade_star(){
  document.form1.weaponfocusheavyblade_star.src="asterisk.gif"; 
 }

function consider_weaponfocuslightblade(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocuslightblade_star(){
  document.form1.weaponfocuslightblade_star.src="asterisk.gif"; 
 }

function consider_weaponfocusmace(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocusmace_star(){
  document.form1.weaponfocusmace_star.src="asterisk.gif"; 
 }

function consider_weaponfocuspick(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocuspick_star(){
  document.form1.weaponfocuspick_star.src="asterisk.gif"; 
 }

function consider_weaponfocuspolearm(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocuspolearm_star(){
  document.form1.weaponfocuspolearm_star.src="asterisk.gif"; 
 }

function consider_weaponfocussling(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocussling_star(){
  document.form1.weaponfocussling_star.src="asterisk.gif"; 
 }

function consider_weaponfocusspear(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocusspear_star(){
  document.form1.weaponfocusspear_star.src="asterisk.gif"; 
 }

function consider_weaponfocusstaff(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocusstaff_star(){
  document.form1.weaponfocusstaff_star.src="asterisk.gif"; 
 }

function consider_weaponfocusunarmed(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_weaponfocusunarmed_star(){
  document.form1.weaponfocusunarmed_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyclub(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_club){document.form1.weaponproficiencyclub_box.checked=false; return; }
 ArrowShow(); 
 }

function light_weaponproficiencyclub_star(){
// alert("entering light_weaponproficiencyclub_star() already_knows_club="+already_knows_club); 
 if (already_knows_club){document.form1.weaponproficiencyclub_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyclub_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencydagger(){
// alert("considering dagger already_knows_dagger="+already_knows_dagger); 
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_dagger){document.form1.weaponproficiencydagger_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencydagger_star(){
 if (already_knows_dagger){document.form1.weaponproficiencydagger_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencydagger_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyjavelin(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_javelin){document.form1.weaponproficiencyjavelin_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyjavelin_star(){
 if (already_knows_javelin){document.form1.weaponproficiencyjavelin_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyjavelin_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencymace(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_mace){document.form1.weaponproficiencymace_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencymace_star(){
 if (already_knows_mace){document.form1.weaponproficiencymace_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencymace_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencysickle(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_sickle){document.form1.weaponproficiencysickle_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencysickle_star(){
 if (already_knows_sickle){document.form1.weaponproficiencysickle_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencysickle_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyothersimplemeleeweapons(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_othersimplemeleeweapons){document.form1.weaponproficiencyothersimplemeleeweapons_box.checked=false; }
 ArrowShow(); 
 }

function consider_weaponproficiencyothermilitarymeleeweapons(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_othermilitarymeleeweapons){document.form1.weaponproficiencyothermilitarymeleeweapons_box.checked=false; }
 ArrowShow(); 
 }

function consider_weaponproficiencyothersuperiormeleeweapons(){
 if (!doingfeats()){remember_feats(); return; }
// if (already_knows_othermilitarymeleeweapons){document.form1.weaponproficiencyothermilitarymeleeweapons_box.checked=false; }
 ArrowShow(); 
 }

function consider_weaponproficiencyothersimplerangedweapons(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_othersimplerangedweapons){document.form1.weaponproficiencyothersimplerangedweapons_box.checked=false; }
 ArrowShow(); 
 }

function consider_weaponproficiencyothersuperiorrangedweapons(){
 if (!doingfeats()){remember_feats(); return; }
// if (already_knows_othersuperiorrangedweapons){document.form1.weaponproficiencyothersuperiorrangedweapons_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyothersimplemeleeweapons_star(){
 if (already_knows_othersimplemeleeweapons){document.form1.weaponproficiencyothersimplemeleeweapons_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyothersimplemeleeweapons_star.src="asterisk.gif"; 
 }

function light_weaponproficiencyothermilitarymeleeweapons_star(){
 if (already_knows_othermilitarymeleeweapons){document.form1.weaponproficiencyothermilitarymeleeweapons_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyothermilitarymeleeweapons_star.src="asterisk.gif"; 
 }

function light_weaponproficiencyothersuperiormeleeweapons_star(){
// if (already_knows_othersuperiormeleeweapons){document.form1.weaponproficiencyothersuperiormeleeweapons_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyothersuperiormeleeweapons_star.src="asterisk.gif"; 
 }

function light_weaponproficiencyothersimplerangedweapons_star(){
 if (already_knows_othersimplerangedweapons){document.form1.weaponproficiencyothersimplerangedweapons_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyothersimplerangedweapons_star.src="asterisk.gif"; 
 }

function light_weaponproficiencyothersuperiorrangedweapons_star(){
// if (already_knows_othersuperiorrangedweapons){document.form1.weaponproficiencyothersuperiorrangedweapons_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyothersuperiorrangedweapons_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyspear(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_spear){document.form1.weaponproficiencyspear_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyspear_star(){
 if (already_knows_spear){document.form1.weaponproficiencyspear_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyspear_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencygreatclub(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_greatclub) | (small)){document.form1.weaponproficiencygreatclub_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencygreatclub_star(){
 if ((already_knows_greatclub) | (small)){document.form1.weaponproficiencygreatclub_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencygreatclub_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencymorningstar(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_morningstar) | (small)){document.form1.weaponproficiencymorningstar_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencymorningstar_star(){
 if ((already_knows_morningstar) | (small)){document.form1.weaponproficiencymorningstar_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencymorningstar_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyquarterstaff(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_quarterstaff) | (small)){document.form1.weaponproficiencyquarterstaff_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyquarterstaff_star(){
 if ((already_knows_quarterstaff) | (small)){document.form1.weaponproficiencyquarterstaff_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyquarterstaff_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyscythe(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_scythe) | (small)){document.form1.weaponproficiencyscythe_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyscythe_star(){
 if ((already_knows_scythe) | (small)){document.form1.weaponproficiencyscythe_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyscythe_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencybattleaxe(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_battleaxe){document.form1.weaponproficiencybattleaxe_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencybattleaxe_star(){
 if (already_knows_battleaxe){document.form1.weaponproficiencybattleaxe_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencybattleaxe_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyflail(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_flail){document.form1.weaponproficiencyflail_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyflail_star(){
 if (already_knows_flail){document.form1.weaponproficiencyflail_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyflail_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyhandaxe(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_handaxe){document.form1.weaponproficiencyhandaxe_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyhandaxe_star(){
 if (already_knows_handaxe){document.form1.weaponproficiencyhandaxe_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyhandaxe_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencylongsword(){
 if (!doingfeats()){remember_feats(); return; }
 if ((paragon_wizardofthespiraltower)&(!already_knows_longsword)){document.form1.weaponproficiencylongsword_box.checked=true; }
 if (already_knows_longsword){document.form1.weaponproficiencylongsword_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencylongsword_star(){
 if (already_knows_longsword){document.form1.weaponproficiencylongsword_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencylongsword_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyscimitar(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_scimitar){document.form1.weaponproficiencyscimitar_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyscimitar_star(){
 if (already_knows_scimitar){document.form1.weaponproficiencyscimitar_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyscimitar_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyshortsword(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_shortsword){document.form1.weaponproficiencyshortsword_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyshortsword_star(){
 if (already_knows_shortsword){document.form1.weaponproficiencyshortsword_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyshortsword_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencythrowinghammer(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_throwinghammer){document.form1.weaponproficiencythrowinghammer_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencythrowinghammer_star(){
 if (already_knows_throwinghammer){document.form1.weaponproficiencythrowinghammer_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencythrowinghammer_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencywarhammer(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_warhammer){document.form1.weaponproficiencywarhammer_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencywarhammer_star(){
 if (already_knows_warhammer){document.form1.weaponproficiencywarhammer_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencywarhammer_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencywarpick(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_warpick){document.form1.weaponproficiencywarpick_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencywarpick_star(){
 if (already_knows_warpick){document.form1.weaponproficiencywarpick_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencywarpick_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyfalchion(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_falchion) | (small)){document.form1.weaponproficiencyfalchion_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyfalchion_star(){
 if ((already_knows_falchion) | (small)){document.form1.weaponproficiencyfalchion_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyfalchion_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyglaive(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_glaive) | (small)){document.form1.weaponproficiencyglaive_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyglaive_star(){
 if ((already_knows_glaive) | (small)){document.form1.weaponproficiencyglaive_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyglaive_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencygreataxe(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_greataxe) | (small)){document.form1.weaponproficiencygreataxe_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencygreataxe_star(){
 if ((already_knows_greataxe) | (small)){document.form1.weaponproficiencygreataxe_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencygreataxe_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencygreatsword(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_greatsword) | (small)){document.form1.weaponproficiencygreatsword_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencygreatsword_star(){
 if ((already_knows_greatsword) | (small)){document.form1.weaponproficiencygreatsword_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencygreatsword_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyhalberd(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_halberd) | (small)){document.form1.weaponproficiencyhalberd_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyhalberd_star(){
 if ((already_knows_halberd) | (small)){document.form1.weaponproficiencyhalberd_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyhalberd_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencyheavyflail(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_flail) | (small)){document.form1.weaponproficiencyheavyflail_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyheavyflail_star(){
 if ((already_knows_flail) | (small)){document.form1.weaponproficiencyheavyflail_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyheavyflail_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencylongspear(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_spear) | (small)){document.form1.weaponproficiencylongspear_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencylongspear_star(){
 if ((already_knows_spear) | (small)){document.form1.weaponproficiencylongspear_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencylongspear_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencymaul(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_maul) | (small)){document.form1.weaponproficiencymaul_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencymaul_star(){
 if ((already_knows_maul) | (small)){document.form1.weaponproficiencymaul_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencymaul_star.src="asterisk.gif"; 
 }

function consider_weaponproficiencybastardsword(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_bastardsword){document.form1.weaponproficiencybastardsword_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencybastardsword_star(){
 if (already_knows_bastardsword){document.form1.weaponproficiencybastardsword_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencybastardsword_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencykatar(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_katar){document.form1.weaponproficiencykatar_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencykatar_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (already_knows_katar){document.form1.weaponproficiencykatar_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencykatar_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencyrapier(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_rapier){document.form1.weaponproficiencyrapier_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyrapier_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (already_knows_rapier){document.form1.weaponproficiencyrapier_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyrapier_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencyspikedchain(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_spikedchain) | (small)){document.form1.weaponproficiencyspikedchain_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyspikedchain_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_spikedchain) | (small)){document.form1.weaponproficiencyspikedchain_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyspikedchain_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencyhandcrossbow(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_handcrossbow){document.form1.weaponproficiencyhandcrossbow_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyhandcrossbow_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (already_knows_handcrossbow){document.form1.weaponproficiencyhandcrossbow_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyhandcrossbow_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencysling(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_sling){document.form1.weaponproficiencysling_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencysling_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (already_knows_sling){document.form1.weaponproficiencysling_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencysling_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencycrossbow(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_crossbow) | (small)){document.form1.weaponproficiencycrossbow_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencycrossbow_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_crossbow) | (small)){document.form1.weaponproficiencycrossbow_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencycrossbow_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencylongbow(){
 if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_longbow) | (small)){document.form1.weaponproficiencylongbow_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencylongbow_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((already_knows_longbow) | (small)){document.form1.weaponproficiencylongbow_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencylongbow_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencyshortbow(){
 if ((!SkillsAreAssigned)){remember_feats(); return; }
 if ((already_knows_shortbow)){document.form1.weaponproficiencyshortbow_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyshortbow_star(){
// if ((!SkillsAreAssigned)){remember_feats(); return; }
 if ((already_knows_shortbow)){document.form1.weaponproficiencyshortbow_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyshortbow_star.src="asterisk.gif"; 

 }

function consider_weaponproficiencyshuriken(){
 if (!doingfeats()){remember_feats(); return; }
 if (already_knows_shuriken){document.form1.weaponproficiencyshuriken_box.checked=false; }
 ArrowShow(); 
 }

function light_weaponproficiencyshuriken_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (already_knows_shuriken){document.form1.weaponproficiencyshuriken_star.src="no_asterisk.gif"; return; }
 document.form1.weaponproficiencyshuriken_star.src="asterisk.gif"; 

 }

function consider_wintertouched(){
 if (!doingfeats()){remember_feats(); return; }
 ArrowShow(); 
 }

function light_wintertouched_star(){
// if (!doingfeats()){remember_feats(); return; }
 document.form1.wintertouched_star.src="asterisk.gif"; 

 }

function consider_actionrecovery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!race_human)&(!race_halfelf))){document.form1.actionrecovery_star.src="no_asterisk.gif"; return; }
 ArrowShow(); 
 }

function light_actionrecovery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!race_human)&(!race_halfelf))){document.form1.actionrecovery_star.src="no_asterisk.gif"; return; }
 document.form1.actionrecovery_star.src="asterisk.gif"; 

 }

function consider_agileathlete(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.agileathlete_box.checked=false; }
 ArrowShow(); 
 }

function light_agileathlete_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.agileathlete_star.src="no_asterisk.gif"; return; }
 document.form1.agileathlete_star.src="asterisk.gif"; 

 }

function consider_arcanereach(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (dexterity<15)){document.form1.arcanereach_box.checked=false; }
 ArrowShow(); 
 }


function light_arcanereach_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (dexterity<15)){document.form1.arcanereach_star.src="no_asterisk.gif"; return; }
 document.form1.arcanereach_star.src="asterisk.gif"; 

 }


function consider_backtothewall(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.backtothewall_box.checked=false; }
 ArrowShow(); 
 }

function light_backtothewall_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.backtothewall_star.src="no_asterisk.gif"; return; }
 document.form1.backtothewall_star.src="asterisk.gif"; 

 }

function consider_bloodthirst(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.bloodthirst_box.checked=false; }
 ArrowShow(); 
 }

function light_bloodthirst_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.bloodthirst_star.src="no_asterisk.gif"; return; }
 document.form1.bloodthirst_star.src="asterisk.gif"; 

 }

function consider_combatanticipation(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.combatanticipation_box.checked=false; }
 ArrowShow(); 
 }

function light_combatanticipation_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.combatanticipation_star.src="no_asterisk.gif"; return; }
 document.form1.combatanticipation_star.src="asterisk.gif"; 

 }

function consider_combatcommander(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!warlordclass())){document.form1.combatcommander_box.checked=false; }
 ArrowShow(); 
 }

function light_combatcommander_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!warlordclass())){document.form1.combatcommander_star.src="no_asterisk.gif"; return; }
 document.form1.combatcommander_star.src="asterisk.gif"; 

 }

function consider_dangersense(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.dangersense_box.checked=false; }
 ArrowShow(); 
 }

function light_dangersense_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.dangersense_star.src="no_asterisk.gif"; return; }
 document.form1.dangersense_star.src="asterisk.gif"; 

 }

function consider_deadlyaxe(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (strength<17) | (constitution<13)){document.form1.deadlyaxe_box.checked=false; }
 ArrowShow(); 
 }

function light_deadlyaxe_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (strength<17) | (constitution<13)){document.form1.deadlyaxe_star.src="no_asterisk.gif"; return; }
 document.form1.deadlyaxe_star.src="asterisk.gif"; 

 }

function consider_defensiveadvantage(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (dexterity<17)){document.form1.defensiveadvantage_box.checked=false; }
 ArrowShow(); 
 }

function light_defensiveadvantage_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (dexterity<17)){document.form1.defensiveadvantage_star.src="no_asterisk.gif"; return; }
 document.form1.defensiveadvantage_star.src="asterisk.gif"; 

 }

function consider_devastatingcritical(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.devastatingcritical_box.checked=false; }
 ArrowShow(); 
 }

function light_devastatingcritical_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.devastatingcritical_star.src="no_asterisk.gif"; return; }
 document.form1.devastatingcritical_star.src="asterisk.gif"; 

 }

function consider_distantshot(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.distantshot_box.checked=false; }
 ArrowShow(); 
 }

function light_distantshot_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.distantshot_star.src="no_asterisk.gif"; return; }
 document.form1.distantshot_star.src="asterisk.gif"; 

 }

function consider_dwarvendurability(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_dwarf)){document.form1.dwarvendurability_box.checked=false; }
 ArrowShow(); 
 }

function light_dwarvendurability_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_dwarf)){document.form1.dwarvendurability_star.src="no_asterisk.gif"; return; }
 document.form1.dwarvendurability_star.src="asterisk.gif"; 

 }

function consider_empowereddragonbreath(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_dragonborn)){document.form1.empowereddragonbreath_box.checked=false; }
 ArrowShow(); 
 }

function light_empowereddragonbreath_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_dragonborn)){document.form1.empowereddragonbreath_star.src="no_asterisk.gif"; return; }
 document.form1.empowereddragonbreath_star.src="asterisk.gif"; 

 }

function consider_evasion(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (dexterity<15)){document.form1.evasion_box.checked=false; }
 ArrowShow(); 
 }

function light_evasion_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (dexterity<15)){document.form1.evasion_star.src="no_asterisk.gif"; return; }
 document.form1.evasion_star.src="asterisk.gif"; 

 }

function consider_feywildprotection(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_eladrin)){document.form1.feywildprotection_box.checked=false; }
 ArrowShow(); 
 }

function light_feywildprotection_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_eladrin)){document.form1.feywildprotection_star.src="no_asterisk.gif"; return; }
 document.form1.feywildprotection_star.src="asterisk.gif"; 

 }

function consider_fieryrebuke(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_tiefling)){document.form1.fieryrebuke_box.checked=false; }
 ArrowShow(); 
 }

function light_fieryrebuke_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_tiefling)){document.form1.fieryrebuke_star.src="no_asterisk.gif"; return; }
 document.form1.fieryrebuke_star.src="asterisk.gif"; 

 }

function consider_fleetfooted(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.fleetfooted_box.checked=false; }
 ArrowShow(); 
 }

function light_fleetfooted_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.fleetfooted_star.src="no_asterisk.gif"; return; }
 document.form1.fleetfooted_star.src="asterisk.gif"; 

 }

function consider_greatfortitude(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.greatfortitude_box.checked=false; }
 ArrowShow(); 
 }

function light_greatfortitude_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.greatfortitude_star.src="no_asterisk.gif"; return; }
 document.form1.greatfortitude_star.src="asterisk.gif"; 

 }

function consider_hammerrhythm(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (constitution<17))){document.form1.hammerrhythm_box.checked=false; }
 ArrowShow(); 
 }

function light_hammerrhythm_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (constitution<17))){document.form1.hammerrhythm_star.src="no_asterisk.gif"; return; }
 document.form1.hammerrhythm_star.src="asterisk.gif"; 

 }

function consider_heavybladeopportunity(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (dexterity<15))){document.form1.heavybladeopportunity_box.checked=false; }
 ArrowShow(); 
 }

function light_heavybladeopportunity_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (dexterity<15))){document.form1.heavybladeopportunity_star.src="no_asterisk.gif"; return; }
 document.form1.heavybladeopportunity_star.src="asterisk.gif"; 

 }

function consider_improvedsecondwind(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.improvedsecondwind_box.checked=false; }
 ArrowShow(); 
 }

function light_improvedsecondwind_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.improvedsecondwind_star.src="no_asterisk.gif"; return; }
 document.form1.improvedsecondwind_star.src="asterisk.gif"; 

 }

function consider_inescapableforce(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.inescapableforce_box.checked=false; }
 ArrowShow(); 
 }

function light_inescapableforce_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.inescapableforce_star.src="no_asterisk.gif"; return; }
 document.form1.inescapableforce_star.src="asterisk.gif"; 

 }

function consider_ironwill(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.ironwill_box.checked=false; }
 ArrowShow(); 
 }

function light_ironwill_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.ironwill_star.src="no_asterisk.gif"; return; }
 document.form1.ironwill_star.src="asterisk.gif"; 

 }

function consider_lastingfrost(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.lastingfrost_box.checked=false; }
 ArrowShow(); 
 }

function light_lastingfrost_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.lastingfrost_star.src="no_asterisk.gif"; return; }
 document.form1.lastingfrost_star.src="asterisk.gif"; 

 }

function consider_lightbladeprecision(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.lightbladeprecision_box.checked=false; }
 ArrowShow(); 
 }

function light_lightbladeprecision_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.lightbladeprecision_star.src="no_asterisk.gif"; return; }
 document.form1.lightbladeprecision_star.src="asterisk.gif"; 

 }

function consider_lightningarc(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.lightningarc_box.checked=false; }
 ArrowShow(); 
 }

function light_lightningarc_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.lightningarc_star.src="no_asterisk.gif"; return; }
 document.form1.lightningarc_star.src="asterisk.gif"; 

 }

function consider_lightningreflexes(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.lightningreflexes_box.checked=false; }
 ArrowShow(); 
 }

function light_lightningreflexes_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.lightningreflexes_star.src="no_asterisk.gif"; return; }
 document.form1.lightningreflexes_star.src="asterisk.gif"; 

 }

function consider_mettle(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.mettle_box.checked=false; }
 ArrowShow(); 
 }

function light_mettle_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.mettle_star.src="no_asterisk.gif"; return; }
 document.form1.mettle_star.src="asterisk.gif"; 

 }

function consider_pointblankshot(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.pointblankshot_box.checked=false; }
 ArrowShow(); 
 }

function light_pointblankshot_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.pointblankshot_star.src="no_asterisk.gif"; return; }
 document.form1.pointblankshot_star.src="asterisk.gif"; 

 }

function consider_polearmgamble(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (wisdom<15))){document.form1.polearmgamble_box.checked=false; }
 ArrowShow(); 
 }

function light_polearmgamble_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (wisdom<15))){document.form1.polearmgamble_star.src="no_asterisk.gif"; return; }
 document.form1.polearmgamble_star.src="asterisk.gif"; 

 }

function consider_psychiclock(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.psychiclock_box.checked=false; }
 ArrowShow(); 
 }

function light_psychiclock_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.psychiclock_star.src="no_asterisk.gif"; return; }
 document.form1.psychiclock_star.src="asterisk.gif"; 

 }

function consider_resoundingthunder(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.resoundingthunder_box.checked=false; }
 ArrowShow(); 
 }

function light_resoundingthunder_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<11){document.form1.resoundingthunder_star.src="no_asterisk.gif"; return; }
 document.form1.resoundingthunder_star.src="asterisk.gif"; 

 }

function consider_runningshot(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!race_elf)&(!race_halfelf))){document.form1.runningshot_box.checked=false; }
 ArrowShow(); 
 }

function light_runningshot_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!race_elf)&(!race_halfelf))){document.form1.runningshot_star.src="no_asterisk.gif"; return; }
 document.form1.runningshot_star.src="asterisk.gif"; 

 }

function consider_scimitardance(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (dexterity<17))){document.form1.scimitardance_box.checked=false; }
 ArrowShow(); 
 }

function light_scimitardance_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (dexterity<17))){document.form1.scimitardance_star.src="no_asterisk.gif"; return; }
 document.form1.scimitardance_star.src="asterisk.gif"; 

 }

function consider_secondimplementorb(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!wizardclass())) | (orbofimposition)){document.form1.secondimplementorb_box.checked=false; }
 ArrowShow(); 
 }

function light_secondimplementorb_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!wizardclass())) | (orbofimposition)){document.form1.secondimplementorb_star.src="no_asterisk.gif"; return; }
 document.form1.secondimplementorb_star.src="asterisk.gif"; 

 }

function consider_secondimplementstaff(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!wizardclass())) | (staffofdefense)){document.form1.secondimplementstaff_box.checked=false; }
 ArrowShow(); 
 }

function light_secondimplementstaff_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!wizardclass())) | (staffofdefense)){document.form1.secondimplementstaff_star.src="no_asterisk.gif"; return; }
 document.form1.secondimplementstaff_star.src="asterisk.gif"; 

 }

function consider_secondimplementwand(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!wizardclass())) | (wandofaccuracy)){document.form1.secondimplementwand_box.checked=false; }
 ArrowShow(); 
 }

function light_secondimplementwand_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!wizardclass())) | (wandofaccuracy)){document.form1.secondimplementwand_star.src="no_asterisk.gif"; return; }
 document.form1.secondimplementwand_star.src="asterisk.gif"; 

 }

function consider_secretstride(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!eladrin_stealth)&((!trained_stealth)&(!multi_trained_stealth))&(!document.form1.skilltrainingstealth_box.checked))){document.form1.secretstride_box.checked=false; }
 ArrowShow(); 
 }

function light_secretstride_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!eladrin_stealth)&((!trained_stealth)&(!multi_trained_stealth))&(!document.form1.skilltrainingstealth_box.checked))){document.form1.secretstride_star.src="no_asterisk.gif"; return; }
 document.form1.secretstride_star.src="asterisk.gif"; 

 }

function consider_seizethemoment(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (dexterity<17)){document.form1.seizethemoment_box.checked=false; }
 ArrowShow(); 
 }


function light_seizethemoment_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (dexterity<17)){document.form1.seizethemoment_star.src="no_asterisk.gif"; return; }
 document.form1.seizethemoment_star.src="asterisk.gif"; 

 }


function consider_slyhunter(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (wisdom<13)){document.form1.slyhunter_box.checked=false; }
 ArrowShow(); 
 }

function light_slyhunter_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (wisdom<13)){document.form1.slyhunter_star.src="no_asterisk.gif"; return; }
 document.form1.slyhunter_star.src="asterisk.gif"; 

 }

function consider_solidsound(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (constitution<13)){document.form1.solidsound_box.checked=false; }
 ArrowShow(); 
 }

function light_solidsound_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (constitution<13)){document.form1.solidsound_star.src="no_asterisk.gif"; return; }
 document.form1.solidsound_star.src="asterisk.gif"; 

 }

function consider_spearpush(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (dexterity<13))){document.form1.spearpush_box.checked=false; }
 ArrowShow(); 
 }

function light_spearpush_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (dexterity<13))){document.form1.spearpush_star.src="no_asterisk.gif"; return; }
 document.form1.spearpush_star.src="asterisk.gif"; 

 }

function consider_spellfocus(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!wizardclass()))){document.form1.spellfocus_box.checked=false; }
 ArrowShow(); 
 }

function light_spellfocus_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!wizardclass()))){document.form1.spellfocus_star.src="no_asterisk.gif"; return; }
 document.form1.spellfocus_star.src="asterisk.gif"; 

 }

function consider_steadyshooter(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (constitution<15)){document.form1.steadyshooter_box.checked=false; }
 ArrowShow(); 
 }

function light_steadyshooter_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (constitution<15)){document.form1.steadyshooter_star.src="no_asterisk.gif"; return; }
 document.form1.steadyshooter_star.src="asterisk.gif"; 

 }

function consider_sweepingflail(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (dexterity<15))){document.form1.sweepingflail_box.checked=false; }
 ArrowShow(); 
 }

function light_sweepingflail_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((strength<15) | (dexterity<15))){document.form1.sweepingflail_star.src="no_asterisk.gif"; return; }
 document.form1.sweepingflail_star.src="asterisk.gif"; 

 }

function consider_twofoldcurse(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!class_warlock))){document.form1.twofoldcurse_box.checked=false; }
 ArrowShow(); 
 }

function light_twofoldcurse_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | ((!class_warlock))){document.form1.twofoldcurse_star.src="no_asterisk.gif"; return; }
 document.form1.twofoldcurse_star.src="asterisk.gif"; 

 }

function consider_uncannydodge(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (wisdom<15)){document.form1.uncannydodge_box.checked=false; }
 ArrowShow(); 
 }

function light_uncannydodge_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (wisdom<15)){document.form1.uncannydodge_star.src="no_asterisk.gif"; return; }
 document.form1.uncannydodge_star.src="asterisk.gif"; 

 }

function consider_underfoot(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_halfling)){document.form1.underfoot_box.checked=false; }
 if ((!eladrin_acrobatics)&((!trained_acrobatics)&(!multi_trained_acrobatics))&(!document.form1.skilltrainingacrobatics_box.checked)){document.form1.underfoot_box.checked=false; }

 ArrowShow(); 
 }

function light_underfoot_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<11) | (!race_halfling)){document.form1.underfoot_star.src="no_asterisk.gif"; return; }
 if ((!eladrin_acrobatics)&((!trained_acrobatics)&(!multi_trained_acrobatics))&(!document.form1.skilltrainingacrobatics_box.checked)){document.form1.underfoot_box.checked=false; }

 document.form1.underfoot_star.src="asterisk.gif"; 

 }

function consider_arcanemastery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((!wizardclass()))){document.form1.arcanemastery_box.checked=false; }
 ArrowShow(); 
 }

function light_arcanemastery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((!wizardclass()))){document.form1.arcanemastery_star.src="no_asterisk.gif"; return; }
 document.form1.arcanemastery_star.src="asterisk.gif"; 

 }

function consider_axemastery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<21) | (constitution<17))){document.form1.axemastery_box.checked=false; }
 ArrowShow(); 
 }

function light_axemastery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<21) | (constitution<17))){document.form1.axemastery_star.src="no_asterisk.gif"; return; }
 document.form1.axemastery_star.src="asterisk.gif"; 

 }

function consider_blindfight(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.blindfight_box.checked=false; }
 if 
     ((!eladrin_perception)&((!trained_perception)&(!multi_trained_perception))&(!document.form1.skilltrainingperception_box.checked))
     {if (wisdom<13){document.form1.blindfight_box.checked=false; }}
 ArrowShow(); 
 }

function light_blindfight_star(){
 if (total_levels<21){document.form1.blindfight_star.src="no_asterisk.gif"; return; }
 if ((!eladrin_perception)&((!trained_perception)&(!multi_trained_perception))&(!document.form1.skilltrainingperception_box.checked))
     {if (wisdom<13){document.form1.blindfight_star.src="no_asterisk.gif"; return; }}
 document.form1.blindfight_star.src="asterisk.gif"; 

 }

function consider_bludgeonmastery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<19) | (constitution<19))){document.form1.bludgeonmastery_box.checked=false; }
 ArrowShow(); 
 }

function light_bludgeonmastery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<19) | (constitution<19))){document.form1.bludgeonmastery_star.src="no_asterisk.gif"; return; }
 document.form1.bludgeonmastery_star.src="asterisk.gif"; 

 }

function consider_epicresurgence(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.epicresurgence_box.checked=false; }
 ArrowShow(); 
 }

function light_epicresurgence_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.epicresurgence_star.src="no_asterisk.gif"; return; }
 document.form1.epicresurgence_star.src="asterisk.gif"; 

 }

function consider_flailmastery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<19) | (dexterity<19))){document.form1.flailmastery_box.checked=false; }
 ArrowShow(); 
 }

function light_flailmastery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<19) | (dexterity<19))){document.form1.flailmastery_star.src="no_asterisk.gif"; return; }
 document.form1.flailmastery_star.src="asterisk.gif"; 

 }

function consider_flankingmaneuver(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | (dexterity<17)){document.form1.flankingmaneuver_box.checked=false; }
 if ((!eladrin_acrobatics)&((!trained_acrobatics)&(!multi_trained_acrobatics))&(!document.form1.skilltrainingacrobatics_box.checked)){document.form1.flankingmaneuver_box.checked=false; }
 ArrowShow(); 
 }

function light_flankingmaneuver_star(){
 if ((total_levels<21) | (dexterity<17)){document.form1.flankingmaneuver_star.src="no_asterisk.gif"; return; }
 if ((!eladrin_acrobatics)&((!trained_acrobatics)&(!multi_trained_acrobatics))&(!document.form1.skilltrainingacrobatics_box.checked)){document.form1.flankingmaneuver_star.src="no_asterisk.gif"; return; }
 document.form1.flankingmaneuver_star.src="asterisk.gif"; 
 }

function consider_fontofradiance(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.fontofradiance_box.checked=false; }
 ArrowShow(); 
 }

function light_fontofradiance_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.fontofradiance_star.src="no_asterisk.gif"; return; }
 document.form1.fontofradiance_star.src="asterisk.gif"; 

 }

function consider_heavyblademastery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<21) | (dexterity<17))){document.form1.heavyblademastery_box.checked=false; }
 ArrowShow(); 
 }

function light_heavyblademastery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<21) | (dexterity<17))){document.form1.heavyblademastery_star.src="no_asterisk.gif"; return; }
 document.form1.heavyblademastery_star.src="asterisk.gif"; 

 }

function consider_irresistableflame(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.irresistableflame_box.checked=false; }
 ArrowShow(); 
 }

function light_irresistableflame_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.irresistableflame_star.src="no_asterisk.gif"; return; }
 document.form1.irresistableflame_star.src="asterisk.gif"; 

 }

function consider_lightblademastery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<17) | (dexterity<21))){document.form1.lightblademastery_box.checked=false; }
 ArrowShow(); 
 }

function light_lightblademastery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<17) | (dexterity<21))){document.form1.lightblademastery_star.src="no_asterisk.gif"; return; }
 document.form1.lightblademastery_star.src="asterisk.gif"; 

 }

function consider_pickmastery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<21) | (constitution<17))){document.form1.pickmastery_box.checked=false; }
 ArrowShow(); 
 }

function light_pickmastery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<21) | (constitution<17))){document.form1.pickmastery_star.src="no_asterisk.gif"; return; }
 document.form1.pickmastery_star.src="asterisk.gif"; 

 }

function consider_spearmastery(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<19) | (dexterity<19))){document.form1.spearmastery_box.checked=false; }
 ArrowShow(); 
 }

function light_spearmastery_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((strength<19) | (dexterity<19))){document.form1.spearmastery_star.src="no_asterisk.gif"; return; }
 document.form1.spearmastery_star.src="asterisk.gif"; 

 }

function consider_spellaccuracy(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((!wizardclass()))){document.form1.spellaccuracy_box.checked=false; }
 ArrowShow(); 
 }

function light_spellaccuracy_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((!wizardclass()))){document.form1.spellaccuracy_star.src="no_asterisk.gif"; return; }
 document.form1.spellaccuracy_star.src="asterisk.gif"; 

 }

function consider_triumphantattack(){
 if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.triumphantattack_box.checked=false; }
 ArrowShow(); 
 }

function light_triumphantattack_star(){
// if (!doingfeats()){remember_feats(); return; }
 if (total_levels<21){document.form1.triumphantattack_star.src="no_asterisk.gif"; return; }
 document.form1.triumphantattack_star.src="asterisk.gif"; 

 }

function consider_twoweaponflurry(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((dexterity<19) | (!document.form1.twoweaponfighting_box.checked))){document.form1.twoweaponflurry_box.checked=false; }
 ArrowShow(); 
 }

function light_twoweaponflurry_star(){
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((dexterity<19) | (!document.form1.twoweaponfighting_box.checked))){document.form1.twoweaponflurry_star.src="no_asterisk.gif"; return; }
 document.form1.twoweaponflurry_star.src="asterisk.gif"; 

 }

function consider_unfetteredstride(){
 if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((!eladrin_acrobatics)&((!trained_acrobatics)&(!multi_trained_acrobatics))&(!document.form1.skilltrainingacrobatics_box.checked))){document.form1.unfetteredstride_box.checked=false; }
 ArrowShow(); 
 }

function light_unfetteredstride_star(){
// alert("entering lightundetteredstridestar"); 
// if (!doingfeats()){remember_feats(); return; }
 if ((total_levels<21) | ((!eladrin_acrobatics)&((!trained_acrobatics)&(!multi_trained_acrobatics))&(!document.form1.skilltrainingacrobatics_box.checked))){document.form1.unfetteredstride_star.src="no_asterisk.gif"; return; }
 document.form1.unfetteredstride_star.src="asterisk.gif"; 

 }


function consider_multiclasspowerswap(){
 if (!doingfeats()){remember_feats(); return; }
 if ((!multi_cleric())&(!multi_fighter())&(!multi_paladin())&(!multi_ranger())&(!multi_rogue())&(!multi_warlock())&(!multi_warlord())&(!multi_wizard())&(!multi_swordmage())&(!multi_barbarian())&(!multi_bard())&(!multi_avenger())&(!multi_druid())&(!multi_invoker())&(!multi_sorcerer())&(!multi_shaman())&(!multi_warlock())&(!multi_spellscarred))
  {
   document.form1.multiclasspowerswapencounter_box.checked=false; 
   document.form1.multiclasspowerswaputility_box.checked=false; 
   document.form1.multiclasspowerswapdaily_box.checked=false; 
  }
   if (total_levels<4){document.form1.multiclasspowerswapencounter_box.checked=false; }
   if (total_levels<8){document.form1.multiclasspowerswaputility_box.checked=false; }
   if (total_levels<10){document.form1.multiclasspowerswapdaily_box.checked=false; }
   ArrowShow(); 
 }

function light_multiclasspowerswap_star(){
 if ((!multi_cleric())&(!multi_fighter())&(!multi_paladin())&(!multi_ranger())&(!multi_rogue())&(!multi_warlock())&(!multi_warlord())&(!multi_wizard())&(!multi_swordmage())&(!multi_barbarian())&(!multi_avenger())&(!multi_bard())&(!multi_invoker())&(!multi_druid())&(!multi_shaman())&(!multi_sorcerer())&(!multi_warden())&(!multi_spellscarred))
  {
   document.form1.multiclasspowerswapencounter_star.src="no_asterisk.gif"; ; 
   document.form1.multiclasspowerswaputility_star.src="no_asterisk.gif"; ; 
   document.form1.multiclasspowerswapdaily_star.src="no_asterisk.gif"; ; 
  }
  else
  {
   document.form1.multiclasspowerswapencounter_star.src="asterisk.gif"; ; 
   document.form1.multiclasspowerswaputility_star.src="asterisk.gif"; ; 
   document.form1.multiclasspowerswapdaily_star.src="asterisk.gif"; ; 
  }
   if (total_levels<4){document.form1.multiclasspowerswapencounter_star.src="no_asterisk.gif"; ; }
   if (total_levels<8){document.form1.multiclasspowerswaputility_star.src="no_asterisk.gif"; ; }
   if (total_levels<10){document.form1.multiclasspowerswapdaily_star.src="no_asterisk.gif"; ; }
 }



function consider_twohandedweapon(){
   if (small)
    {
     document.form1.greatclub_box.checked=false; 
     document.form1.morningstar_box.checked=false; 
     document.form1.quarterstaff_box.checked=false; 
     document.form1.scythe_box.checked=false; 
     document.form1.falchion_box.checked=false; 
     document.form1.glaive_box.checked=false; 
     document.form1.greataxe_box.checked=false; 
     document.form1.greatsword_box.checked=false; 
     document.form1.halberd_box.checked=false; 
     document.form1.heavyflail_box.checked=false; 
     document.form1.longspear_box.checked=false; 
     document.form1.maul_box.checked=false; 
     document.form1.heavywarpick_box.checked=false; 
     document.form1.spikedchain_box.checked=false; 
     document.form1.crossbow_box.checked=false; 
     document.form1.longbow_box.checked=false; 
     document.form1.craghammer_box.checked=false; 
     document.form1.executionaxe_box.checked=false; 
     document.form1.fullblade_box.checked=false; 
     document.form1.greatspear_box.checked=false; 
     document.form1.mordenkrad_box.checked=false; 
     document.form1.doubleaxe_box.checked=false; 
     document.form1.doubleflail_box.checked=false; 
     document.form1.doublesword_box.checked=false; 
     document.form1.urgrosh_box.checked=false; 
     document.form1.repeatingcrossbow_box.checked=false; 
     document.form1.greatbow_box.checked=false; 
     document.form1.superiorcrossbow_box.checked=false; 
    }
  if ((staffofdefense) | (feat_secondimplementstaff)){document.form1.quarterstaff_box.checked=true; }
  if ((orbofimposition) |(orbofdeception)| (feat_secondimplementorb)){document.form1.orb_box.checked=true; }
  if ((wandofaccuracy) | (feat_secondimplementwand)){document.form1.wand_box.checked=true; }
}




function c_cl_aw(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!ClericAtWill()))
   {
    document.form1.lanceoffaith_box.checked=false;
    document.form1.priestsshield_box.checked=false;
    document.form1.righteousbrand_box.checked=false;
    document.form1.sacredflame_box.checked=false;
   }
 }

function c_cl_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!ClericDaily()))
 {

    document.form1.guardianoffaith_box.checked=false; 
    document.form1.weaponofthegods_box.checked=false; 
    document.form1.astraldefenders_box.checked=false; 
    document.form1.divinepower_box.checked=false; 
    document.form1.holywrath_box.checked=false; 
    document.form1.firestorm_box.checked=false; 
    document.form1.purifyingfire_box.checked=false; 
    document.form1.beaconofhope_box.checked=false; 
    document.form1.indominitablespirit_box.checked=false; 
    document.form1.spiritualweapon_box.checked=false; 
    document.form1.avengingflame_box.checked=false; 
    document.form1.cascadeoflight_box.checked=false; 
    document.form1.flamestrike_box.checked=false; 
    document.form1.consecratedground_box.checked=false; 
    document.form1.sealofwarding_box.checked=false; 
    document.form1.knightofglory_box.checked=false; 
    document.form1.holyspark_box.checked=false; 
    document.form1.runeofpeace_box.checked=false; 
    document.form1.bladebarrier_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!ClericDaily()&(!epic_eternalseeker))))
 {
    document.form1.nimbusofdoom_box.checked=false; 
    document.form1.astralstorm_box.checked=false; 
    document.form1.sealofprotection_box.checked=false; 
    document.form1.godstrike_box.checked=false; 
    document.form1.sealofbinding_box.checked=false; 
    document.form1.sacredword_box.checked=false; 
 }
}


function c_cl_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!ClericEncounter()))
 {

    document.form1.dauntinglight_box.checked=false; 
    document.form1.enthrall_box.checked=false; 
    document.form1.thundrousword_box.checked=false; 
    document.form1.strengthenthefaithful_box.checked=false; 
    document.form1.inspiringstrike_box.checked=false; 
    document.form1.mantleofglory_box.checked=false; 
    document.form1.command_box.checked=false; 
    document.form1.searinglight_box.checked=false; 
    document.form1.wrathfulthunder_box.checked=false; 
    document.form1.healingstrike_box.checked=false; 
    document.form1.divineglow_box.checked=false; 
    document.form1.arcoftherighteous_box.checked=false; 
    document.form1.blazingbeacon_box.checked=false; 
    document.form1.causefear_box.checked=false; 
    document.form1.sentinelstrike_box.checked=false; 
    document.form1.plagueofdoom_box.checked=false; 
    document.form1.blindinglight_box.checked=false; 
    document.form1.awestrike_box.checked=false; 
    document.form1.splitthesky_box.checked=false; 
    document.form1.breakthespirit_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!ClericEncounter()&(!epic_eternalseeker))))
 {
    document.form1.hauntingstrike_box.checked=false; 
    document.form1.divinecensure_box.checked=false; 
    document.form1.astralbladesofdeath_box.checked=false; 
    document.form1.sacrificialhealing_box.checked=false; 
    document.form1.punishingstrike_box.checked=false; 
    document.form1.scourgeoftheunworthy_box.checked=false; 
    document.form1.sunburst_box.checked=false; 
    document.form1.healingtorch_box.checked=false; 
 }
}


function c_cl_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!ClericUtility()))
 {

    document.form1.spiritofhealth_box.checked=false; 
    document.form1.astralshield_box.checked=false; 
    document.form1.curelightwounds_box.checked=false; 
    document.form1.cloakofpeace_box.checked=false; 
    document.form1.knightsofunyieldingvalor_box.checked=false; 
    document.form1.astralrefuge_box.checked=false; 
    document.form1.divineaid_box.checked=false; 
    document.form1.sanctuary_box.checked=false; 
    document.form1.shieldoffaith_box.checked=false; 
    document.form1.bastionofhealth_box.checked=false; 
    document.form1.shieldingword_box.checked=false; 
    document.form1.hallowedground_box.checked=false; 
    document.form1.masscurelightwounds_box.checked=false; 
    document.form1.divinearmor_box.checked=false; 
    document.form1.bless_box.checked=false; 
    document.form1.holylantern_box.checked=false; 
    document.form1.divinevigor_box.checked=false; 
    document.form1.purify_box.checked=false; 
    document.form1.angeloftheelevenwinds_box.checked=false; 
    document.form1.cloudchariot_box.checked=false; 
    document.form1.cureseriouswounds_box.checked=false; 
    document.form1.clarioncalloftheastralsea_box.checked=false; 
 }
}


function c_fi_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!FighterAtWill()))
 {

    document.form1.surestrike_box.checked=false; 
    document.form1.cleave_box.checked=false; 
    document.form1.tideofiron_box.checked=false; 
    document.form1.reapingstrike_box.checked=false; 
    document.form1.brashstrike_box.checked=false; 
    document.form1.crushingsurge_box.checked=false; 
    document.form1.dualstrike_box.checked=false; 
    document.form1.footworklure_box.checked=false; 
 }
}


function c_fi_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!FighterDaily()))
 {

    document.form1.cracktheshell_box.checked=false; 
    document.form1.unyieldingavalanche_box.checked=false; 
    document.form1.devastationswake_box.checked=false; 
    document.form1.dragonsfangs_box.checked=false; 
    document.form1.serpentdancestrike_box.checked=false; 
    document.form1.brutestrike_box.checked=false; 
    document.form1.shiftthebattlefield_box.checked=false; 
    document.form1.thicketofblades_box.checked=false; 
    document.form1.dizzyingblow_box.checked=false; 
    document.form1.strikeofthewatchfulguard_box.checked=false; 
    document.form1.villainsmenace_box.checked=false; 
    document.form1.victorioussurge_box.checked=false; 
    document.form1.comebackstrike_box.checked=false; 
    document.form1.rainofsteel_box.checked=false; 
    document.form1.reavingstrike_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!FighterDaily()&(!epic_eternalseeker)&((!epic_martialarchetype)|(total_levels<30)))))
 {
    document.form1.forcethebattle_box.checked=false; 
    document.form1.supremacyofsteel_box.checked=false; 
    document.form1.reignofterror_box.checked=false; 
    document.form1.stormofdestruction_box.checked=false; 
    document.form1.reapersstance_box.checked=false; 
    document.form1.nomercy_box.checked=false; 
 }
}


function c_fi_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!FighterEncounter()))
 {
  if (!epic_martialarchetype)
   {
    document.form1.exactingstrike_box.checked=false; 
    document.form1.exorcismofsteel_box.checked=false; 
    document.form1.harryingassault_box.checked=false; 
    document.form1.mountainbreakingblow_box.checked=false; 
    document.form1.vorpaltornado_box.checked=false; 
    document.form1.warriorschallenge_box.checked=false; 
   }
///  if ((!epic_martialarchetype)|(total_levels<30))
//  {
//  }
    document.form1.passingattack_box.checked=false; 
    document.form1.spinningsweep_box.checked=false; 
    document.form1.silverstep_box.checked=false; 
    document.form1.giantswake_box.checked=false; 
    document.form1.precisestrike_box.checked=false; 
    document.form1.chainsofsorrow_box.checked=false; 
    document.form1.griffonswrath_box.checked=false; 
    document.form1.comeandgetit_box.checked=false; 
    document.form1.recklessstrike_box.checked=false; 
    document.form1.suddensurge_box.checked=false; 
    document.form1.sweepingblow_box.checked=false; 
    document.form1.rainofblows_box.checked=false; 
    document.form1.danceofsteel_box.checked=false; 
    document.form1.crushingblow_box.checked=false; 
    document.form1.steelserpentstrike_box.checked=false; 
    document.form1.stormofblows_box.checked=false; 
    document.form1.coveringattack_box.checked=false; 
    document.form1.anvilofdoom_box.checked=false; 
    document.form1.armorpiercingthrust_box.checked=false; 
    document.form1.talonoftheroc_box.checked=false; 
    document.form1.ironbulwark_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!FighterEncounter()&(!epic_eternalseeker)&((!epic_martialarchetype)|(total_levels<30)))))
 {
    document.form1.skullcrusher_box.checked=false; 
    document.form1.diamondshielddefense_box.checked=false; 
    document.form1.adamantinestrike_box.checked=false; 
    document.form1.cruelreaper_box.checked=false; 
    document.form1.warriorsurging_box.checked=false; 
    document.form1.fangsofsteel_box.checked=false; 
    document.form1.cageofchains_box.checked=false; 
    document.form1.paralyzingstrike_box.checked=false; 
    document.form1.hacknslash_box.checked=false; 
    document.form1.indomitablebattlestrike_box.checked=false; 
 }
}


function c_fi_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!FighterUtility()))
 {

    if ((!epic_martialarchetype)|(total_levels<26))
    {
    document.form1.actofdesperation_box.checked=false; 
    document.form1.nosurrender_box.checked=false; 
    }
    document.form1.unbreakable_box.checked=false; 
    document.form1.surprisestep_box.checked=false; 
    document.form1.unstoppable_box.checked=false; 
    document.form1.lastditchevasion_box.checked=false; 
    document.form1.battleawareness_box.checked=false; 
    document.form1.ironwarrior_box.checked=false; 
    document.form1.interposingshield_box.checked=false; 
    document.form1.boundlessendurance_box.checked=false; 
    document.form1.noopening_box.checked=false; 
    document.form1.getoverhere_box.checked=false; 
    document.form1.stalwartguard_box.checked=false; 
    document.form1.intothefray_box.checked=false; 
    document.form1.defensivetraining_box.checked=false; 
 }
}


function c_pa_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!PaladinAtWill()))
 {

    document.form1.enfeeblingstrike_box.checked=false; 
    document.form1.bolsteringstrike_box.checked=false; 
    document.form1.holystrike_box.checked=false; 
    document.form1.valiantstrike_box.checked=false; 
 }
}


function c_pa_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!PaladinDaily()))
 {

    document.form1.martyrsretribution_box.checked=false; 
    document.form1.righteousinferno_box.checked=false; 
    document.form1.onpainofdeath_box.checked=false; 
    document.form1.breakthewall_box.checked=false; 
    document.form1.bloodiedretribution_box.checked=false; 
    document.form1.signofvulnerability_box.checked=false; 
    document.form1.hallowedcircle_box.checked=false; 
    document.form1.coronaofblindingradiance_box.checked=false; 
    document.form1.crusadersboon_box.checked=false; 
    document.form1.truenemesis_box.checked=false; 
    document.form1.radiantdelirium_box.checked=false; 
    document.form1.paladinsjudgment_box.checked=false; 
    document.form1.radiantpulse_box.checked=false; 
    document.form1.onestandsalone_box.checked=false; 
    document.form1.crownofglory_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!PaladinDaily()&(!epic_eternalseeker))))
 {
    document.form1.powerfulfaith_box.checked=false; 
    document.form1.totheninehellswithyou_box.checked=false; 
    document.form1.evenhandofjustice_box.checked=false; 
    document.form1.exaltedretribution_box.checked=false; 
 }
}


function c_pa_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!PaladinEncounter()))
 {

    document.form1.beckonfoe_box.checked=false; 
    document.form1.whirlwindsmite_box.checked=false; 
    document.form1.fortifyingsmite_box.checked=false; 
    document.form1.staggeringsmite_box.checked=false; 
    document.form1.shieldingsmite_box.checked=false; 
    document.form1.radiantsmite_box.checked=false; 
    document.form1.renewingsmite_box.checked=false; 
    document.form1.piercingsmite_box.checked=false; 
    document.form1.enervatingsmite_box.checked=false; 
    document.form1.invigoratingsmite_box.checked=false; 
    document.form1.benigntransposition_box.checked=false; 
    document.form1.divinereverence_box.checked=false; 
    document.form1.arcingsmite_box.checked=false; 
    document.form1.righteoussmite_box.checked=false; 
    document.form1.handofthegods_box.checked=false; 
    document.form1.radiantcharge_box.checked=false; 
    document.form1.fearsomesmite_box.checked=false; 
    document.form1.terrifyingsmite_box.checked=false; 
    document.form1.entanglingsmite_box.checked=false; 
    document.form1.thundersmite_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!PaladinEncounter()&(!epic_eternalseeker))))
 {
    document.form1.sublimetranspostion_box.checked=false; 
    document.form1.stunningsmite_box.checked=false; 
    document.form1.herewaitsthydoom_box.checked=false; 
    document.form1.brandofjudgment_box.checked=false; 
    document.form1.martyrssmite_box.checked=false; 
    document.form1.deificvengeance_box.checked=false; 
    document.form1.blindingsmite_box.checked=false; 
    document.form1.resoundingsmite_box.checked=false; 
    document.form1.restrictingsmite_box.checked=false; 
 }
}


function c_pa_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!PaladinUtility()))
 {

    document.form1.turnthetide_box.checked=false; 
    document.form1.unitedinfaith_box.checked=false; 
    document.form1.cleansingburst_box.checked=false; 
    document.form1.angelicrescue_box.checked=false; 
    document.form1.nobleshield_box.checked=false; 
    document.form1.sacredcircle_box.checked=false; 
    document.form1.martyrsblessing_box.checked=false; 
    document.form1.astralspeech_box.checked=false; 
    document.form1.wrathofthegods_box.checked=false; 
    document.form1.oneheartonemind_box.checked=false; 
    document.form1.divinebodyguard_box.checked=false; 
    document.form1.deathward_box.checked=false; 
    document.form1.angelicintercession_box.checked=false; 
    document.form1.giftoflife_box.checked=false; 
    document.form1.cleansingspirit_box.checked=false; 
 }
}


function c_ra_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!RangerAtWill()))
 {

    document.form1.twinstrike_box.checked=false; 
    document.form1.carefulattack_box.checked=false; 
    document.form1.hitandrun_box.checked=false; 
    document.form1.nimblestrike_box.checked=false;
     document.form1.circlingstrike_box.checked=false;
     document.form1.predatorstrike_box.checked=false;
 }
 if (!ranger_beastmaster){UncheckBeastBoxes();}
}


function c_ra_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!RangerDaily()))
 {
//  if ((!epic_martialarchetype)|(total_levels<30))
//  {
//  }

    document.form1.cruelcageofsteel_box.checked=false; 
    document.form1.splitthetree_box.checked=false; 
    document.form1.bleedingwounds_box.checked=false; 
    document.form1.twowolfpounce_box.checked=false; 
    document.form1.splinteringshot_box.checked=false; 
    document.form1.frenziedskirmish_box.checked=false; 
    document.form1.bladecascade_box.checked=false; 
    document.form1.excruciatingshot_box.checked=false; 
    document.form1.suddenstrike_box.checked=false; 
    document.form1.woundingwhirlwind_box.checked=false; 
    document.form1.twoinoneshot_box.checked=false; 
    document.form1.greatramarrow_box.checked=false; 
    document.form1.huntersbeartrap_box.checked=false; 
    document.form1.jawsofthewolf_box.checked=false; 
    document.form1.stunningsteel_box.checked=false; 
    document.form1.confoundingarrows_box.checked=false; 
    document.form1.swirlingleavesofsteel_box.checked=false; 
    document.form1.sprayofarrows_box.checked=false; 
    document.form1.closequartersshot_box.checked=false; 
    document.form1.attacksontherun_box.checked=false; 
     document.form1.drivingthequarry_box.checked=false;
     document.form1.partneredsavaging_box.checked=false;
     document.form1.menacingcry_box.checked=false;
     document.form1.bloodfrenzyranger_box.checked=false;
     document.form1.scentoffear_box.checked=false;
     document.form1.ferociousroar_box.checked=false;
     document.form1.gnawingassault_box.checked=false;
     document.form1.primalrampage_box.checked=false;
     document.form1.pursuitofthewildhunt_box.checked=false;
     document.form1.huntmastersmauling_box.checked=false;
 }
 if ((!FeatsAreLocked)|((!RangerDaily()&(!epic_eternalseeker)&((!epic_martialarchetype)|(total_levels<30)))))
 {
    document.form1.weaveawebofsteel_box.checked=false; 
    document.form1.threeinoneshot_box.checked=false; 
    document.form1.followupblow_box.checked=false; 
    document.form1.unstoppablearrows_box.checked=false; 
    document.form1.tigersreflex_box.checked=false; 
    document.form1.bloodstorm_box.checked=false; 
 }
 if (!ranger_beastmaster){UncheckBeastBoxes();}
}


function c_ra_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!RangerEncounter()))
 {
  if (!epic_martialarchetype)
   {
    document.form1.arrowofvengeance_box.checked=false; 
    document.form1.cheetahsrake_box.checked=false; 
    document.form1.tripleshot_box.checked=false; 
    document.form1.twoweaponeviscerate_box.checked=false; 
     document.form1.bladeandfang_box.checked=false;
     document.form1.houndingbeast_box.checked=false;
   }
//  if ((!epic_martialarchetype)|(total_levels<30))
//  {
//  }
    document.form1.thundertuskboarstrike_box.checked=false; 
    document.form1.knockdownshot_box.checked=false; 
    document.form1.armorsplinter_box.checked=false; 
    document.form1.twofangedstrike_box.checked=false; 
    document.form1.foxscunning_box.checked=false; 
    document.form1.evasivestrike_box.checked=false; 
    document.form1.direwolverinestrike_box.checked=false; 
    document.form1.pinningstrike_box.checked=false; 
    document.form1.cutandrun_box.checked=false; 
    document.form1.disruptivestrike_box.checked=false; 
    document.form1.nimbledefense_box.checked=false; 
    document.form1.shadowwaspstrike_box.checked=false; 
    document.form1.sweepingwhirlwind_box.checked=false; 
    document.form1.spikesofthemanticore_box.checked=false; 
    document.form1.hawktalon_box.checked=false; 
    document.form1.clawsofthegriffon_box.checked=false; 
     document.form1.enclosetheprey_box.checked=false;
     document.form1.synchronizedstrike_box.checked=false;
     document.form1.beastlatch_box.checked=false;
     document.form1.pairedpredators_box.checked=false;
     document.form1.bloodiedfrenzy_box.checked=false;
     document.form1.laceratingmaul_box.checked=false;
     document.form1.beastrush_box.checked=false;
     document.form1.harriedquarry_box.checked=false;
     document.form1.herdtheprey_box.checked=false;
     document.form1.knockdownpounce_box.checked=false;
     document.form1.chasedown_box.checked=false;
     document.form1.overwhelmingfury_box.checked=false;
     document.form1.primalrampage_box.checked=false;
     document.form1.pursuitofthewildhunt_box.checked=false;
 }
 if ((!FeatsAreLocked)|((!RangerEncounter()&(!epic_eternalseeker)&((!epic_martialarchetype)|(total_levels<30)))))
 {
    document.form1.lightningshot_box.checked=false; 
    document.form1.manticoresvolley_box.checked=false; 
    document.form1.cloakofthorns_box.checked=false; 
    document.form1.wanderingtornado_box.checked=false; 
    document.form1.beastlyvise_box.checked=false; 
    document.form1.catchanddrop_box.checked=false; 
    document.form1.deathrend_box.checked=false; 
    document.form1.hailofarrows_box.checked=false; 
    document.form1.hammershot_box.checked=false; 
    document.form1.bladeward_box.checked=false; 
 }
 if (!ranger_beastmaster){UncheckBeastBoxes();}
}


function c_ra_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!RangerUtility()))
 {

    if ((!epic_martialarchetype)|(total_levels<26))
    {
    document.form1.forestghost_box.checked=false; 
    document.form1.hitthedirt_box.checked=false; 
    document.form1.masterofthehunt_box.checked=false; 
    document.form1.safestride_box.checked=false; 
     document.form1.selflesssacrifice_box.checked=false;
     document.form1.wilddash_box.checked=false;
    }
    document.form1.yieldground_box.checked=false; 
    document.form1.expeditiousstride_box.checked=false; 
    document.form1.crucialadvice_box.checked=false; 
    document.form1.weavethroughthefray_box.checked=false; 
    document.form1.skilledcompanion_box.checked=false; 
    document.form1.evadeambush_box.checked=false; 
    document.form1.momentaryrespite_box.checked=false; 
    document.form1.longstrider_box.checked=false; 
    document.form1.evadetheblow_box.checked=false; 
    document.form1.opentherange_box.checked=false; 
    document.form1.unbalancingparry_box.checked=false; 
    document.form1.undauntedstride_box.checked=false; 
     document.form1.heartenthebeast_box.checked=false;
     document.form1.packalertness_box.checked=false;
     document.form1.defensiveposture_box.checked=false;
     document.form1.invigoratethebeast_box.checked=false;
     document.form1.companionemplacement_box.checked=false;
     document.form1.quickrecoverypower_box.checked=false;
     document.form1.packstealth_box.checked=false;
     document.form1.sharedhealing_box.checked=false;
 }
 if (!ranger_beastmaster){UncheckBeastBoxes();}
}


function c_ro_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!RogueAtWill()))
 {

    document.form1.ripostestrike_box.checked=false; 
    document.form1.piercingstrike_box.checked=false; 
    document.form1.deftstrike_box.checked=false; 
    document.form1.slyflourish_box.checked=false; 
    document.form1.dishearteningstrike_box.checked=false; 
 }
}


function c_ro_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!RogueDaily()))
 {
//  if ((!epic_martialarchetype)|(total_levels<30))
//  {
//  }

    document.form1.easytarget_box.checked=false; 
    document.form1.snakesretreat_box.checked=false; 
    document.form1.flyingfoe_box.checked=false; 
    document.form1.feintingflurry_box.checked=false; 
    document.form1.trickstrike_box.checked=false; 
    document.form1.walkingwounded_box.checked=false; 
    document.form1.deepcut_box.checked=false; 
    document.form1.cleverriposte_box.checked=false; 
    document.form1.slayingstrike_box.checked=false; 
    document.form1.garottegrip_box.checked=false; 
    document.form1.bloodypath_box.checked=false; 
    document.form1.knockout_box.checked=false; 
    document.form1.deadlypositioning_box.checked=false; 
    document.form1.crimsonedge_box.checked=false; 
    document.form1.blindingbarrage_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!RogueDaily()&(!epic_eternalseeker)&((!epic_martialarchetype)|(total_levels<30)))))
 {
    document.form1.movingtarget_box.checked=false; 
    document.form1.immobilizingstrike_box.checked=false; 
    document.form1.assassinspoint_box.checked=false; 
    document.form1.hamstring_box.checked=false; 
    document.form1.ghostonthewind_box.checked=false; 
    document.form1.bitingassault_box.checked=false; 
 }
}


function c_ro_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!RogueEncounter()))
 {
  if (!epic_martialarchetype)
  {
    document.form1.dragontailstrike_box.checked=false; 
    document.form1.houndingstrike_box.checked=false; 
    document.form1.stabandgrab_box.checked=false; 
  }
//  if ((!epic_martialarchetype)|(total_levels<30))
//  {
//  }

    document.form1.foolsopportunity_box.checked=false; 
    document.form1.setupstrike_box.checked=false; 
    document.form1.torturousstrike_box.checked=false; 
    document.form1.positioningstrike_box.checked=false; 
    document.form1.kingscastle_box.checked=false; 
    document.form1.dazingstrike_box.checked=false; 
    document.form1.baitandswitch_box.checked=false; 
    document.form1.toppleover_box.checked=false; 
    document.form1.stunningstrike_box.checked=false; 
    document.form1.trickstersblade_box.checked=false; 
    document.form1.tornadostrike_box.checked=false; 
    document.form1.sandintheeyes_box.checked=false; 
    document.form1.roguesluck_box.checked=false; 
    document.form1.imperilingstrike_box.checked=false; 
    document.form1.unbalancingattack_box.checked=false; 
    document.form1.cloudofsteel_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!RogueEncounter()&(!epic_eternalseeker)&((!epic_martialarchetype)|(total_levels<30)))))
 {
    document.form1.perfectstrike_box.checked=false; 
    document.form1.hurricaneofblood_box.checked=false; 
    document.form1.danceofdeath_box.checked=false; 
    document.form1.steelentrapment_box.checked=false; 
    document.form1.scorpionstrike_box.checked=false; 
    document.form1.knavesgambit_box.checked=false; 
 }
}


function c_ro_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!RogueUtility()))
 {

    if ((!epic_martialarchetype)|(total_levels<26))
    {
    document.form1.cloudjump_box.checked=false; 
    document.form1.dazzlingacrobatics_box.checked=false; 
    document.form1.hidefromthelight_box.checked=false; 
    }
    document.form1.quickfingers_box.checked=false; 
    document.form1.masterofdeceit_box.checked=false; 
    document.form1.greatleapr_box.checked=false; 
    document.form1.fleetingghost_box.checked=false; 
    document.form1.slipperymind_box.checked=false; 
    document.form1.nimbleclimb_box.checked=false; 
    document.form1.shadowstride_box.checked=false; 
    document.form1.mobmentality_box.checked=false; 
    document.form1.ignobleescape_box.checked=false; 
    document.form1.chameleon_box.checked=false; 
    document.form1.raisethestakes_box.checked=false; 
    document.form1.leapingdodge_box.checked=false; 
    document.form1.hideinplainsight_box.checked=false; 
    document.form1.foilthelock_box.checked=false; 
    document.form1.closequarters_box.checked=false; 
    document.form1.certainfreedom_box.checked=false; 
    document.form1.dangeroustheft_box.checked=false; 
    document.form1.tumble_box.checked=false; 
 }
  if (!TrainedInStealth()){document.form1.fleetingghost_box.checked=false; }
  if (!TrainedInAthletics()){document.form1.greatleapr_box.checked=false; }
  if (!TrainedInBluff()){document.form1.masterofdeceit_box.checked=false; }
  if (!TrainedInThievery()){document.form1.quickfingers_box.checked=false; }
  if (!TrainedInAcrobatics()){document.form1.tumble_box.checked=false; }
  if (!TrainedInStealth()){document.form1.chameleon_box.checked=false; }
  if (!TrainedInAcrobatics()){document.form1.ignobleescape_box.checked=false; }
  if (!TrainedInIntimidate()){document.form1.mobmentality_box.checked=false; }
  if (!TrainedInAthletics()){document.form1.nimbleclimb_box.checked=false; }
  if (!TrainedInBluff()){document.form1.slipperymind_box.checked=false; }
 if (!TrainedInAcrobatics()){document.form1.certainfreedom_box.checked=false; }
 if (!TrainedInAcrobatics()){document.form1.closequarters_box.checked=false; }
 if (!TrainedInThievery()){document.form1.dangeroustheft_box.checked=false; }
 if (!TrainedInStealth()){document.form1.shadowstride_box.checked=false; }
  if (!TrainedInThievery()){document.form1.foilthelock_box.checked=false; }
  if (!TrainedInStealth()){document.form1.hideinplainsight_box.checked=false; }
  if (!TrainedInAthletics()){document.form1.leapingdodge_box.checked=false; }
  if (!TrainedInBluff()){document.form1.raisethestakes_box.checked=false; }
  if (!TrainedInAthletics()){document.form1.cloudjump_box.checked=false; }
  if (!TrainedInAcrobatics()){document.form1.dazzlingacrobatics_box.checked=false; }
  if (!TrainedInStealth()){document.form1.hidefromthelight_box.checked=false; }
}


function c_spellscarred_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!SpellscarredDaily()))
 {

    document.form1.terribleimposition_box.checked=false;
    document.form1.blurringblade_box.checked=false;
    document.form1.burningfocus_box.checked=false;
    document.form1.submissionoftheearth_box.checked=false;
    document.form1.rabidchainofsteel_box.checked=false;
    document.form1.metamorphosisofspellflame_box.checked=false;
    document.form1.echoesofvalor_box.checked=false;
    document.form1.malignantgrowth_box.checked=false;
    document.form1.spellcurse_box.checked=false;
    document.form1.inflictionoftheflamemist_box.checked=false;
    document.form1.burningtheplaguedbellows_box.checked=false;
    document.form1.gravityofmoment_box.checked=false;
    document.form1.contagionflame_box.checked=false;
    document.form1.spellmirror_box.checked=false;
 }
}


function c_spellscarred_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!SpellscarredEncounter()))
 {

    document.form1.reachofthedoomed_box.checked=false;
    document.form1.spellmothersembrace_box.checked=false;
    document.form1.impossibleflurry_box.checked=false;
    document.form1.shiftingwave_box.checked=false;
    document.form1.hideoustether_box.checked=false;
    document.form1.maskofmidnight_box.checked=false;
    document.form1.irontoothofbloodlust_box.checked=false;
    document.form1.linesinburningsand_box.checked=false;
    document.form1.venomousbloodfang_box.checked=false;
    document.form1.cursedgraspingair_box.checked=false;
    document.form1.calloftheplague_box.checked=false;
    document.form1.plaguelash_box.checked=false;
    document.form1.tonguesoftheearth_box.checked=false;
    document.form1.horrificmawbite_box.checked=false;
    document.form1.scarcarvingblade_box.checked=false;
 }
}


function c_spellscarred_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!SpellscarredUtility()))
 {

    document.form1.spellplagueguardians_box.checked=false;
    document.form1.donningthemudflesh_box.checked=false;
    document.form1.healingfleshoftheinfected_box.checked=false;
    document.form1.bodynobody_box.checked=false;
    document.form1.tearsoffireandblood_box.checked=false;
    document.form1.scarofbluewings_box.checked=false;
    document.form1.plaguefirebody_box.checked=false;
    document.form1.hauntingreception_box.checked=false;
    document.form1.plagueofrootedmajesty_box.checked=false;
    document.form1.spelleater_box.checked=false;
 }
}


function c_sw_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!SwordmageAtWill()))
 {

    document.form1.luringstrike_box.checked=false; 
    document.form1.swordburst_box.checked=false; 
    document.form1.lightninglure_box.checked=false; 
    document.form1.greenflameblade_box.checked=false; 
    document.form1.boomingblade_box.checked=false; 
 }
}


function c_sw_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!SwordmageDaily()))
 {

    document.form1.whirlingblade_box.checked=false;
    document.form1.glamorblade_box.checked=false;
    document.form1.frostbacklash_box.checked=false; 
    document.form1.burningblade_box.checked=false; 
    document.form1.infernossword_box.checked=false;
    document.form1.elementalfoible_box.checked=false;
    document.form1.lightningrod_box.checked=false;
    document.form1.baneblade_box.checked=false;
    document.form1.freethestormwithin_box.checked=false;
    document.form1.acidforblood_box.checked=false;
    document.form1.begone_box.checked=false;
    document.form1.beaconblade_box.checked=false;
    document.form1.lingeringlightning_box.checked=false;
    document.form1.deepfreeze_box.checked=false;
    document.form1.hellsownblade_box.checked=false;
 }
 if ((!FeatsAreLocked)|((!SwordmageDaily()&(!epic_eternalseeker))))
 {
    document.form1.quicksilverblade_box.checked=false;
    document.form1.obliteratingblaze_box.checked=false;
    document.form1.vorpaldoom_box.checked=false;
    document.form1.astralthunderblade_box.checked=false;
    document.form1.thunderingheart_box.checked=false;
    document.form1.boundinglightning_box.checked=false;
    document.form1.icyshackles_box.checked=false;
 }
}


function c_sw_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!SwordmageEncounter()))
 {

    document.form1.corrosiveruin_box.checked=false;
    document.form1.acidburstblade_box.checked=false;
    document.form1.swordshock_box.checked=false;
    document.form1.isolatingslam_box.checked=false;
    document.form1.spidersilkslash_box.checked=false;
    document.form1.icecage_box.checked=false;
    document.form1.seedoffire_box.checked=false;
    document.form1.dimensionalslash_box.checked=false;
    document.form1.spikesofagony_box.checked=false;
    document.form1.flamewallstrike_box.checked=false;
    document.form1.electrifiedlash_box.checked=false;
    document.form1.transposinglunge_box.checked=false;
    document.form1.slothstrike_box.checked=false;
    document.form1.blastbackswipe_box.checked=false;
    document.form1.lightningclash_box.checked=false;
    document.form1.foesnare_box.checked=false;
    document.form1.flamecyclone_box.checked=false; 
    document.form1.chillingblow_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!SwordmageEncounter()&(!epic_eternalseeker))))
 {
    document.form1.dimensionalcharge_box.checked=false;
    document.form1.circleofdevastation_box.checked=false;
    document.form1.maelstromblade_box.checked=false;
    document.form1.thunderreposte_box.checked=false;
    document.form1.acidfountain_box.checked=false;
    document.form1.meteorstrike_box.checked=false;
 }
}


function c_sw_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!SwordmageUtility()))
 {

    document.form1.giantsmight_box.checked=false;
    document.form1.eyesofthemage_box.checked=false;
    document.form1.suddenescape_box.checked=false;
    document.form1.ironskin_box.checked=false;
    document.form1.elementalprotection_box.checked=false;
    document.form1.bolsteringwarding_box.checked=false;
    document.form1.impenetrablewarding_box.checked=false;
    document.form1.dimensionaldodge_box.checked=false;
    document.form1.arcaneawareness_box.checked=false;
    document.form1.silversteelveil_box.checked=false;
    document.form1.fatespurnedfoe_box.checked=false;
    document.form1.dimensionalwarding_box.checked=false;
    document.form1.armathorsstep_box.checked=false;
    document.form1.mythalrecovery_box.checked=false;
    document.form1.fearnoelements_box.checked=false;
    document.form1.shackledwarding_box.checked=false;
    document.form1.eldritchspeed_box.checked=false; 
    document.form1.dimensionalwarp_box.checked=false; 
 }
}


function c_wk_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WarlockAtWill()))
 {
    document.form1.spitefulglamor_box.checked=false; 
    document.form1.hellishrebuke_box.checked=false; 
    document.form1.eyebite_box.checked=false; 
    document.form1.eyesofthevestige_box.checked=false; 
    document.form1.eldritchblast_box.checked=false; 
    document.form1.direradiance_box.checked=false; 
 }
    if (warlock_dark){document.form1.spitefulglamor_box.checked=true;}
    if (warlock_infernal){document.form1.hellishrebuke_box.checked=true;} 
    if (class_warlock){document.form1.eldritchblast_box.checked=true;} 
    if (warlock_fey){document.form1.eyebite_box.checked=true;} 
    if (warlock_vestige){document.form1.eyesofthevestige_box.checked=true;} 
    if (warlock_star){document.form1.direradiance_box.checked=true;} 

}


function c_wk_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WarlockDaily()))
 {

    document.form1.wrathofacamar_box.checked=false; 
    document.form1.minionsofmalbolge_box.checked=false; 
    document.form1.delusionsofloyalty_box.checked=false; 
    document.form1.darkladysgift_box.checked=false;
    document.form1.vestigeofleraje_box.checked=false;
    document.form1.vestigeofsolis_box.checked=false;
    document.form1.hungerofhadar_box.checked=false; 
    document.form1.curseofthebloodyfangs_box.checked=false; 
    document.form1.crownofmadness_box.checked=false; 
    document.form1.avernianeruption_box.checked=false; 
    document.form1.thirstingmaw_box.checked=false; 
    document.form1.tendrilsofthuban_box.checked=false; 
    document.form1.fireswarm_box.checked=false; 
    document.form1.curseofthegoldenmist_box.checked=false; 
    document.form1.flamesofphlegethos_box.checked=false; 
    document.form1.dreadstar_box.checked=false; 
    document.form1.curseofthedarkdream_box.checked=false; 
    document.form1.armorofagathys_box.checked=false; 
    document.form1.passionatebetrayal_box.checked=false;
    document.form1.vestigeofamaan_box.checked=false;
    document.form1.vestigeoftheburnedemperors_box.checked=false;
    document.form1.explosivecontagion_box.checked=false;
    document.form1.kimmerielssmile_box.checked=false;
    document.form1.ringofpain_box.checked=false;
    document.form1.vestigeofilmeth_box.checked=false;
    document.form1.vestigeofshax_box.checked=false;
    document.form1.forcefulassault_box.checked=false;
    document.form1.yourglorioussacrifice_box.checked=false;
    document.form1.vestigeofkhaeleth_box.checked=false;
    document.form1.vestigeofmountvaelis_box.checked=false;
    document.form1.contagion_box.checked=false;
    document.form1.thiefoffivefates_box.checked=false; 
    document.form1.summonsofkhirad_box.checked=false; 
    document.form1.ironspikeofdis_box.checked=false; 
    document.form1.curseoftheblackfrost_box.checked=false; 
    document.form1.twilightofthesoul_box.checked=false;
    document.form1.vestigeofugar_box.checked=false;
    document.form1.vestigeofxandor_box.checked=false;
    document.form1.deathsfondcaress_box.checked=false;
 }
 if ((!FeatsAreLocked)|((!WarlockDaily()&(!epic_eternalseeker))))
 {
    document.form1.spreadthecorrosion_box.checked=false;
    document.form1.vestigeofthemasterofthehiddenflame_box.checked=false;
    document.form1.vestigeofzuriel_box.checked=false;
    document.form1.onefinalsacrifice_box.checked=false;
    document.form1.invisibledeath_box.checked=false;
    document.form1.ringoftorment_box.checked=false;
    document.form1.vestigeoflandssoul_box.checked=false;
    document.form1.vestigeofthequeenofnamhar_box.checked=false;
    document.form1.hurlthroughhell_box.checked=false; 
    document.form1.doomofdelban_box.checked=false; 
    document.form1.curseofthedarkdelirium_box.checked=false; 
    document.form1.thirteenbalefulstars_box.checked=false; 
    document.form1.tartareantomb_box.checked=false; 
    document.form1.curseofthetwinprinces_box.checked=false; 
 }
}


function c_wk_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WarlockEncounter()))
 {

    document.form1.witchfire_box.checked=false; 
    document.form1.vampiricembrace_box.checked=false; 
    document.form1.dreadfulword_box.checked=false; 
    document.form1.diabolicgrasp_box.checked=false; 
    document.form1.warlocksbargain_box.checked=false; 
    document.form1.thirstingtendrils_box.checked=false; 
    document.form1.strandoffate_box.checked=false; 
    document.form1.soulflaying_box.checked=false; 
    document.form1.harrowstorm_box.checked=false; 
    document.form1.coldfirevortex_box.checked=false; 
    document.form1.bewitchingwhispers_box.checked=false; 
    document.form1.yourdelectablepain_box.checked=false;
    document.form1.unholyglee_box.checked=false;
    document.form1.allmustsacrifice_box.checked=false;
    document.form1.cursegrind_box.checked=false;
    document.form1.deathscommands_box.checked=false;
    document.form1.deathboon_box.checked=false;
    document.form1.yourdeliciousweakness_box.checked=false;
    document.form1.upsettingonslaught_box.checked=false;
    document.form1.flickeringvenom_box.checked=false;
    document.form1.cursebite_box.checked=false;
    document.form1.otherwindstride_box.checked=false; 
    document.form1.frigiddarkness_box.checked=false; 
    document.form1.fierybolt_box.checked=false; 
    document.form1.eldritchrain_box.checked=false; 
    document.form1.signofillomen_box.checked=false; 
    document.form1.mirethemind_box.checked=false; 
    document.form1.infernalmooncurse_box.checked=false; 
    document.form1.howlofdoom_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!WarlockEncounter()&(!epic_eternalseeker))))
 {
    document.form1.inevitableundercut_box.checked=false;
    document.form1.bladesofvanquishedarmies_box.checked=false;
    document.form1.dreadtheft_box.checked=false;
    document.form1.hellfirecurse_box.checked=false; 
    document.form1.curseofthefeyking_box.checked=false; 
    document.form1.banishtothevoid_box.checked=false; 
    document.form1.thornsofvenom_box.checked=false; 
    document.form1.spitefuldarts_box.checked=false; 
    document.form1.darktransport_box.checked=false; 

 }
}


function c_wk_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WarlockUtility()))
 {



    document.form1.wingsofthefiend_box.checked=false; 
    document.form1.ravensglamor_box.checked=false; 
    document.form1.entropicward_box.checked=false; 
    document.form1.spiderclimb_box.checked=false; 
    document.form1.shroudofblacksteel_box.checked=false; 
    document.form1.feyswitch_box.checked=false; 
    document.form1.darkonesownluck_box.checked=false; 
    document.form1.infuriatingelusiveness_box.checked=false; 
    document.form1.eyeofthewarlock_box.checked=false; 
    document.form1.cloakofshadow_box.checked=false; 
    document.form1.expedientsacrifice_box.checked=false;
    document.form1.ruinousresistance_box.checked=false;
    document.form1.darkestmirror_box.checked=false;
    document.form1.shadowslip_box.checked=false;
    document.form1.spiderscuttle_box.checked=false;
    document.form1.warlocksleap_box.checked=false; 
    document.form1.shieldingshades_box.checked=false; 
    document.form1.shadowform_box.checked=false; 
    document.form1.ambassadorimp_box.checked=false; 
    document.form1.shadowveil_box.checked=false; 
    document.form1.fiendishresilience_box.checked=false; 
    document.form1.etherealstride_box.checked=false; 
    document.form1.beguilingtongue_box.checked=false; 
 }
}


function c_wd_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WarlordAtWill()))
 {

    document.form1.wolfpacktactics_box.checked=false; 
    document.form1.brashassault_box.checked=false; 
    document.form1.openingshove_box.checked=false; 
    document.form1.vipersstrike_box.checked=false; 
    document.form1.furioussmash_box.checked=false; 
    document.form1.commandersstrike_box.checked=false; 
 }
}


function c_wd_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WarlordDaily()))
 {
//  if ((!epic_martialarchetype)|(total_levels<30))
//  {
//  }

    document.form1.whiteravenonslaught_box.checked=false; 
    document.form1.pinthefoe_box.checked=false; 
    document.form1.leadtheattack_box.checked=false; 
    document.form1.bastionofdefense_box.checked=false; 
    document.form1.windmillofdoom_box.checked=false; 
    document.form1.victorysurge_box.checked=false; 
    document.form1.breakthetempo_box.checked=false; 
    document.form1.villainsnightmare_box.checked=false; 
    document.form1.turningpoint_box.checked=false; 
    document.form1.standthefallen_box.checked=false; 
    document.form1.warlordsgambit_box.checked=false; 
    document.form1.renewthetroops_box.checked=false; 
    document.form1.makethembleed_box.checked=false; 
    document.form1.whiteravenstrike_box.checked=false; 
    document.form1.knockthemdown_box.checked=false; 
    document.form1.irondragoncharge_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!WarlordDaily()&(!epic_eternalseeker)&((!epic_martialarchetype)|(total_levels<30)))))
 {
    document.form1.standinvincible_box.checked=false; 
    document.form1.defydeath_box.checked=false; 
    document.form1.whiteravenscall_box.checked=false; 
    document.form1.stirthehornetsnest_box.checked=false; 
    document.form1.relentlessassault_box.checked=false; 
 }
}


function c_wd_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WarlordEncounter()))
 {
  if (!epic_martialarchetype)
  {
    document.form1.battleon_box.checked=false; 
    document.form1.hailofsteel_box.checked=false; 
    document.form1.thundrousfury_box.checked=false; 
    document.form1.warlordsrush_box.checked=false; 
  }
//  if ((!epic_martialarchetype)|(total_levels<30))
//  {
//  }
    document.form1.furyofthesirocco_box.checked=false; 
    document.form1.denyingsmite_box.checked=false; 
    document.form1.bolsteringblow_box.checked=false; 
    document.form1.beatthemintotheground_box.checked=false; 
    document.form1.warlordsstrike_box.checked=false; 
    document.form1.steelmonsoon_box.checked=false; 
    document.form1.inspiringwarcry_box.checked=false; 
    document.form1.holdtheline_box.checked=false; 
    document.form1.surroundfoe_box.checked=false; 
    document.form1.surpriseattack_box.checked=false; 
    document.form1.sunderarmor_box.checked=false; 
    document.form1.warlordsfavor_box.checked=false; 
    document.form1.lionsroar_box.checked=false; 
    document.form1.leafonthewind_box.checked=false; 
    document.form1.hammerandanvil_box.checked=false; 
    document.form1.guardingattack_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!WarlordEncounter()&(!epic_eternalseeker)&((!epic_martialarchetype)|(total_levels<30)))))
 {
    document.form1.warlordsdoom_box.checked=false; 
    document.form1.inciteheroism_box.checked=false; 
    document.form1.devastatingcharge_box.checked=false; 
    document.form1.chimerabattlestrike_box.checked=false; 
    document.form1.suddenassault_box.checked=false; 
    document.form1.rabbitsandwolves_box.checked=false; 
    document.form1.pillartopost_box.checked=false; 
    document.form1.greatdragonwarcry_box.checked=false; 
 }
}


function c_wd_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WarlordUtility()))
 {
    if ((!epic_martialarchetype)|(total_levels<26))
    {
    document.form1.ownthebattlefield_box.checked=false; 
    document.form1.heroicsurge_box.checked=false; 
    document.form1.heartofthetitan_box.checked=false; 
    }

    document.form1.standtough_box.checked=false; 
    document.form1.quickstep_box.checked=false; 
    document.form1.inspiringreaction_box.checked=false; 
    document.form1.guidethecharge_box.checked=false; 
    document.form1.whiteravenformation_box.checked=false; 
    document.form1.warlordsbanner_box.checked=false; 
    document.form1.herosdefiance_box.checked=false; 
    document.form1.tacticalshift_box.checked=false; 
    document.form1.easesuffering_box.checked=false; 
    document.form1.defensiverally_box.checked=false; 
    document.form1.shakeitoff_box.checked=false; 
    document.form1.knightsmove_box.checked=false; 
    document.form1.crescendoofviolence_box.checked=false; 
    document.form1.aidtheinjured_box.checked=false; 
 }
}


function c_wz_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WizardAtWill()))
 {

    document.form1.cloudofdaggers_box.checked=false; 
    document.form1.thunderwave_box.checked=false; 
    document.form1.illusoryambush_box.checked=false; 
    document.form1.phantombolt_box.checked=false; 
    document.form1.stormpillar_box.checked=false; 
    document.form1.scorchingburst_box.checked=false; 
    document.form1.rayoffrost_box.checked=false; 
    document.form1.magicmissile_box.checked=false; 
 }
}



function c_wz_d(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WizardDaily()))
 {

    document.form1.evardsblacktentacles_box.checked=false; 
    document.form1.disintegrate_box.checked=false; 
    document.form1.cloudkill_box.checked=false; 
    document.form1.acidwave_box.checked=false; 
    document.form1.web_box.checked=false; 
    document.form1.sleep_box.checked=false; 
    document.form1.stinkingcloud_box.checked=false; 
    document.form1.fireball_box.checked=false;
    document.form1.freezingcloud_box.checked=false; 
    document.form1.bigbysicygrasp_box.checked=false; 
    document.form1.flamingsphere_box.checked=false; 
    document.form1.acidarrow_box.checked=false; 
    document.form1.wallofice_box.checked=false; 
    document.form1.prismaticbeams_box.checked=false; 
    document.form1.otilukesresilientsphere_box.checked=false; 
    document.form1.blastofcold_box.checked=false; 
    document.form1.bigbysgraspinghands_box.checked=false; 
    document.form1.walloffire_box.checked=false; 
    document.form1.mordenkainenssword_box.checked=false; 
    document.form1.lightningserpent_box.checked=false; 
    document.form1.icestorm_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!WizardDaily()&(!epic_eternalseeker))))
 {
    document.form1.meteorswarm_box.checked=false; 
    document.form1.legionshold_box.checked=false; 
    document.form1.greatericestorm_box.checked=false; 
    document.form1.prismaticspray_box.checked=false; 
    document.form1.necroticweb_box.checked=false; 
    document.form1.maze_box.checked=false; 
    document.form1.elementalmaw_box.checked=false; 
 }
}




function c_av_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!AvengerAtWill()))
 {
     document.form1.bondofpursuit_box.checked=false;
     document.form1.bondofretribution_box.checked=false;
     document.form1.overwhelmingstrike_box.checked=false;
     document.form1.radiantvengeance_box.checked=false;
 }}

function c_bn_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!BarbarianAtWill()))
 {
     document.form1.devastatingstrike_box.checked=false;
     document.form1.howlingstrike_box.checked=false;
     document.form1.pressingstrike_box.checked=false;
     document.form1.recuperatingstrike_box.checked=false;
 }}

function c_bd_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!BardAtWill()))
 {
     document.form1.guidingstrike_box.checked=false;
     document.form1.misdirectedmark_box.checked=false;
     document.form1.viciousmockery_box.checked=false;
     document.form1.warsongstrike_box.checked=false;
     document.form1.jinxshot_box.checked=false;
 }}

function c_dr_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!DruidAtWill()))
 {

     document.form1.callofthebeast_box.checked=false;
     document.form1.chillwind_box.checked=false;
     document.form1.flameseed_box.checked=false;
     document.form1.graspingclaws_box.checked=false;
     document.form1.pounce_box.checked=false;
     document.form1.savagerend_box.checked=false;
     document.form1.stormspike_box.checked=false;
     document.form1.thornwhip_box.checked=false;
  }}

function c_in_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!InvokerAtWill()))
 {
     document.form1.avenginglight_box.checked=false;
     document.form1.divinebolts_box.checked=false;
     document.form1.graspingshards_box.checked=false;
     document.form1.sunstrike_box.checked=false;
     document.form1.vanguardslightning_box.checked=false;
 }}

function c_sh_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!ShamanAtWill()))
 {
     document.form1.defendingstrike_box.checked=false;
     document.form1.hauntingspirits_box.checked=false;
     document.form1.protectingstrike_box.checked=false;
     document.form1.stalkersstrike_box.checked=false;
     document.form1.watchersstrike_box.checked=false;
     document.form1.wrathofwinter_box.checked=false;
 }}

function c_so_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!SorcererAtWill()))
 {
     document.form1.acidorb_box.checked=false;
     document.form1.burningspray_box.checked=false;
     document.form1.chaosbolt_box.checked=false;
     document.form1.dragonfrost_box.checked=false;
     document.form1.stormwalk_box.checked=false;
     document.form1.blazingstarfall_box.checked=false;
     document.form1.lightningstrike_box.checked=false;
 }}



function c_wn_aw(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WardenAtWill()))
 {
     document.form1.earthshieldstrike_box.checked=false;
     document.form1.strengthofstone_box.checked=false;
     document.form1.thornstrike_box.checked=false;
     document.form1.weightofearth_box.checked=false;
  }}





function c_wz_e(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WizardEncounter()))
 {

    document.form1.icetomb_box.checked=false; 
    document.form1.forcevolley_box.checked=false; 
    document.form1.crushingtitansfist_box.checked=false; 
    document.form1.combust_box.checked=false; 
    document.form1.thunderlance_box.checked=false; 
    document.form1.prismaticburst_box.checked=false; 
    document.form1.mesmerichold_box.checked=false; 
    document.form1.frostburn_box.checked=false; 
    document.form1.shocksphere_box.checked=false; 
    document.form1.icyrays_box.checked=false; 
    document.form1.fireshroud_box.checked=false; 
    document.form1.colorspray_box.checked=false; 
    document.form1.rayofenfeeblement_box.checked=false; 
    document.form1.icyterrain_box.checked=false; 
    document.form1.forceorb_box.checked=false; 
    document.form1.chillstrike_box.checked=false; 
    document.form1.winterswrath_box.checked=false; 
    document.form1.spectralram_box.checked=false; 
    document.form1.lightningbolt_box.checked=false; 
    document.form1.fireburst_box.checked=false; 
    document.form1.burninghands_box.checked=false; 
 }
 if ((!FeatsAreLocked)|((!WizardEncounter()&(!epic_eternalseeker))))
 {
    document.form1.forcecage_box.checked=false; 
    document.form1.confusion_box.checked=false; 
    document.form1.blackfire_box.checked=false; 
    document.form1.thunderclap_box.checked=false; 
    document.form1.chainlightning_box.checked=false; 
    document.form1.acidstorm_box.checked=false; 
 }
}

function c_wz_u(){
  if (test_mode){return;}
 if ((!FeatsAreLocked)|(!WizardUtility()))
 {

    document.form1.walloffog_box.checked=false; 
    document.form1.levitate_box.checked=false; 
    document.form1.invisibility_box.checked=false; 
    document.form1.dispelmagic_box.checked=false; 
    document.form1.disguiseself_box.checked=false; 
    document.form1.dimensiondoor_box.checked=false; 
    document.form1.stoneskin_box.checked=false; 
    document.form1.greaterinvisibility_box.checked=false; 
    document.form1.fly_box.checked=false; 
    document.form1.displacement_box.checked=false; 
    document.form1.resistance_box.checked=false; 
    document.form1.mirrorimage_box.checked=false; 
    document.form1.blur_box.checked=false; 
    document.form1.arcanegate_box.checked=false; 
    document.form1.shield_box.checked=false; 
    document.form1.jump_box.checked=false; 
    document.form1.featherfall_box.checked=false; 
    document.form1.expeditiousretreat_box.checked=false; 
    document.form1.timestop_box.checked=false; 
    document.form1.mordenkainensmansion_box.checked=false; 
    document.form1.massfly_box.checked=false; 
}
}









function c_av_e(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!AvengerEncounter()))
  {
      document.form1.angelicalacrity_box.checked=false;
      document.form1.avengingecho_box.checked=false;
      document.form1.sharedmadness_box.checked=false;
      document.form1.whirlwindcharge_box.checked=false;
     document.form1.deflectingthunder_box.checked=false;
     document.form1.enmitysreach_box.checked=false;
     document.form1.halooffire_box.checked=false;
     document.form1.sequesteringstrike_box.checked=false;
     document.form1.avengingwinds_box.checked=false;
     document.form1.bladestep_box.checked=false;
     document.form1.inexorablepursuit_box.checked=false;
     document.form1.slintertheformation_box.checked=false;
     document.form1.cloudofsouls_box.checked=false;
     document.form1.lightoftheavengingsun_box.checked=false;
     document.form1.sequesteringword_box.checked=false;
     document.form1.whirlingblades_box.checked=false;
     document.form1.astralfury_box.checked=false;
     document.form1.readyforthefinalblow_box.checked=false;
     document.form1.spectralcharge_box.checked=false;
     document.form1.wardingblade_box.checked=false;
  }
 if ((!FeatsAreLocked)|((!AvengerEncounter()&(!epic_eternalseeker))))
  {
     document.form1.avengersshield_box.checked=false;
     document.form1.bondofjustice_box.checked=false;
     document.form1.phaseduel_box.checked=false;
     document.form1.astralcharge_box.checked=false;
     document.form1.deathstroke_box.checked=false;
     document.form1.inevitableend_box.checked=false;
     document.form1.scattertotheastralwinds_box.checked=false;
  }
  }
function c_bn_e(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!BarbarianEncounter()))
  {
      document.form1.avalanchestrike_box.checked=false;
      document.form1.bloodletting_box.checked=false;
      document.form1.greatcleave_box.checked=false;
      document.form1.vaultthefallen_box.checked=false;
     document.form1.bladesweep_box.checked=false;
     document.form1.bloodstrike_box.checked=false;
     document.form1.daringcharge_box.checked=false;
     document.form1.hammerfall_box.checked=false;
     document.form1.shatterbonestrike_box.checked=false;
     document.form1.curtainofsteel_box.checked=false;
     document.form1.greatshout_box.checked=false;
     document.form1.feastofviolence_box.checked=false;
     document.form1.tideofblood_box.checked=false;
     document.form1.bladewhirlwind_box.checked=false;
     document.form1.cracktheskull_box.checked=false;
     document.form1.stormofblades_box.checked=false;
     document.form1.terrorscry_box.checked=false;
     document.form1.thunderfall_box.checked=false;
     document.form1.defastatingblow_box.checked=false;
     document.form1.mountaingrasp_box.checked=false;
     document.form1.shoulderslam_box.checked=false;
     document.form1.threateningfry_box.checked=false;
     document.form1.vigorousstrike_box.checked=false;
  }
 if ((!FeatsAreLocked)|((!BarbarianEncounter()&(!epic_eternalseeker))))
  {
     document.form1.arcingthrow_box.checked=false;
     document.form1.berserkersshout_box.checked=false;
     document.form1.craterfall_box.checked=false;
     document.form1.fatalstrike_box.checked=false;
     document.form1.feralscythe_box.checked=false;
     document.form1.staggeringstrike_box.checked=false;
     document.form1.bloodwrath_box.checked=false;
     document.form1.bonebreaker_box.checked=false;
     document.form1.butchersfeast_box.checked=false;
     document.form1.hurricaneofblades_box.checked=false;
     document.form1.rampagingdragonstrike_box.checked=false;
  }
  }

function c_bd_e(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!BardEncounter()))
  {
      document.form1.blunder_box.checked=false;
      document.form1.fastfriends_box.checked=false;
      document.form1.inspiringrefrain_box.checked=false;
      document.form1.shoutoftriumph_box.checked=false;
     document.form1.chargerscall_box.checked=false;
     document.form1.cunningferocity_box.checked=false;
     document.form1.dissonantstrain_box.checked=false;
     document.form1.impellingforce_box.checked=false;
     document.form1.deflectattention_box.checked=false;
     document.form1.distractingshout_box.checked=false;
     document.form1.scorpionsclawstrike_box.checked=false;
     document.form1.unluck_box.checked=false;
     document.form1.earthquakestrike_box.checked=false;
     document.form1.foolhardyfighting_box.checked=false;
     document.form1.harmonyofthetwo_box.checked=false;
     document.form1.songofstorms_box.checked=false;
     document.form1.masksofmenace_box.checked=false;
     document.form1.shoutofevasion_box.checked=false;
     document.form1.songofsummons_box.checked=false;
     document.form1.wordofvulnerability_box.checked=false;
  }
 if ((!FeatsAreLocked)|((!BardEncounter()&(!epic_eternalseeker))))
  {
     document.form1.echoesintime_box.checked=false;
     document.form1.rhythmofdisorientation_box.checked=false;
     document.form1.songofliberation_box.checked=false;
     document.form1.wealandwoe_box.checked=false;
     document.form1.bondofmalediction_box.checked=false;
     document.form1.kaleidoscopigburst_box.checked=false;
     document.form1.surgeofvalor_box.checked=false;
  }
  }

function c_dr_e(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!DruidEncounter()))
  {
      document.form1.culltheherd_box.checked=false;
      document.form1.dartingbite_box.checked=false;
      document.form1.frostflash_box.checked=false;
      document.form1.twistingvines_box.checked=false;
     document.form1.batteringclaws_box.checked=false;
     document.form1.calllightning_box.checked=false;
     document.form1.predatorsflurry_box.checked=false;
     document.form1.tundrawind_box.checked=false;
     document.form1.feastoffury_box.checked=false;
     document.form1.latchon_box.checked=false;
     document.form1.swlrlingwinds_box.checked=false;
     document.form1.tremor_box.checked=false;
     document.form1.clawsofretribution_box.checked=false;
     document.form1.esxposeweakness_box.checked=false;
     document.form1.thundercrash_box.checked=false;
     document.form1.tidalsurge_box.checked=false;
     document.form1.lightningcascade_box.checked=false;
     document.form1.scavengersprize_box.checked=false;
     document.form1.shiftingrake_box.checked=false;
     document.form1.windstorm_box.checked=false;
  }
 if ((!FeatsAreLocked)|((!DruidEncounter()&(!epic_eternalseeker))))
  {
     document.form1.graspingearth_box.checked=false;
     document.form1.primalroar_box.checked=false;
     document.form1.stormburst_box.checked=false;
     document.form1.strengthofthehunt_box.checked=false;
     document.form1.explosivewind_box.checked=false;
     document.form1.feralwhirlwind_box.checked=false;
     document.form1.leapingrake_box.checked=false;
     document.form1.polarblast_box.checked=false;
  }
  }

function c_in_e(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!InvokerEncounter()))
  {
      document.form1.astralterror_box.checked=false;
      document.form1.bladesofastralfire_box.checked=false;
      document.form1.spearoftheinquisitor_box.checked=false;
      document.form1.thunderofjudgment_box.checked=false;
     document.form1.chainsofcarceri_box.checked=false;
     document.form1.glyphofimprisonment_box.checked=false;
     document.form1.offeringofjustice_box.checked=false;
     document.form1.sunhammer_box.checked=false;
     document.form1.balefuleyeofjudgment_box.checked=false;
     document.form1.boltoftherisingsun_box.checked=false;
     document.form1.invokeobedience_box.checked=false;
     document.form1.thunderboldoftheheavens_box.checked=false;
     document.form1.compelattention_box.checked=false;
     document.form1.pilarofguardianflame_box.checked=false;
     document.form1.sealoftheheretic_box.checked=false;
     document.form1.windsofcelestia_box.checked=false;
     document.form1.blooddebt_box.checked=false;
     document.form1.curseofhaemnathuun_box.checked=false;
     document.form1.glyphofradiance_box.checked=false;
     document.form1.glyphofthreeblades_box.checked=false;
  }
 if ((!FeatsAreLocked)|((!InvokerEncounter()&(!epic_eternalseeker))))
  {
     document.form1.cascadeoffivesuns_box.checked=false;
     document.form1.stormofcelestia_box.checked=false;
     document.form1.vindicatingflames_box.checked=false;
     document.form1.wordofrebuke_box.checked=false;
     document.form1.invoketerror_box.checked=false;
     document.form1.offeringofpeace_box.checked=false;
     document.form1.swarmofastralsteel_box.checked=false;
     document.form1.wordofannihilation_box.checked=false;
  }
  }

function c_sh_e(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!ShamanEncounter()))
  {
      document.form1.calltotheancestralwarrior_box.checked=false;
      document.form1.calltotheancientdefender_box.checked=false;
      document.form1.thunderbearswarding_box.checked=false;
      document.form1.twinpanthers_box.checked=false;
     document.form1.calltothesavageelder_box.checked=false;
     document.form1.lightningpantherspirit_box.checked=false;
     document.form1.rimefirespirit_box.checked=false;
     document.form1.springrenewalstrike_box.checked=false;
     document.form1.calltotheblooddancer_box.checked=false;
     document.form1.calltothehowlingstorm_box.checked=false;
     document.form1.thunderstormspirit_box.checked=false;
     document.form1.winterwindspirit_box.checked=false;
     document.form1.calltotheindomitabledefender_box.checked=false;
     document.form1.calltothelaughingfortune_box.checked=false;
     document.form1.howlinggust_box.checked=false;
     document.form1.spiritofcleansinglight_box.checked=false;
     document.form1.calltothelashingbehemoth_box.checked=false;
     document.form1.shacklesofthemountain_box.checked=false;
     document.form1.spiritbondofvengeance_box.checked=false;
     document.form1.spiritofspringsrenewal_box.checked=false;
  }
 if ((!FeatsAreLocked)|((!ShamanEncounter()&(!epic_eternalseeker))))
  {
     document.form1.calltotheprimalprotector_box.checked=false;
     document.form1.calltotherelentlesshunter_box.checked=false;
     document.form1.spiritofthedeathraven_box.checked=false;
     document.form1.twintempestspirits_box.checked=false;
     document.form1.bloodreaperspirits_box.checked=false;
     document.form1.calltothecleansingfire_box.checked=false;
     document.form1.calltothegreathunter_box.checked=false;
     document.form1.spiritofelderwisdom_box.checked=false;
  }
  }

function c_so_e(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!SorcererEncounter()))
  {
      document.form1.bedevilingburst_box.checked=false;
      document.form1.explosivepyre_box.checked=false;
      document.form1.frostbind_box.checked=false;
      document.form1.tempestbreath_box.checked=false;
      document.form1.thunderslam_box.checked=false;
     document.form1.dancinglightning_box.checked=false;
     document.form1.flamespiral_box.checked=false;
     document.form1.icedragonsteeth_box.checked=false;
     document.form1.poisonousexhalation_box.checked=false;
     document.form1.spectralclaw_box.checked=false;
     document.form1.chaosstorm_box.checked=false;
     document.form1.crushingsphere_box.checked=false;
     document.form1.rimestorm_box.checked=false;
     document.form1.shout_box.checked=false;
     document.form1.chainsoffire_box.checked=false;
     document.form1.jawsoftheearth_box.checked=false;
     document.form1.mindhammer_box.checked=false;
     document.form1.thunderbreath_box.checked=false;
     document.form1.breathofwinter_box.checked=false;
     document.form1.dragontailmeditation_box.checked=false;
     document.form1.poisonousevasion_box.checked=false;
     document.form1.thundersummons_box.checked=false;
  }
 if ((!FeatsAreLocked)|((!SorcererEncounter()&(!epic_eternalseeker))))
  {
     document.form1.blackbreath_box.checked=false;
     document.form1.chaosorbs_box.checked=false;
     document.form1.ironchains_box.checked=false;
     document.form1.platesofice_box.checked=false;
     document.form1.lightningeruption_box.checked=false;
     document.form1.poisonward_box.checked=false;
     document.form1.thunderpulse_box.checked=false;
     document.form1.wildfirecurse_box.checked=false;
  }
  }

function c_wn_e(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!WardenEncounter()))
  {
      document.form1.earthspikes_box.checked=false;
      document.form1.hungryearth_box.checked=false;
      document.form1.thunderramassault_box.checked=false;
      document.form1.wildbloodfrenzy_box.checked=false;
     document.form1.burstofearthsfury_box.checked=false;
     document.form1.earthgraspstrike_box.checked=false;
     document.form1.predatoryguardian_box.checked=false;
     document.form1.thunderingstrike_box.checked=false;
     document.form1.earthgift_box.checked=false;
     document.form1.mountainhammer_box.checked=false;
     document.form1.stalkerspositioning_box.checked=false;
     document.form1.thornburst_box.checked=false;
     document.form1.creepersgrasp_box.checked=false;
     document.form1.icyshards_box.checked=false;
     document.form1.ponderousstrike_box.checked=false;
     document.form1.sunburststrike_box.checked=false;
     document.form1.callforththeharvest_box.checked=false;
     document.form1.eagervinestrike_box.checked=false;
     document.form1.earthholdsrebuke_box.checked=false;
     document.form1.razorleafcut_box.checked=false;
  }
 if ((!FeatsAreLocked)|((!WardenEncounter()&(!epic_eternalseeker))))
  {
     document.form1.guardianswrath_box.checked=false;
     document.form1.naturesally_box.checked=false;
     document.form1.startlingsavagery_box.checked=false;
     document.form1.whirlwindassault_box.checked=false;
     document.form1.earthtomb_box.checked=false;
     document.form1.guardiansstorm_box.checked=false;
     document.form1.screamingwindstrike_box.checked=false;
     document.form1.weightofthemountain_box.checked=false;
  }
  }













function c_av_u(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!AvengerUtility()))
  {
     document.form1.blessingofvengeance_box.checked=false;
     document.form1.distractingflare_box.checked=false;
     document.form1.refocusenmity_box.checked=false;
     document.form1.resonantescape_box.checked=false;
      document.form1.aspectofagility_box.checked=false;
      document.form1.oathofenduringwrath_box.checked=false;
      document.form1.oathoftherelentlesshunter_box.checked=false;
      document.form1.wrathofthedivine_box.checked=false;
     document.form1.avengersreadiness_box.checked=false;
     document.form1.channelendurance_box.checked=false;
     document.form1.eyeofjustice_box.checked=false;
     document.form1.riveroflife_box.checked=false;
      document.form1.astralcloak_box.checked=false;
      document.form1.bulwarkofdefiance_box.checked=false;
      document.form1.vengefulrevenant_box.checked=false;
      document.form1.windsoftheastralsea_box.checked=false;
      document.form1.ghostlyvengeance_box.checked=false;
      document.form1.indomitableresolve_box.checked=false;
      document.form1.oathofthefinalstrike_box.checked=false;
      document.form1.twinstep_box.checked=false;
  }}

function c_bn_u(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!BarbarianUtility()))
  {
     document.form1.combatspirit_box.checked=false;
     document.form1.primalvitality_box.checked=false;
     document.form1.stonebreaker_box.checked=false;
     document.form1.tigersleap_box.checked=false;
      document.form1.combatsurge_box.checked=false;
      document.form1.indomitableshift_box.checked=false;
      document.form1.instinctivecharge_box.checked=false;
      document.form1.lossofwill_box.checked=false;
     document.form1.denydeath_box.checked=false;
     document.form1.heartstrike_box.checked=false;
     document.form1.mountainroots_box.checked=false;
     document.form1.wellspringofrenewal_box.checked=false;
      document.form1.fuelthefire_box.checked=false;
      document.form1.greatstomp_box.checked=false;
      document.form1.primalresistance_box.checked=false;
      document.form1.spurthecycle_box.checked=false;
      document.form1.laststand_box.checked=false;
      document.form1.primalinstinct_box.checked=false;
      document.form1.primalvigor_box.checked=false;
      document.form1.untouched_box.checked=false;
  }}

function c_bd_u(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!BardUtility()))
  {
     document.form1.hunterstune_box.checked=false;
     document.form1.inspirecompetence_box.checked=false;
     document.form1.songofcourage_box.checked=false;
     document.form1.songofdefense_box.checked=false;
      document.form1.allegro_box.checked=false;
      document.form1.odetosacrifice_box.checked=false;
      document.form1.songofconquest_box.checked=false;
      document.form1.trickstershealing_box.checked=false;
     document.form1.illusoryerasure_box.checked=false;
     document.form1.songofrecovery_box.checked=false;
     document.form1.veil_box.checked=false;
     document.form1.wordoflife_box.checked=false;
      document.form1.blinkzone_box.checked=false;
      document.form1.chorusofrecovery_box.checked=false;
      document.form1.elegyoftheundefeated_box.checked=false;
      document.form1.songofsublimesnowfall_box.checked=false;
      document.form1.elegyunwritten_box.checked=false;
      document.form1.invisibletroupe_box.checked=false;
      document.form1.mirroredentourage_box.checked=false;
      document.form1.songoftransition_box.checked=false;
  }}

function c_dr_u(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!DruidUtility()))
  {
     document.form1.barkskin_box.checked=false;
     document.form1.fleetpursuit_box.checked=false;
     document.form1.obscuringmist_box.checked=false;
     document.form1.skitteringsneak_box.checked=false;
      document.form1.blackharbinger_box.checked=false;
      document.form1.camouflagecloak_box.checked=false;
      document.form1.chantofsustenance_box.checked=false;
      document.form1.stalkerseyes_box.checked=false;
     document.form1.armorofthewild_box.checked=false;
     document.form1.feywildsojourn_box.checked=false;
     document.form1.rootsofrescue_box.checked=false;
     document.form1.winterstorm_box.checked=false;
      document.form1.howlofthewild_box.checked=false;
      document.form1.insectplague_box.checked=false;
      document.form1.primalrestoration_box.checked=false;
      document.form1.wallofstone_box.checked=false;
      document.form1.phantombeast_box.checked=false;
      document.form1.skytalon_box.checked=false;
      document.form1.unseenbeast_box.checked=false;
      document.form1.unyieldingroots_box.checked=false;
  }}

function c_in_u(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!InvokerUtility()))
  {
     document.form1.divinecall_box.checked=false;
     document.form1.emissaryofthegods_box.checked=false;
     document.form1.shroudofawe_box.checked=false;
     document.form1.shroudofwarning_box.checked=false;
     document.form1.walloflight_box.checked=false;
      document.form1.astralstep_box.checked=false;
      document.form1.demandjustice_box.checked=false;
      document.form1.sharedendurance_box.checked=false;
      document.form1.shieldoflight_box.checked=false;
      document.form1.symbolofhope_box.checked=false;
     document.form1.angelicvisage_box.checked=false;
     document.form1.covenantofendurance_box.checked=false;
     document.form1.divinerenewal_box.checked=false;
     document.form1.martyrsward_box.checked=false;
      document.form1.covenantoflife_box.checked=false;
      document.form1.iconlflife_box.checked=false;
      document.form1.shieldofjustice_box.checked=false;
      document.form1.walkbetweenworlds_box.checked=false;
      document.form1.covenantofvengeance_box.checked=false;
      document.form1.invokeangelicform_box.checked=false;
      document.form1.invokeheroism_box.checked=false;
      document.form1.wardofdivinelight_box.checked=false;
  }}

function c_sh_u(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!ShamanUtility()))
  {
     document.form1.bondsoftheclan_box.checked=false;
     document.form1.spiritcall_box.checked=false;
     document.form1.spiritoflife_box.checked=false;
     document.form1.spiritsofbattle_box.checked=false;
      document.form1.blessingoftheirontree_box.checked=false;
      document.form1.spiritofdawn_box.checked=false;
      document.form1.spiritofthekeeper_box.checked=false;
      document.form1.suddenrestoration_box.checked=false;
     document.form1.primalgust_box.checked=false;
     document.form1.rockshieldspirits_box.checked=false;
     document.form1.spiritsoftheshadowedmoon_box.checked=false;
     document.form1.spiritsummons_box.checked=false;
      document.form1.fateweaversshield_box.checked=false;
      document.form1.forgethechainsoflife_box.checked=false;
      document.form1.spiritbinding_box.checked=false;
      document.form1.spiritsofthedancingzephyr_box.checked=false;
      document.form1.bountyoflife_box.checked=false;
      document.form1.callthedead_box.checked=false;
      document.form1.doorwaytothespiritworld_box.checked=false;
      document.form1.spiritoftheworldhealer_box.checked=false;
  }}

function c_so_u(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!SorcererUtility()))
  {
     document.form1.dragonflamemantle_box.checked=false;
     document.form1.elementalshift_box.checked=false;
     document.form1.stretchspell_box.checked=false;
     document.form1.unseenaid_box.checked=false;
      document.form1.arcaneempowerment_box.checked=false;
      document.form1.energeticflight_box.checked=false;
      document.form1.suddenscales_box.checked=false;
      document.form1.swiftescape_box.checked=false;
     document.form1.chaoslink_box.checked=false;
     document.form1.devourmagic_box.checked=false;
     document.form1.invertresistance_box.checked=false;
     document.form1.narrowescape_box.checked=false;
      document.form1.breathofthedesertdragon_box.checked=false;
      document.form1.chaosechoes_box.checked=false;
      document.form1.chaossanctuary_box.checked=false;
      document.form1.comradesmantle_box.checked=false;
      document.form1.draconicmajesty_box.checked=false;
      document.form1.dragonfear_box.checked=false;
      document.form1.platinumscales_box.checked=false;
      document.form1.sharedsorcery_box.checked=false;
      document.form1.windshape_box.checked=false;
  }}

function c_wn_u(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!WardenUtility()))
  {
     document.form1.eyesofthehawk_box.checked=false;
     document.form1.mountainlionstep_box.checked=false;
     document.form1.naturesabundance_box.checked=false;
     document.form1.triumphantvigor_box.checked=false;
      document.form1.bearsendurance_box.checked=false;
      document.form1.earthguard_box.checked=false;
      document.form1.seastride_box.checked=false;
      document.form1.windbornestep_box.checked=false;
     document.form1.earthstride_box.checked=false;
     document.form1.returningstrength_box.checked=false;
     document.form1.shieldofstone_box.checked=false;
     document.form1.wardingvines_box.checked=false;
      document.form1.cleansingearth_box.checked=false;
      document.form1.monkeysgrip_box.checked=false;
      document.form1.primalleap_box.checked=false;
      document.form1.verdantlife_box.checked=false;
      document.form1.eagleswings_box.checked=false;
      document.form1.panacea_box.checked=false;
      document.form1.renewal_box.checked=false;
      document.form1.wellspringoflife_box.checked=false;
  }}









function c_av_d(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!AvengerDaily()))
  {
    document.form1.aspectofmight_box.checked=false;
    document.form1.oathofthefinaldual_box.checked=false;
    document.form1.renewingstrike_box.checked=false;
    document.form1.templeoflight_box.checked=false;
    document.form1.bondofforesight_box.checked=false;
    document.form1.dawhfiresigil_box.checked=false;
    document.form1.executionerscloak_box.checked=false;
    document.form1.oathofconsuminglight_box.checked=false;
     document.form1.aspectofspeed_box.checked=false;
     document.form1.enduringstrike_box.checked=false;
     document.form1.oathofpursuit_box.checked=false;
     document.form1.templeofshadow_box.checked=false;
     document.form1.aspectoffury_box.checked=false;
     document.form1.bondofthesacredduel_box.checked=false;
     document.form1.oathofdivinelightning_box.checked=false;
     document.form1.sigilofcarceri_box.checked=false;
     document.form1.aspectofawe_box.checked=false;
     document.form1.oathoftheinevitableblade_box.checked=false;
     document.form1.templeofrespite_box.checked=false;
     document.form1.vengefulrecovery_box.checked=false;
 if ((!FeatsAreLocked)|((!AvengerDaily()&(!epic_eternalseeker))))
 {
     document.form1.aspectofdeath_box.checked=false;
     document.form1.bondofdestiny_box.checked=false;
     document.form1.executionersjustice_box.checked=false;
     document.form1.sigilofdamnation_box.checked=false;
     document.form1.aspectofterror_box.checked=false;
     document.form1.fieryvengeance_box.checked=false;
     document.form1.finaloath_box.checked=false;
     document.form1.templeofresolution_box.checked=false;
 }
  }}

function c_bn_d(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!BarbarianDaily()))
  {
    document.form1.bloodhuntrage_box.checked=false;
    document.form1.macetailsrage_box.checked=false;
    document.form1.ragedrakesfrenzy_box.checked=false;
    document.form1.swiftpantherrage_box.checked=false;
    document.form1.frostwolfrage_box.checked=false;
    document.form1.silverphoenixrage_box.checked=false;
    document.form1.thunderhawkrage_box.checked=false;
    document.form1.vengefulstormrage_box.checked=false;
     document.form1.blackdragonrage_box.checked=false;
     document.form1.oakhammerrage_box.checked=false;
     document.form1.stonebearrage_box.checked=false;
     document.form1.whitetigerrage_box.checked=false;
     document.form1.flameheartrage_box.checked=false;
     document.form1.huntinglionrage_box.checked=false;
     document.form1.ironhammerrage_box.checked=false;
     document.form1.thunderfuryrage_box.checked=false;
     document.form1.ghostviperrage_box.checked=false;
     document.form1.hydrarage_box.checked=false;
     document.form1.stormdrakerage_box.checked=false;
     document.form1.winterphoenixrage_box.checked=false;
 if ((!FeatsAreLocked)|((!BarbarianDaily()&(!epic_eternalseeker))))
 {
     document.form1.ashhammerrage_box.checked=false;
     document.form1.blodhungerrage_box.checked=false;
     document.form1.bluedragonrage_box.checked=false;
     document.form1.stonetempestrage_box.checked=false;
     document.form1.crimsonphoenixrage_box.checked=false;
     document.form1.rageoftheprimalbeast_box.checked=false;
     document.form1.winterghostrage_box.checked=false;
     document.form1.worldserpentrage_box.checked=false;
 }
  }}

function c_bd_d(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!BardDaily()))
  {
    document.form1.echoesoftheguardian_box.checked=false;
    document.form1.slayerssong_box.checked=false;
    document.form1.stirringshout_box.checked=false;
    document.form1.verseoftriumph_box.checked=false;
    document.form1.satireofbravery_box.checked=false;
    document.form1.songofdiscord_box.checked=false;
    document.form1.tuneoficeandwind_box.checked=false;
    document.form1.wordofmysticwarding_box.checked=false;
     document.form1.forcefulconduit_box.checked=false;
     document.form1.hideouslaughter_box.checked=false;
     document.form1.hymnofthedaringrescue_box.checked=false;
     document.form1.thunderblade_box.checked=false;
     document.form1.confusingchorus_box.checked=false;
     document.form1.danceofbiringwind_box.checked=false;
     document.form1.menacingthunder_box.checked=false;
     document.form1.quicksteeldance_box.checked=false;
     document.form1.encirclingdance_box.checked=false;
     document.form1.increasingthetempo_box.checked=false;
     document.form1.irresistibledance_box.checked=false;
     document.form1.satireofprowess_box.checked=false;
 if ((!FeatsAreLocked)|((!BardDaily()&(!epic_eternalseeker))))
 {
     document.form1.adversarialsong_box.checked=false;
     document.form1.fraughtwithfailure_box.checked=false;
     document.form1.frenziedrhythm_box.checked=false;
     document.form1.visiondistortion_box.checked=false;
     document.form1.herosbeacon_box.checked=false;
     document.form1.satireofleadership_box.checked=false;
     document.form1.spellbind_box.checked=false;
 }
  }}

function c_dr_d(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!DruidDaily()))
  {
    document.form1.faeriefire_box.checked=false;
    document.form1.firesoflife_box.checked=false;
    document.form1.savagefrenzy_box.checked=false;
    document.form1.windprison_box.checked=false;
    document.form1.hobblingrend_box.checked=false;
    document.form1.primalwolverine_box.checked=false;
    document.form1.roarofterror_box.checked=false;
    document.form1.wallofthorns_box.checked=false;
     document.form1.entangle_box.checked=false;
     document.form1.feralmauling_box.checked=false;
     document.form1.primalwolf_box.checked=false;
     document.form1.sunbeam_box.checked=false;
     document.form1.balefulpolymorph_box.checked=false;
     document.form1.calllightningstorm_box.checked=false;
     document.form1.devouringice_box.checked=false;
     document.form1.revitalizingpounce_box.checked=false;
     document.form1.slashingclaws_box.checked=false;
     document.form1.entanglingthorns_box.checked=false;
     document.form1.lungeandvanish_box.checked=false;
     document.form1.primalbear_box.checked=false;
     document.form1.winterhailstorm_box.checked=false;
 if ((!FeatsAreLocked)|((!DruidDaily()&(!epic_eternalseeker))))
 {
     document.form1.ferociousmaul_box.checked=false;
     document.form1.feylure_box.checked=false;
     document.form1.primalstorm_box.checked=false;
     document.form1.primaltiger_box.checked=false;
     document.form1.blindingblizzard_box.checked=false;
     document.form1.gazeofthebeast_box.checked=false;
     document.form1.lifeleechthorns_box.checked=false;
     document.form1.primalarchetype_box.checked=false;
 }
  }}

function c_in_d(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!InvokerDaily()))
  {
    document.form1.angelicechelon_box.checked=false;
    document.form1.bindinginvocationofchains_box.checked=false;
    document.form1.purgingfire_box.checked=false;
    document.form1.summonangeloffire_box.checked=false;
    document.form1.bladeofvengeance_box.checked=false;
    document.form1.graspingchainsofthejusticiar_box.checked=false;
    document.form1.iconofterror_box.checked=false;
    document.form1.searingorb_box.checked=false;
     document.form1.ceruleanflames_box.checked=false;
     document.form1.fourfoldinvocationofdoom_box.checked=false;
     document.form1.summonbladeangel_box.checked=false;
     document.form1.visionsofparadise_box.checked=false;
     document.form1.godhammer_box.checked=false;
     document.form1.markofanathema_box.checked=false;
     document.form1.threebeaconsoftwilight_box.checked=false;
     document.form1.wallofblades_box.checked=false;
     document.form1.astraltempest_box.checked=false;
     document.form1.maledictionofgartak_box.checked=false;
     document.form1.summonangeloflight_box.checked=false;
     document.form1.tombofmagrym_box.checked=false;
 if ((!FeatsAreLocked)|((!InvokerDaily()&(!epic_eternalseeker))))
 {
     document.form1.anthemofthefirstdawn_box.checked=false;
     document.form1.invokethefallen_box.checked=false;
     document.form1.rackinginvocationofpain_box.checked=false;
     document.form1.rainofcolorlessfire_box.checked=false;
     document.form1.firesofthesilvergate_box.checked=false;
     document.form1.invoketheabsolutedark_box.checked=false;
     document.form1.summonangelofvictory_box.checked=false;
     document.form1.wordofthegods_box.checked=false;
 }
  }}

function c_sh_d(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!ShamanDaily()))
  {
    document.form1.earthragespirit_box.checked=false;
    document.form1.spiritofthehawkswind_box.checked=false;
    document.form1.spiritoftheshieldingfire_box.checked=false;
    document.form1.warchieftainsblessing_box.checked=false;
    document.form1.blessingofthesevenwinds_box.checked=false;
    document.form1.cleansingwindofthenorth_box.checked=false;
    document.form1.spiritofthehealingflood_box.checked=false;
    document.form1.wrathofthespiritworld_box.checked=false;
     document.form1.ancientwarlordsinspiration_box.checked=false;
     document.form1.clevertricksterspirit_box.checked=false;
     document.form1.ragingstormspirit_box.checked=false;
     document.form1.spiritofautumnsreaping_box.checked=false;
     document.form1.guardianoftheprimalcopse_box.checked=false;
     document.form1.searingwindofthesouth_box.checked=false;
     document.form1.spiritofthewolfpack_box.checked=false;
     document.form1.stormguardianspirit_box.checked=false;
     document.form1.greatbearguardian_box.checked=false;
     document.form1.hornsoftheundefeatedkhan_box.checked=false;
     document.form1.spiritoftheshieldbreaker_box.checked=false;
     document.form1.tendrilsofthefateweaver_box.checked=false;
 if ((!FeatsAreLocked)|((!ShamanDaily()&(!epic_eternalseeker))))
 {
     document.form1.ironbornspirit_box.checked=false;
     document.form1.spiritofthelaughingwanderer_box.checked=false;
     document.form1.spiritoftheworldserpent_box.checked=false;
     document.form1.westernwindofstorms_box.checked=false;
     document.form1.deathspirit_box.checked=false;
     document.form1.seaofserpents_box.checked=false;
     document.form1.spiritsofmist_box.checked=false;
     document.form1.spiritoftheunbrokenvow_box.checked=false;
 }
  }}

function c_so_d(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!SorcererDaily()))
  {
    document.form1.chromaticorb_box.checked=false;
    document.form1.dazzlingray_box.checked=false;
    document.form1.dragonfangbolt_box.checked=false;
    document.form1.lightningbreath_box.checked=false;
    document.form1.acidicimplanation_box.checked=false;
    document.form1.palestflames_box.checked=false;
    document.form1.reelingtorment_box.checked=false;
    document.form1.serpentineblast_box.checked=false;
    document.form1.thunderleap_box.checked=false;
     document.form1.adamantineecho_box.checked=false;
     document.form1.contagiouscurse_box.checked=false;
     document.form1.primethefire_box.checked=false;
     document.form1.staggeringblast_box.checked=false;
     document.form1.frosteddies_box.checked=false;
     document.form1.hostilitycharm_box.checked=false;
     document.form1.scintillatingstarburst_box.checked=false;
     document.form1.spitfirefurnace_box.checked=false;
     document.form1.balefulgazeofthebasilisk_box.checked=false;
     document.form1.blackfireserpent_box.checked=false;
     document.form1.prismaticexplsion_box.checked=false;
     document.form1.splitstrike_box.checked=false;
 if ((!FeatsAreLocked)|((!SorcererDaily()&(!epic_eternalseeker))))
 {
     document.form1.draconicincarnation_box.checked=false;
     document.form1.forcestorm_box.checked=false;
     document.form1.wordsofchaos_box.checked=false;
     document.form1.endlessacid_box.checked=false;
     document.form1.entropicwhirlwind_box.checked=false;
     document.form1.prismaticstorm_box.checked=false;
 }
  }}

function c_wn_d(){
  if (test_mode){return;}
  if ((!FeatsAreLocked)|(!WardenDaily()))
  {
    document.form1.formofthefearsomeram_box.checked=false;
    document.form1.formoftherelentlesspanther_box.checked=false;
    document.form1.formofthewillowsentinel_box.checked=false;
    document.form1.formofwintersherald_box.checked=false;
    document.form1.hailofthorns_box.checked=false;
    document.form1.stormstrike_box.checked=false;
    document.form1.thunderstep_box.checked=false;
    document.form1.wintersgrip_box.checked=false;
     document.form1.formoftheoaksentinel_box.checked=false;
     document.form1.formofthefrenziedwolverine_box.checked=false;
     document.form1.formofthestonesentinel_box.checked=false;
     document.form1.formofthestormeagle_box.checked=false;
     document.form1.formofsummerfire_box.checked=false;
     document.form1.formofthechargingboar_box.checked=false;
     document.form1.formoftherowansentinel_box.checked=false;
     document.form1.formofthestonecrusher_box.checked=false;
     document.form1.blizzardstrike_box.checked=false;
     document.form1.direbeastassault_box.checked=false;
     document.form1.lightningbarrage_box.checked=false;
     document.form1.thunderingbolts_box.checked=false;
 if ((!FeatsAreLocked)|((!WardenDaily()&(!epic_eternalseeker))))
 {
     document.form1.formoftheblackwolf_box.checked=false;
     document.form1.formofthedisplacerbeast_box.checked=false;
     document.form1.formofthejunglelord_box.checked=false;
     document.form1.formoftheautumnreaper_box.checked=false;
     document.form1.formofthechimera_box.checked=false;
     document.form1.formofspringrenewal_box.checked=false;
     document.form1.formofthestarmetalwarrior_box.checked=false;
     document.form1.formofthesoulserpent_box.checked=false;
 }
  }}




function consider_carrying_shield(){
 if ((!already_knows_lightshield)&(!document.form1.shieldproficiencylight_box.checked)){document.form1.shield_radio[1].checked=false; }
 if ((!already_knows_heavyshield)&(!document.form1.shieldproficiencyheavy_box.checked)){document.form1.shield_radio[2].checked=false; }
 }

function Alchemy(){

 if ((!feat_alchemist)&(!feat_alchemistswap)){VoidAlchemyBoxes();return;}
  if ( (!TrainedInNature()) & (!TrainedInReligion()) & (!TrainedInThievery()))
  {
    document.form1.alchemicalsilver_box.checked=false;
    document.form1.ghoststrikeoil_box.checked=false;
  }
  if ((!TrainedInArcana())&(!TrainedInThievery()))
  {
    document.form1.alchemistsacid_box.checked=false;
    document.form1.alchemistsfire_box.checked=false;
    document.form1.alchemistsfrost_box.checked=false;
    document.form1.blastpatch_box.checked=false;
    document.form1.blindingbomb_box.checked=false;
    document.form1.joltflask_box.checked=false;
    document.form1.lockburstchalk_box.checked=false;
    document.form1.smokestick_box.checked=false;
    document.form1.sovereignglue_box.checked=false;
    document.form1.tanglefootbag_box.checked=false;
    document.form1.universalsolvent_box.checked=false;
  }
  if ((!TrainedInHeal())&(!TrainedInNature()))
  {
    document.form1.antivenom_box.checked=false;
    document.form1.beastbane_box.checked=false;
    document.form1.clearsensepowder_box.checked=false;
  }
  if ((!TrainedInNature())&(!TrainedInThievery()))
  {
    document.form1.bloodstingerpoison_box.checked=false;
    document.form1.dragonfiretar_box.checked=false;
    document.form1.goodnighttincture_box.checked=false;
    document.form1.salveofslipperiness_box.checked=false;
    document.form1.trackingdust_box.checked=false;
  }
  if ((!TrainedInArcana())&(!TrainedInNature())&(!TrainedInReligion()))
  {
    document.form1.clearwatersolution_box.checked=false;
  }
  if (!TrainedInNature())
  {
    document.form1.herbalpoultice_box.checked=false;
  }
  if ((!TrainedInArcana())&(!TrainedInNature())&(!TrainedInThievery()))
  {
    document.form1.slowstepoil_box.checked=false;
    document.form1.thunderstone_box.checked=false;
  }
 }

function Rituals(){
 if ((!class_cleric)&(!class_wizard)&(!class_bard)&(!class_invoker)&(!class_druid)&(!class_other)&(!feat_ritualcaster)&(!multi_bard_bardicritualist)&(!multi_wizard_learnedspellcaster)){VoidRitualBoxes(); return; }
 if (feat_alchemistswap){VoidRitualBoxes();return;}
  if (class_cleric){document.form1.gentlerepose_box.checked=true; }
  if (total_levels<2){document.form1.endureelements_box.checked=false; }
  if (total_levels<2){document.form1.eyeofalarm_box.checked=false; }
  if (total_levels<2){document.form1.waterwalk_box.checked=false; }
  if (total_levels<3){document.form1.detectsecretdoors_box.checked=false; }
  if (total_levels<4){document.form1.arcanelock_box.checked=false; }
  if (total_levels<4){document.form1.enchantmagicitem_box.checked=false; }
  if (total_levels<4){document.form1.handoffate_box.checked=false; }
  if (total_levels<4){document.form1.knock_box.checked=false; }
  if (total_levels<4){document.form1.travelersfeast_box.checked=false; }
  if (total_levels<5){document.form1.hallucinatoryitem_box.checked=false; }
  if (total_levels<5){document.form1.magiccircle_box.checked=false; }
  if (total_levels<6){document.form1.communewithnature_box.checked=false; }
  if (total_levels<6){document.form1.curedisease_box.checked=false; }
  if (total_levels<6){document.form1.discernlies_box.checked=false; }
  if (total_levels<6){document.form1.disenchantmagicitem_box.checked=false; }
  if (total_levels<6){document.form1.leomundssecretchest_box.checked=false; }
  if (total_levels<6){document.form1.phantomsteed_box.checked=false; }
  if (total_levels<6){document.form1.sending_box.checked=false; }
  if (total_levels<6){document.form1.speakwithdead_box.checked=false; }
  if (total_levels<8){document.form1.linkedportal_box.checked=false; }
  if (total_levels<8){document.form1.raisedead_box.checked=false; }
  if (total_levels<8){document.form1.removeaffliction_box.checked=false; }
  if (total_levels<8){document.form1.waterbreathing_box.checked=false; }
  if (total_levels<8){document.form1.wizardssight_box.checked=false; }
  if (total_levels<10){document.form1.consultmysticsages_box.checked=false; }
  if (total_levels<10){document.form1.detectobject_box.checked=false; }
  if (total_levels<12){document.form1.drawmijsinstantsummons_box.checked=false; }
  if (total_levels<12){document.form1.hallucinatorycreature_box.checked=false; }
  if (total_levels<12){document.form1.passwall_box.checked=false; }
  if (total_levels<12){document.form1.shadowwalk_box.checked=false; }
  if (total_levels<14){document.form1.eyeofwarning_box.checked=false; }
  if (total_levels<14){document.form1.viewlocation_box.checked=false; }
  if (total_levels<16){document.form1.consultoracle_box.checked=false; }
  if (total_levels<18){document.form1.planarportal_box.checked=false; }
  if (total_levels<18){document.form1.viewobject_box.checked=false; }
  if (total_levels<20){document.form1.forbiddance_box.checked=false; }
  if (total_levels<22){document.form1.loremastersbargain_box.checked=false; }
  if (total_levels<24){document.form1.observecreature_box.checked=false; }
  if (total_levels<26){document.form1.voiceoffate_box.checked=false; }
  if (total_levels<28){document.form1.trueportal_box.checked=false; }





   if (total_levels<1){document.form1.banishvermin01_box.checked=false;}
   if (total_levels<3){document.form1.battlefieldelocution03_box.checked=false;}
   if (total_levels<6){document.form1.bolsterobject06_box.checked=false;}
   if (total_levels<10){document.form1.chameleonscloak10_box.checked=false;}
   if (total_levels<10){document.form1.concealobject10_box.checked=false;}
   if (total_levels<26){document.form1.deceivesensor26_box.checked=false;}
   if (total_levels<4){document.form1.delayaffliction04_box.checked=false;}
   if (total_levels<2){document.form1.delversfire02_box.checked=false;}
   if (total_levels<6){document.form1.earthenramparts06_box.checked=false;}
   if (total_levels<6){document.form1.excavation06_box.checked=false;}
   if (total_levels<1){document.form1.explorersfire01_box.checked=false;}
   if (total_levels<1){document.form1.fastidiousness01_box.checked=false;}
   if (total_levels<18){document.form1.memoryseal18_box.checked=false;}
   if (total_levels<6){document.form1.mordenkainensascent06_box.checked=false;}
   if (total_levels<6){document.form1.mordenkainensjoining06_box.checked=false;}
   if (total_levels<2){document.form1.overlandflight20_box.checked=false;}
   if (total_levels<2){document.form1.preservation02_box.checked=false;}
   if (total_levels<14){document.form1.planarsending14_box.checked=false;}
   if (total_levels<16){document.form1.safeguard16_box.checked=false;}
   if (total_levels<10){document.form1.scribe10_box.checked=false;}
   if (total_levels<8){document.form1.signalofpursuit08_box.checked=false;}
   if (total_levels<16){document.form1.stasisshell16_box.checked=false;}
   if (total_levels<18){document.form1.teleportcatcher18_box.checked=false;}
   if (total_levels<10){document.form1.tensersbinding10_box.checked=false;}
   if (total_levels<8){document.form1.tenserslift08_box.checked=false;}
   if (total_levels<20){document.form1.truesending20_box.checked=false;}
   if (total_levels<12){document.form1.visageoflife12_box.checked=false;}
   if (total_levels<14){document.form1.voicecatcherveil14_box.checked=false;}
   if (total_levels<1){document.form1.wizardscurtain01_box.checked=false;}
   if (total_levels<6){document.form1.wizardsescape06_box.checked=false;}

   if (total_levels<1){document.form1.amanuensis01_box.checked=false;}
   if (total_levels<1){document.form1.arcanemark01_box.checked=false;}
   if (total_levels<1){document.form1.simbulsconversion01_box.checked=false;}
   if (total_levels<2){document.form1.seekrumor02_box.checked=false;}
   if (total_levels<4){document.form1.darklight04_box.checked=false;}
   if (total_levels<4){document.form1.featofstrength04_box.checked=false;}
   if (total_levels<6){document.form1.clearthepath06_box.checked=false;}
   if (total_levels<6){document.form1.deathlyshroud06_box.checked=false;}
   if (total_levels<6){document.form1.duplicate06_box.checked=false;}
   if (total_levels<6){document.form1.tinylanterns06_box.checked=false;}
   if (total_levels<8){document.form1.analyzeportal08_box.checked=false;}
   if (total_levels<8){document.form1.shadowbridge08_box.checked=false;}
   if (total_levels<8){document.form1.sharehusk08_box.checked=false;}
   if (total_levels<8){document.form1.status08_box.checked=false;}
   if (total_levels<10){document.form1.trailblaze10_box.checked=false;}
   if (total_levels<14){document.form1.walkcrossroads14_box.checked=false;}
   if (total_levels<14){document.form1.waterborn14_box.checked=false;}
   if (total_levels<14){document.form1.timeravager14_box.checked=false;}
   if (total_levels<18){document.form1.purifyspellscarred18_box.checked=false;}
   if (total_levels<20){document.form1.soulguard20_box.checked=false;}
   if (total_levels<22){document.form1.divinesight22_box.checked=false;}
   if (total_levels<24){document.form1.purgespellplague24_box.checked=false;}
   if (total_levels<26){document.form1.shiftmote26_box.checked=false;}
   if (total_levels<30){document.form1.raiseland30_box.checked=false;}


   if (total_levels<6){document.form1.feypassage06_box.checked=false;}
   if (total_levels<8){document.form1.shadowpassage08_box.checked=false;}
   if (total_levels<12){document.form1.demicache12_box.checked=false;}
   if (total_levels<12){document.form1.elementaltransference12_box.checked=false;}
   if (total_levels<12){document.form1.ropetrick12_box.checked=false;}
   if (total_levels<14){document.form1.astralguide14_box.checked=false;}
   if (total_levels<14){document.form1.scrambleportal14_box.checked=false;}
   if (total_levels<15){document.form1.astralsojourn15_box.checked=false;}
   if (total_levels<15){document.form1.createteleportationcircle15_box.checked=false;}
   if (total_levels<16){document.form1.farsending16_box.checked=false;}
   if (total_levels<18){document.form1.planeshift18_box.checked=false;}

  if (total_levels<2){document.form1.corpselight02_box.checked=false;}
  if (total_levels<2){document.form1.lastsightvision02_box.checked=false;}
  if (total_levels<3){document.form1.undeadward03_box.checked=false;}
  if (total_levels<4){document.form1.skullwatch04_box.checked=false;}
  if (total_levels<6){document.form1.undeadservitor06_box.checked=false;}
  if (total_levels<8){document.form1.gravesight08_box.checked=false;}
  if (total_levels<14){document.form1.corpsegate14_box.checked=false;}

  if (total_levels<1){document.form1.createcampsite01_box.checked=false;}
  if (total_levels<1){document.form1.gliblimerick01_box.checked=false;}
  if (total_levels<1){document.form1.travelerschant01_box.checked=false;}
  if (total_levels<2){document.form1.bloom02_box.checked=false;}
  if (total_levels<2){document.form1.pyrotechnics02_box.checked=false;}
  if (total_levels<2){document.form1.treeshape02_box.checked=false;}
  if (total_levels<3){document.form1.affectnormalfire03_box.checked=false;}
  if (total_levels<3){document.form1.lullaby03_box.checked=false;}
  if (total_levels<3){document.form1.snare03_box.checked=false;}
  if (total_levels<5){document.form1.animalfriendship05_box.checked=false;}
  if (total_levels<5){document.form1.speakwithnature05_box.checked=false;}
  if (total_levels<6){document.form1.callwildernessguide06_box.checked=false;}
  if (total_levels<6){document.form1.foolsspeech06_box.checked=false;}
  if (total_levels<6){document.form1.ironwood06_box.checked=false;}
  if (total_levels<6){document.form1.treestride06_box.checked=false;}
  if (total_levels<6){document.form1.wyvernwatch06_box.checked=false;}
  if (total_levels<8){document.form1.songofsustenance08_box.checked=false;}
  if (total_levels<9){document.form1.tuneofmerriment09_box.checked=false;}
  if (total_levels<10){document.form1.ariaofrevelation10_box.checked=false;}
  if (total_levels<10){document.form1.chorusoftruth10_box.checked=false;}
  if (total_levels<10){document.form1.songofrestfulness10_box.checked=false;}
  if (total_levels<12){document.form1.reverseportal12_box.checked=false;}
  if (total_levels<14){document.form1.controlweather14_box.checked=false;}

  if (!bardclass())
   {
    document.form1.gliblimerick01_box.checked=false;
    document.form1.lullaby03_box.checked=false;
    document.form1.foolsspeech06_box.checked=false;
    document.form1.songofsustenance08_box.checked=false;
    document.form1.tuneofmerriment09_box.checked=false;
    document.form1.ariaofrevelation10_box.checked=false;
    document.form1.chorusoftruth10_box.checked=false;
    document.form1.songofrestfulness10_box.checked=false;
    document.form1.travelerschant01_box.checked=false;
   }
 
   if (total_levels<1){document.form1.purifywater01_box.checked=false;}
   if (total_levels<1){document.form1.unseenservant01_box.checked=false;}
   if (total_levels<2){document.form1.lowerwater02_box.checked=false;}
   if (total_levels<3){document.form1.foolsgold03_box.checked=false;}
   if (total_levels<4){document.form1.beastgrowth04_box.checked=false;}
   if (total_levels<4){document.form1.calloffriendship04_box.checked=false;}
   if (total_levels<5){document.form1.objectreading05_box.checked=false;}
   if (total_levels<6){document.form1.preserveflame06_box.checked=false;}
   if (total_levels<6){document.form1.shrink06_box.checked=false;}
   if (total_levels<8){document.form1.anthemofunity08_box.checked=false;}
   if (total_levels<9){document.form1.detecttreasure09_box.checked=false;}
   if (total_levels<9){document.form1.magicmap09_box.checked=false;}
   if (total_levels<11){document.form1.historyrevealed11_box.checked=false;}
   if (total_levels<12){document.form1.arcanebarrier12_box.checked=false;}
   if (total_levels<14){document.form1.telepathicbond14_box.checked=false;}
   if (total_levels<14){document.form1.whispersoftheedifice14_box.checked=false;}
   if (total_levels<16){document.form1.farsight16_box.checked=false;}
   if (total_levels<18){document.form1.guardsandwards18_box.checked=false;}
   if (total_levels<28){document.form1.imprisonment28_box.checked=false;}

 }

function VoidAlchemyBoxes(){
document.form1.alchemicalsilver_box.checked=false;
document.form1.alchemistsacid_box.checked=false;
document.form1.alchemistsfire_box.checked=false;
document.form1.alchemistsfrost_box.checked=false;
document.form1.antivenom_box.checked=false;
document.form1.beastbane_box.checked=false;
document.form1.blastpatch_box.checked=false;
document.form1.blindingbomb_box.checked=false;
document.form1.bloodstingerpoison_box.checked=false;
document.form1.clearsensepowder_box.checked=false;
document.form1.clearwatersolution_box.checked=false;
document.form1.dragonfiretar_box.checked=false;
document.form1.ghoststrikeoil_box.checked=false;
document.form1.goodnighttincture_box.checked=false;
document.form1.herbalpoultice_box.checked=false;
document.form1.joltflask_box.checked=false;
document.form1.lockburstchalk_box.checked=false;
document.form1.salveofslipperiness_box.checked=false;
document.form1.slowstepoil_box.checked=false;
document.form1.smokestick_box.checked=false;
document.form1.sovereignglue_box.checked=false;
document.form1.tanglefootbag_box.checked=false;
document.form1.thunderstone_box.checked=false;
document.form1.trackingdust_box.checked=false;
document.form1.universalsolvent_box.checked=false;
 }

function VoidRitualBoxes(){
   document.form1.animalmessenger_box.checked=false; 
   document.form1.comprehendlanguage_box.checked=false; 
   document.form1.gentlerepose_box.checked=class_cleric;
   if (feat_alchemistswap){document.form1.gentlerepose_box.checked=false;}
   document.form1.magicmouth_box.checked=false; 
   document.form1.makewhole_box.checked=false; 
   document.form1.secretpage_box.checked=false; 
   document.form1.silence_box.checked=false; 
   document.form1.tensersfloatingdisk_box.checked=false; 
   document.form1.endureelements_box.checked=false; 
   document.form1.eyeofalarm_box.checked=false; 
   document.form1.waterwalk_box.checked=false; 
   document.form1.detectsecretdoors_box.checked=false; 
   document.form1.arcanelock_box.checked=false; 
   document.form1.enchantmagicitem_box.checked=false; 
   document.form1.handoffate_box.checked=false; 
   document.form1.knock_box.checked=false; 
   document.form1.travelersfeast_box.checked=false; 
   document.form1.brewpotion_box.checked=false; 
   document.form1.hallucinatoryitem_box.checked=false; 
   document.form1.magiccircle_box.checked=false; 
   document.form1.communewithnature_box.checked=false; 
   document.form1.curedisease_box.checked=false; 
   document.form1.discernlies_box.checked=false; 
   document.form1.disenchantmagicitem_box.checked=false; 
   document.form1.leomundssecretchest_box.checked=false; 
   document.form1.phantomsteed_box.checked=false; 
   document.form1.sending_box.checked=false; 
   document.form1.speakwithdead_box.checked=false; 
   document.form1.linkedportal_box.checked=false; 
   document.form1.raisedead_box.checked=false; 
   document.form1.removeaffliction_box.checked=false; 
   document.form1.waterbreathing_box.checked=false; 
   document.form1.wizardssight_box.checked=false; 
   document.form1.consultmysticsages_box.checked=false; 
   document.form1.detectobject_box.checked=false; 
   document.form1.drawmijsinstantsummons_box.checked=false; 
   document.form1.hallucinatorycreature_box.checked=false; 
   document.form1.passwall_box.checked=false; 
   document.form1.shadowwalk_box.checked=false; 
   document.form1.eyeofwarning_box.checked=false; 
   document.form1.viewlocation_box.checked=false; 
   document.form1.consultoracle_box.checked=false; 
   document.form1.planarportal_box.checked=false; 
   document.form1.viewobject_box.checked=false; 
   document.form1.forbiddance_box.checked=false; 
   document.form1.loremastersbargain_box.checked=false; 
   document.form1.observecreature_box.checked=false; 
   document.form1.voiceoffate_box.checked=false; 
   document.form1.trueportal_box.checked=false; 






  document.form1.banishvermin01_box.checked=false;
  document.form1.battlefieldelocution03_box.checked=false;
  document.form1.bolsterobject06_box.checked=false;
  document.form1.chameleonscloak10_box.checked=false;
  document.form1.concealobject10_box.checked=false;
  document.form1.deceivesensor26_box.checked=false;
  document.form1.delayaffliction04_box.checked=false;
  document.form1.delversfire02_box.checked=false;
  document.form1.earthenramparts06_box.checked=false;
  document.form1.excavation06_box.checked=false;
  document.form1.explorersfire01_box.checked=false;
  document.form1.fastidiousness01_box.checked=false;
  document.form1.memoryseal18_box.checked=false;
  document.form1.mordenkainensascent06_box.checked=false;
  document.form1.mordenkainensjoining06_box.checked=false;
  document.form1.overlandflight20_box.checked=false;
  document.form1.preservation02_box.checked=false;
  document.form1.planarsending14_box.checked=false;
  document.form1.safeguard16_box.checked=false;
  document.form1.scribe10_box.checked=false;
  document.form1.signalofpursuit08_box.checked=false;
  document.form1.stasisshell16_box.checked=false;
  document.form1.teleportcatcher18_box.checked=false;
  document.form1.tensersbinding10_box.checked=false;
  document.form1.tenserslift08_box.checked=false;
  document.form1.truesending20_box.checked=false;
  document.form1.visageoflife12_box.checked=false;
  document.form1.voicecatcherveil14_box.checked=false;
  document.form1.wizardscurtain01_box.checked=false;
  document.form1.wizardsescape06_box.checked=false;


  document.form1.amanuensis01_box.checked=false;
  document.form1.arcanemark01_box.checked=false;
  document.form1.simbulsconversion01_box.checked=false;
  document.form1.seekrumor02_box.checked=false;
  document.form1.darklight04_box.checked=false;
  document.form1.featofstrength04_box.checked=false;
  document.form1.clearthepath06_box.checked=false;
  document.form1.deathlyshroud06_box.checked=false;
  document.form1.duplicate06_box.checked=false;
  document.form1.tinylanterns06_box.checked=false;
  document.form1.analyzeportal08_box.checked=false;
  document.form1.shadowbridge08_box.checked=false;
  document.form1.sharehusk08_box.checked=false;
  document.form1.status08_box.checked=false;
  document.form1.trailblaze10_box.checked=false;
  document.form1.walkcrossroads14_box.checked=false;
  document.form1.waterborn14_box.checked=false;
  document.form1.timeravager14_box.checked=false;
  document.form1.purifyspellscarred18_box.checked=false;
  document.form1.soulguard20_box.checked=false;
  document.form1.divinesight22_box.checked=false;
  document.form1.purgespellplague24_box.checked=false;
  document.form1.shiftmote26_box.checked=false;
  document.form1.raiseland30_box.checked=false;



   document.form1.feypassage06_box.checked=false;
   document.form1.shadowpassage08_box.checked=false;
   document.form1.demicache12_box.checked=false;
   document.form1.elementaltransference12_box.checked=false;
   document.form1.ropetrick12_box.checked=false;
   document.form1.astralguide14_box.checked=false;
   document.form1.scrambleportal14_box.checked=false;
   document.form1.astralsojourn15_box.checked=false;
   document.form1.createteleportationcircle15_box.checked=false;
   document.form1.farsending16_box.checked=false;
   document.form1.planeshift18_box.checked=false;

  document.form1.corpselight02_box.checked=false;
  document.form1.lastsightvision02_box.checked=false;
  document.form1.undeadward03_box.checked=false;
  document.form1.skullwatch04_box.checked=false;
  document.form1.undeadservitor06_box.checked=false;
  document.form1.gravesight08_box.checked=false;
  document.form1.corpsegate14_box.checked=false;

  document.form1.createcampsite01_box.checked=false;
  document.form1.gliblimerick01_box.checked=false;
  document.form1.travelerschant01_box.checked=false;
  document.form1.bloom02_box.checked=false;
  document.form1.pyrotechnics02_box.checked=false;
  document.form1.treeshape02_box.checked=false;
  document.form1.affectnormalfire03_box.checked=false;
  document.form1.lullaby03_box.checked=false;
  document.form1.snare03_box.checked=false;
  document.form1.animalfriendship05_box.checked=false;
  document.form1.speakwithnature05_box.checked=false;
  document.form1.callwildernessguide06_box.checked=false;
  document.form1.foolsspeech06_box.checked=false;
  document.form1.ironwood06_box.checked=false;
  document.form1.treestride06_box.checked=false;
  document.form1.wyvernwatch06_box.checked=false;
  document.form1.songofsustenance08_box.checked=false;
  document.form1.tuneofmerriment09_box.checked=false;
  document.form1.ariaofrevelation10_box.checked=false;
  document.form1.chorusoftruth10_box.checked=false;
  document.form1.songofrestfulness10_box.checked=false;
  document.form1.reverseportal12_box.checked=false;
  document.form1.controlweather14_box.checked=false;


   document.form1.purifywater01_box.checked=false;
   document.form1.unseenservant01_box.checked=false;
   document.form1.lowerwater02_box.checked=false;
   document.form1.foolsgold03_box.checked=false;
   document.form1.beastgrowth04_box.checked=false;
   document.form1.calloffriendship04_box.checked=false;
   document.form1.objectreading05_box.checked=false;
   document.form1.preserveflame06_box.checked=false;
   document.form1.shrink06_box.checked=false;
   document.form1.anthemofunity08_box.checked=false;
   document.form1.detecttreasure09_box.checked=false;
   document.form1.magicmap09_box.checked=false;
   document.form1.historyrevealed11_box.checked=false;
   document.form1.arcanebarrier12_box.checked=false;
   document.form1.telepathicbond14_box.checked=false;
   document.form1.whispersoftheedifice14_box.checked=false;
   document.form1.farsight16_box.checked=false;
   document.form1.guardsandwards18_box.checked=false;
   document.form1.imprisonment28_box.checked=false;


 }
